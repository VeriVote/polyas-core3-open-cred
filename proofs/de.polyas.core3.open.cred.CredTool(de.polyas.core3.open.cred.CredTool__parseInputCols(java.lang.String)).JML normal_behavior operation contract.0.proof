\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Sep 26 12:24:20 CEST 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Thu Sep 26 12:24:20 CEST 2019
contract=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:parseInputCols(java.lang.String)].JML normal_behavior operation contract.0
name=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:parseInputCols(java.lang.String)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "217263")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "fileName,self_37,result_44,exc_50,heapAtPre_0,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "10") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "9"))
 (builtin "One Step Simplification" (formula "4"))
(rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,0,0,0,0,1"))
(rule "assignment" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "6"))
 (builtin "One Step Simplification" (formula "6"))
(rule "insert_constant_string_value" (formula "6") (term "0,0,1,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "insert_constant_string_value" (formula "6") (term "0,0,1,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "insert_constant_string_value" (formula "6") (term "0,0,1,0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "castDel" (formula "6") (term "0,0,0,1,0,0,0,0"))
(rule "castDel" (formula "6") (term "0,0,0,1,0,0,0"))
(rule "castDel" (formula "6") (term "0,0,0,1,0,0"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "applyEq" (formula "14") (term "0") (ifseqformula "6"))
(rule "Static_class_invariant_axiom_for_org_apache_commons_csv_CSVFormat" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_parseInputCols,savedHeapBefore_parseInputCols"))
 (builtin "One Step Simplification" (formula "17"))
(rule "variableDeclarationFinalAssign" (formula "17") (term "1"))
(rule "variableDeclarationFinal" (formula "17") (term "1") (newnames "parser"))
(rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "sv_heap=heap"))
(rule "andLeft" (formula "1"))
(rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
(rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
(rule "castedGetAny" (formula "1") (term "0,0,1,0,0"))
(rule "commute_and" (formula "2") (term "0,0,0,0"))
(rule "commute_and" (formula "2") (term "0,1,0,0,0"))
(rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "sv_heap=heapAtPre_0"))
(rule "andLeft" (formula "1"))
(rule "castedGetAny" (formula "1") (term "0,0,1,0,0"))
(rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
(rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
(rule "commute_and" (formula "1") (term "0,0,0,0"))
(rule "commute_and" (formula "1") (term "0,1,0,0,0"))
(rule "methodCallWithAssignmentUnfoldArguments" (formula "20") (term "1"))
(rule "variableDeclarationAssign" (formula "20") (term "1"))
(rule "variableDeclaration" (formula "20") (term "1") (newnames "var"))
(rule "methodCallWithAssignmentUnfoldTarget" (formula "20") (term "1") (inst "#v0=c"))
(rule "variableDeclaration" (formula "20") (term "1") (newnames "c_1"))
(rule "methodCallWithAssignmentUnfoldTarget" (formula "20") (term "1") (inst "#v0=c_2"))
(rule "variableDeclaration" (formula "20") (term "1") (newnames "c_2"))
(rule "activeUseStaticFieldReadAccess" (formula "20") (term "1"))
(rule "assignment_read_static_attribute" (formula "20") (term "1"))
 (builtin "One Step Simplification" (formula "20"))
 (builtin "Use Operation Contract" (formula "20") (newnames "heapBefore_withFirstRecordAsHeader,result_45,exc_51,heapAfter_withFirstRecordAsHeader,anon_heap_withFirstRecordAsHeader") (contract "org.apache.commons.csv.CSVFormat[org.apache.commons.csv.CSVFormat::withFirstRecordAsHeader()].JML normal_behavior operation contract.0"))
(branch "Post (withFirstRecordAsHeader)"
    (builtin "One Step Simplification" (formula "22"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,1,0") (ifseqformula "11"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "14"))
   (rule "notLeft" (formula "15"))
   (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "15"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "assignment" (formula "26") (term "1"))
    (builtin "One Step Simplification" (formula "26"))
   (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVFormat" (formula "14"))
   (rule "notLeft" (formula "14"))
   (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=org_apache_commons_csv_CSVFormat_RFC4180_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
    (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore_withDelimiter,result_46,exc_52,heapAfter_withDelimiter,anon_heap_withDelimiter") (contract "org.apache.commons.csv.CSVFormat[org.apache.commons.csv.CSVFormat::withDelimiter(char)].JML normal_behavior operation contract.0"))
   (branch "Post (withDelimiter)"
       (builtin "One Step Simplification" (formula "27"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,1,0") (ifseqformula "15"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,1,1,0") (ifseqformula "11"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "17"))
      (rule "notLeft" (formula "18"))
      (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "19"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "assignment" (formula "31") (term "1"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "variableDeclarationAssign" (formula "31") (term "1"))
      (rule "variableDeclaration" (formula "31") (term "1") (newnames "var_1"))
      (rule "assignment" (formula "31") (term "1"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVFormat" (formula "17"))
      (rule "notLeft" (formula "17"))
      (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=org_apache_commons_csv_CSVFormat_RFC4180_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "1") (term "0"))
      (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "commute_or_2" (formula "16"))
      (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "sv_heap=anon_heap_withFirstRecordAsHeader<<anonHeapFunction>>"))
      (rule "andLeft" (formula "1"))
      (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
      (rule "castedGetAny" (formula "1") (term "0,0,1,0,0"))
      (rule "castedGetAny" (formula "1") (term "0,1,1,0,0,0"))
      (rule "commute_and" (formula "1") (term "0,0,0,0"))
      (rule "commute_and" (formula "1") (term "0,1,0,0,0"))
      (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "sv_heap=anon(heap,
     empty,
     anon_heap_withFirstRecordAsHeader<<anonHeapFunction>>)"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
      (rule "castedGetAny" (formula "1") (term "0,0,1,0,0"))
      (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
      (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0"))
      (rule "commute_and" (formula "1") (term "0,0,0,0"))
      (rule "commute_and" (formula "1") (term "0,1,0,0,0"))
      (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "sv_heap=heapAfter_withFirstRecordAsHeader"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1") (ifseqformula "14"))
      (rule "andLeft" (formula "1"))
      (rule "castedGetAny" (formula "1") (term "0,0,1,0,0"))
      (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
      (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
      (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0"))
      (rule "commute_and" (formula "1") (term "0,0,0,0"))
      (rule "commute_and" (formula "1") (term "0,1,0,0,0"))
      (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "sv_heap=anon_heap_withDelimiter<<anonHeapFunction>>"))
      (rule "andLeft" (formula "1"))
      (rule "castedGetAny" (formula "1") (term "0,0,1,0,0"))
      (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
      (rule "castedGetAny" (formula "1") (term "0,1,1,0,0,0"))
      (rule "commute_and" (formula "1") (term "0,0,0,0"))
      (rule "commute_and" (formula "1") (term "0,1,0,0,0"))
      (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "sv_heap=anon(heapAfter_withFirstRecordAsHeader,
     empty,
     anon_heap_withDelimiter<<anonHeapFunction>>)"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "15"))
      (rule "andLeft" (formula "1"))
      (rule "castedGetAny" (formula "1") (term "0,0,1,0,0"))
      (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
      (rule "castedGetAny" (formula "1") (term "0,1,1,0,0,0"))
      (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0"))
      (rule "commute_and" (formula "1") (term "0,1,0,0,0"))
      (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0"))
      (rule "commute_or_2" (formula "1") (term "0,0,0,0,0"))
      (rule "commute_and" (formula "1") (term "0,0,0,0"))
      (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "sv_heap=heapAfter_withDelimiter"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1") (ifseqformula "20"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "16"))
      (rule "andLeft" (formula "1"))
      (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
      (rule "castedGetAny" (formula "1") (term "0,0,1,0,0"))
      (rule "castedGetAny" (formula "1") (term "0,1,1,0,0,0"))
      (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0"))
      (rule "commute_and" (formula "1") (term "0,1,0,0,0"))
      (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0"))
      (rule "commute_or_2" (formula "1") (term "0,0,0,0,0"))
      (rule "commute_and" (formula "1") (term "0,0,0,0"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "31") (term "0") (ifseqformula "8"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "32"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0") (ifseqformula "9"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "28"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0") (ifseqformula "10"))
      (rule "applyEq" (formula "15") (term "1,0,1") (ifseqformula "16"))
      (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "2"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "true_left" (formula "15"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0") (ifseqformula "10"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "27"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0") (ifseqformula "11"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "29"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "31") (term "0") (ifseqformula "12"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "32"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "methodCallWithAssignmentWithinClass" (formula "39") (term "1") (inst "#v0=c"))
      (rule "variableDeclaration" (formula "39") (term "1") (newnames "c_3"))
      (rule "variableDeclarationFinalAssign" (formula "39") (term "1"))
      (rule "variableDeclarationFinal" (formula "39") (term "1") (newnames "csv"))
      (rule "assignment" (formula "39") (term "1"))
       (builtin "One Step Simplification" (formula "39"))
      (rule "variableDeclarationFinalAssign" (formula "39") (term "1"))
      (rule "variableDeclarationFinal" (formula "39") (term "1") (newnames "fName"))
      (rule "assignment" (formula "39") (term "1"))
       (builtin "One Step Simplification" (formula "39"))
      (rule "methodBodyExpand" (formula "39") (term "1") (newnames "heapBefore_parse,savedHeapBefore_parse"))
       (builtin "One Step Simplification" (formula "39"))
      (rule "returnUnfold" (formula "39") (term "1") (inst "#v0=c_4"))
      (rule "variableDeclarationAssign" (formula "39") (term "1"))
      (rule "variableDeclaration" (formula "39") (term "1") (newnames "c_4"))
      (rule "methodCallWithAssignmentUnfoldArguments" (formula "39") (term "1"))
      (rule "variableDeclarationAssign" (formula "39") (term "1"))
      (rule "variableDeclaration" (formula "39") (term "1") (newnames "var_2"))
      (rule "assignment" (formula "39") (term "1"))
       (builtin "One Step Simplification" (formula "39"))
      (rule "variableDeclarationAssign" (formula "39") (term "1"))
      (rule "variableDeclaration" (formula "39") (term "1") (newnames "var_3"))
       (builtin "Use Operation Contract" (formula "39") (newnames "heapBefore_FileReader,self_38,exc_53,heapAfter_FileReader,anon_heap_FileReader") (contract "java.io.FileReader[java.io.FileReader::FileReader(java.lang.String)].JML normal_behavior operation contract.0"))
      (branch "Post (FileReader)"
          (builtin "One Step Simplification" (formula "28"))
          (builtin "One Step Simplification" (formula "41"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,1,0,1,0,1") (ifseqformula "24"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,0,1,0,1,0,1") (ifseqformula "20"))
         (rule "andLeft" (formula "28"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,1,0,1,0") (ifseqformula "28"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1,1,0,1,0") (ifseqformula "24"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,1,1,0,1,0") (ifseqformula "20"))
         (rule "andLeft" (formula "29"))
         (rule "andLeft" (formula "29"))
         (rule "andLeft" (formula "31"))
         (rule "andLeft" (formula "30"))
         (rule "andLeft" (formula "30"))
         (rule "notLeft" (formula "30"))
         (rule "andLeft" (formula "30"))
         (rule "notLeft" (formula "30"))
         (rule "orRight" (formula "33"))
         (rule "orRight" (formula "33"))
         (rule "replace_known_right" (formula "30") (term "1,0,0") (ifseqformula "34"))
          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "33")) (ifInst ""  (formula "35")))
         (rule "assignment" (formula "49") (term "1"))
          (builtin "One Step Simplification" (formula "49"))
          (builtin "Use Operation Contract" (formula "49") (newnames "heapBefore_parse_0,result_47,exc_54,heapAfter_parse,anon_heap_parse") (contract "org.apache.commons.csv.CSVFormat[org.apache.commons.csv.CSVFormat::parse(java.io.Reader)].JML normal_behavior operation contract.0"))
         (branch "Post (parse)"
             (builtin "One Step Simplification" (formula "34"))
             (builtin "One Step Simplification" (formula "51"))
            (rule "andLeft" (formula "34"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,1,0") (ifseqformula "34"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,1,0") (ifseqformula "28"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,1,1,0") (ifseqformula "24"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,1,1,0") (ifseqformula "20"))
            (rule "andLeft" (formula "35"))
            (rule "andLeft" (formula "36"))
            (rule "andLeft" (formula "35"))
            (rule "andLeft" (formula "36"))
            (rule "notLeft" (formula "37"))
            (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "38"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "assignment" (formula "55") (term "1"))
             (builtin "One Step Simplification" (formula "55"))
            (rule "blockEmpty" (formula "55") (term "1"))
            (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVFormat" (formula "36"))
            (rule "notLeft" (formula "36"))
            (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=org_apache_commons_csv_CSVFormat_RFC4180_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replaceKnownSelect_taclet00_2" (formula "1") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "commute_or_2" (formula "35") (term "0"))
            (rule "commute_or_2" (formula "35"))
            (rule "commute_or_2" (formula "35") (term "0,0"))
            (rule "commute_or_2" (formula "35") (term "0"))
            (rule "commute_or_2" (formula "35"))
            (rule "tryReturn" (formula "54") (term "1"))
            (rule "methodCallReturn" (formula "54") (term "1"))
            (rule "assignment" (formula "54") (term "1"))
             (builtin "One Step Simplification" (formula "54"))
            (rule "methodCallEmpty" (formula "54") (term "1"))
            (rule "blockEmpty" (formula "54") (term "1"))
            (rule "assignment" (formula "54") (term "1"))
             (builtin "One Step Simplification" (formula "54"))
            (rule "blockEmpty" (formula "54") (term "1"))
            (rule "variableDeclarationFinal" (formula "54") (term "1") (newnames "inputColMap"))
            (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "sv_heap=anon_heap_FileReader<<anonHeapFunction>>"))
            (rule "andLeft" (formula "1"))
            (rule "castedGetAny" (formula "1") (term "0,0,1,0,0"))
            (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
            (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
            (rule "commute_and" (formula "1") (term "0,0,0,0"))
            (rule "commute_and" (formula "1") (term "0,1,0,0,0"))
            (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "sv_heap=anon(heapAfter_withDelimiter,
     empty,
     anon_heap_FileReader<<anonHeapFunction>>)"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "26"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1") (ifseqformula "22"))
            (rule "andLeft" (formula "1"))
            (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
            (rule "castedGetAny" (formula "1") (term "0,0,1,0,0"))
            (rule "castedGetAny" (formula "1") (term "0,1,1,0,0,0"))
            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0"))
            (rule "commute_and" (formula "1") (term "0,1,0,0,0"))
            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0"))
            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0"))
            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0"))
            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0"))
            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0"))
            (rule "commute_and" (formula "1") (term "0,0,0,0"))
            (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "sv_heap=heapAfter_FileReader"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1") (ifseqformula "31"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "27"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1") (ifseqformula "23"))
            (rule "andLeft" (formula "1"))
            (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
            (rule "castedGetAny" (formula "1") (term "0,0,1,0,0"))
            (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0"))
            (rule "commute_and" (formula "1") (term "0,1,0,0,0"))
            (rule "commute_or_2" (formula "1") (term "1,0,0,0,0,0,0"))
            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0"))
            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0"))
            (rule "commute_or_2" (formula "1") (term "0,0,0,0,0"))
            (rule "commute_and" (formula "1") (term "0,0,0,0"))
            (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0"))
            (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "sv_heap=anon_heap_parse<<anonHeapFunction>>"))
            (rule "andLeft" (formula "1"))
            (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
            (rule "castedGetAny" (formula "1") (term "0,0,1,0,0"))
            (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
            (rule "commute_and" (formula "1") (term "0,0,0,0"))
            (rule "commute_and" (formula "1") (term "0,1,0,0,0"))
            (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "sv_heap=anon(heapAfter_FileReader,
     empty,
     anon_heap_parse<<anonHeapFunction>>)"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "32"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1") (ifseqformula "28"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0,0,0,0,1") (ifseqformula "24"))
            (rule "andLeft" (formula "1"))
            (rule "castedGetAny" (formula "1") (term "0,0,1,0,0"))
            (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
            (rule "castedGetAny" (formula "1") (term "0,1,1,0,0,0"))
            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0"))
            (rule "commute_and" (formula "1") (term "0,1,0,0,0"))
            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0"))
            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0"))
            (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "sv_heap=heapAfter_parse"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1") (ifseqformula "39"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "33"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1") (ifseqformula "29"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0,0,0,0,1") (ifseqformula "25"))
            (rule "andLeft" (formula "1"))
            (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
            (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
            (rule "castedGetAny" (formula "1") (term "0,0,1,0,0"))
            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0"))
            (rule "commute_and" (formula "1") (term "0,1,0,0,0"))
            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0"))
            (rule "commute_or_2" (formula "1") (term "1,0,0,0,0,0,0,0"))
            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0"))
            (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,0,0"))
            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0"))
            (rule "commute_or_2" (formula "2") (term "0,0,0,0,0"))
            (rule "commute_and" (formula "2") (term "0,0,0,0"))
            (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0,0"))
            (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0"))
            (rule "commute_or_2" (formula "2") (term "1,0,0,0,0"))
            (rule "ifElseUnfold" (formula "59") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "59") (term "1") (newnames "x"))
            (rule "inequality_comparison_simple" (formula "59") (term "1"))
             (builtin "One Step Simplification" (formula "59"))
            (rule "replace_known_right" (formula "59") (term "0,0,1,0") (ifseqformula "42"))
             (builtin "One Step Simplification" (formula "59"))
            (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0,0"))
            (rule "commute_and" (formula "1") (term "0,0,0,0"))
            (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0"))
            (rule "commute_or_2" (formula "1") (term "1,0,0,0,0"))
            (rule "commute_or_2" (formula "1") (term "0,0,1,0,0,0,0"))
            (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0"))
            (rule "ifElseSplit" (formula "58"))
            (branch "if x true"
                (builtin "One Step Simplification" (formula "59"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
                (builtin "Use Operation Contract" (formula "58") (newnames "heapBefore_getHeaderMap,result_48,exc_55,heapAfter_getHeaderMap,anon_heap_getHeaderMap") (contract "org.apache.commons.csv.CSVParser[org.apache.commons.csv.CSVParser::getHeaderMap()].JML normal_behavior operation contract.0"))
               (branch "Post (getHeaderMap)"
                   (builtin "One Step Simplification" (formula "42"))
                   (builtin "One Step Simplification" (formula "60"))
                  (rule "andLeft" (formula "42"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "1,1,0") (ifseqformula "42"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,1,1,0") (ifseqformula "38"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,1,1,0") (ifseqformula "32"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,1,1,0") (ifseqformula "28"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,0,1,1,0") (ifseqformula "24"))
                  (rule "andLeft" (formula "43"))
                  (rule "andLeft" (formula "44"))
                  (rule "andLeft" (formula "43"))
                  (rule "andLeft" (formula "44"))
                  (rule "andLeft" (formula "45"))
                  (rule "andLeft" (formula "46"))
                  (rule "notLeft" (formula "47"))
                  (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "48"))
                   (builtin "One Step Simplification" (formula "43"))
                  (rule "castedGetAny" (formula "44") (term "0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                  (rule "assignment" (formula "66") (term "1"))
                   (builtin "One Step Simplification" (formula "66"))
                  (rule "blockEmpty" (formula "66") (term "1"))
                  (rule "pullOutSelect" (formula "44") (term "0,1,1,0,0") (inst "selectSK=java_util_Map_key_seq_0"))
                  (rule "applyEq" (formula "45") (term "0,0,0,1,0") (ifseqformula "44"))
                  (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "42"))
                   (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "49")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0") (ifseqformula "38"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0,0") (ifseqformula "32"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0,0,0") (ifseqformula "28"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0,0,0,0") (ifseqformula "24"))
                  (rule "ifthenelse_negated" (formula "44") (term "0"))
                  (rule "pullOutSelect" (formula "44") (term "1,0") (inst "selectSK=java_util_Map_key_seq_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "38"))
                   (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "50")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0") (ifseqformula "32"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0,0") (ifseqformula "28"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0,0,0") (ifseqformula "24"))
                  (rule "ifthenelse_negated" (formula "44") (term "0"))
                  (rule "pullOutSelect" (formula "44") (term "1,0") (inst "selectSK=java_util_Map_key_seq_2"))
                  (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "32"))
                   (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "51")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0") (ifseqformula "28"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0,0") (ifseqformula "24"))
                  (rule "ifthenelse_negated" (formula "44") (term "0"))
                  (rule "pullOutSelect" (formula "44") (term "1,0") (inst "selectSK=java_util_Map_key_seq_3"))
                  (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "28"))
                   (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "52")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0") (ifseqformula "24"))
                  (rule "ifthenelse_negated" (formula "44") (term "0"))
                  (rule "pullOutSelect" (formula "44") (term "1,0") (inst "selectSK=java_util_Map_key_seq_4"))
                  (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "53")))
                  (rule "ifthenelse_negated" (formula "44") (term "0"))
                  (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "51"))
                  (rule "true_left" (formula "51"))
                  (rule "commute_or_2" (formula "43"))
                  (rule "commute_or_2" (formula "47") (term "0,0"))
                  (rule "commute_or_2" (formula "46") (term "0,0"))
                  (rule "commute_or_2" (formula "48") (term "0,0,0"))
                  (rule "commute_or_2" (formula "43") (term "0,0"))
                  (rule "commute_or_2" (formula "43") (term "0"))
                  (rule "commute_or_2" (formula "43"))
                  (rule "commute_or_2" (formula "48") (term "0,0"))
                  (rule "commute_and" (formula "49") (term "0,0"))
                  (rule "commute_or_2" (formula "47") (term "0,0,0"))
                  (rule "commute_or_2" (formula "47") (term "0,0"))
                  (rule "commute_or_2" (formula "43") (term "0,0,0"))
                  (rule "commute_or_2" (formula "43") (term "0,0"))
                  (rule "commute_or_2" (formula "43") (term "0"))
                  (rule "commute_or_2" (formula "43"))
                  (rule "commute_or_2" (formula "48") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "48") (term "0,0,0"))
                  (rule "commute_or_2" (formula "48") (term "0,0"))
                  (rule "returnUnfold" (formula "70") (term "1") (inst "#v0=l"))
                  (rule "variableDeclarationAssign" (formula "70") (term "1"))
                  (rule "variableDeclaration" (formula "70") (term "1") (newnames "l"))
                  (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "sv_heap=anon_heap_getHeaderMap<<anonHeapFunction>>"))
                  (rule "andLeft" (formula "1"))
                  (rule "castedGetAny" (formula "1") (term "0,0,1,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,1,1,0,0,0"))
                  (rule "commute_and" (formula "1") (term "0,0,0,0"))
                  (rule "commute_and" (formula "1") (term "0,1,0,0,0"))
                  (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "sv_heap=anon(heapAfter_parse,
     empty,
     anon_heap_getHeaderMap<<anonHeapFunction>>)"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "40"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1") (ifseqformula "34"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0,0,0,0,1") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "26"))
                  (rule "andLeft" (formula "1"))
                  (rule "castedGetAny" (formula "1") (term "0,0,1,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,1,1,0,0,0"))
                  (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0"))
                  (rule "commute_and" (formula "1") (term "0,1,0,0,0"))
                  (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0"))
                  (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0"))
                  (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0,0"))
                  (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "commute_or_2" (formula "1") (term "0,0,0,0,0"))
                  (rule "commute_and" (formula "1") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "1") (term "0,0,1,0,0,0,0"))
                  (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0"))
                  (rule "commute_or_2" (formula "1") (term "1,0,0,0,0"))
                  (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0,0,0"))
                  (rule "commute_or_2" (formula "1") (term "0,0,1,0,0,0,0"))
                  (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0"))
                  (rule "commute_or_2" (formula "1") (term "1,0,0,0,0"))
                  (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "sv_heap=heapAfter_getHeaderMap"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1") (ifseqformula "45"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "41"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1") (ifseqformula "35"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0,0,0,0,1") (ifseqformula "31"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "27"))
                  (rule "andLeft" (formula "1"))
                  (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
                  (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
                  (rule "castedGetAny" (formula "1") (term "0,0,1,0,0"))
                  (rule "commute_or_2" (formula "1") (term "1,0,0,0,0,0"))
                  (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0"))
                  (rule "commute_and" (formula "1") (term "0,1,0,0,0"))
                  (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0"))
                  (rule "commute_or_2" (formula "1") (term "1,0,0,0,0,0,0,0"))
                  (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0"))
                  (rule "commute_or_2" (formula "1") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0,0"))
                  (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "commute_and" (formula "1") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0"))
                  (rule "commute_or_2" (formula "1") (term "1,0,0,0,0"))
                  (rule "commute_or_2" (formula "1") (term "0,0,1,0,0,0,0"))
                  (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0"))
                  (rule "commute_or_2" (formula "1") (term "1,0,0,0,0"))
                  (rule "instanceCreationAssignmentUnfoldArguments" (formula "72") (term "1"))
                  (rule "variableDeclarationAssign" (formula "72") (term "1"))
                  (rule "variableDeclaration" (formula "72") (term "1") (newnames "var_4"))
                   (builtin "Use Operation Contract" (formula "72") (newnames "heapBefore_keySet,result_49,exc_56,heapAfter_keySet,anon_heap_keySet") (contract "java.util.Map[java.util.Map::keySet()].JML normal_behavior operation contract.0"))
                  (branch "Post (keySet)"
                      (builtin "One Step Simplification" (formula "55"))
                      (builtin "One Step Simplification" (formula "74"))
                     (rule "andLeft" (formula "55"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "1,1,0") (ifseqformula "55"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,1,1,0") (ifseqformula "44"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,1,1,0") (ifseqformula "40"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,0,1,1,0") (ifseqformula "34"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,0,0,1,1,0") (ifseqformula "30"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,0,0,0,1,1,0") (ifseqformula "26"))
                     (rule "andLeft" (formula "56"))
                     (rule "andLeft" (formula "56"))
                     (rule "andLeft" (formula "58"))
                     (rule "andLeft" (formula "58"))
                     (rule "andLeft" (formula "59"))
                     (rule "notLeft" (formula "60"))
                     (rule "eqSymm" (formula "58"))
                     (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "60"))
                      (builtin "One Step Simplification" (formula "57"))
                     (rule "assignment" (formula "79") (term "1"))
                      (builtin "One Step Simplification" (formula "79"))
                     (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=java_util_Map_key_seq_5"))
                     (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "55"))
                      (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "62")))
                     (rule "replaceKnownSelect_taclet000000_7" (formula "58") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,0,0") (ifseqformula "44"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,0,0,0") (ifseqformula "40"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,0,0,0,0") (ifseqformula "34"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,0,0,0,0,0") (ifseqformula "30"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,0,0,0,0,0,0") (ifseqformula "26"))
                     (rule "eqSymm" (formula "59"))
                     (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "55"))
                      (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "61")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "0,0,0") (ifseqformula "44"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "0,0,0,0") (ifseqformula "40"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "0,0,0,0,0") (ifseqformula "34"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "0,0,0,0,0,0") (ifseqformula "30"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "0,0,0,0,0,0,0") (ifseqformula "26"))
                     (rule "ifthenelse_negated" (formula "58") (term "0"))
                     (rule "ifthenelse_negated" (formula "59") (term "0"))
                     (rule "pullOutSelect" (formula "59") (term "1,0") (inst "selectSK=java_util_Collection_seq_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "44"))
                      (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "62")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "0,0,0") (ifseqformula "40"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "0,0,0,0") (ifseqformula "34"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "0,0,0,0,0") (ifseqformula "30"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "0,0,0,0,0,0") (ifseqformula "26"))
                     (rule "ifthenelse_negated" (formula "59") (term "0"))
                     (rule "pullOutSelect" (formula "59") (term "1,0") (inst "selectSK=java_util_Collection_seq_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "40"))
                      (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "63")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "0,0,0") (ifseqformula "34"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "0,0,0,0") (ifseqformula "30"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "0,0,0,0,0") (ifseqformula "26"))
                     (rule "ifthenelse_negated" (formula "59") (term "0"))
                     (rule "pullOutSelect" (formula "59") (term "1,0") (inst "selectSK=java_util_Collection_seq_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "34"))
                      (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "64")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "0,0,0") (ifseqformula "30"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "0,0,0,0") (ifseqformula "26"))
                     (rule "ifthenelse_negated" (formula "59") (term "0"))
                     (rule "pullOutSelect" (formula "59") (term "1,0") (inst "selectSK=java_util_Collection_seq_3"))
                     (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "65")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "0,0,0") (ifseqformula "26"))
                     (rule "ifthenelse_negated" (formula "59") (term "0"))
                     (rule "pullOutSelect" (formula "59") (term "1,0") (inst "selectSK=java_util_Collection_seq_4"))
                     (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "26"))
                      (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "66")))
                     (rule "ifthenelse_negated" (formula "59") (term "0"))
                     (rule "commute_or_2" (formula "57") (term "0"))
                     (rule "commute_or_2" (formula "57"))
                     (rule "commute_or_2" (formula "58") (term "0,0"))
                     (rule "commute_or_2" (formula "64") (term "0,0"))
                     (rule "commute_or_2" (formula "62") (term "0,0"))
                     (rule "commute_or_2" (formula "61") (term "0,0"))
                     (rule "commute_or_2" (formula "63") (term "0,0,0"))
                     (rule "commute_or_2" (formula "63") (term "0,0"))
                     (rule "commute_or_2" (formula "57") (term "0,0,0"))
                     (rule "commute_or_2" (formula "57") (term "0,0"))
                     (rule "commute_or_2" (formula "57") (term "0"))
                     (rule "commute_or_2" (formula "57"))
                     (rule "commute_or_2" (formula "62") (term "0,0,0"))
                     (rule "commute_or_2" (formula "62") (term "0,0"))
                     (rule "commute_or_2" (formula "58") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "58") (term "0,0,0"))
                     (rule "commute_or_2" (formula "58") (term "0,0"))
                     (rule "commute_or_2" (formula "64") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "64") (term "0,0,0"))
                     (rule "commute_or_2" (formula "64") (term "0,0"))
                     (rule "commute_or_2" (formula "63") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "63") (term "0,0,0"))
                     (rule "commute_or_2" (formula "63") (term "0,0"))
                     (rule "commute_or_2" (formula "57") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "57") (term "0,0,0"))
                     (rule "commute_or_2" (formula "57") (term "0,0"))
                     (rule "commute_or_2" (formula "57") (term "0"))
                     (rule "commute_or_2" (formula "57"))
                     (rule "commute_or_2" (formula "58") (term "0,0,0,0,0"))
                     (rule "commute_or_2" (formula "58") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "58") (term "0,0,0"))
                     (rule "commute_or_2" (formula "58") (term "0,0"))
                     (rule "replace_known_left" (formula "58") (term "0,0") (ifseqformula "45"))
                      (builtin "One Step Simplification" (formula "58"))
                     (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "58"))
                     (rule "hideAuxiliaryEq" (formula "58"))
                     (rule "commute_or_2" (formula "63") (term "0,0,0,0,0"))
                     (rule "commute_or_2" (formula "63") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "63") (term "0,0,0"))
                     (rule "commute_or_2" (formula "63") (term "0,0"))
                      (builtin "Use Operation Contract" (formula "84") (newnames "heapBefore_LinkedList,self_39,exc_57,heapAfter_LinkedList,anon_heap_LinkedList") (contract "java.util.LinkedList[java.util.LinkedList::LinkedList(java.util.Collection)].JML normal_behavior operation contract.0"))
                     (branch "Post (LinkedList)"
                         (builtin "One Step Simplification" (formula "66"))
                         (builtin "One Step Simplification" (formula "86"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,1,0,1,0,1") (ifseqformula "55"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,0,1,0,1,0,1") (ifseqformula "44"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,0,0,1,0,1,0,1") (ifseqformula "40"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,0,0,0,1,0,1,0,1") (ifseqformula "34"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,0,0,0,0,1,0,1,0,1") (ifseqformula "30"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,0,0,0,0,0,1,0,1,0,1") (ifseqformula "26"))
                        (rule "andLeft" (formula "66"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "1,1,0,1,0") (ifseqformula "66"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,1,1,0,1,0") (ifseqformula "55"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,1,1,0,1,0") (ifseqformula "44"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0,1,1,0,1,0") (ifseqformula "40"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0,0,1,1,0,1,0") (ifseqformula "34"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0,0,0,1,1,0,1,0") (ifseqformula "30"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0,0,0,0,1,1,0,1,0") (ifseqformula "26"))
                        (rule "andLeft" (formula "67"))
                        (rule "andLeft" (formula "67"))
                        (rule "andLeft" (formula "69"))
                        (rule "andLeft" (formula "68"))
                        (rule "andLeft" (formula "70"))
                        (rule "andLeft" (formula "68"))
                        (rule "notLeft" (formula "68"))
                        (rule "andLeft" (formula "68"))
                        (rule "notLeft" (formula "68"))
                        (rule "orRight" (formula "72"))
                        (rule "orRight" (formula "72"))
                        (rule "orRight" (formula "72"))
                        (rule "orRight" (formula "72"))
                        (rule "orRight" (formula "72"))
                        (rule "orRight" (formula "72"))
                        (rule "eqSymm" (formula "70"))
                        (rule "replace_known_right" (formula "68") (term "1,0") (ifseqformula "78"))
                         (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "72")) (ifInst ""  (formula "73")) (ifInst ""  (formula "74")) (ifInst ""  (formula "75")) (ifInst ""  (formula "76")) (ifInst ""  (formula "77")))
                        (rule "assignment" (formula "99") (term "1"))
                         (builtin "One Step Simplification" (formula "99"))
                        (rule "blockEmpty" (formula "99") (term "1"))
                        (rule "pullOutSelect" (formula "70") (term "0") (inst "selectSK=java_util_Collection_seq_5"))
                        (rule "simplifySelectOfAnonEQ" (formula "70") (ifseqformula "66"))
                         (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "81")))
                        (rule "replaceKnownSelect_taclet0000000_13" (formula "70") (term "2,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0000000_19" (formula "70") (term "2,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,0,0") (ifseqformula "55"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,0,0,0") (ifseqformula "44"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,0,0,0,0") (ifseqformula "40"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,0,0,0,0,0") (ifseqformula "34"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,0,0,0,0,0,0") (ifseqformula "30"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,0,0,0,0,0,0,0") (ifseqformula "26"))
                        (rule "eqSymm" (formula "71"))
                        (rule "simplifySelectOfAnonEQ" (formula "71") (ifseqformula "66"))
                         (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "80")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "0,0,0") (ifseqformula "55"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "0,0,0,0") (ifseqformula "44"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "0,0,0,0,0") (ifseqformula "40"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "0,0,0,0,0,0") (ifseqformula "34"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "0,0,0,0,0,0,0") (ifseqformula "30"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "0,0,0,0,0,0,0,0") (ifseqformula "26"))
                        (rule "replace_known_right" (formula "71") (term "1,0,0,0,0,0,0,0,0") (ifseqformula "74"))
                         (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "73")) (ifInst ""  (formula "75")) (ifInst ""  (formula "76")) (ifInst ""  (formula "77")) (ifInst ""  (formula "78")) (ifInst ""  (formula "79")))
                        (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "71"))
                        (rule "hideAuxiliaryEq" (formula "71"))
                        (rule "ifthenelse_negated" (formula "70") (term "0"))
                        (rule "Class_invariant_axiom_for_java_util_LinkedList" (formula "71"))
                        (rule "true_left" (formula "71"))
                        (rule "commute_or_2" (formula "70") (term "0,0,0"))
                        (rule "commute_or_2" (formula "70") (term "0,0"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "47") (inst "iv=iv"))
                        (rule "andLeft" (formula "47"))
                        (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0"))
                        (rule "applyEq" (formula "48") (term "0,0,1,0") (ifseqformula "49"))
                         (builtin "One Step Simplification" (formula "48"))
                        (rule "true_left" (formula "48"))
                        (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "48"))
                         (builtin "One Step Simplification" (formula "47"))
                        (rule "true_left" (formula "47"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "46") (inst "iv=iv"))
                        (rule "andLeft" (formula "46"))
                        (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0"))
                        (rule "applyEq" (formula "47") (term "0,0,1,0") (ifseqformula "48"))
                         (builtin "One Step Simplification" (formula "47"))
                        (rule "true_left" (formula "47"))
                        (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "47"))
                         (builtin "One Step Simplification" (formula "46"))
                        (rule "true_left" (formula "46"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "48") (inst "iv=iv"))
                        (rule "andLeft" (formula "48"))
                        (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0"))
                        (rule "applyEq" (formula "49") (term "1,1,0,0") (ifseqformula "48"))
                        (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "50"))
                         (builtin "One Step Simplification" (formula "48"))
                        (rule "true_left" (formula "48"))
                        (rule "applyEq" (formula "48") (term "0,0,1,0") (ifseqformula "49"))
                         (builtin "One Step Simplification" (formula "48"))
                        (rule "true_left" (formula "48"))
                        (rule "commute_or_2" (formula "70") (term "0,0,0,0,0"))
                        (rule "lenNonNegative" (formula "51") (term "1,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "51"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "49") (inst "iv=iv"))
                        (rule "andLeft" (formula "49"))
                        (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0"))
                        (rule "applyEq" (formula "50") (term "0,1,1,0,0") (ifseqformula "51"))
                        (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "51"))
                         (builtin "One Step Simplification" (formula "49"))
                        (rule "true_left" (formula "49"))
                        (rule "applyEq" (formula "49") (term "0,0,1,0") (ifseqformula "50"))
                         (builtin "One Step Simplification" (formula "49"))
                        (rule "true_left" (formula "49"))
                        (rule "commute_or_2" (formula "71") (term "0,0,0,0"))
                        (rule "commute_or_2" (formula "71") (term "0,0,0"))
                        (rule "commute_or_2" (formula "71") (term "0,0"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "50") (inst "iv=iv"))
                        (rule "andLeft" (formula "50"))
                        (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0"))
                        (rule "applyEq" (formula "51") (term "0,1,1,0,0") (ifseqformula "52"))
                        (rule "applyEq" (formula "51") (term "0,0,1,0") (ifseqformula "52"))
                         (builtin "One Step Simplification" (formula "51"))
                        (rule "true_left" (formula "51"))
                        (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "51"))
                         (builtin "One Step Simplification" (formula "50"))
                        (rule "true_left" (formula "50"))
                        (rule "methodCallReturn" (formula "99") (term "1"))
                        (rule "assignment" (formula "99") (term "1"))
                         (builtin "One Step Simplification" (formula "99"))
                        (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "sv_heap=anon_heap_keySet<<anonHeapFunction>>"))
                        (rule "andLeft" (formula "1"))
                        (rule "castedGetAny" (formula "1") (term "0,0,1,0,0"))
                        (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
                        (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
                        (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "sv_heap=anon(heapAfter_getHeaderMap,
     empty,
     anon_heap_keySet<<anonHeapFunction>>)"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "46"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1") (ifseqformula "42"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0,0,0,0,1") (ifseqformula "36"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "32"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "28"))
                        (rule "andLeft" (formula "1"))
                        (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
                        (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
                        (rule "castedGetAny" (formula "1") (term "0,0,1,0,0"))
                        (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "sv_heap=heapAfter_keySet"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1") (ifseqformula "59"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "47"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1") (ifseqformula "43"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0,0,0,0,1") (ifseqformula "37"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "33"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "29"))
                        (rule "andLeft" (formula "1"))
                        (rule "castedGetAny" (formula "1") (term "0,0,1,0,0"))
                        (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
                        (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
                        (rule "commute_or_2" (formula "73") (term "0,0,0,0,0,0"))
                        (rule "commute_and" (formula "2") (term "0,0,0,0"))
                        (rule "commute_or_2" (formula "73") (term "0,0,0,0,0"))
                        (rule "commute_or_2" (formula "73") (term "0,0,0,0"))
                        (rule "commute_or_2" (formula "73") (term "0,0,0"))
                        (rule "commute_or_2" (formula "73") (term "0,0"))
                        (rule "replace_known_left" (formula "73") (term "0,0") (ifseqformula "60"))
                         (builtin "One Step Simplification" (formula "73"))
                        (rule "eqSymm" (formula "73"))
                        (rule "applyEqReverse" (formula "54") (term "0,1,0,0,0") (ifseqformula "73"))
                        (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "73"))
                        (rule "applyEqReverse" (formula "54") (term "0,0,0,1,0") (ifseqformula "73"))
                        (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "73"))
                        (rule "applyEqReverse" (formula "53") (term "0,0") (ifseqformula "73"))
                        (rule "hideAuxiliaryEq" (formula "73"))
                        (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0"))
                        (rule "commute_and" (formula "2") (term "0,1,0,0,0"))
                        (rule "methodCallEmpty" (formula "100") (term "1"))
                        (rule "commute_and" (formula "1") (term "0,1,0,0,0"))
                        (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "62") (inst "iv=iv"))
                        (rule "andLeft" (formula "62"))
                        (rule "inEqSimp_commuteLeq" (formula "63") (term "0,0,0"))
                        (rule "applyEq" (formula "63") (term "0,1,1,0,0") (ifseqformula "64"))
                        (rule "applyEq" (formula "63") (term "0,0,1,0") (ifseqformula "64"))
                         (builtin "One Step Simplification" (formula "63"))
                        (rule "true_left" (formula "63"))
                        (rule "applyEq" (formula "62") (term "0,0") (ifseqformula "63"))
                         (builtin "One Step Simplification" (formula "62"))
                        (rule "true_left" (formula "62"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "61") (inst "iv=iv"))
                        (rule "andLeft" (formula "61"))
                        (rule "inEqSimp_commuteLeq" (formula "62") (term "0,0,0"))
                        (rule "applyEq" (formula "61") (term "0,0") (ifseqformula "63"))
                         (builtin "One Step Simplification" (formula "61"))
                        (rule "true_left" (formula "61"))
                        (rule "applyEq" (formula "61") (term "0,0,1,0") (ifseqformula "62"))
                         (builtin "One Step Simplification" (formula "61"))
                        (rule "true_left" (formula "61"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "63") (inst "iv=iv"))
                        (rule "andLeft" (formula "63"))
                        (rule "inEqSimp_commuteLeq" (formula "64") (term "0,0,0"))
                        (rule "applyEq" (formula "64") (term "0,0,1,0") (ifseqformula "65"))
                         (builtin "One Step Simplification" (formula "64"))
                        (rule "true_left" (formula "64"))
                        (rule "applyEq" (formula "63") (term "0,0") (ifseqformula "64"))
                         (builtin "One Step Simplification" (formula "63"))
                        (rule "true_left" (formula "63"))
                        (rule "tryEmpty" (formula "100") (term "1"))
                        (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "sv_heap=anon_heap_LinkedList<<anonHeapFunction>>"))
                        (rule "andLeft" (formula "1"))
                        (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
                        (rule "castedGetAny" (formula "1") (term "0,0,1,0,0"))
                        (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
                        (rule "commute_and" (formula "1") (term "0,0,0,0"))
                        (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "sv_heap=anon(heapAfter_keySet,
     empty,
     anon_heap_LinkedList<<anonHeapFunction>>)"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "60"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1") (ifseqformula "48"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0,0,0,0,1") (ifseqformula "44"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "38"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "34"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "30"))
                        (rule "andLeft" (formula "1"))
                        (rule "castedGetAny" (formula "1") (term "0,0,1,0,0"))
                        (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
                        (rule "castedGetAny" (formula "1") (term "0,1,1,0,0,0"))
                        (rule "Class_axiom_0_in_de_polyas_core3_open_cred_CredTool" (inst "seq=seq") (inst "i=i") (inst "str=str") (inst "seq_0=seq_0") (inst "i_0=i_0") (inst "sv_heap=heapAfter_LinkedList"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "1,0,0,0,0,0,1") (ifseqformula "72"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0,0,0,0,1") (ifseqformula "61"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0,0,0,0,1") (ifseqformula "49"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0,0,0,0,1") (ifseqformula "45"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "39"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "35"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "31"))
                        (rule "andLeft" (formula "1"))
                        (rule "castedGetAny" (formula "1") (term "0,0,0,0,0"))
                        (rule "castedGetAny" (formula "2") (term "0,1,1,0,0,0"))
                        (rule "castedGetAny" (formula "1") (term "0,0,1,0,0"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "66") (inst "iv=iv"))
                        (rule "andLeft" (formula "66"))
                        (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0"))
                        (rule "applyEq" (formula "67") (term "1,1,0,0") (ifseqformula "66"))
                        (rule "applyEq" (formula "66") (term "0,0") (ifseqformula "68"))
                         (builtin "One Step Simplification" (formula "66"))
                        (rule "true_left" (formula "66"))
                        (rule "applyEq" (formula "66") (term "0,0,1,0") (ifseqformula "67"))
                         (builtin "One Step Simplification" (formula "66"))
                        (rule "true_left" (formula "66"))
                        (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,0"))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "67") (inst "iv=iv"))
                        (rule "andLeft" (formula "67"))
                        (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,0"))
                        (rule "applyEq" (formula "68") (term "0,0,1,0") (ifseqformula "69"))
                         (builtin "One Step Simplification" (formula "68"))
                        (rule "true_left" (formula "68"))
                        (rule "applyEq" (formula "67") (term "0,0") (ifseqformula "68"))
                         (builtin "One Step Simplification" (formula "67"))
                        (rule "true_left" (formula "67"))
                        (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0"))
                        (rule "commute_and" (formula "2") (term "0,1,0,0,0"))
                        (rule "emptyModality" (formula "102") (term "1"))
                        (rule "andRight" (formula "102"))
                        (branch "Case 1"
                           (rule "andRight" (formula "102"))
                           (branch "Case 1"
                              (rule "andRight" (formula "102"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "102"))
                                 (rule "allRight" (formula "102") (inst "sk=i_0") (userinteraction))
                                 (rule "impRight" (formula "102"))
                                 (rule "replaceKnownSelect_taclet00000000_21" (formula "103") (term "0,0,0") (userinteraction))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00000000_22" (formula "103") (term "0,0,0") (userinteraction))
                                 (rule "applyEqReverse" (formula "103") (term "0,0,0") (ifseqformula "55") (userinteraction))
                                 (rule "ifthenelse_split" (formula "103") (term "0,0,0") (userinteraction))
                                 (branch " result_48.<created> = TRUE ∨ result_48.<created>@anon_heap_FileReader«anonHeapFunction» = TRUE ∨ result_48.<created>@anon_heap_parse«anonHeapFunction» = TRUE ∨ result_48.<created>@anon_heap_withDelimiter«anonHeapFunction» = TRUE ∨ result_48.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "104") (term "0,0,0") (ifseqformula "55") (userinteraction))
                                    (rule "ifthenelse_split" (formula "104") (term "0,0,0") (userinteraction))
                                    (branch " result_48.<created> = TRUE ∨ result_48.<created>@anon_heap_FileReader«anonHeapFunction» = TRUE ∨ result_48.<created>@anon_heap_withDelimiter«anonHeapFunction» = TRUE ∨ result_48.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "105") (term "0,0,0") (ifseqformula "55") (userinteraction))
                                       (rule "ifthenelse_split" (formula "105") (term "0,0,0") (userinteraction))
                                       (branch " result_48.<created> = TRUE ∨ result_48.<created>@anon_heap_withDelimiter«anonHeapFunction» = TRUE ∨ result_48.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "106") (term "0,0,0") (ifseqformula "55") (userinteraction))
                                          (rule "applyEqReverse" (formula "106") (term "1,0,0,0") (ifseqformula "54") (userinteraction))
                                          (rule "notRight" (formula "106"))
                                          (rule "replaceKnownSelect_taclet00000000_21" (formula "5") (term "0,1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00000000_22" (formula "5") (term "0,1,1"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "replace_known_left" (formula "59") (term "0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "applyEqReverse" (formula "60") (term "1,0") (ifseqformula "59"))
                                          (rule "hideAuxiliaryEq" (formula "59"))
                                          (rule "replace_known_left" (formula "58") (term "0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "applyEqReverse" (formula "59") (term "1,0") (ifseqformula "58"))
                                          (rule "hideAuxiliaryEq" (formula "58"))
                                          (rule "replace_known_left" (formula "58") (term "0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "eqSymm" (formula "58"))
                                          (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "58"))
                                          (rule "hideAuxiliaryEq" (formula "58"))
                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "56"))
                                          (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "57"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0"))
                                          (rule "nnf_imp2or" (formula "27") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "nnf_imp2or" (formula "9") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "24") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "14") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "8") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "23") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "26") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "28") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "12") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "13") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "16") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "7") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "10") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "22") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "11") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "25") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "15") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "59") (term "0"))
                                          (rule "nnf_notAnd" (formula "59") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "59") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "59") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "59") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "59") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "59") (term "1,0,0"))
                                          (rule "mul_literals" (formula "59") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "59") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0"))
                                          (rule "mul_literals" (formula "59") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "nnf_imp2or" (formula "24") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "24") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "nnf_imp2or" (formula "14") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "14") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "nnf_notAnd" (formula "8") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "nnf_notAnd" (formula "23") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "nnf_notAnd" (formula "26") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "nnf_notAnd" (formula "28") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "nnf_notAnd" (formula "12") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "nnf_notAnd" (formula "13") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "nnf_notAnd" (formula "16") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "nnf_notAnd" (formula "7") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "nnf_imp2or" (formula "10") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "10") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "nnf_imp2or" (formula "22") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "22") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "nnf_imp2or" (formula "11") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "11") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "nnf_imp2or" (formula "25") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "25") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "nnf_notAnd" (formula "15") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "nnf_imp2or" (formula "9") (term "1,0,0,0"))
                                          (rule "nnf_imp2or" (formula "8") (term "1,0,0,0"))
                                          (rule "nnf_notOr" (formula "9") (term "0,0,0,0,0"))
                                          (rule "nnf_imp2or" (formula "23") (term "1,0,0,0"))
                                          (rule "nnf_imp2or" (formula "26") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "24") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "nnf_imp2or" (formula "28") (term "1,0,0,0"))
                                          (rule "nnf_notOr" (formula "14") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "14") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "nnf_imp2or" (formula "12") (term "1,0,0,0"))
                                          (rule "nnf_imp2or" (formula "13") (term "1,0,0,0"))
                                          (rule "nnf_notOr" (formula "8") (term "1,0,0,0,0"))
                                          (rule "nnf_imp2or" (formula "16") (term "1,0,0,0"))
                                          (rule "nnf_notOr" (formula "23") (term "1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "26") (term "1,0,0,0,0"))
                                          (rule "nnf_imp2or" (formula "7") (term "1,0,0,0"))
                                          (rule "nnf_notOr" (formula "28") (term "1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "12") (term "1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "13") (term "1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "16") (term "1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "7") (term "0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "10") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "10") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "nnf_imp2or" (formula "15") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "22") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "nnf_notAnd" (formula "11") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "nnf_notOr" (formula "25") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "25") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "nnf_notOr" (formula "15") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "9") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "nnf_notAnd" (formula "8") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "nnf_notAnd" (formula "23") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "nnf_notAnd" (formula "26") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "nnf_notOr" (formula "24") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "28") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "nnf_notAnd" (formula "12") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "nnf_notAnd" (formula "13") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "nnf_notAnd" (formula "16") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "nnf_notAnd" (formula "7") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "nnf_notAnd" (formula "15") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "nnf_notOr" (formula "22") (term "1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "11") (term "1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "9") (term "0,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "24") (term "0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "13") (term "0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "7") (term "0,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "15") (term "0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "22") (term "0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "11") (term "0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "9") (term "0,0,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "13") (term "0,0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "7") (term "1,0,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "15") (term "0,0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "22") (term "0,0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "11") (term "0,0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "9") (term "0,0,0,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "13") (term "0,0,0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "7") (term "0,1,0,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "15") (term "0,0,0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "11") (term "0,0,0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "9") (term "1,0,0,0,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "13") (term "0,0,0,0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "7") (term "0,0,1,0,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "11") (term "0,0,0,0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "9") (term "0,1,0,0,0,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "7") (term "0,0,0,1,0,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "11") (term "0,0,0,0,0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "9") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "7") (term "0,0,0,0,1,0,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "7") (term "0,0,0,0,0,1,0,0,0,0,0,0"))
                                          (rule "commute_or_2" (formula "59") (term "0"))
                                          (rule "commute_or_2" (formula "14") (term "0,0,0"))
                                          (rule "commute_or" (formula "59") (term "0,0"))
                                          (rule "commute_or_2" (formula "59") (term "0"))
                                          (rule "commute_or_2" (formula "28") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "15") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "16") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "24") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "13") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                          (rule "commute_or" (formula "7") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "7") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "9") (term "1,0,0,0"))
                                          (rule "commute_or" (formula "9") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "14") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "28") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "22") (term "1,0,0,0,0"))
                                          (rule "commute_or_2" (formula "15") (term "1,0,0,0,0"))
                                          (rule "commute_or_2" (formula "12") (term "1,0,0,0,0"))
                                          (rule "commute_or_2" (formula "25") (term "1,0,0,0,0"))
                                          (rule "commute_or_2" (formula "16") (term "1,0,0,0,0"))
                                          (rule "commute_or_2" (formula "24") (term "1,0,0,0,0"))
                                          (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "13") (term "1,0,0,0,0"))
                                          (rule "shift_paren_or" (formula "26") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "11") (term "1,0,0,0,0"))
                                          (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                          (rule "commute_and" (formula "14") (term "1,0,0,0"))
                                          (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "22") (term "0,0,0,0"))
                                          (rule "commute_and" (formula "28") (term "1,0,0,0"))
                                          (rule "shift_paren_or" (formula "15") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "25") (term "0,0,0,0"))
                                          (rule "commute_and" (formula "12") (term "1,0,0,0"))
                                          (rule "commute_and" (formula "25") (term "1,0,0,0"))
                                          (rule "shift_paren_or" (formula "16") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "24") (term "0,0,0,0"))
                                          (rule "commute_and" (formula "16") (term "1,0,0,0"))
                                          (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                          (rule "commute_and" (formula "10") (term "1,0,0,0"))
                                          (rule "commute_and" (formula "26") (term "1,0,0,0"))
                                          (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                          (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                          (rule "commute_and" (formula "8") (term "1,0,0,0"))
                                          (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "commute_or_2" (formula "14") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "28") (term "0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                                          (rule "commute_and" (formula "24") (term "0,1,0,0,0"))
                                          (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "commute_or_2" (formula "10") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "26") (term "0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "commute_or_2" (formula "8") (term "0,0,0,0"))
                                          (rule "commute_or" (formula "7") (term "1,0,0,0,0,0"))
                                          (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "commute_and" (formula "7") (term "0,1,0,0,0"))
                                          (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "shift_paren_or" (formula "15") (term "0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "shift_paren_or" (formula "25") (term "0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "shift_paren_or" (formula "16") (term "0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                                          (rule "distr_forallAnd" (formula "14") (term "0,0"))
                                          (rule "distr_forallAnd" (formula "14") (term "0"))
                                          (rule "distr_forallAnd" (formula "14"))
                                          (rule "andLeft" (formula "14"))
                                          (rule "commute_or_2" (formula "14") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "eqSymm" (formula "14") (term "1,0,0,0,0"))
                                          (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,0"))
                                          (rule "castedGetAny" (formula "14") (term "1,0,0,1,0,0,0"))
                                          (rule "castedGetAny" (formula "14") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "cnf_rightDist" (formula "28") (term "0,0,0"))
                                          (rule "distr_forallAnd" (formula "28") (term "0,0"))
                                          (rule "distr_forallAnd" (formula "28") (term "0"))
                                          (rule "distr_forallAnd" (formula "28"))
                                          (rule "andLeft" (formula "28"))
                                          (rule "commute_or_2" (formula "28") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "eqSymm" (formula "28") (term "1,0,0,0,0"))
                                          (rule "castedGetAny" (formula "28") (term "1,0,0,1,0,0,0"))
                                          (rule "castedGetAny" (formula "28") (term "0,0,0,0,0,0"))
                                          (rule "castedGetAny" (formula "28") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "shift_paren_or" (formula "14") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "eqSymm" (formula "14") (term "1,1,0,0,0"))
                                          (rule "castedGetAny" (formula "14") (term "0,0,1,0,0,0"))
                                          (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,0"))
                                          (rule "castedGetAny" (formula "14") (term "0,1,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                          (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                          (rule "distr_forallAnd" (formula "10") (term "0"))
                                          (rule "distr_forallAnd" (formula "10"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                          (rule "distr_forallAnd" (formula "26") (term "0,0"))
                                          (rule "distr_forallAnd" (formula "26") (term "0"))
                                          (rule "distr_forallAnd" (formula "26"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                                          (rule "distr_forallAnd" (formula "23") (term "0,0"))
                                          (rule "distr_forallAnd" (formula "23") (term "0"))
                                          (rule "distr_forallAnd" (formula "23"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                          (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                          (rule "distr_forallAnd" (formula "8") (term "0"))
                                          (rule "distr_forallAnd" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                          (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                          (rule "distr_forallAnd" (formula "22") (term "0"))
                                          (rule "distr_forallAnd" (formula "22"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                          (rule "distr_forallAnd" (formula "15") (term "0,0"))
                                          (rule "distr_forallAnd" (formula "15") (term "0"))
                                          (rule "distr_forallAnd" (formula "15"))
                                          (rule "andLeft" (formula "15"))
                                          (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                          (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                          (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,0,0"))
                                          (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "true_left" (formula "10"))
                                          (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                          (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                          (rule "distr_forallAnd" (formula "12") (term "0"))
                                          (rule "distr_forallAnd" (formula "12"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                          (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                          (rule "distr_forallAnd" (formula "25") (term "0"))
                                          (rule "distr_forallAnd" (formula "25"))
                                          (rule "andLeft" (formula "25"))
                                          (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "eqSymm" (formula "26") (term "1,0,0,0,0"))
                                          (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                                          (rule "castedGetAny" (formula "26") (term "1,0,0,1,0,0,0"))
                                          (rule "castedGetAny" (formula "26") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                          (rule "distr_forallAnd" (formula "15") (term "0,0"))
                                          (rule "distr_forallAnd" (formula "15") (term "0"))
                                          (rule "distr_forallAnd" (formula "15"))
                                          (rule "andLeft" (formula "15"))
                                          (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                          (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                          (rule "distr_forallAnd" (formula "24") (term "0"))
                                          (rule "distr_forallAnd" (formula "24"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                          (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                          (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                          (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                          (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                          (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                          (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "shift_paren_or" (formula "9") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "eqSymm" (formula "9") (term "1,1,0,0,0"))
                                          (rule "castedGetAny" (formula "9") (term "0,0,1,0,0,0"))
                                          (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                          (rule "castedGetAny" (formula "9") (term "0,1,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                          (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                          (rule "distr_forallAnd" (formula "11") (term "0"))
                                          (rule "distr_forallAnd" (formula "11"))
                                          (rule "andLeft" (formula "11"))
                                          (rule "ifthenelse_split" (formula "61") (term "0"))
                                          (branch "result_49.<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                             (rule "hideAuxiliaryEq" (formula "62"))
                                             (rule "replace_known_left" (formula "65") (term "0,0,0,0,0,0") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "65"))
                                             (rule "hideAuxiliaryEq" (formula "65"))
                                             (rule "replace_known_left" (formula "65") (term "0,0,0,0,0,0,0") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "eqSymm" (formula "65"))
                                             (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "65"))
                                             (rule "hideAuxiliaryEq" (formula "65"))
                                             (rule "replace_known_left" (formula "64") (term "0,0,0,0,0") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "64"))
                                             (rule "replace_known_left" (formula "63") (term "0,0,0,0") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "63"))
                                             (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "63"))
                                             (rule "hideAuxiliaryEq" (formula "63"))
                                             (rule "replace_known_left" (formula "62") (term "0,0,0") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "62"))
                                             (rule "hideAuxiliaryEq" (formula "62"))
                                             (rule "eqSymm" (formula "62"))
                                             (rule "replace_known_left" (formula "60") (term "0,0,0,0,0,0") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "true_left" (formula "60"))
                                             (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "61"))
                                             (rule "applyEq" (formula "54") (term "0,0,0,0,0,0") (ifseqformula "61"))
                                             (rule "applyEq" (formula "52") (term "1") (ifseqformula "61"))
                                             (rule "applyEq" (formula "54") (term "0,1,1,0") (ifseqformula "61"))
                                             (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "61"))
                                             (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "61"))
                                             (rule "ifthenelse_split" (formula "51") (term "0"))
                                             (branch "result_48.<created> = TRUE TRUE"
                                                (rule "applyEqReverse" (formula "53") (term "1,0") (ifseqformula "52"))
                                                (rule "hideAuxiliaryEq" (formula "52"))
                                                (rule "replace_known_left" (formula "52") (term "0,0,0") (ifseqformula "51"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "51"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "50"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "49"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "replace_known_left" (formula "47") (term "0,0,0,0,0") (ifseqformula "48"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "true_left" (formula "47"))
                                                (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "6") (term "0"))
                                                (rule "distr_forallAnd" (formula "6"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "commute_or_2" (formula "7") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "7") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "7") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "shift_paren_or" (formula "16") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "eqSymm" (formula "16") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "16") (term "1,0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "16") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "16") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "true_left" (formula "16"))
                                                (rule "commute_or_2" (formula "17") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "eqSymm" (formula "17") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "17") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "17") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "17") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "commute_or_2" (formula "4") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "5") (term "0,0,0,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "14") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "14") (term "0"))
                                                (rule "distr_forallAnd" (formula "14"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0"))
                                                (rule "distr_forallAnd" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "commute_and_2" (formula "4") (term "1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "16") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "16") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "16") (term "0"))
                                                (rule "distr_forallAnd" (formula "16"))
                                                (rule "andLeft" (formula "16"))
                                                (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0"))
                                                (rule "distr_forallAnd" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "cut_direct" (formula "28") (term "0"))
                                                (branch "CUT: result_45.<created> = TRUE TRUE"
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "cut_direct" (formula "41") (term "0,0,0,0"))
                                                   (branch "CUT: result_47.<created> = TRUE TRUE"
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "cut_direct" (formula "31") (term "0,0"))
                                                      (branch "CUT: result_46.<created> = TRUE TRUE"
                                                          (builtin "One Step Simplification" (formula "32"))
                                                         (rule "true_left" (formula "32"))
                                                         (rule "commute_or_2" (formula "16") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "eqSymm" (formula "16") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0"))
                                                         (rule "distr_forallAnd" (formula "6"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "15") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0"))
                                                         (rule "distr_forallAnd" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "shift_paren_or" (formula "7") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "eqSymm" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "eqSymm" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "shift_paren_or" (formula "5") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "eqSymm" (formula "5") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0"))
                                                         (rule "distr_forallAnd" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                                         (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "47") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "47") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "inEqSimp_contradInEq1" (formula "47") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "47") (term "0"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "closeFalse" (formula "47"))
                                                      )
                                                      (branch "CUT: result_46.<created> = TRUE FALSE"
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "commute_or_2" (formula "16") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "eqSymm" (formula "16") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0"))
                                                         (rule "distr_forallAnd" (formula "6"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "15") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0"))
                                                         (rule "distr_forallAnd" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "shift_paren_or" (formula "7") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "eqSymm" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "eqSymm" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "shift_paren_or" (formula "5") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "eqSymm" (formula "5") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0"))
                                                         (rule "distr_forallAnd" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                                         (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "47") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "47") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "47"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                   )
                                                   (branch "CUT: result_47.<created> = TRUE FALSE"
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "cut_direct" (formula "31") (term "0,0"))
                                                      (branch "CUT: result_46.<created> = TRUE TRUE"
                                                          (builtin "One Step Simplification" (formula "32"))
                                                         (rule "true_left" (formula "32"))
                                                         (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0"))
                                                         (rule "distr_forallAnd" (formula "6"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "commute_or_2" (formula "16") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "eqSymm" (formula "16") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "15") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0"))
                                                         (rule "distr_forallAnd" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "shift_paren_or" (formula "7") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "eqSymm" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "eqSymm" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "shift_paren_or" (formula "5") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "eqSymm" (formula "5") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0"))
                                                         (rule "distr_forallAnd" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "47") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "47"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0"))
                                                         (rule "add_zero_right" (formula "3") (term "0"))
                                                         (rule "leq_literals" (formula "3"))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                      (branch "CUT: result_46.<created> = TRUE FALSE"
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "commute_or_2" (formula "16") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "eqSymm" (formula "16") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0"))
                                                         (rule "distr_forallAnd" (formula "6"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "15") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0"))
                                                         (rule "distr_forallAnd" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "shift_paren_or" (formula "7") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "eqSymm" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "eqSymm" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "shift_paren_or" (formula "5") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "eqSymm" (formula "5") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0"))
                                                         (rule "distr_forallAnd" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                                         (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "47") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "47") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "47"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                   )
                                                )
                                                (branch "CUT: result_45.<created> = TRUE FALSE"
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "cut_direct" (formula "41") (term "0,0,0,0"))
                                                   (branch "CUT: result_47.<created> = TRUE TRUE"
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "cut_direct" (formula "31") (term "0,0"))
                                                      (branch "CUT: result_46.<created> = TRUE TRUE"
                                                          (builtin "One Step Simplification" (formula "32"))
                                                         (rule "true_left" (formula "32"))
                                                         (rule "commute_or_2" (formula "16") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "eqSymm" (formula "16") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0"))
                                                         (rule "distr_forallAnd" (formula "6"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "15") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0"))
                                                         (rule "distr_forallAnd" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "shift_paren_or" (formula "7") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "eqSymm" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "eqSymm" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "shift_paren_or" (formula "5") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "eqSymm" (formula "5") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0"))
                                                         (rule "distr_forallAnd" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "47") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "47"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0"))
                                                         (rule "add_literals" (formula "3") (term "0"))
                                                         (rule "leq_literals" (formula "3"))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                      (branch "CUT: result_46.<created> = TRUE FALSE"
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0"))
                                                         (rule "distr_forallAnd" (formula "6"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "commute_or_2" (formula "16") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "eqSymm" (formula "16") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "15") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0"))
                                                         (rule "distr_forallAnd" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "shift_paren_or" (formula "7") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "eqSymm" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "eqSymm" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "shift_paren_or" (formula "5") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "eqSymm" (formula "5") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0"))
                                                         (rule "distr_forallAnd" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                                         (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "47") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "47") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "47"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                   )
                                                   (branch "CUT: result_47.<created> = TRUE FALSE"
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "cut_direct" (formula "31") (term "0,0"))
                                                      (branch "CUT: result_46.<created> = TRUE TRUE"
                                                          (builtin "One Step Simplification" (formula "32"))
                                                         (rule "true_left" (formula "32"))
                                                         (rule "commute_or_2" (formula "16") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "eqSymm" (formula "16") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0"))
                                                         (rule "distr_forallAnd" (formula "6"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "15") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0"))
                                                         (rule "distr_forallAnd" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "shift_paren_or" (formula "7") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "eqSymm" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "eqSymm" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "shift_paren_or" (formula "5") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "eqSymm" (formula "5") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0"))
                                                         (rule "distr_forallAnd" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                                         (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "47") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "47") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "47"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                      (branch "CUT: result_46.<created> = TRUE FALSE"
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0"))
                                                         (rule "distr_forallAnd" (formula "6"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "commute_or_2" (formula "16") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "eqSymm" (formula "16") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "15") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0"))
                                                         (rule "distr_forallAnd" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "shift_paren_or" (formula "7") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "eqSymm" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "eqSymm" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "shift_paren_or" (formula "5") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "eqSymm" (formula "5") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0"))
                                                         (rule "distr_forallAnd" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "47") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "inEqSimp_contradInEq1" (formula "47") (ifseqformula "3"))
                                                         (rule "andLeft" (formula "47"))
                                                         (rule "inEqSimp_homoInEq1" (formula "47"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "47") (term "0"))
                                                         (rule "add_literals" (formula "47") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "47") (term "1,0"))
                                                         (rule "add_literals" (formula "47") (term "0"))
                                                         (rule "leq_literals" (formula "47"))
                                                         (rule "closeFalse" (formula "47"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "result_48.<created> = TRUE FALSE"
                                                (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "51"))
                                                (rule "hideAuxiliaryEq" (formula "51"))
                                                (rule "replace_known_right" (formula "51") (term "0,0,0") (ifseqformula "67"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "67"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "67"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "67"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "50") (term "0,0,0,0,0") (ifseqformula "67"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0"))
                                                (rule "distr_forallAnd" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "1,0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "commute_or_2" (formula "7") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "8") (term "0,0,0,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "17") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "17") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "17") (term "0"))
                                                (rule "distr_forallAnd" (formula "17"))
                                                (rule "andLeft" (formula "17"))
                                                (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0"))
                                                (rule "distr_forallAnd" (formula "11"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "commute_and_2" (formula "7") (term "1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0"))
                                                (rule "distr_forallAnd" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "cut_direct" (formula "31") (term "0"))
                                                (branch "CUT: result_45.<created> = TRUE TRUE"
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "cut_direct" (formula "44") (term "0,0,0,0"))
                                                   (branch "CUT: result_47.<created> = TRUE TRUE"
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "true_left" (formula "45"))
                                                      (rule "cut_direct" (formula "34") (term "0,0"))
                                                      (branch "CUT: result_46.<created> = TRUE TRUE"
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "eqSymm" (formula "18") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "eqSymm" (formula "18") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0"))
                                                         (rule "distr_forallAnd" (formula "8"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0"))
                                                         (rule "distr_forallAnd" (formula "12"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0"))
                                                         (rule "distr_forallAnd" (formula "12"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "10") (term "0"))
                                                         (rule "distr_forallAnd" (formula "10"))
                                                         (rule "andLeft" (formula "10"))
                                                         (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "eqSymm" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "20") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "20") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "20") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "shift_paren_or" (formula "14") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "eqSymm" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0"))
                                                         (rule "distr_forallAnd" (formula "8"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "ifthenelse_split" (formula "47") (term "0"))
                                                         (branch " result_48.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "47"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "46"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "45"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "44"))
                                                             (builtin "One Step Simplification" (formula "43"))
                                                            (rule "true_left" (formula "43"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0"))
                                                            (rule "distr_forallAnd" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "47") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "47") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "47"))
                                                            (rule "qeq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                         (branch " result_48.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                            (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "63"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "63"))
                                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "61"))
                                                             (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "2")))
                                                            (rule "true_left" (formula "44"))
                                                            (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "10") (term "0"))
                                                            (rule "distr_forallAnd" (formula "10"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "47") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "47"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "4"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                            (rule "add_literals" (formula "4") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0"))
                                                            (rule "add_zero_right" (formula "4") (term "0"))
                                                            (rule "leq_literals" (formula "4"))
                                                            (rule "closeFalse" (formula "4"))
                                                         )
                                                      )
                                                      (branch "CUT: result_46.<created> = TRUE FALSE"
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "eqSymm" (formula "18") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "eqSymm" (formula "18") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0"))
                                                         (rule "distr_forallAnd" (formula "8"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0"))
                                                         (rule "distr_forallAnd" (formula "12"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0"))
                                                         (rule "distr_forallAnd" (formula "12"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "10") (term "0"))
                                                         (rule "distr_forallAnd" (formula "10"))
                                                         (rule "andLeft" (formula "10"))
                                                         (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "eqSymm" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "20") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "20") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "20") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "shift_paren_or" (formula "14") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "eqSymm" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0"))
                                                         (rule "distr_forallAnd" (formula "8"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "ifthenelse_split" (formula "47") (term "0"))
                                                         (branch " result_48.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "47"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "46"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "45"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "44"))
                                                             (builtin "One Step Simplification" (formula "43"))
                                                            (rule "true_left" (formula "43"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0"))
                                                            (rule "distr_forallAnd" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "47") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (ifseqformula "3"))
                                                            (rule "andLeft" (formula "47"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0"))
                                                            (rule "add_literals" (formula "47") (term "0"))
                                                            (rule "leq_literals" (formula "47"))
                                                            (rule "closeFalse" (formula "47"))
                                                         )
                                                         (branch " result_48.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                            (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "63"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "63"))
                                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "replace_known_left" (formula "44") (term "1,0") (ifseqformula "2"))
                                                             (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "61")))
                                                            (rule "true_left" (formula "44"))
                                                            (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "10") (term "0"))
                                                            (rule "distr_forallAnd" (formula "10"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "47") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "47"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "4"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                            (rule "add_literals" (formula "4") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0"))
                                                            (rule "add_literals" (formula "4") (term "0"))
                                                            (rule "leq_literals" (formula "4"))
                                                            (rule "closeFalse" (formula "4"))
                                                         )
                                                      )
                                                   )
                                                   (branch "CUT: result_47.<created> = TRUE FALSE"
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "cut_direct" (formula "34") (term "0,0"))
                                                      (branch "CUT: result_46.<created> = TRUE TRUE"
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "eqSymm" (formula "18") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "eqSymm" (formula "18") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0"))
                                                         (rule "distr_forallAnd" (formula "8"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0"))
                                                         (rule "distr_forallAnd" (formula "12"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0"))
                                                         (rule "distr_forallAnd" (formula "12"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "eqSymm" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "20") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "20") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "20") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "shift_paren_or" (formula "14") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "eqSymm" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "10") (term "0"))
                                                         (rule "distr_forallAnd" (formula "10"))
                                                         (rule "andLeft" (formula "10"))
                                                         (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0"))
                                                         (rule "distr_forallAnd" (formula "8"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "ifthenelse_split" (formula "47") (term "0"))
                                                         (branch " result_48.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "47"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "46"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "45"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "44"))
                                                             (builtin "One Step Simplification" (formula "43"))
                                                            (rule "true_left" (formula "43"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0"))
                                                            (rule "distr_forallAnd" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "47") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "47"))
                                                            (rule "andLeft" (formula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "3"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0"))
                                                            (rule "add_literals" (formula "3") (term "0"))
                                                            (rule "leq_literals" (formula "3"))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                         (branch " result_48.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                            (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "63"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "63"))
                                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "replace_known_left" (formula "44") (term "1,0") (ifseqformula "2"))
                                                             (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "61")))
                                                            (rule "true_left" (formula "44"))
                                                            (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "10") (term "0"))
                                                            (rule "distr_forallAnd" (formula "10"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "47") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (ifseqformula "4"))
                                                            (rule "andLeft" (formula "47"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0"))
                                                            (rule "add_literals" (formula "47") (term "0"))
                                                            (rule "leq_literals" (formula "47"))
                                                            (rule "closeFalse" (formula "47"))
                                                         )
                                                      )
                                                      (branch "CUT: result_46.<created> = TRUE FALSE"
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "eqSymm" (formula "18") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "eqSymm" (formula "18") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0"))
                                                         (rule "distr_forallAnd" (formula "8"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0"))
                                                         (rule "distr_forallAnd" (formula "12"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0"))
                                                         (rule "distr_forallAnd" (formula "12"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "eqSymm" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "20") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "20") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "20") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "shift_paren_or" (formula "14") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "eqSymm" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "10") (term "0"))
                                                         (rule "distr_forallAnd" (formula "10"))
                                                         (rule "andLeft" (formula "10"))
                                                         (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0"))
                                                         (rule "distr_forallAnd" (formula "8"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "ifthenelse_split" (formula "47") (term "0"))
                                                         (branch " result_48.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "47"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "46"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "45"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "44"))
                                                             (builtin "One Step Simplification" (formula "43"))
                                                            (rule "true_left" (formula "43"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0"))
                                                            (rule "distr_forallAnd" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "47") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "47") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "47") (term "0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "closeFalse" (formula "47"))
                                                         )
                                                         (branch " result_48.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                            (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "63"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "2"))
                                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "2"))
                                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "61"))
                                                             (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "2")))
                                                            (rule "true_left" (formula "44"))
                                                            (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "10") (term "0"))
                                                            (rule "distr_forallAnd" (formula "10"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "47") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (ifseqformula "4"))
                                                            (rule "andLeft" (formula "47"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0"))
                                                            (rule "add_zero_right" (formula "47") (term "0"))
                                                            (rule "leq_literals" (formula "47"))
                                                            (rule "closeFalse" (formula "47"))
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "CUT: result_45.<created> = TRUE FALSE"
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "cut_direct" (formula "44") (term "0,0,0,0"))
                                                   (branch "CUT: result_47.<created> = TRUE TRUE"
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "true_left" (formula "45"))
                                                      (rule "cut_direct" (formula "34") (term "0,0"))
                                                      (branch "CUT: result_46.<created> = TRUE TRUE"
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "eqSymm" (formula "18") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "eqSymm" (formula "18") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0"))
                                                         (rule "distr_forallAnd" (formula "8"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0"))
                                                         (rule "distr_forallAnd" (formula "12"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0"))
                                                         (rule "distr_forallAnd" (formula "12"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "10") (term "0"))
                                                         (rule "distr_forallAnd" (formula "10"))
                                                         (rule "andLeft" (formula "10"))
                                                         (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "eqSymm" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "20") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "20") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "20") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "shift_paren_or" (formula "14") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "eqSymm" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0"))
                                                         (rule "distr_forallAnd" (formula "8"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "ifthenelse_split" (formula "47") (term "0"))
                                                         (branch " result_48.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "47"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "46"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "45"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "44"))
                                                             (builtin "One Step Simplification" (formula "43"))
                                                            (rule "true_left" (formula "43"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0"))
                                                            (rule "distr_forallAnd" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "47") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (ifseqformula "3"))
                                                            (rule "andLeft" (formula "47"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0"))
                                                            (rule "add_zero_right" (formula "47") (term "0"))
                                                            (rule "leq_literals" (formula "47"))
                                                            (rule "closeFalse" (formula "47"))
                                                         )
                                                         (branch " result_48.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                            (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "63"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "63"))
                                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "2"))
                                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "61"))
                                                             (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "2")))
                                                            (rule "true_left" (formula "44"))
                                                            (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "10") (term "0"))
                                                            (rule "distr_forallAnd" (formula "10"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "47") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (ifseqformula "4"))
                                                            (rule "andLeft" (formula "47"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0"))
                                                            (rule "add_zero_right" (formula "47") (term "0"))
                                                            (rule "leq_literals" (formula "47"))
                                                            (rule "closeFalse" (formula "47"))
                                                         )
                                                      )
                                                      (branch "CUT: result_46.<created> = TRUE FALSE"
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "eqSymm" (formula "18") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "eqSymm" (formula "18") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0"))
                                                         (rule "distr_forallAnd" (formula "8"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0"))
                                                         (rule "distr_forallAnd" (formula "12"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0"))
                                                         (rule "distr_forallAnd" (formula "12"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "10") (term "0"))
                                                         (rule "distr_forallAnd" (formula "10"))
                                                         (rule "andLeft" (formula "10"))
                                                         (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "eqSymm" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "20") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "20") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "20") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "shift_paren_or" (formula "14") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "eqSymm" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0"))
                                                         (rule "distr_forallAnd" (formula "8"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "ifthenelse_split" (formula "47") (term "0"))
                                                         (branch " result_48.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "47"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "46"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "45"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "44"))
                                                             (builtin "One Step Simplification" (formula "43"))
                                                            (rule "true_left" (formula "43"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0"))
                                                            (rule "distr_forallAnd" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "47") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (ifseqformula "3"))
                                                            (rule "andLeft" (formula "47"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0"))
                                                            (rule "add_literals" (formula "47") (term "0"))
                                                            (rule "leq_literals" (formula "47"))
                                                            (rule "closeFalse" (formula "47"))
                                                         )
                                                         (branch " result_48.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                            (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "63"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "63"))
                                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "2"))
                                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "61"))
                                                             (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "2")))
                                                            (rule "true_left" (formula "44"))
                                                            (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "10") (term "0"))
                                                            (rule "distr_forallAnd" (formula "10"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "47") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "47"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "4"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                            (rule "add_literals" (formula "4") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0"))
                                                            (rule "add_literals" (formula "4") (term "0"))
                                                            (rule "leq_literals" (formula "4"))
                                                            (rule "closeFalse" (formula "4"))
                                                         )
                                                      )
                                                   )
                                                   (branch "CUT: result_47.<created> = TRUE FALSE"
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "cut_direct" (formula "34") (term "0,0"))
                                                      (branch "CUT: result_46.<created> = TRUE TRUE"
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "eqSymm" (formula "18") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "eqSymm" (formula "18") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0"))
                                                         (rule "distr_forallAnd" (formula "8"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0"))
                                                         (rule "distr_forallAnd" (formula "12"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0"))
                                                         (rule "distr_forallAnd" (formula "12"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "eqSymm" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "20") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "20") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "20") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "shift_paren_or" (formula "14") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "eqSymm" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "10") (term "0"))
                                                         (rule "distr_forallAnd" (formula "10"))
                                                         (rule "andLeft" (formula "10"))
                                                         (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0"))
                                                         (rule "distr_forallAnd" (formula "8"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "ifthenelse_split" (formula "47") (term "0"))
                                                         (branch " result_48.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "47"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "46"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "45"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "44"))
                                                             (builtin "One Step Simplification" (formula "43"))
                                                            (rule "true_left" (formula "43"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0"))
                                                            (rule "distr_forallAnd" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "47") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (ifseqformula "3"))
                                                            (rule "andLeft" (formula "47"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0"))
                                                            (rule "add_literals" (formula "47") (term "0"))
                                                            (rule "leq_literals" (formula "47"))
                                                            (rule "closeFalse" (formula "47"))
                                                         )
                                                         (branch " result_48.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                            (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "63"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "2"))
                                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "2"))
                                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "61"))
                                                             (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "2")))
                                                            (rule "true_left" (formula "44"))
                                                            (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "10") (term "0"))
                                                            (rule "distr_forallAnd" (formula "10"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "47") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (ifseqformula "4"))
                                                            (rule "andLeft" (formula "47"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0"))
                                                            (rule "add_literals" (formula "47") (term "0"))
                                                            (rule "leq_literals" (formula "47"))
                                                            (rule "closeFalse" (formula "47"))
                                                         )
                                                      )
                                                      (branch "CUT: result_46.<created> = TRUE FALSE"
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "eqSymm" (formula "18") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "eqSymm" (formula "18") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "18") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0"))
                                                         (rule "distr_forallAnd" (formula "8"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0"))
                                                         (rule "distr_forallAnd" (formula "12"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0"))
                                                         (rule "distr_forallAnd" (formula "12"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "eqSymm" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "20") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "20") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "20") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "shift_paren_or" (formula "14") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "eqSymm" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "10") (term "0"))
                                                         (rule "distr_forallAnd" (formula "10"))
                                                         (rule "andLeft" (formula "10"))
                                                         (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0"))
                                                         (rule "distr_forallAnd" (formula "8"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0"))
                                                         (rule "distr_forallAnd" (formula "12"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "ifthenelse_split" (formula "48") (term "0"))
                                                         (branch " result_48.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "48"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "47"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "46"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "45"))
                                                             (builtin "One Step Simplification" (formula "44"))
                                                            (rule "true_left" (formula "44"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "47") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "47"))
                                                            (rule "andLeft" (formula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "3"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0"))
                                                            (rule "add_zero_right" (formula "3") (term "0"))
                                                            (rule "leq_literals" (formula "3"))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                         (branch " result_48.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                            (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "2"))
                                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "2")))
                                                            (rule "true_left" (formula "45"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "47") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "47") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "47"))
                                                            (rule "qeq_literals" (formula "3") (term "0"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "result_49.<created> = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "61"))
                                             (rule "hideAuxiliaryEq" (formula "61"))
                                             (rule "replace_known_right" (formula "64") (term "0,0,0,0,0,0") (ifseqformula "72"))
                                              (builtin "One Step Simplification" (formula "64"))
                                             (rule "replace_known_right" (formula "63") (term "0,0,0,0,0") (ifseqformula "72"))
                                              (builtin "One Step Simplification" (formula "63"))
                                             (rule "replace_known_right" (formula "62") (term "0,0,0,0") (ifseqformula "72"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "replace_known_right" (formula "61") (term "0,0,0") (ifseqformula "72"))
                                              (builtin "One Step Simplification" (formula "61"))
                                             (rule "replace_known_right" (formula "65") (term "0,0,0,0,0,0,0") (ifseqformula "72"))
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "replace_known_right" (formula "60") (term "0,0,0,0,0,0") (ifseqformula "72"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "ifthenelse_split" (formula "51") (term "0"))
                                             (branch "result_48.<created> = TRUE TRUE"
                                                (rule "applyEqReverse" (formula "53") (term "1,0") (ifseqformula "52"))
                                                (rule "hideAuxiliaryEq" (formula "52"))
                                                (rule "replace_known_left" (formula "52") (term "0,0,0") (ifseqformula "51"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "eqSymm" (formula "52"))
                                                (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "51"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "50"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "49"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "replace_known_left" (formula "47") (term "0,0,0,0,0") (ifseqformula "48"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "true_left" (formula "47"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "48"))
                                                (rule "applyEq" (formula "50") (term "0,1,1,0") (ifseqformula "48"))
                                                (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "48"))
                                                (rule "applyEq" (formula "50") (term "0,0,0,0,0,0") (ifseqformula "48"))
                                                (rule "applyEq" (formula "61") (term "1") (ifseqformula "48"))
                                                (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "48"))
                                                (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "6") (term "0"))
                                                (rule "distr_forallAnd" (formula "6"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "commute_or_2" (formula "7") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "7") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "7") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "shift_paren_or" (formula "16") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "eqSymm" (formula "16") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "16") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "16") (term "1,0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "16") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "true_left" (formula "16"))
                                                (rule "commute_or_2" (formula "17") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "eqSymm" (formula "17") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "17") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "17") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "17") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "commute_or_2" (formula "4") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "5") (term "0,0,0,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "14") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "14") (term "0"))
                                                (rule "distr_forallAnd" (formula "14"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0"))
                                                (rule "distr_forallAnd" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "commute_and_2" (formula "4") (term "1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "16") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "16") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "16") (term "0"))
                                                (rule "distr_forallAnd" (formula "16"))
                                                (rule "andLeft" (formula "16"))
                                                (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0"))
                                                (rule "distr_forallAnd" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "cut_direct" (formula "31") (term "0,0"))
                                                (branch "CUT: result_46.<created> = TRUE TRUE"
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "cut_direct" (formula "41") (term "0,0,0,0"))
                                                   (branch "CUT: result_47.<created> = TRUE TRUE"
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "cut_direct" (formula "28") (term "0"))
                                                      (branch "CUT: result_45.<created> = TRUE TRUE"
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "commute_or_2" (formula "16") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "eqSymm" (formula "16") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0"))
                                                         (rule "distr_forallAnd" (formula "6"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "15") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0"))
                                                         (rule "distr_forallAnd" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "shift_paren_or" (formula "7") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "eqSymm" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "eqSymm" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "shift_paren_or" (formula "5") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "eqSymm" (formula "5") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "ifthenelse_split" (formula "52") (term "0"))
                                                         (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                            (rule "applyEqReverse" (formula "54") (term "1,0") (ifseqformula "53"))
                                                            (rule "hideAuxiliaryEq" (formula "53"))
                                                            (rule "replace_known_left" (formula "53") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "applyEqReverse" (formula "54") (term "1,0") (ifseqformula "53"))
                                                            (rule "hideAuxiliaryEq" (formula "53"))
                                                            (rule "replace_known_left" (formula "53") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "applyEqReverse" (formula "54") (term "1,0") (ifseqformula "53"))
                                                            (rule "hideAuxiliaryEq" (formula "53"))
                                                            (rule "replace_known_left" (formula "54") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_left" (formula "53") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "53"))
                                                            (rule "hideAuxiliaryEq" (formula "53"))
                                                            (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "true_left" (formula "51"))
                                                            (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "1,0,0,0,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0"))
                                                            (rule "distr_forallAnd" (formula "5"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0"))
                                                            (rule "distr_forallAnd" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0"))
                                                            (rule "distr_forallAnd" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "47") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "47"))
                                                            (rule "andLeft" (formula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "3"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0"))
                                                            (rule "add_literals" (formula "3") (term "0"))
                                                            (rule "leq_literals" (formula "3"))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                         (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                            (rule "applyEqReverse" (formula "53") (term "1,0") (ifseqformula "52"))
                                                            (rule "hideAuxiliaryEq" (formula "52"))
                                                            (rule "replace_known_right" (formula "52") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "replace_known_right" (formula "53") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "replace_known_right" (formula "54") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_right" (formula "55") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "55"))
                                                            (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "1,0,0,0,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0"))
                                                            (rule "distr_forallAnd" (formula "5"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0"))
                                                            (rule "distr_forallAnd" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0"))
                                                            (rule "distr_forallAnd" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "47") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "47") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "47"))
                                                            (rule "qeq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                      )
                                                      (branch "CUT: result_45.<created> = TRUE FALSE"
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "commute_or_2" (formula "16") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "eqSymm" (formula "16") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0"))
                                                         (rule "distr_forallAnd" (formula "6"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "15") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0"))
                                                         (rule "distr_forallAnd" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "shift_paren_or" (formula "7") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "eqSymm" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "eqSymm" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "shift_paren_or" (formula "5") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "eqSymm" (formula "5") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "ifthenelse_split" (formula "52") (term "0"))
                                                         (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                            (rule "applyEqReverse" (formula "54") (term "1,0") (ifseqformula "53"))
                                                            (rule "hideAuxiliaryEq" (formula "53"))
                                                            (rule "replace_known_left" (formula "54") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "applyEqReverse" (formula "55") (term "1,0") (ifseqformula "54"))
                                                            (rule "hideAuxiliaryEq" (formula "54"))
                                                            (rule "replace_known_left" (formula "54") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "applyEqReverse" (formula "55") (term "1,0") (ifseqformula "54"))
                                                            (rule "hideAuxiliaryEq" (formula "54"))
                                                            (rule "replace_known_left" (formula "54") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "eqSymm" (formula "54"))
                                                            (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "54"))
                                                            (rule "hideAuxiliaryEq" (formula "54"))
                                                            (rule "replace_known_left" (formula "53") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "true_left" (formula "51"))
                                                            (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "1,0,0,0,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0"))
                                                            (rule "distr_forallAnd" (formula "5"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0"))
                                                            (rule "distr_forallAnd" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0"))
                                                            (rule "distr_forallAnd" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "47") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (ifseqformula "3"))
                                                            (rule "andLeft" (formula "47"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0"))
                                                            (rule "add_zero_right" (formula "47") (term "0"))
                                                            (rule "leq_literals" (formula "47"))
                                                            (rule "closeFalse" (formula "47"))
                                                         )
                                                         (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                            (rule "applyEqReverse" (formula "53") (term "1,0") (ifseqformula "52"))
                                                            (rule "hideAuxiliaryEq" (formula "52"))
                                                            (rule "replace_known_right" (formula "52") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "replace_known_right" (formula "53") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "replace_known_right" (formula "55") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "55"))
                                                            (rule "replace_known_right" (formula "54") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "1,0,0,0,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0"))
                                                            (rule "distr_forallAnd" (formula "5"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0"))
                                                            (rule "distr_forallAnd" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0"))
                                                            (rule "distr_forallAnd" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "47") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "47"))
                                                            (rule "andLeft" (formula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "3"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0"))
                                                            (rule "add_zero_right" (formula "3") (term "0"))
                                                            (rule "leq_literals" (formula "3"))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                      )
                                                   )
                                                   (branch "CUT: result_47.<created> = TRUE FALSE"
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "cut_direct" (formula "28") (term "0"))
                                                      (branch "CUT: result_45.<created> = TRUE TRUE"
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0"))
                                                         (rule "distr_forallAnd" (formula "6"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "commute_or_2" (formula "16") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "eqSymm" (formula "16") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "15") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0"))
                                                         (rule "distr_forallAnd" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "shift_paren_or" (formula "7") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "eqSymm" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "eqSymm" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "shift_paren_or" (formula "5") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "eqSymm" (formula "5") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "ifthenelse_split" (formula "52") (term "0"))
                                                         (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                            (rule "applyEqReverse" (formula "54") (term "1,0") (ifseqformula "53"))
                                                            (rule "hideAuxiliaryEq" (formula "53"))
                                                            (rule "replace_known_left" (formula "55") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "55"))
                                                            (rule "applyEqReverse" (formula "56") (term "1,0") (ifseqformula "55"))
                                                            (rule "hideAuxiliaryEq" (formula "55"))
                                                            (rule "replace_known_left" (formula "55") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "55"))
                                                            (rule "eqSymm" (formula "55"))
                                                            (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "55"))
                                                            (rule "hideAuxiliaryEq" (formula "55"))
                                                            (rule "replace_known_left" (formula "54") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_left" (formula "53") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "53"))
                                                            (rule "hideAuxiliaryEq" (formula "53"))
                                                            (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "true_left" (formula "51"))
                                                            (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "1,0,0,0,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0"))
                                                            (rule "distr_forallAnd" (formula "5"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0"))
                                                            (rule "distr_forallAnd" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0"))
                                                            (rule "distr_forallAnd" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "8") (term "0"))
                                                            (rule "distr_forallAnd" (formula "8"))
                                                            (rule "andLeft" (formula "8"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "47") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "47") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "47"))
                                                            (rule "qeq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                         (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                            (rule "applyEqReverse" (formula "53") (term "1,0") (ifseqformula "52"))
                                                            (rule "hideAuxiliaryEq" (formula "52"))
                                                            (rule "replace_known_right" (formula "54") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_right" (formula "55") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "55"))
                                                            (rule "replace_known_right" (formula "52") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "replace_known_right" (formula "53") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "1,0,0,0,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0"))
                                                            (rule "distr_forallAnd" (formula "5"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0"))
                                                            (rule "distr_forallAnd" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0"))
                                                            (rule "distr_forallAnd" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "8") (term "0"))
                                                            (rule "distr_forallAnd" (formula "8"))
                                                            (rule "andLeft" (formula "8"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "47") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "47") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "47") (term "0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "closeFalse" (formula "47"))
                                                         )
                                                      )
                                                      (branch "CUT: result_45.<created> = TRUE FALSE"
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0"))
                                                         (rule "distr_forallAnd" (formula "6"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "commute_or_2" (formula "16") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "eqSymm" (formula "16") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "15") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0"))
                                                         (rule "distr_forallAnd" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "shift_paren_or" (formula "7") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "eqSymm" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "eqSymm" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "shift_paren_or" (formula "5") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "eqSymm" (formula "5") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "ifthenelse_split" (formula "52") (term "0"))
                                                         (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                            (rule "applyEqReverse" (formula "54") (term "1,0") (ifseqformula "53"))
                                                            (rule "hideAuxiliaryEq" (formula "53"))
                                                            (rule "replace_known_left" (formula "53") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "applyEqReverse" (formula "54") (term "1,0") (ifseqformula "53"))
                                                            (rule "hideAuxiliaryEq" (formula "53"))
                                                            (rule "replace_known_left" (formula "53") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "applyEqReverse" (formula "54") (term "1,0") (ifseqformula "53"))
                                                            (rule "hideAuxiliaryEq" (formula "53"))
                                                            (rule "replace_known_left" (formula "54") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "eqSymm" (formula "54"))
                                                            (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "54"))
                                                            (rule "hideAuxiliaryEq" (formula "54"))
                                                            (rule "replace_known_left" (formula "53") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "true_left" (formula "51"))
                                                            (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "1,0,0,0,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0"))
                                                            (rule "distr_forallAnd" (formula "5"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0"))
                                                            (rule "distr_forallAnd" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0"))
                                                            (rule "distr_forallAnd" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "8") (term "0"))
                                                            (rule "distr_forallAnd" (formula "8"))
                                                            (rule "andLeft" (formula "8"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "47") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (ifseqformula "3"))
                                                            (rule "andLeft" (formula "47"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0"))
                                                            (rule "add_literals" (formula "47") (term "0"))
                                                            (rule "leq_literals" (formula "47"))
                                                            (rule "closeFalse" (formula "47"))
                                                         )
                                                         (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                            (rule "applyEqReverse" (formula "53") (term "1,0") (ifseqformula "52"))
                                                            (rule "hideAuxiliaryEq" (formula "52"))
                                                            (rule "replace_known_right" (formula "54") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_right" (formula "52") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "replace_known_right" (formula "55") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "55"))
                                                            (rule "replace_known_right" (formula "53") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "1,0,0,0,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0"))
                                                            (rule "distr_forallAnd" (formula "5"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0"))
                                                            (rule "distr_forallAnd" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0"))
                                                            (rule "distr_forallAnd" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "8") (term "0"))
                                                            (rule "distr_forallAnd" (formula "8"))
                                                            (rule "andLeft" (formula "8"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "47") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (ifseqformula "3"))
                                                            (rule "andLeft" (formula "47"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0"))
                                                            (rule "add_literals" (formula "47") (term "0"))
                                                            (rule "leq_literals" (formula "47"))
                                                            (rule "closeFalse" (formula "47"))
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "CUT: result_46.<created> = TRUE FALSE"
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "cut_direct" (formula "28") (term "0"))
                                                   (branch "CUT: result_45.<created> = TRUE TRUE"
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "cut_direct" (formula "41") (term "0,0,0,0"))
                                                      (branch "CUT: result_47.<created> = TRUE TRUE"
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "commute_or_2" (formula "16") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "eqSymm" (formula "16") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0"))
                                                         (rule "distr_forallAnd" (formula "6"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "15") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0"))
                                                         (rule "distr_forallAnd" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "shift_paren_or" (formula "7") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "eqSymm" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "eqSymm" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "shift_paren_or" (formula "5") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "eqSymm" (formula "5") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "ifthenelse_split" (formula "52") (term "0"))
                                                         (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                            (rule "applyEqReverse" (formula "54") (term "1,0") (ifseqformula "53"))
                                                            (rule "hideAuxiliaryEq" (formula "53"))
                                                            (rule "replace_known_left" (formula "55") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "55"))
                                                            (rule "applyEqReverse" (formula "56") (term "1,0") (ifseqformula "55"))
                                                            (rule "hideAuxiliaryEq" (formula "55"))
                                                            (rule "replace_known_left" (formula "53") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "applyEqReverse" (formula "54") (term "1,0") (ifseqformula "53"))
                                                            (rule "hideAuxiliaryEq" (formula "53"))
                                                            (rule "replace_known_left" (formula "54") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_left" (formula "53") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "53"))
                                                            (rule "hideAuxiliaryEq" (formula "53"))
                                                            (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "true_left" (formula "51"))
                                                            (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "1,0,0,0,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0"))
                                                            (rule "distr_forallAnd" (formula "5"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0"))
                                                            (rule "distr_forallAnd" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0"))
                                                            (rule "distr_forallAnd" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "47") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "47") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "47"))
                                                            (rule "qeq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                         (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                            (rule "applyEqReverse" (formula "53") (term "1,0") (ifseqformula "52"))
                                                            (rule "hideAuxiliaryEq" (formula "52"))
                                                            (rule "replace_known_right" (formula "53") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "replace_known_right" (formula "52") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "replace_known_right" (formula "54") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_right" (formula "55") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "55"))
                                                            (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "1,0,0,0,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0"))
                                                            (rule "distr_forallAnd" (formula "5"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0"))
                                                            (rule "distr_forallAnd" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0"))
                                                            (rule "distr_forallAnd" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "47") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "47"))
                                                            (rule "andLeft" (formula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "3"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0"))
                                                            (rule "add_literals" (formula "3") (term "0"))
                                                            (rule "leq_literals" (formula "3"))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                      )
                                                      (branch "CUT: result_47.<created> = TRUE FALSE"
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "commute_or_2" (formula "16") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "eqSymm" (formula "16") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0"))
                                                         (rule "distr_forallAnd" (formula "6"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "15") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0"))
                                                         (rule "distr_forallAnd" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "shift_paren_or" (formula "7") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "eqSymm" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "eqSymm" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "shift_paren_or" (formula "5") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "eqSymm" (formula "5") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "ifthenelse_split" (formula "52") (term "0"))
                                                         (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                            (rule "applyEqReverse" (formula "54") (term "1,0") (ifseqformula "53"))
                                                            (rule "hideAuxiliaryEq" (formula "53"))
                                                            (rule "replace_known_left" (formula "55") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "55"))
                                                            (rule "applyEqReverse" (formula "56") (term "1,0") (ifseqformula "55"))
                                                            (rule "hideAuxiliaryEq" (formula "55"))
                                                            (rule "replace_known_left" (formula "55") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "55"))
                                                            (rule "eqSymm" (formula "55"))
                                                            (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "55"))
                                                            (rule "hideAuxiliaryEq" (formula "55"))
                                                            (rule "replace_known_left" (formula "54") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_left" (formula "53") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "53"))
                                                            (rule "hideAuxiliaryEq" (formula "53"))
                                                            (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "true_left" (formula "51"))
                                                            (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "1,0,0,0,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0"))
                                                            (rule "distr_forallAnd" (formula "5"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0"))
                                                            (rule "distr_forallAnd" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0"))
                                                            (rule "distr_forallAnd" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "47") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "47") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "47"))
                                                            (rule "qeq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                         (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                            (rule "applyEqReverse" (formula "53") (term "1,0") (ifseqformula "52"))
                                                            (rule "hideAuxiliaryEq" (formula "52"))
                                                            (rule "replace_known_right" (formula "55") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "55"))
                                                            (rule "replace_known_right" (formula "52") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "replace_known_right" (formula "54") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_right" (formula "53") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "1,0,0,0,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0"))
                                                            (rule "distr_forallAnd" (formula "5"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0"))
                                                            (rule "distr_forallAnd" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0"))
                                                            (rule "distr_forallAnd" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "47") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (ifseqformula "3"))
                                                            (rule "andLeft" (formula "47"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0"))
                                                            (rule "add_zero_right" (formula "47") (term "0"))
                                                            (rule "leq_literals" (formula "47"))
                                                            (rule "closeFalse" (formula "47"))
                                                         )
                                                      )
                                                   )
                                                   (branch "CUT: result_45.<created> = TRUE FALSE"
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "cut_direct" (formula "41") (term "0,0,0,0"))
                                                      (branch "CUT: result_47.<created> = TRUE TRUE"
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "commute_or_2" (formula "16") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "eqSymm" (formula "16") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0"))
                                                         (rule "distr_forallAnd" (formula "6"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "15") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0"))
                                                         (rule "distr_forallAnd" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "shift_paren_or" (formula "7") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "eqSymm" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "eqSymm" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "shift_paren_or" (formula "5") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "eqSymm" (formula "5") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "ifthenelse_split" (formula "52") (term "0"))
                                                         (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                            (rule "applyEqReverse" (formula "54") (term "1,0") (ifseqformula "53"))
                                                            (rule "hideAuxiliaryEq" (formula "53"))
                                                            (rule "replace_known_left" (formula "56") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "56"))
                                                            (rule "eqSymm" (formula "56"))
                                                            (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "56"))
                                                            (rule "hideAuxiliaryEq" (formula "56"))
                                                            (rule "replace_known_left" (formula "53") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "applyEqReverse" (formula "54") (term "1,0") (ifseqformula "53"))
                                                            (rule "hideAuxiliaryEq" (formula "53"))
                                                            (rule "replace_known_left" (formula "54") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_left" (formula "53") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "53"))
                                                            (rule "hideAuxiliaryEq" (formula "53"))
                                                            (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "true_left" (formula "51"))
                                                            (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "1,0,0,0,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0"))
                                                            (rule "distr_forallAnd" (formula "5"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0"))
                                                            (rule "distr_forallAnd" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0"))
                                                            (rule "distr_forallAnd" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "47") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "47") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "47") (term "0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "closeFalse" (formula "47"))
                                                         )
                                                         (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                            (rule "applyEqReverse" (formula "53") (term "1,0") (ifseqformula "52"))
                                                            (rule "hideAuxiliaryEq" (formula "52"))
                                                            (rule "replace_known_right" (formula "54") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_right" (formula "52") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "replace_known_right" (formula "53") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "replace_known_right" (formula "55") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "55"))
                                                            (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "1,0,0,0,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0"))
                                                            (rule "distr_forallAnd" (formula "5"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0"))
                                                            (rule "distr_forallAnd" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0"))
                                                            (rule "distr_forallAnd" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "47") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "47") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "47") (term "0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "closeFalse" (formula "47"))
                                                         )
                                                      )
                                                      (branch "CUT: result_47.<created> = TRUE FALSE"
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "commute_or_2" (formula "16") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "eqSymm" (formula "16") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "6") (term "0"))
                                                         (rule "distr_forallAnd" (formula "6"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "shift_paren_or" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "15") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "4") (term "0"))
                                                         (rule "distr_forallAnd" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "shift_paren_or" (formula "7") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "eqSymm" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "eqSymm" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "shift_paren_or" (formula "5") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "eqSymm" (formula "5") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "5") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "ifthenelse_split" (formula "52") (term "0"))
                                                         (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                            (rule "applyEqReverse" (formula "54") (term "1,0") (ifseqformula "53"))
                                                            (rule "hideAuxiliaryEq" (formula "53"))
                                                            (rule "replace_known_left" (formula "54") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "applyEqReverse" (formula "55") (term "1,0") (ifseqformula "54"))
                                                            (rule "hideAuxiliaryEq" (formula "54"))
                                                            (rule "replace_known_left" (formula "55") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "55"))
                                                            (rule "eqSymm" (formula "55"))
                                                            (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "55"))
                                                            (rule "hideAuxiliaryEq" (formula "55"))
                                                            (rule "replace_known_left" (formula "54") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_left" (formula "53") (term "1,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "53"))
                                                            (rule "hideAuxiliaryEq" (formula "53"))
                                                            (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "true_left" (formula "51"))
                                                            (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "1,0,0,0,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0"))
                                                            (rule "distr_forallAnd" (formula "5"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0"))
                                                            (rule "distr_forallAnd" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0"))
                                                            (rule "distr_forallAnd" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "47") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "47") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "47") (term "0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "closeFalse" (formula "47"))
                                                         )
                                                         (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                            (rule "applyEqReverse" (formula "53") (term "1,0") (ifseqformula "52"))
                                                            (rule "hideAuxiliaryEq" (formula "52"))
                                                            (rule "replace_known_right" (formula "53") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "replace_known_right" (formula "55") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "55"))
                                                            (rule "replace_known_right" (formula "52") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "replace_known_right" (formula "54") (term "1,0,0") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "62"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "shift_paren_or" (formula "8") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "1,0,0,0,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,0,1,0,0,0"))
                                                            (rule "castedGetAny" (formula "8") (term "0,1,1,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "5") (term "0"))
                                                            (rule "distr_forallAnd" (formula "5"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "4") (term "0"))
                                                            (rule "distr_forallAnd" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                            (rule "distr_forallAnd" (formula "9") (term "0"))
                                                            (rule "distr_forallAnd" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "47") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (ifseqformula "3"))
                                                            (rule "andLeft" (formula "47"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0"))
                                                            (rule "add_literals" (formula "47") (term "0"))
                                                            (rule "leq_literals" (formula "47"))
                                                            (rule "closeFalse" (formula "47"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "result_48.<created> = TRUE FALSE"
                                                (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "51"))
                                                (rule "hideAuxiliaryEq" (formula "51"))
                                                (rule "replace_known_right" (formula "51") (term "0,0,0") (ifseqformula "71"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "71"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "71"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "71"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "50") (term "0,0,0,0,0") (ifseqformula "71"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0"))
                                                (rule "distr_forallAnd" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "1,0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "commute_or_2" (formula "7") (term "0,0,0,0"))
                                                (rule "allLeft" (formula "49") (inst "t=i_0"))
                                                (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "5"))
                                                (rule "qeq_literals" (formula "49") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "49"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "inEqSimp_homoInEq1" (formula "6"))
                                                (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                (rule "add_literals" (formula "6") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "6") (term "1,0"))
                                                (rule "add_literals" (formula "6") (term "0"))
                                                (rule "leq_literals" (formula "6"))
                                                (rule "closeFalse" (formula "6"))
                                             )
                                          )
                                       )
                                       (branch " result_48.<created> = TRUE ∨ result_48.<created>@anon_heap_withDelimiter«anonHeapFunction» = TRUE ∨ result_48.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                          (rule "replaceKnownSelect_taclet00000000_21" (formula "3") (term "0,1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00000000_22" (formula "3") (term "0,1,1"))
                                          (rule "notRight" (formula "106"))
                                          (rule "orRight" (formula "106"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "orRight" (formula "107"))
                                          (rule "replace_known_right" (formula "57") (term "1,0,0,0") (ifseqformula "108"))
                                           (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "107")) (ifInst ""  (formula "109")))
                                          (rule "applyEqReverse" (formula "58") (term "1,0") (ifseqformula "57"))
                                          (rule "hideAuxiliaryEq" (formula "57"))
                                          (rule "replace_known_right" (formula "55") (term "0,0") (ifseqformula "106"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "applyEqReverse" (formula "56") (term "1,0") (ifseqformula "55"))
                                          (rule "hideAuxiliaryEq" (formula "55"))
                                          (rule "replace_known_right" (formula "56") (term "0,0,0,0,0") (ifseqformula "105"))
                                           (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "106")) (ifInst ""  (formula "107")))
                                          (rule "replace_known_right" (formula "57") (term "1,0,0,0") (ifseqformula "106"))
                                           (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "105")) (ifInst ""  (formula "107")))
                                          (rule "replace_known_right" (formula "55") (term "0,0,0") (ifseqformula "105"))
                                           (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "107")))
                                          (rule "hideAuxiliaryEq" (formula "55"))
                                          (rule "replace_known_right" (formula "2") (term "1,0") (ifseqformula "105"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "104")) (ifInst ""  (formula "106")))
                                          (rule "replace_known_left" (formula "55") (term "0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "applyEqReverse" (formula "56") (term "1,0") (ifseqformula "55"))
                                          (rule "hideAuxiliaryEq" (formula "55"))
                                          (rule "replace_known_left" (formula "55") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "eqSymm" (formula "55"))
                                          (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "103"))
                                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")) (ifInst ""  (formula "104")) (ifInst ""  (formula "105")))
                                          (rule "true_left" (formula "3"))
                                          (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "104"))
                                           (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "102")) (ifInst ""  (formula "2")) (ifInst ""  (formula "103")))
                                          (rule "true_left" (formula "53"))
                                          (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "55") (term "0,0,1,0,0,0,0,0") (ifseqformula "53"))
                                          (rule "applyEq" (formula "4") (term "0,0,1,0") (ifseqformula "53"))
                                          (rule "applyEq" (formula "55") (term "0,0,0,1,0") (ifseqformula "53"))
                                          (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "53"))
                                          (rule "applyEq" (formula "67") (term "1") (ifseqformula "53"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "nnf_imp2or" (formula "25") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "nnf_imp2or" (formula "26") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "23") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "21") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "20") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "5") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "14") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "6") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "7") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "8") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "9") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "11") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "13") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "12") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "22") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "24") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "10") (term "0,0,0"))
                                          (rule "nnf_imp2or" (formula "55") (term "0"))
                                          (rule "nnf_notAnd" (formula "55") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "55") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "55") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "55") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "55") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "55") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "55") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "55") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0"))
                                          (rule "mul_literals" (formula "55") (term "1,1,0,0"))
                                          (rule "nnf_imp2or" (formula "26") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "26") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "nnf_notAnd" (formula "23") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "nnf_notAnd" (formula "21") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "nnf_imp2or" (formula "20") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "20") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "nnf_notAnd" (formula "5") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "nnf_imp2or" (formula "14") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "14") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "nnf_notAnd" (formula "6") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "nnf_imp2or" (formula "7") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "7") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "nnf_imp2or" (formula "8") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "8") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "nnf_imp2or" (formula "11") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "11") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "nnf_imp2or" (formula "13") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "13") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "nnf_notAnd" (formula "12") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "nnf_notAnd" (formula "22") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "nnf_imp2or" (formula "24") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "24") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "nnf_imp2or" (formula "10") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "10") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "nnf_imp2or" (formula "23") (term "1,0,0,0"))
                                          (rule "nnf_imp2or" (formula "21") (term "1,0,0,0"))
                                          (rule "nnf_imp2or" (formula "5") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "26") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "nnf_notOr" (formula "23") (term "1,0,0,0,0"))
                                          (rule "nnf_imp2or" (formula "6") (term "1,0,0,0"))
                                          (rule "nnf_notOr" (formula "21") (term "1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "20") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "20") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "nnf_notOr" (formula "5") (term "0,0,0,0,0"))
                                          (rule "nnf_imp2or" (formula "9") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "14") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "nnf_notOr" (formula "6") (term "1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "7") (term "0,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "7") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "nnf_imp2or" (formula "12") (term "1,0,0,0"))
                                          (rule "nnf_notOr" (formula "8") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "8") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "nnf_imp2or" (formula "22") (term "1,0,0,0"))
                                          (rule "nnf_notOr" (formula "9") (term "1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "11") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "11") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "nnf_notAnd" (formula "13") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "nnf_notOr" (formula "12") (term "1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "22") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "24") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "nnf_notAnd" (formula "10") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "nnf_notAnd" (formula "23") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "nnf_notAnd" (formula "21") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "nnf_notAnd" (formula "5") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "nnf_notOr" (formula "26") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "6") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "nnf_notAnd" (formula "9") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "nnf_notOr" (formula "14") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "12") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "nnf_notOr" (formula "20") (term "0,1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "22") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "nnf_notOr" (formula "7") (term "0,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "13") (term "1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "24") (term "1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "10") (term "1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "11") (term "0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "5") (term "0,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "9") (term "0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "22") (term "0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "13") (term "0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "20") (term "0,0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "7") (term "0,0,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "11") (term "0,0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "5") (term "1,0,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "9") (term "0,0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "13") (term "0,0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "7") (term "0,0,0,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "11") (term "0,0,0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "5") (term "0,1,0,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "9") (term "0,0,0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "13") (term "0,0,0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "7") (term "1,0,0,0,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "11") (term "0,0,0,0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "5") (term "0,0,1,0,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "9") (term "0,0,0,0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "7") (term "0,1,0,0,0,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "5") (term "0,0,0,1,0,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "9") (term "0,0,0,0,0,1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "7") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "5") (term "0,0,0,0,1,0,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "5") (term "0,0,0,0,0,1,0,0,0,0,0,0"))
                                          (rule "commute_or_2" (formula "55") (term "0"))
                                          (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "26") (term "1,0,0,0"))
                                          (rule "ifthenelse_split" (formula "62") (term "0"))
                                          (branch "result_49.<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                             (rule "hideAuxiliaryEq" (formula "63"))
                                             (rule "replace_known_left" (formula "65") (term "0,0,0,0,0") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "65"))
                                             (rule "hideAuxiliaryEq" (formula "65"))
                                             (rule "replace_known_left" (formula "65") (term "0,0,0,0,0,0") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "65"))
                                             (rule "hideAuxiliaryEq" (formula "65"))
                                             (rule "replace_known_left" (formula "63") (term "0,0,0") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "63"))
                                             (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                             (rule "hideAuxiliaryEq" (formula "63"))
                                             (rule "replace_known_left" (formula "64") (term "0,0,0,0,0,0,0") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "64"))
                                             (rule "replace_known_left" (formula "63") (term "0,0,0,0") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "63"))
                                             (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "63"))
                                             (rule "hideAuxiliaryEq" (formula "63"))
                                             (rule "eqSymm" (formula "63"))
                                             (rule "replace_known_left" (formula "61") (term "0,0,0,0,0,0") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "61"))
                                             (rule "true_left" (formula "61"))
                                             (rule "applyEq" (formula "53") (term "1") (ifseqformula "62"))
                                             (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "62"))
                                             (rule "applyEq" (formula "55") (term "0,1,0,0,0") (ifseqformula "62"))
                                             (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "62"))
                                             (rule "applyEq" (formula "55") (term "0,0,0,1,0,0") (ifseqformula "62"))
                                             (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "62"))
                                             (rule "commute_or_2" (formula "20") (term "1,0,0,0"))
                                             (rule "commute_or_2" (formula "14") (term "1,0,0,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "7") (term "1,0,0,0"))
                                             (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "6") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "11") (term "1,0,0,0"))
                                             (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "13") (term "1,0,0,0"))
                                             (rule "commute_or_2" (formula "24") (term "1,0,0,0"))
                                             (rule "commute_or_2" (formula "10") (term "1,0,0,0"))
                                             (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "9") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "5") (term "0,1,0,0,0"))
                                             (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                             (rule "commute_or" (formula "55") (term "0,0"))
                                             (rule "commute_or_2" (formula "55") (term "0"))
                                             (rule "commute_or" (formula "7") (term "0,0,0,0"))
                                             (rule "commute_or" (formula "5") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                             (rule "cnf_rightDist" (formula "14") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "8") (term "1,0,0,0,0"))
                                             (rule "commute_or_2" (formula "13") (term "0,0,0"))
                                             (rule "cnf_rightDist" (formula "24") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "cnf_rightDist" (formula "10") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "7") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "5") (term "0,0,0"))
                                             (rule "commute_and" (formula "8") (term "1,0,0,0"))
                                             (rule "shift_paren_or" (formula "14") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "eqSymm" (formula "14") (term "1,1,0,0,0"))
                                             (rule "castedGetAny" (formula "14") (term "0,0,1,0,0,0"))
                                             (rule "castedGetAny" (formula "14") (term "0,1,0,0,0,0"))
                                             (rule "castedGetAny" (formula "14") (term "1,0,0,0,0,0,0,0"))
                                             (rule "castedGetAny" (formula "14") (term "0,1,1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "shift_paren_or" (formula "22") (term "0,0,0,0"))
                                             (rule "cut_direct" (formula "35") (term "0"))
                                             (branch "CUT: result_45.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "true_left" (formula "36"))
                                                (rule "cut_direct" (formula "48") (term "0,0,0,0"))
                                                (branch "CUT: result_47.<created> = TRUE TRUE"
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "true_left" (formula "49"))
                                                   (rule "cut_direct" (formula "38") (term "0,0"))
                                                   (branch "CUT: result_46.<created> = TRUE TRUE"
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "true_left" (formula "39"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "6") (term "1,0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "eqSymm" (formula "23") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "commute_or_2" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "18") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "19") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "6") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "11") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "5") (term "1,0,0,0,0"))
                                                      (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "20") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "commute_or_2" (formula "21") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "18") (term "0,0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "commute_or_2" (formula "11") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "shift_paren_or" (formula "18") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "21") (term "0"))
                                                      (rule "distr_forallAnd" (formula "21"))
                                                      (rule "andLeft" (formula "21"))
                                                      (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "19") (term "0"))
                                                      (rule "distr_forallAnd" (formula "19"))
                                                      (rule "andLeft" (formula "19"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "commute_and_2" (formula "20") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0"))
                                                      (rule "distr_forallAnd" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "commute_and_2" (formula "5") (term "1,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "22") (term "0"))
                                                      (rule "distr_forallAnd" (formula "22"))
                                                      (rule "andLeft" (formula "22"))
                                                      (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "18") (term "0"))
                                                      (rule "distr_forallAnd" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "eqSymm" (formula "11") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "11") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "11") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0"))
                                                      (rule "distr_forallAnd" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "9") (term "0"))
                                                      (rule "distr_forallAnd" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "eqSymm" (formula "17") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "17") (term "1,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "17") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "17") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "allLeft" (formula "48") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "48") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "48") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "48") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "48"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "4"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0"))
                                                      (rule "add_literals" (formula "4") (term "0"))
                                                      (rule "leq_literals" (formula "4"))
                                                      (rule "closeFalse" (formula "4"))
                                                   )
                                                   (branch "CUT: result_46.<created> = TRUE FALSE"
                                                       (builtin "One Step Simplification" (formula "38"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "6") (term "1,0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "eqSymm" (formula "23") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "commute_or_2" (formula "12") (term "1,0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "18") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "19") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "6") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "11") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "5") (term "1,0,0,0,0"))
                                                      (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "20") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "21") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "18") (term "0,0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "commute_or_2" (formula "20") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "shift_paren_or" (formula "18") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "21") (term "0"))
                                                      (rule "distr_forallAnd" (formula "21"))
                                                      (rule "andLeft" (formula "21"))
                                                      (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "19") (term "0"))
                                                      (rule "distr_forallAnd" (formula "19"))
                                                      (rule "andLeft" (formula "19"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0"))
                                                      (rule "distr_forallAnd" (formula "20"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "22") (term "0"))
                                                      (rule "distr_forallAnd" (formula "22"))
                                                      (rule "andLeft" (formula "22"))
                                                      (rule "commute_and_2" (formula "5") (term "1,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "18") (term "0"))
                                                      (rule "distr_forallAnd" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "12") (term "0"))
                                                      (rule "distr_forallAnd" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "1,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "12") (term "0"))
                                                      (rule "distr_forallAnd" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "allLeft" (formula "49") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                                      (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "49") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "49") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "49"))
                                                      (rule "qeq_literals" (formula "3") (term "0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                                (branch "CUT: result_47.<created> = TRUE FALSE"
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "cut_direct" (formula "38") (term "0,0"))
                                                   (branch "CUT: result_46.<created> = TRUE TRUE"
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "true_left" (formula "39"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "6") (term "1,0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "eqSymm" (formula "23") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "commute_or_2" (formula "12") (term "1,0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "commute_or_2" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "18") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "19") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "6") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "11") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "5") (term "1,0,0,0,0"))
                                                      (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "20") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "commute_or_2" (formula "21") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "18") (term "0,0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "shift_paren_or" (formula "18") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "21") (term "0"))
                                                      (rule "distr_forallAnd" (formula "21"))
                                                      (rule "andLeft" (formula "21"))
                                                      (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "19") (term "0"))
                                                      (rule "distr_forallAnd" (formula "19"))
                                                      (rule "andLeft" (formula "19"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "commute_and_2" (formula "20") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "22") (term "0"))
                                                      (rule "distr_forallAnd" (formula "22"))
                                                      (rule "andLeft" (formula "22"))
                                                      (rule "commute_and_2" (formula "5") (term "1,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "18") (term "0"))
                                                      (rule "distr_forallAnd" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "12") (term "0"))
                                                      (rule "distr_forallAnd" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "eqSymm" (formula "20") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "9") (term "0"))
                                                      (rule "distr_forallAnd" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "eqSymm" (formula "18") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "18") (term "1,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "18") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0"))
                                                      (rule "distr_forallAnd" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "allLeft" (formula "49") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "49") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "inEqSimp_contradInEq1" (formula "49") (ifseqformula "4"))
                                                      (rule "andLeft" (formula "49"))
                                                      (rule "inEqSimp_homoInEq1" (formula "49"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "49") (term "0"))
                                                      (rule "add_literals" (formula "49") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "49") (term "1,0"))
                                                      (rule "add_literals" (formula "49") (term "0"))
                                                      (rule "leq_literals" (formula "49"))
                                                      (rule "closeFalse" (formula "49"))
                                                   )
                                                   (branch "CUT: result_46.<created> = TRUE FALSE"
                                                       (builtin "One Step Simplification" (formula "38"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "6") (term "1,0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "eqSymm" (formula "23") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "commute_or_2" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "18") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "19") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "6") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "11") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "5") (term "1,0,0,0,0"))
                                                      (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "20") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "commute_or_2" (formula "21") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "18") (term "0,0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "commute_or_2" (formula "11") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "shift_paren_or" (formula "18") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "21") (term "0"))
                                                      (rule "distr_forallAnd" (formula "21"))
                                                      (rule "andLeft" (formula "21"))
                                                      (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "19") (term "0"))
                                                      (rule "distr_forallAnd" (formula "19"))
                                                      (rule "andLeft" (formula "19"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "commute_and_2" (formula "20") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0"))
                                                      (rule "distr_forallAnd" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "22") (term "0"))
                                                      (rule "distr_forallAnd" (formula "22"))
                                                      (rule "andLeft" (formula "22"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "commute_and_2" (formula "5") (term "1,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "18") (term "0"))
                                                      (rule "distr_forallAnd" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "eqSymm" (formula "11") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "11") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "11") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0"))
                                                      (rule "distr_forallAnd" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "9") (term "0"))
                                                      (rule "distr_forallAnd" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "eqSymm" (formula "17") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "17") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "17") (term "1,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "17") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "allLeft" (formula "48") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "48") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "48") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "48") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "inEqSimp_contradInEq1" (formula "48") (ifseqformula "4"))
                                                      (rule "andLeft" (formula "48"))
                                                      (rule "inEqSimp_homoInEq1" (formula "48"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "48") (term "0"))
                                                      (rule "add_literals" (formula "48") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "48") (term "1,0"))
                                                      (rule "add_literals" (formula "48") (term "0"))
                                                      (rule "leq_literals" (formula "48"))
                                                      (rule "closeFalse" (formula "48"))
                                                   )
                                                )
                                             )
                                             (branch "CUT: result_45.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "cut_direct" (formula "48") (term "0,0,0,0"))
                                                (branch "CUT: result_47.<created> = TRUE TRUE"
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "true_left" (formula "49"))
                                                   (rule "cut_direct" (formula "38") (term "0,0"))
                                                   (branch "CUT: result_46.<created> = TRUE TRUE"
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "true_left" (formula "39"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "6") (term "1,0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "eqSymm" (formula "23") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "18") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "19") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "6") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "11") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "5") (term "1,0,0,0,0"))
                                                      (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "20") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "commute_or_2" (formula "21") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "18") (term "0,0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "commute_or_2" (formula "11") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "commute_or_2" (formula "20") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "shift_paren_or" (formula "18") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "21") (term "0"))
                                                      (rule "distr_forallAnd" (formula "21"))
                                                      (rule "andLeft" (formula "21"))
                                                      (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "19") (term "0"))
                                                      (rule "distr_forallAnd" (formula "19"))
                                                      (rule "andLeft" (formula "19"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0"))
                                                      (rule "distr_forallAnd" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0"))
                                                      (rule "distr_forallAnd" (formula "20"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "commute_and_2" (formula "5") (term "1,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "22") (term "0"))
                                                      (rule "distr_forallAnd" (formula "22"))
                                                      (rule "andLeft" (formula "22"))
                                                      (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "18") (term "0"))
                                                      (rule "distr_forallAnd" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "eqSymm" (formula "11") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "11") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "11") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "eqSymm" (formula "18") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "18") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0"))
                                                      (rule "distr_forallAnd" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "eqSymm" (formula "18") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "18") (term "1,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "18") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "9") (term "0"))
                                                      (rule "distr_forallAnd" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "allLeft" (formula "48") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "48") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                                                      (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "48") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "48") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "inEqSimp_contradInEq1" (formula "48") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "48") (term "0"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "closeFalse" (formula "48"))
                                                   )
                                                   (branch "CUT: result_46.<created> = TRUE FALSE"
                                                       (builtin "One Step Simplification" (formula "38"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "6") (term "1,0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "eqSymm" (formula "23") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "18") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "19") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "6") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "11") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "5") (term "1,0,0,0,0"))
                                                      (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "20") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "commute_or_2" (formula "21") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "18") (term "0,0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "commute_or_2" (formula "11") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "commute_or_2" (formula "20") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "shift_paren_or" (formula "18") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "21") (term "0"))
                                                      (rule "distr_forallAnd" (formula "21"))
                                                      (rule "andLeft" (formula "21"))
                                                      (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "19") (term "0"))
                                                      (rule "distr_forallAnd" (formula "19"))
                                                      (rule "andLeft" (formula "19"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0"))
                                                      (rule "distr_forallAnd" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0"))
                                                      (rule "distr_forallAnd" (formula "20"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "commute_and_2" (formula "5") (term "1,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "22") (term "0"))
                                                      (rule "distr_forallAnd" (formula "22"))
                                                      (rule "andLeft" (formula "22"))
                                                      (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "18") (term "0"))
                                                      (rule "distr_forallAnd" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "eqSymm" (formula "11") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "11") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "11") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0"))
                                                      (rule "distr_forallAnd" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "eqSymm" (formula "18") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "18") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "eqSymm" (formula "18") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "18") (term "1,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "18") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "9") (term "0"))
                                                      (rule "distr_forallAnd" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "allLeft" (formula "48") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "48") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "48") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "48") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "48"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "4"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0"))
                                                      (rule "add_literals" (formula "4") (term "0"))
                                                      (rule "leq_literals" (formula "4"))
                                                      (rule "closeFalse" (formula "4"))
                                                   )
                                                )
                                                (branch "CUT: result_47.<created> = TRUE FALSE"
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "cut_direct" (formula "38") (term "0,0"))
                                                   (branch "CUT: result_46.<created> = TRUE TRUE"
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "true_left" (formula "39"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "6") (term "1,0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "eqSymm" (formula "23") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "18") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "19") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "6") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "11") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "5") (term "1,0,0,0,0"))
                                                      (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "20") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "commute_or_2" (formula "21") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "18") (term "0,0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "commute_or_2" (formula "11") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "commute_or_2" (formula "20") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "shift_paren_or" (formula "18") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "21") (term "0"))
                                                      (rule "distr_forallAnd" (formula "21"))
                                                      (rule "andLeft" (formula "21"))
                                                      (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "19") (term "0"))
                                                      (rule "distr_forallAnd" (formula "19"))
                                                      (rule "andLeft" (formula "19"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0"))
                                                      (rule "distr_forallAnd" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0"))
                                                      (rule "distr_forallAnd" (formula "20"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "commute_and_2" (formula "5") (term "1,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "22") (term "0"))
                                                      (rule "distr_forallAnd" (formula "22"))
                                                      (rule "andLeft" (formula "22"))
                                                      (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "18") (term "0"))
                                                      (rule "distr_forallAnd" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "eqSymm" (formula "11") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "11") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "11") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0"))
                                                      (rule "distr_forallAnd" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "eqSymm" (formula "18") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "18") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "eqSymm" (formula "18") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "18") (term "1,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "18") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "9") (term "0"))
                                                      (rule "distr_forallAnd" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "allLeft" (formula "48") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "48") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "48") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "48") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "inEqSimp_contradInEq1" (formula "48") (ifseqformula "4"))
                                                      (rule "andLeft" (formula "48"))
                                                      (rule "inEqSimp_homoInEq1" (formula "48"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "48") (term "0"))
                                                      (rule "add_literals" (formula "48") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "48") (term "1,0"))
                                                      (rule "add_literals" (formula "48") (term "0"))
                                                      (rule "leq_literals" (formula "48"))
                                                      (rule "closeFalse" (formula "48"))
                                                   )
                                                   (branch "CUT: result_46.<created> = TRUE FALSE"
                                                       (builtin "One Step Simplification" (formula "38"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "6") (term "1,0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "eqSymm" (formula "23") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "10") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "commute_or_2" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "18") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "19") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "6") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "11") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "5") (term "1,0,0,0,0"))
                                                      (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "20") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "commute_or_2" (formula "21") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "commute_and" (formula "18") (term "0,0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "commute_or_2" (formula "11") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "shift_paren_or" (formula "18") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "21") (term "0"))
                                                      (rule "distr_forallAnd" (formula "21"))
                                                      (rule "andLeft" (formula "21"))
                                                      (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "19") (term "0"))
                                                      (rule "distr_forallAnd" (formula "19"))
                                                      (rule "andLeft" (formula "19"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "commute_and_2" (formula "20") (term "1,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0"))
                                                      (rule "distr_forallAnd" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "22") (term "0"))
                                                      (rule "distr_forallAnd" (formula "22"))
                                                      (rule "andLeft" (formula "22"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "18") (term "0"))
                                                      (rule "distr_forallAnd" (formula "18"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "commute_and_2" (formula "5") (term "1,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "eqSymm" (formula "11") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "11") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "11") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0"))
                                                      (rule "distr_forallAnd" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "9") (term "0"))
                                                      (rule "distr_forallAnd" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "eqSymm" (formula "17") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "17") (term "1,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "17") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "17") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "allLeft" (formula "48") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "48") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "48") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "48") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "inEqSimp_contradInEq1" (formula "48") (ifseqformula "4"))
                                                      (rule "andLeft" (formula "48"))
                                                      (rule "inEqSimp_homoInEq1" (formula "48"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "48") (term "0"))
                                                      (rule "add_literals" (formula "48") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "48") (term "1,0"))
                                                      (rule "add_zero_right" (formula "48") (term "0"))
                                                      (rule "leq_literals" (formula "48"))
                                                      (rule "closeFalse" (formula "48"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "result_49.<created> = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                             (rule "hideAuxiliaryEq" (formula "62"))
                                             (rule "replace_known_right" (formula "64") (term "0,0,0,0,0") (ifseqformula "73"))
                                              (builtin "One Step Simplification" (formula "64"))
                                             (rule "replace_known_right" (formula "65") (term "0,0,0,0,0,0") (ifseqformula "73"))
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "replace_known_right" (formula "62") (term "0,0,0") (ifseqformula "73"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "replace_known_right" (formula "66") (term "0,0,0,0,0,0,0") (ifseqformula "73"))
                                              (builtin "One Step Simplification" (formula "66"))
                                             (rule "replace_known_right" (formula "63") (term "0,0,0,0") (ifseqformula "73"))
                                              (builtin "One Step Simplification" (formula "63"))
                                             (rule "replace_known_right" (formula "61") (term "0,0,0,0,0,0") (ifseqformula "73"))
                                              (builtin "One Step Simplification" (formula "61"))
                                             (rule "commute_or_2" (formula "20") (term "1,0,0,0"))
                                             (rule "commute_or_2" (formula "14") (term "1,0,0,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "7") (term "1,0,0,0"))
                                             (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "6") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "11") (term "1,0,0,0"))
                                             (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "13") (term "1,0,0,0"))
                                             (rule "commute_or_2" (formula "24") (term "1,0,0,0"))
                                             (rule "commute_or_2" (formula "10") (term "1,0,0,0"))
                                             (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                             (rule "commute_or" (formula "55") (term "0,0"))
                                             (rule "commute_or_2" (formula "9") (term "1,0,0,0"))
                                             (rule "commute_or_2" (formula "55") (term "0"))
                                             (rule "commute_or" (formula "5") (term "0,1,0,0,0"))
                                             (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                             (rule "commute_or" (formula "7") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "14") (term "0,0,0"))
                                             (rule "commute_or" (formula "5") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "13") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "24") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "7") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "5") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "8") (term "1,0,0,0,0"))
                                             (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                                             (rule "commute_and" (formula "8") (term "1,0,0,0"))
                                             (rule "commute_or_2" (formula "21") (term "1,0,0,0,0"))
                                             (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "12") (term "1,0,0,0,0"))
                                             (rule "shift_paren_or" (formula "22") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "26") (term "0,0,0,0"))
                                             (rule "cut_direct" (formula "36") (term "0"))
                                             (branch "CUT: result_45.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "true_left" (formula "37"))
                                                (rule "cut_direct" (formula "39") (term "0,0"))
                                                (branch "CUT: result_46.<created> = TRUE TRUE"
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                   (rule "cut_direct" (formula "49") (term "0,0,0,0"))
                                                   (branch "CUT: result_47.<created> = TRUE TRUE"
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "true_left" (formula "50"))
                                                      (rule "shift_paren_or" (formula "14") (term "0,0,0,0"))
                                                      (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                      (rule "castedGetAny" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "6") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "12") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "26") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "14") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "24") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "10") (term "1,0,0,0"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "53") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "53"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                                                      (rule "applyEq" (formula "54") (term "0,0,1,0,0,1,0,0") (ifseqformula "55"))
                                                      (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "55"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "true_left" (formula "53"))
                                                      (rule "applyEq" (formula "53") (term "0,0,1,0") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "true_left" (formula "53"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "commute_and" (formula "22") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "shift_paren_or" (formula "26") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "lenNonNegative" (formula "54") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "54"))
                                                      (rule "commute_or_2" (formula "6") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "commute_or_2" (formula "5") (term "0,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "26") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "26") (term "0"))
                                                      (rule "distr_forallAnd" (formula "26"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "eqSymm" (formula "26") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "23") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "23") (term "0"))
                                                      (rule "distr_forallAnd" (formula "23"))
                                                      (rule "andLeft" (formula "23"))
                                                      (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0"))
                                                      (rule "distr_forallAnd" (formula "20"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "eqSymm" (formula "26") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "commute_and_2" (formula "24") (term "1,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "15") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "15") (term "0"))
                                                      (rule "distr_forallAnd" (formula "15"))
                                                      (rule "andLeft" (formula "15"))
                                                      (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "12") (term "0"))
                                                      (rule "distr_forallAnd" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "14") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "14") (term "0"))
                                                      (rule "distr_forallAnd" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "25") (term "0"))
                                                      (rule "distr_forallAnd" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0"))
                                                      (rule "distr_forallAnd" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "ifthenelse_split" (formula "62") (term "0"))
                                                      (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                         (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                         (rule "hideAuxiliaryEq" (formula "63"))
                                                         (rule "replace_known_left" (formula "66") (term "1,0,0") (ifseqformula "62"))
                                                          (builtin "One Step Simplification" (formula "66"))
                                                         (rule "eqSymm" (formula "66"))
                                                         (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "66"))
                                                         (rule "hideAuxiliaryEq" (formula "66"))
                                                         (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "62"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                         (rule "hideAuxiliaryEq" (formula "63"))
                                                         (rule "replace_known_left" (formula "64") (term "1,0,0") (ifseqformula "62"))
                                                          (builtin "One Step Simplification" (formula "64"))
                                                         (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "62"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "63"))
                                                         (rule "hideAuxiliaryEq" (formula "63"))
                                                         (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "62"))
                                                          (builtin "One Step Simplification" (formula "61"))
                                                         (rule "true_left" (formula "61"))
                                                         (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "10") (term "0"))
                                                         (rule "distr_forallAnd" (formula "10"))
                                                         (rule "andLeft" (formula "10"))
                                                         (rule "commute_or_2" (formula "6") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "eqSymm" (formula "6") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "6") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "6") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "6") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "true_left" (formula "6"))
                                                         (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0"))
                                                         (rule "distr_forallAnd" (formula "8"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0"))
                                                         (rule "distr_forallAnd" (formula "22"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0"))
                                                         (rule "distr_forallAnd" (formula "12"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "commute_or_2" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "shift_paren_or" (formula "7") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "eqSymm" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "eqSymm" (formula "22") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "22") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "true_left" (formula "22"))
                                                         (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0"))
                                                         (rule "distr_forallAnd" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "allLeft" (formula "51") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "51") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (ifseqformula "4"))
                                                         (rule "andLeft" (formula "51"))
                                                         (rule "inEqSimp_homoInEq1" (formula "51"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "51") (term "0"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0"))
                                                         (rule "add_literals" (formula "51") (term "0"))
                                                         (rule "leq_literals" (formula "51"))
                                                         (rule "closeFalse" (formula "51"))
                                                      )
                                                      (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                         (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                         (rule "hideAuxiliaryEq" (formula "62"))
                                                         (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "72"))
                                                          (builtin "One Step Simplification" (formula "62"))
                                                         (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "72"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "replace_known_right" (formula "65") (term "1,0,0") (ifseqformula "72"))
                                                          (builtin "One Step Simplification" (formula "65"))
                                                         (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "72"))
                                                          (builtin "One Step Simplification" (formula "64"))
                                                         (rule "replace_known_right" (formula "61") (term "1") (ifseqformula "72"))
                                                          (builtin "One Step Simplification" (formula "61"))
                                                         (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "10") (term "0"))
                                                         (rule "distr_forallAnd" (formula "10"))
                                                         (rule "andLeft" (formula "10"))
                                                         (rule "commute_or_2" (formula "6") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "eqSymm" (formula "6") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "6") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "6") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "6") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "true_left" (formula "6"))
                                                         (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0"))
                                                         (rule "distr_forallAnd" (formula "8"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0"))
                                                         (rule "distr_forallAnd" (formula "22"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0"))
                                                         (rule "distr_forallAnd" (formula "12"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "commute_or_2" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "shift_paren_or" (formula "7") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "eqSymm" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "eqSymm" (formula "22") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "22") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "true_left" (formula "22"))
                                                         (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0"))
                                                         (rule "distr_forallAnd" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "allLeft" (formula "51") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "51") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "51") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "51"))
                                                         (rule "qeq_literals" (formula "3") (term "0"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                   )
                                                   (branch "CUT: result_47.<created> = TRUE FALSE"
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "shift_paren_or" (formula "14") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                      (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                      (rule "castedGetAny" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "6") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "12") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "26") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "14") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "24") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "10") (term "1,0,0,0"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "53") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "53"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                                                      (rule "applyEq" (formula "54") (term "0,0,1,0") (ifseqformula "55"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "true_left" (formula "54"))
                                                      (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "true_left" (formula "53"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "commute_and" (formula "22") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "shift_paren_or" (formula "26") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "commute_or_2" (formula "6") (term "0,0,0,0"))
                                                      (rule "lenNonNegative" (formula "54") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "54"))
                                                      (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "commute_or_2" (formula "5") (term "0,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "26") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "26") (term "0"))
                                                      (rule "distr_forallAnd" (formula "26"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "eqSymm" (formula "26") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "23") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "23") (term "0"))
                                                      (rule "distr_forallAnd" (formula "23"))
                                                      (rule "andLeft" (formula "23"))
                                                      (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0"))
                                                      (rule "distr_forallAnd" (formula "20"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "eqSymm" (formula "26") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "14") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "14") (term "0"))
                                                      (rule "distr_forallAnd" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "commute_and_2" (formula "24") (term "1,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0"))
                                                      (rule "distr_forallAnd" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0"))
                                                      (rule "distr_forallAnd" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "25") (term "0"))
                                                      (rule "distr_forallAnd" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "commute_or_2" (formula "6") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "eqSymm" (formula "6") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "6") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "6") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "6") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "9") (term "0"))
                                                      (rule "distr_forallAnd" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "ifthenelse_split" (formula "61") (term "0"))
                                                      (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                         (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                         (rule "hideAuxiliaryEq" (formula "62"))
                                                         (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "62"))
                                                         (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                         (rule "hideAuxiliaryEq" (formula "62"))
                                                         (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                         (rule "hideAuxiliaryEq" (formula "63"))
                                                         (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "62"))
                                                         (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                         (rule "hideAuxiliaryEq" (formula "62"))
                                                         (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "62"))
                                                         (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "60"))
                                                         (rule "true_left" (formula "60"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0"))
                                                         (rule "distr_forallAnd" (formula "22"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "11") (term "0"))
                                                         (rule "distr_forallAnd" (formula "11"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "commute_or_2" (formula "13") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "eqSymm" (formula "13") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "13") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "13") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "13") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "shift_paren_or" (formula "14") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "eqSymm" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0"))
                                                         (rule "distr_forallAnd" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "allLeft" (formula "51") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "51") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (ifseqformula "4"))
                                                         (rule "andLeft" (formula "51"))
                                                         (rule "inEqSimp_homoInEq1" (formula "51"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "51") (term "0"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0"))
                                                         (rule "add_zero_right" (formula "51") (term "0"))
                                                         (rule "leq_literals" (formula "51"))
                                                         (rule "closeFalse" (formula "51"))
                                                      )
                                                      (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                         (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "61"))
                                                         (rule "hideAuxiliaryEq" (formula "61"))
                                                         (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "71"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "replace_known_right" (formula "61") (term "1,0,0") (ifseqformula "71"))
                                                          (builtin "One Step Simplification" (formula "61"))
                                                         (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "71"))
                                                          (builtin "One Step Simplification" (formula "62"))
                                                         (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "71"))
                                                          (builtin "One Step Simplification" (formula "64"))
                                                         (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "71"))
                                                          (builtin "One Step Simplification" (formula "60"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0"))
                                                         (rule "distr_forallAnd" (formula "22"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "commute_or_2" (formula "13") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "eqSymm" (formula "13") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "13") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "13") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "13") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "11") (term "0"))
                                                         (rule "distr_forallAnd" (formula "11"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "shift_paren_or" (formula "14") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "eqSymm" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0"))
                                                         (rule "distr_forallAnd" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "allLeft" (formula "51") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "51") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "51") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "51") (term "0"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "closeFalse" (formula "51"))
                                                      )
                                                   )
                                                )
                                                (branch "CUT: result_46.<created> = TRUE FALSE"
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                   (rule "cut_direct" (formula "49") (term "0,0,0,0"))
                                                   (branch "CUT: result_47.<created> = TRUE TRUE"
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "true_left" (formula "50"))
                                                      (rule "shift_paren_or" (formula "14") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                      (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                      (rule "castedGetAny" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "6") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "12") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "26") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "14") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "24") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "10") (term "1,0,0,0"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "53") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "53"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                                                      (rule "applyEq" (formula "54") (term "0,0,1,0,0,1,0,0") (ifseqformula "55"))
                                                      (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "55"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "true_left" (formula "53"))
                                                      (rule "applyEq" (formula "53") (term "0,0,1,0") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "true_left" (formula "53"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "commute_and" (formula "22") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "shift_paren_or" (formula "26") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                                      (rule "lenNonNegative" (formula "54") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "54"))
                                                      (rule "commute_or_2" (formula "6") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "commute_or_2" (formula "5") (term "0,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "26") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "26") (term "0"))
                                                      (rule "distr_forallAnd" (formula "26"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "eqSymm" (formula "26") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0"))
                                                      (rule "distr_forallAnd" (formula "20"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0"))
                                                      (rule "distr_forallAnd" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "commute_or_2" (formula "24") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "eqSymm" (formula "24") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "24") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "24") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "24") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "true_left" (formula "24"))
                                                      (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "eqSymm" (formula "26") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "commute_and_2" (formula "24") (term "1,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "15") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "15") (term "0"))
                                                      (rule "distr_forallAnd" (formula "15"))
                                                      (rule "andLeft" (formula "15"))
                                                      (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "12") (term "0"))
                                                      (rule "distr_forallAnd" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "14") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "14") (term "0"))
                                                      (rule "distr_forallAnd" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "25") (term "0"))
                                                      (rule "distr_forallAnd" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0"))
                                                      (rule "distr_forallAnd" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "eqSymm" (formula "22") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "1,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "ifthenelse_split" (formula "62") (term "0"))
                                                      (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                         (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                         (rule "hideAuxiliaryEq" (formula "63"))
                                                         (rule "replace_known_left" (formula "66") (term "1,0,0") (ifseqformula "62"))
                                                          (builtin "One Step Simplification" (formula "66"))
                                                         (rule "eqSymm" (formula "66"))
                                                         (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "66"))
                                                         (rule "hideAuxiliaryEq" (formula "66"))
                                                         (rule "replace_known_left" (formula "64") (term "1,0,0") (ifseqformula "62"))
                                                          (builtin "One Step Simplification" (formula "64"))
                                                         (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "64"))
                                                         (rule "hideAuxiliaryEq" (formula "64"))
                                                         (rule "replace_known_left" (formula "64") (term "1,0,0") (ifseqformula "62"))
                                                          (builtin "One Step Simplification" (formula "64"))
                                                         (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "62"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "63"))
                                                         (rule "hideAuxiliaryEq" (formula "63"))
                                                         (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "62"))
                                                          (builtin "One Step Simplification" (formula "61"))
                                                         (rule "true_left" (formula "61"))
                                                         (rule "commute_or_2" (formula "6") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "eqSymm" (formula "6") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "6") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "6") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "6") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "true_left" (formula "6"))
                                                         (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0"))
                                                         (rule "distr_forallAnd" (formula "8"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0"))
                                                         (rule "distr_forallAnd" (formula "22"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "13") (term "0"))
                                                         (rule "distr_forallAnd" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "commute_or_2" (formula "16") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "eqSymm" (formula "16") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "shift_paren_or" (formula "7") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "eqSymm" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "20") (term "0"))
                                                         (rule "distr_forallAnd" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "allLeft" (formula "52") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "52") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "52") (term "0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "52") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "52"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "4"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                         (rule "add_literals" (formula "4") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "4") (term "1,0"))
                                                         (rule "add_literals" (formula "4") (term "0"))
                                                         (rule "leq_literals" (formula "4"))
                                                         (rule "closeFalse" (formula "4"))
                                                      )
                                                      (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                         (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                         (rule "hideAuxiliaryEq" (formula "62"))
                                                         (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "72"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "replace_known_right" (formula "65") (term "1,0,0") (ifseqformula "72"))
                                                          (builtin "One Step Simplification" (formula "65"))
                                                         (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "72"))
                                                          (builtin "One Step Simplification" (formula "64"))
                                                         (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "72"))
                                                          (builtin "One Step Simplification" (formula "62"))
                                                         (rule "replace_known_right" (formula "61") (term "1") (ifseqformula "72"))
                                                          (builtin "One Step Simplification" (formula "61"))
                                                         (rule "commute_or_2" (formula "6") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "eqSymm" (formula "6") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "6") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "6") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "6") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "true_left" (formula "6"))
                                                         (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0"))
                                                         (rule "distr_forallAnd" (formula "8"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0"))
                                                         (rule "distr_forallAnd" (formula "22"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "13") (term "0"))
                                                         (rule "distr_forallAnd" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "commute_or_2" (formula "15") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "eqSymm" (formula "15") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "shift_paren_or" (formula "7") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "eqSymm" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "20") (term "0"))
                                                         (rule "distr_forallAnd" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "eqSymm" (formula "11") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "11") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "allLeft" (formula "52") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "52") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "inEqSimp_commuteGeq" (formula "52") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "52") (term "0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "52") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "52"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "4"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                         (rule "add_literals" (formula "4") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "4") (term "1,0"))
                                                         (rule "add_zero_right" (formula "4") (term "0"))
                                                         (rule "leq_literals" (formula "4"))
                                                         (rule "closeFalse" (formula "4"))
                                                      )
                                                   )
                                                   (branch "CUT: result_47.<created> = TRUE FALSE"
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "shift_paren_or" (formula "14") (term "0,0,0,0"))
                                                      (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                      (rule "castedGetAny" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "6") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "12") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "26") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "14") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "24") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "10") (term "1,0,0,0"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "53") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "53"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                                                      (rule "applyEq" (formula "54") (term "0,0,1,0,0,1,0,0") (ifseqformula "55"))
                                                      (rule "applyEq" (formula "54") (term "0,0,1,0") (ifseqformula "55"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "true_left" (formula "54"))
                                                      (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "true_left" (formula "53"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "commute_and" (formula "22") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "shift_paren_or" (formula "26") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "commute_or_2" (formula "6") (term "0,0,0,0"))
                                                      (rule "lenNonNegative" (formula "54") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "54"))
                                                      (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "commute_or_2" (formula "5") (term "0,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "26") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "26") (term "0"))
                                                      (rule "distr_forallAnd" (formula "26"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "eqSymm" (formula "26") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "23") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "23") (term "0"))
                                                      (rule "distr_forallAnd" (formula "23"))
                                                      (rule "andLeft" (formula "23"))
                                                      (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0"))
                                                      (rule "distr_forallAnd" (formula "20"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "eqSymm" (formula "26") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "commute_and_2" (formula "23") (term "1,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "14") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "14") (term "0"))
                                                      (rule "distr_forallAnd" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0"))
                                                      (rule "distr_forallAnd" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0"))
                                                      (rule "distr_forallAnd" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "25") (term "0"))
                                                      (rule "distr_forallAnd" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "commute_or_2" (formula "6") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "eqSymm" (formula "6") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "6") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "6") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "6") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "9") (term "0"))
                                                      (rule "distr_forallAnd" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "ifthenelse_split" (formula "61") (term "0"))
                                                      (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                         (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                         (rule "hideAuxiliaryEq" (formula "62"))
                                                         (rule "replace_known_left" (formula "65") (term "1,0,0") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "65"))
                                                         (rule "eqSymm" (formula "65"))
                                                         (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "65"))
                                                         (rule "hideAuxiliaryEq" (formula "65"))
                                                         (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "62"))
                                                         (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                         (rule "hideAuxiliaryEq" (formula "62"))
                                                         (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "62"))
                                                         (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                         (rule "hideAuxiliaryEq" (formula "62"))
                                                         (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "62"))
                                                         (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "60"))
                                                         (rule "true_left" (formula "60"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0"))
                                                         (rule "distr_forallAnd" (formula "22"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "11") (term "0"))
                                                         (rule "distr_forallAnd" (formula "11"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "commute_or_2" (formula "13") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "eqSymm" (formula "13") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "13") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "13") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "13") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "shift_paren_or" (formula "14") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "eqSymm" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0"))
                                                         (rule "distr_forallAnd" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "allLeft" (formula "51") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "51") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "51") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "51") (term "0"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "closeFalse" (formula "51"))
                                                      )
                                                      (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                         (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "61"))
                                                         (rule "hideAuxiliaryEq" (formula "61"))
                                                         (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "71"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "71"))
                                                          (builtin "One Step Simplification" (formula "64"))
                                                         (rule "replace_known_right" (formula "61") (term "1,0,0") (ifseqformula "71"))
                                                          (builtin "One Step Simplification" (formula "61"))
                                                         (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "71"))
                                                          (builtin "One Step Simplification" (formula "62"))
                                                         (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "71"))
                                                          (builtin "One Step Simplification" (formula "60"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0"))
                                                         (rule "distr_forallAnd" (formula "22"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "11") (term "0"))
                                                         (rule "distr_forallAnd" (formula "11"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "commute_or_2" (formula "13") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "eqSymm" (formula "13") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "13") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "13") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "13") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "shift_paren_or" (formula "14") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "eqSymm" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0"))
                                                         (rule "distr_forallAnd" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "allLeft" (formula "51") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "51") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "51") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "51") (term "0"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "closeFalse" (formula "51"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "CUT: result_45.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "cut_direct" (formula "39") (term "0,0"))
                                                (branch "CUT: result_46.<created> = TRUE TRUE"
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                   (rule "cut_direct" (formula "49") (term "0,0,0,0"))
                                                   (branch "CUT: result_47.<created> = TRUE TRUE"
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "true_left" (formula "50"))
                                                      (rule "shift_paren_or" (formula "14") (term "0,0,0,0"))
                                                      (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                      (rule "castedGetAny" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "6") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "12") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "26") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "14") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "24") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "10") (term "1,0,0,0"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "53") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "53"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                                                      (rule "applyEq" (formula "54") (term "0,0,1,0,0,1,0,0") (ifseqformula "55"))
                                                      (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "55"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "true_left" (formula "53"))
                                                      (rule "applyEq" (formula "53") (term "0,0,1,0") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "true_left" (formula "53"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "commute_and" (formula "22") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "shift_paren_or" (formula "26") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "lenNonNegative" (formula "54") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "54"))
                                                      (rule "commute_or_2" (formula "6") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "commute_or_2" (formula "5") (term "0,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "26") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "26") (term "0"))
                                                      (rule "distr_forallAnd" (formula "26"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "eqSymm" (formula "26") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "23") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "23") (term "0"))
                                                      (rule "distr_forallAnd" (formula "23"))
                                                      (rule "andLeft" (formula "23"))
                                                      (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0"))
                                                      (rule "distr_forallAnd" (formula "20"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "eqSymm" (formula "26") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "15") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "15") (term "0"))
                                                      (rule "distr_forallAnd" (formula "15"))
                                                      (rule "andLeft" (formula "15"))
                                                      (rule "commute_and_2" (formula "24") (term "1,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "12") (term "0"))
                                                      (rule "distr_forallAnd" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "14") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "14") (term "0"))
                                                      (rule "distr_forallAnd" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "25") (term "0"))
                                                      (rule "distr_forallAnd" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0"))
                                                      (rule "distr_forallAnd" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "ifthenelse_split" (formula "62") (term "0"))
                                                      (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                         (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                         (rule "hideAuxiliaryEq" (formula "63"))
                                                         (rule "replace_known_left" (formula "66") (term "1,0,0") (ifseqformula "62"))
                                                          (builtin "One Step Simplification" (formula "66"))
                                                         (rule "eqSymm" (formula "66"))
                                                         (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "66"))
                                                         (rule "hideAuxiliaryEq" (formula "66"))
                                                         (rule "replace_known_left" (formula "65") (term "1,0,0") (ifseqformula "62"))
                                                          (builtin "One Step Simplification" (formula "65"))
                                                         (rule "eqSymm" (formula "65"))
                                                         (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "65"))
                                                         (rule "hideAuxiliaryEq" (formula "65"))
                                                         (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "62"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                         (rule "hideAuxiliaryEq" (formula "63"))
                                                         (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "62"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "62"))
                                                          (builtin "One Step Simplification" (formula "61"))
                                                         (rule "true_left" (formula "61"))
                                                         (rule "commute_or_2" (formula "6") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "eqSymm" (formula "6") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "6") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "6") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "6") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "true_left" (formula "6"))
                                                         (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0"))
                                                         (rule "distr_forallAnd" (formula "8"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0"))
                                                         (rule "distr_forallAnd" (formula "22"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "commute_or_2" (formula "14") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "eqSymm" (formula "14") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0"))
                                                         (rule "distr_forallAnd" (formula "12"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "shift_paren_or" (formula "7") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "eqSymm" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "eqSymm" (formula "22") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "22") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "true_left" (formula "22"))
                                                         (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0"))
                                                         (rule "distr_forallAnd" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "allLeft" (formula "51") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "51") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "51") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "51"))
                                                         (rule "qeq_literals" (formula "3") (term "0"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                      (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                         (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                         (rule "hideAuxiliaryEq" (formula "62"))
                                                         (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "72"))
                                                          (builtin "One Step Simplification" (formula "64"))
                                                         (rule "replace_known_right" (formula "65") (term "1,0,0") (ifseqformula "72"))
                                                          (builtin "One Step Simplification" (formula "65"))
                                                         (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "72"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "72"))
                                                          (builtin "One Step Simplification" (formula "62"))
                                                         (rule "replace_known_right" (formula "61") (term "1") (ifseqformula "72"))
                                                          (builtin "One Step Simplification" (formula "61"))
                                                         (rule "commute_or_2" (formula "6") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "eqSymm" (formula "6") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "6") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "6") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "6") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "true_left" (formula "6"))
                                                         (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "8") (term "0"))
                                                         (rule "distr_forallAnd" (formula "8"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0"))
                                                         (rule "distr_forallAnd" (formula "22"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "commute_or_2" (formula "14") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "eqSymm" (formula "14") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "12") (term "0"))
                                                         (rule "distr_forallAnd" (formula "12"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "shift_paren_or" (formula "7") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "eqSymm" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "7") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "eqSymm" (formula "22") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "22") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "true_left" (formula "22"))
                                                         (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0"))
                                                         (rule "distr_forallAnd" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "allLeft" (formula "51") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "51") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (ifseqformula "4"))
                                                         (rule "andLeft" (formula "51"))
                                                         (rule "inEqSimp_homoInEq1" (formula "51"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "51") (term "0"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0"))
                                                         (rule "add_zero_right" (formula "51") (term "0"))
                                                         (rule "leq_literals" (formula "51"))
                                                         (rule "closeFalse" (formula "51"))
                                                      )
                                                   )
                                                   (branch "CUT: result_47.<created> = TRUE FALSE"
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "shift_paren_or" (formula "14") (term "0,0,0,0"))
                                                      (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                      (rule "castedGetAny" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "6") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "12") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "26") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "14") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "24") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "10") (term "1,0,0,0"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "53") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "53"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                                                      (rule "applyEq" (formula "54") (term "0,0,1,0") (ifseqformula "55"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "true_left" (formula "54"))
                                                      (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "true_left" (formula "53"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "commute_and" (formula "22") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "shift_paren_or" (formula "26") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "commute_or_2" (formula "6") (term "0,0,0,0"))
                                                      (rule "lenNonNegative" (formula "54") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "54"))
                                                      (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "commute_or_2" (formula "5") (term "0,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "26") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "26") (term "0"))
                                                      (rule "distr_forallAnd" (formula "26"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "eqSymm" (formula "26") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "23") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "23") (term "0"))
                                                      (rule "distr_forallAnd" (formula "23"))
                                                      (rule "andLeft" (formula "23"))
                                                      (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0"))
                                                      (rule "distr_forallAnd" (formula "20"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "eqSymm" (formula "26") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "23") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "23") (term "0"))
                                                      (rule "distr_forallAnd" (formula "23"))
                                                      (rule "andLeft" (formula "23"))
                                                      (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "14") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "14") (term "0"))
                                                      (rule "distr_forallAnd" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0"))
                                                      (rule "distr_forallAnd" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0"))
                                                      (rule "distr_forallAnd" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "25") (term "0"))
                                                      (rule "distr_forallAnd" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "commute_or_2" (formula "6") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "eqSymm" (formula "6") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "6") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "6") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "6") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "9") (term "0"))
                                                      (rule "distr_forallAnd" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "ifthenelse_split" (formula "61") (term "0"))
                                                      (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                         (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                         (rule "hideAuxiliaryEq" (formula "62"))
                                                         (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                         (rule "hideAuxiliaryEq" (formula "63"))
                                                         (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                         (rule "hideAuxiliaryEq" (formula "63"))
                                                         (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "62"))
                                                         (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                         (rule "hideAuxiliaryEq" (formula "62"))
                                                         (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "62"))
                                                         (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "60"))
                                                         (rule "true_left" (formula "60"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0"))
                                                         (rule "distr_forallAnd" (formula "22"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "11") (term "0"))
                                                         (rule "distr_forallAnd" (formula "11"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "eqSymm" (formula "22") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "22") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "22") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "22") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "true_left" (formula "22"))
                                                         (rule "commute_or_2" (formula "14") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "eqSymm" (formula "14") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "shift_paren_or" (formula "14") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "eqSymm" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "19") (term "0"))
                                                         (rule "distr_forallAnd" (formula "19"))
                                                         (rule "andLeft" (formula "19"))
                                                         (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "allLeft" (formula "51") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "51") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "51") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "51") (term "0"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "closeFalse" (formula "51"))
                                                      )
                                                      (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                         (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "61"))
                                                         (rule "hideAuxiliaryEq" (formula "61"))
                                                         (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "71"))
                                                          (builtin "One Step Simplification" (formula "62"))
                                                         (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "71"))
                                                          (builtin "One Step Simplification" (formula "64"))
                                                         (rule "replace_known_right" (formula "61") (term "1,0,0") (ifseqformula "71"))
                                                          (builtin "One Step Simplification" (formula "61"))
                                                         (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "71"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "71"))
                                                          (builtin "One Step Simplification" (formula "60"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0"))
                                                         (rule "distr_forallAnd" (formula "22"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "11") (term "0"))
                                                         (rule "distr_forallAnd" (formula "11"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "eqSymm" (formula "22") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "22") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "22") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "22") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "true_left" (formula "22"))
                                                         (rule "commute_or_2" (formula "14") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "eqSymm" (formula "14") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "shift_paren_or" (formula "14") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "eqSymm" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "19") (term "0"))
                                                         (rule "distr_forallAnd" (formula "19"))
                                                         (rule "andLeft" (formula "19"))
                                                         (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "allLeft" (formula "51") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "51") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "51") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "51") (term "0"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "closeFalse" (formula "51"))
                                                      )
                                                   )
                                                )
                                                (branch "CUT: result_46.<created> = TRUE FALSE"
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                   (rule "cut_direct" (formula "49") (term "0,0,0,0"))
                                                   (branch "CUT: result_47.<created> = TRUE TRUE"
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "true_left" (formula "50"))
                                                      (rule "shift_paren_or" (formula "14") (term "0,0,0,0"))
                                                      (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                      (rule "castedGetAny" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "6") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "12") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "26") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "14") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "24") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "10") (term "1,0,0,0"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "53") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "53"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                                                      (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "55"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "true_left" (formula "53"))
                                                      (rule "applyEq" (formula "53") (term "0,0,1,0") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "true_left" (formula "53"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "commute_and" (formula "22") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "shift_paren_or" (formula "26") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "commute_or_2" (formula "6") (term "0,0,0,0"))
                                                      (rule "lenNonNegative" (formula "54") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "54"))
                                                      (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "commute_or_2" (formula "5") (term "0,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "26") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "26") (term "0"))
                                                      (rule "distr_forallAnd" (formula "26"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "eqSymm" (formula "26") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "23") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "23") (term "0"))
                                                      (rule "distr_forallAnd" (formula "23"))
                                                      (rule "andLeft" (formula "23"))
                                                      (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0"))
                                                      (rule "distr_forallAnd" (formula "20"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "eqSymm" (formula "26") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "14") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "14") (term "0"))
                                                      (rule "distr_forallAnd" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "commute_and_2" (formula "24") (term "1,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0"))
                                                      (rule "distr_forallAnd" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0"))
                                                      (rule "distr_forallAnd" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "25") (term "0"))
                                                      (rule "distr_forallAnd" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "commute_or_2" (formula "6") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "eqSymm" (formula "6") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "6") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "6") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "6") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "9") (term "0"))
                                                      (rule "distr_forallAnd" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "ifthenelse_split" (formula "61") (term "0"))
                                                      (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                         (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                         (rule "hideAuxiliaryEq" (formula "62"))
                                                         (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                         (rule "hideAuxiliaryEq" (formula "63"))
                                                         (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                         (rule "hideAuxiliaryEq" (formula "63"))
                                                         (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "62"))
                                                         (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "62"))
                                                         (rule "hideAuxiliaryEq" (formula "62"))
                                                         (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "60"))
                                                         (rule "true_left" (formula "60"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0"))
                                                         (rule "distr_forallAnd" (formula "22"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "11") (term "0"))
                                                         (rule "distr_forallAnd" (formula "11"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "commute_or_2" (formula "13") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "eqSymm" (formula "13") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "13") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "13") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "13") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "shift_paren_or" (formula "14") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "eqSymm" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0"))
                                                         (rule "distr_forallAnd" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "allLeft" (formula "51") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "51") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "51") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "51"))
                                                         (rule "qeq_literals" (formula "3") (term "0"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                      (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                         (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "61"))
                                                         (rule "hideAuxiliaryEq" (formula "61"))
                                                         (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "71"))
                                                          (builtin "One Step Simplification" (formula "64"))
                                                         (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "71"))
                                                          (builtin "One Step Simplification" (formula "62"))
                                                         (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "71"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "replace_known_right" (formula "61") (term "1,0,0") (ifseqformula "71"))
                                                          (builtin "One Step Simplification" (formula "61"))
                                                         (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "71"))
                                                          (builtin "One Step Simplification" (formula "60"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0"))
                                                         (rule "distr_forallAnd" (formula "22"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "commute_or_2" (formula "13") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "eqSymm" (formula "13") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "13") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "13") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "13") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "11") (term "0"))
                                                         (rule "distr_forallAnd" (formula "11"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "shift_paren_or" (formula "14") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "eqSymm" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0"))
                                                         (rule "distr_forallAnd" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "allLeft" (formula "51") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "51") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "51") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "51") (term "0"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "closeFalse" (formula "51"))
                                                      )
                                                   )
                                                   (branch "CUT: result_47.<created> = TRUE FALSE"
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "shift_paren_or" (formula "14") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                      (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                      (rule "castedGetAny" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "6") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "12") (term "1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                      (rule "commute_and" (formula "26") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "14") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "24") (term "1,0,0,0"))
                                                      (rule "commute_and" (formula "10") (term "1,0,0,0"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "53") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "53"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                                                      (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "55"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "true_left" (formula "53"))
                                                      (rule "applyEq" (formula "53") (term "0,0,1,0,0,1,0,0") (ifseqformula "54"))
                                                      (rule "applyEq" (formula "53") (term "0,0,1,0") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "true_left" (formula "53"))
                                                      (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "commute_and" (formula "22") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "shift_paren_or" (formula "26") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "commute_or_2" (formula "6") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "lenNonNegative" (formula "54") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "54"))
                                                      (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "commute_or_2" (formula "5") (term "0,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "26") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "26") (term "0"))
                                                      (rule "distr_forallAnd" (formula "26"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "eqSymm" (formula "26") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "23") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "23") (term "0"))
                                                      (rule "distr_forallAnd" (formula "23"))
                                                      (rule "andLeft" (formula "23"))
                                                      (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0"))
                                                      (rule "distr_forallAnd" (formula "20"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "eqSymm" (formula "26") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "26") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "14") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "14") (term "0"))
                                                      (rule "distr_forallAnd" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "commute_and_2" (formula "24") (term "1,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "11") (term "0"))
                                                      (rule "distr_forallAnd" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0"))
                                                      (rule "distr_forallAnd" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "25") (term "0"))
                                                      (rule "distr_forallAnd" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "commute_or_2" (formula "6") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "eqSymm" (formula "6") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "6") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "6") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "6") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "9") (term "0"))
                                                      (rule "distr_forallAnd" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "ifthenelse_split" (formula "61") (term "0"))
                                                      (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                         (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                         (rule "hideAuxiliaryEq" (formula "62"))
                                                         (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                         (rule "hideAuxiliaryEq" (formula "63"))
                                                         (rule "replace_known_left" (formula "64") (term "1,0,0") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "64"))
                                                         (rule "eqSymm" (formula "64"))
                                                         (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "64"))
                                                         (rule "hideAuxiliaryEq" (formula "64"))
                                                         (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "62"))
                                                         (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "62"))
                                                         (rule "hideAuxiliaryEq" (formula "62"))
                                                         (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "60"))
                                                         (rule "true_left" (formula "60"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0"))
                                                         (rule "distr_forallAnd" (formula "22"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "11") (term "0"))
                                                         (rule "distr_forallAnd" (formula "11"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "commute_or_2" (formula "13") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "eqSymm" (formula "13") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "13") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "13") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "13") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "shift_paren_or" (formula "14") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "eqSymm" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0"))
                                                         (rule "distr_forallAnd" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "allLeft" (formula "51") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "51") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (ifseqformula "4"))
                                                         (rule "andLeft" (formula "51"))
                                                         (rule "inEqSimp_homoInEq1" (formula "51"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "51") (term "0"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0"))
                                                         (rule "add_zero_right" (formula "51") (term "0"))
                                                         (rule "leq_literals" (formula "51"))
                                                         (rule "closeFalse" (formula "51"))
                                                      )
                                                      (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                         (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "61"))
                                                         (rule "hideAuxiliaryEq" (formula "61"))
                                                         (rule "replace_known_right" (formula "61") (term "1,0,0") (ifseqformula "71"))
                                                          (builtin "One Step Simplification" (formula "61"))
                                                         (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "71"))
                                                          (builtin "One Step Simplification" (formula "62"))
                                                         (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "71"))
                                                          (builtin "One Step Simplification" (formula "64"))
                                                         (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "71"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "71"))
                                                          (builtin "One Step Simplification" (formula "60"))
                                                         (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "7") (term "0"))
                                                         (rule "distr_forallAnd" (formula "7"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "22") (term "0"))
                                                         (rule "distr_forallAnd" (formula "22"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "11") (term "0"))
                                                         (rule "distr_forallAnd" (formula "11"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "commute_or_2" (formula "13") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "eqSymm" (formula "13") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "13") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "13") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "13") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "5") (term "0"))
                                                         (rule "distr_forallAnd" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "1,0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "shift_paren_or" (formula "14") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "eqSymm" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                         (rule "distr_forallAnd" (formula "18") (term "0"))
                                                         (rule "distr_forallAnd" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "allLeft" (formula "51") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "51") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "51") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "51"))
                                                         (rule "qeq_literals" (formula "3") (term "0"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch " result_48.<created> = TRUE ∨ result_48.<created>@anon_heap_FileReader«anonHeapFunction» = TRUE ∨ result_48.<created>@anon_heap_withDelimiter«anonHeapFunction» = TRUE ∨ result_48.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                       (rule "replaceKnownSelect_taclet00000000_21" (formula "2") (term "0,1,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00000000_22" (formula "2") (term "0,1,1"))
                                       (rule "orRight" (formula "104"))
                                       (rule "notRight" (formula "106"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "orRight" (formula "106"))
                                       (rule "orRight" (formula "106"))
                                       (rule "replace_known_right" (formula "58") (term "1,0,0") (ifseqformula "109"))
                                        (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "106")) (ifInst ""  (formula "107")) (ifInst ""  (formula "108")))
                                       (rule "replace_known_right" (formula "57") (term "1,0,0,0,0") (ifseqformula "107"))
                                        (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "106")) (ifInst ""  (formula "108")) (ifInst ""  (formula "109")))
                                       (rule "applyEqReverse" (formula "58") (term "1,0") (ifseqformula "57"))
                                       (rule "hideAuxiliaryEq" (formula "57"))
                                       (rule "replace_known_right" (formula "55") (term "1,0,0") (ifseqformula "108"))
                                        (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "105")))
                                       (rule "applyEqReverse" (formula "56") (term "1,0") (ifseqformula "55"))
                                       (rule "hideAuxiliaryEq" (formula "55"))
                                       (rule "replace_known_right" (formula "55") (term "1,0,0,0") (ifseqformula "106"))
                                        (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "104")) (ifInst ""  (formula "107")))
                                       (rule "hideAuxiliaryEq" (formula "55"))
                                       (rule "replace_known_right" (formula "54") (term "0,0") (ifseqformula "103"))
                                        (builtin "One Step Simplification" (formula "54"))
                                       (rule "hideAuxiliaryEq" (formula "54"))
                                       (rule "replace_known_right" (formula "2") (term "1,0") (ifseqformula "104"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "102")) (ifInst ""  (formula "103")) (ifInst ""  (formula "105")))
                                       (rule "replace_known_left" (formula "54") (term "0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "54"))
                                       (rule "replace_known_right" (formula "53") (term "0,0,0,0,0") (ifseqformula "102"))
                                        (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "103")) (ifInst ""  (formula "2")) (ifInst ""  (formula "104")) (ifInst ""  (formula "105")))
                                       (rule "true_left" (formula "53"))
                                       (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "53"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "nnf_imp2or" (formula "25") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "nnf_imp2or" (formula "7") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "11") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "21") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "10") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "23") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "6") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "26") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "8") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "5") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "20") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "9") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "12") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "24") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "14") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "22") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "13") (term "0,0,0"))
                                       (rule "nnf_imp2or" (formula "55") (term "0"))
                                       (rule "nnf_notAnd" (formula "55") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "55") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "55") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "55") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "55") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "55") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "55") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "55") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0"))
                                       (rule "mul_literals" (formula "55") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "7") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "nnf_imp2or" (formula "11") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "11") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "nnf_imp2or" (formula "21") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "21") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "nnf_imp2or" (formula "10") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "10") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "nnf_imp2or" (formula "23") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "23") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "nnf_notAnd" (formula "6") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "nnf_notAnd" (formula "26") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "nnf_notAnd" (formula "8") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "nnf_imp2or" (formula "5") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "5") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "nnf_imp2or" (formula "20") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "20") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "nnf_imp2or" (formula "9") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "nnf_imp2or" (formula "12") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "12") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "nnf_imp2or" (formula "24") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "24") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "nnf_imp2or" (formula "14") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "14") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "nnf_notAnd" (formula "22") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "nnf_notAnd" (formula "13") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "nnf_imp2or" (formula "7") (term "1,0,0,0"))
                                       (rule "nnf_notOr" (formula "7") (term "0,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "11") (term "1,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "11") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "nnf_imp2or" (formula "6") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "21") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "nnf_imp2or" (formula "26") (term "1,0,0,0"))
                                       (rule "nnf_imp2or" (formula "8") (term "1,0,0,0"))
                                       (rule "nnf_notOr" (formula "10") (term "1,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "10") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "nnf_notAnd" (formula "23") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "nnf_notOr" (formula "6") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "26") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "8") (term "1,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "5") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "nnf_notAnd" (formula "20") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "nnf_notAnd" (formula "9") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "nnf_imp2or" (formula "22") (term "1,0,0,0"))
                                       (rule "nnf_notOr" (formula "12") (term "1,0,0,0,0"))
                                       (rule "nnf_imp2or" (formula "13") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "12") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "nnf_notOr" (formula "24") (term "1,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "24") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "nnf_notOr" (formula "14") (term "1,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "14") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "nnf_notOr" (formula "22") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "13") (term "1,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "7") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "nnf_notAnd" (formula "6") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "nnf_notOr" (formula "21") (term "1,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "26") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "nnf_notAnd" (formula "8") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "nnf_notOr" (formula "11") (term "0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "23") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "5") (term "0,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "20") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "9") (term "1,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "nnf_notAnd" (formula "13") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "nnf_notOr" (formula "7") (term "0,0,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "5") (term "0,0,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "20") (term "0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "9") (term "0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "22") (term "0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "13") (term "0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "11") (term "0,0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "7") (term "0,0,0,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "5") (term "1,0,0,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "20") (term "0,0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "9") (term "0,0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "13") (term "0,0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "11") (term "0,0,0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "7") (term "0,0,0,0,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "5") (term "0,1,0,0,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "9") (term "0,0,0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "13") (term "0,0,0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "11") (term "0,0,0,0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "7") (term "1,0,0,0,0,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "5") (term "0,0,1,0,0,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "9") (term "0,0,0,0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "7") (term "0,1,0,0,0,0,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "5") (term "0,0,0,1,0,0,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "9") (term "0,0,0,0,0,1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "7") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "5") (term "0,0,0,0,1,0,0,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "5") (term "0,0,0,0,0,1,0,0,0,0,0,0"))
                                       (rule "commute_or_2" (formula "55") (term "0"))
                                       (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "11") (term "1,0,0,0"))
                                       (rule "commute_or_2" (formula "21") (term "1,0,0,0"))
                                       (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "24") (term "0,0,0"))
                                       (rule "ifthenelse_split" (formula "62") (term "0"))
                                       (branch "result_49.<created> = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                          (rule "hideAuxiliaryEq" (formula "63"))
                                          (rule "replace_known_left" (formula "64") (term "0,0,0,0") (ifseqformula "62"))
                                           (builtin "One Step Simplification" (formula "64"))
                                          (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "64"))
                                          (rule "hideAuxiliaryEq" (formula "64"))
                                          (rule "replace_known_left" (formula "65") (term "0,0,0,0,0,0") (ifseqformula "62"))
                                           (builtin "One Step Simplification" (formula "65"))
                                          (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "65"))
                                          (rule "hideAuxiliaryEq" (formula "65"))
                                          (rule "replace_known_left" (formula "64") (term "0,0,0,0,0") (ifseqformula "62"))
                                           (builtin "One Step Simplification" (formula "64"))
                                          (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "64"))
                                          (rule "hideAuxiliaryEq" (formula "64"))
                                          (rule "replace_known_left" (formula "64") (term "0,0,0,0,0,0,0") (ifseqformula "62"))
                                           (builtin "One Step Simplification" (formula "64"))
                                          (rule "replace_known_left" (formula "63") (term "0,0,0") (ifseqformula "62"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "63"))
                                          (rule "hideAuxiliaryEq" (formula "63"))
                                          (rule "eqSymm" (formula "63"))
                                          (rule "replace_known_left" (formula "61") (term "0,0,0,0,0,0") (ifseqformula "62"))
                                           (builtin "One Step Simplification" (formula "61"))
                                          (rule "true_left" (formula "61"))
                                          (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "62"))
                                          (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "62"))
                                          (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "62"))
                                          (rule "applyEq" (formula "55") (term "0,0,0,1,0,0") (ifseqformula "62"))
                                          (rule "applyEq" (formula "53") (term "1") (ifseqformula "62"))
                                          (rule "applyEq" (formula "55") (term "0,1,0,0,0") (ifseqformula "62"))
                                          (rule "commute_or_2" (formula "14") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "23") (term "1,0,0,0"))
                                          (rule "commute_or_2" (formula "6") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "20") (term "1,0,0,0"))
                                          (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "9") (term "1,0,0,0"))
                                          (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "7") (term "1,0,0,0"))
                                          (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                          (rule "commute_or" (formula "5") (term "0,1,0,0,0"))
                                          (rule "commute_or_2" (formula "13") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                          (rule "commute_or" (formula "55") (term "0,0"))
                                          (rule "commute_or_2" (formula "55") (term "0"))
                                          (rule "commute_or" (formula "7") (term "0,0,0,0"))
                                          (rule "commute_or" (formula "5") (term "0,0,0,0"))
                                          (rule "cnf_rightDist" (formula "23") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "24") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "7") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "5") (term "0,0,0"))
                                          (rule "commute_and" (formula "10") (term "1,0,0,0"))
                                          (rule "commute_and" (formula "12") (term "1,0,0,0"))
                                          (rule "commute_and" (formula "24") (term "1,0,0,0"))
                                          (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "eqSymm" (formula "23") (term "1,1,0,0,0"))
                                          (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                          (rule "castedGetAny" (formula "23") (term "0,0,1,0,0,0"))
                                          (rule "castedGetAny" (formula "23") (term "1,0,0,0,0,0,0,0"))
                                          (rule "castedGetAny" (formula "23") (term "0,1,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "shift_paren_or" (formula "14") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "6") (term "1,0,0,0,0"))
                                          (rule "commute_or_2" (formula "25") (term "1,0,0,0,0"))
                                          (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "22") (term "0,0,0,0"))
                                          (rule "cut_direct" (formula "35") (term "0"))
                                          (branch "CUT: result_45.<created> = TRUE TRUE"
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "true_left" (formula "36"))
                                             (rule "cut_direct" (formula "38") (term "0,0"))
                                             (branch "CUT: result_46.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "cut_direct" (formula "48") (term "0,0,0,0"))
                                                (branch "CUT: result_47.<created> = TRUE TRUE"
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "true_left" (formula "49"))
                                                   (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "14") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "6") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "25") (term "1,0,0,0"))
                                                   (rule "commute_or_2" (formula "5") (term "1,0,0,0,0"))
                                                   (rule "commute_and" (formula "8") (term "1,0,0,0"))
                                                   (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "shift_paren_or" (formula "25") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "commute_or_2" (formula "10") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "22") (term "0,1,0,0,0"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0,0"))
                                                   (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "commute_or_2" (formula "14") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0"))
                                                   (rule "distr_forallAnd" (formula "11"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "23") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "23") (term "0"))
                                                   (rule "distr_forallAnd" (formula "23"))
                                                   (rule "andLeft" (formula "23"))
                                                   (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "eqSymm" (formula "11") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "13") (term "0"))
                                                   (rule "distr_forallAnd" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0"))
                                                   (rule "distr_forallAnd" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "eqSymm" (formula "22") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "true_left" (formula "22"))
                                                   (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "21") (term "0"))
                                                   (rule "distr_forallAnd" (formula "21"))
                                                   (rule "andLeft" (formula "21"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0"))
                                                   (rule "distr_forallAnd" (formula "20"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0"))
                                                   (rule "distr_forallAnd" (formula "19"))
                                                   (rule "andLeft" (formula "19"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0"))
                                                   (rule "distr_forallAnd" (formula "9"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "6") (term "0"))
                                                   (rule "distr_forallAnd" (formula "6"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "commute_or_2" (formula "18") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "eqSymm" (formula "18") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "18") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "18") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "eqSymm" (formula "18") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "18") (term "1,0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "18") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0"))
                                                   (rule "distr_forallAnd" (formula "19"))
                                                   (rule "andLeft" (formula "19"))
                                                   (rule "allLeft" (formula "48") (inst "t=i_0"))
                                                   (rule "replace_known_left" (formula "48") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "48") (term "0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "48") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "48"))
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0"))
                                                   (rule "add_literals" (formula "4") (term "0"))
                                                   (rule "leq_literals" (formula "4"))
                                                   (rule "closeFalse" (formula "4"))
                                                )
                                                (branch "CUT: result_47.<created> = TRUE FALSE"
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "14") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "6") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "25") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "8") (term "1,0,0,0"))
                                                   (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "shift_paren_or" (formula "25") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "commute_or_2" (formula "10") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "22") (term "0,1,0,0,0"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0,0"))
                                                   (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "commute_or_2" (formula "14") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "commute_or_2" (formula "5") (term "0,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "22") (term "0"))
                                                   (rule "distr_forallAnd" (formula "22"))
                                                   (rule "andLeft" (formula "22"))
                                                   (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0"))
                                                   (rule "distr_forallAnd" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "eqSymm" (formula "22") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "true_left" (formula "22"))
                                                   (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "21") (term "0"))
                                                   (rule "distr_forallAnd" (formula "21"))
                                                   (rule "andLeft" (formula "21"))
                                                   (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0"))
                                                   (rule "distr_forallAnd" (formula "11"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0"))
                                                   (rule "distr_forallAnd" (formula "20"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0"))
                                                   (rule "distr_forallAnd" (formula "19"))
                                                   (rule "andLeft" (formula "19"))
                                                   (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0"))
                                                   (rule "distr_forallAnd" (formula "9"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "5") (term "0"))
                                                   (rule "distr_forallAnd" (formula "5"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "9") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "9") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "7") (term "0"))
                                                   (rule "distr_forallAnd" (formula "7"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "1,0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0"))
                                                   (rule "distr_forallAnd" (formula "20"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "allLeft" (formula "49") (inst "t=i_0"))
                                                   (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                                   (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "49") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "49") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_contradInEq1" (formula "49") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "49") (term "0"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "closeFalse" (formula "49"))
                                                )
                                             )
                                             (branch "CUT: result_46.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "cut_direct" (formula "48") (term "0,0,0,0"))
                                                (branch "CUT: result_47.<created> = TRUE TRUE"
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "true_left" (formula "49"))
                                                   (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "14") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "6") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "25") (term "1,0,0,0"))
                                                   (rule "commute_or_2" (formula "5") (term "1,0,0,0,0"))
                                                   (rule "commute_and" (formula "8") (term "1,0,0,0"))
                                                   (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "25") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "commute_or_2" (formula "10") (term "0,0,0,0"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "22") (term "0,1,0,0,0"))
                                                   (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "commute_or_2" (formula "14") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "21") (term "0"))
                                                   (rule "distr_forallAnd" (formula "21"))
                                                   (rule "andLeft" (formula "21"))
                                                   (rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0"))
                                                   (rule "distr_forallAnd" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0"))
                                                   (rule "distr_forallAnd" (formula "20"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0"))
                                                   (rule "distr_forallAnd" (formula "11"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0"))
                                                   (rule "distr_forallAnd" (formula "19"))
                                                   (rule "andLeft" (formula "19"))
                                                   (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0"))
                                                   (rule "distr_forallAnd" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0"))
                                                   (rule "distr_forallAnd" (formula "9"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "eqSymm" (formula "18") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "18") (term "1,0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "18") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "6") (term "0"))
                                                   (rule "distr_forallAnd" (formula "6"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "commute_or_2" (formula "18") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "eqSymm" (formula "18") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "18") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "18") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0"))
                                                   (rule "distr_forallAnd" (formula "19"))
                                                   (rule "andLeft" (formula "19"))
                                                   (rule "allLeft" (formula "48") (inst "t=i_0"))
                                                   (rule "replace_known_left" (formula "48") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                                                   (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "48") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "48") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "inEqSimp_contradInEq1" (formula "48") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "48") (term "0"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "closeFalse" (formula "48"))
                                                )
                                                (branch "CUT: result_47.<created> = TRUE FALSE"
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "14") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "6") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "25") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "8") (term "1,0,0,0"))
                                                   (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "shift_paren_or" (formula "25") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "commute_or_2" (formula "10") (term "0,0,0,0"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "22") (term "0,1,0,0,0"))
                                                   (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "commute_or_2" (formula "14") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "commute_or_2" (formula "5") (term "0,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "22") (term "0"))
                                                   (rule "distr_forallAnd" (formula "22"))
                                                   (rule "andLeft" (formula "22"))
                                                   (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0"))
                                                   (rule "distr_forallAnd" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "eqSymm" (formula "22") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "true_left" (formula "22"))
                                                   (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "21") (term "0"))
                                                   (rule "distr_forallAnd" (formula "21"))
                                                   (rule "andLeft" (formula "21"))
                                                   (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0"))
                                                   (rule "distr_forallAnd" (formula "11"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0"))
                                                   (rule "distr_forallAnd" (formula "20"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0"))
                                                   (rule "distr_forallAnd" (formula "19"))
                                                   (rule "andLeft" (formula "19"))
                                                   (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0"))
                                                   (rule "distr_forallAnd" (formula "9"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "5") (term "0"))
                                                   (rule "distr_forallAnd" (formula "5"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "9") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "9") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "7") (term "0"))
                                                   (rule "distr_forallAnd" (formula "7"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "1,0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0"))
                                                   (rule "distr_forallAnd" (formula "20"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "allLeft" (formula "49") (inst "t=i_0"))
                                                   (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "49") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_contradInEq1" (formula "49") (ifseqformula "4"))
                                                   (rule "andLeft" (formula "49"))
                                                   (rule "inEqSimp_homoInEq1" (formula "49"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "49") (term "0"))
                                                   (rule "add_literals" (formula "49") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0"))
                                                   (rule "add_literals" (formula "49") (term "0"))
                                                   (rule "leq_literals" (formula "49"))
                                                   (rule "closeFalse" (formula "49"))
                                                )
                                             )
                                          )
                                          (branch "CUT: result_45.<created> = TRUE FALSE"
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "cut_direct" (formula "38") (term "0,0"))
                                             (branch "CUT: result_46.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "cut_direct" (formula "48") (term "0,0,0,0"))
                                                (branch "CUT: result_47.<created> = TRUE TRUE"
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "true_left" (formula "49"))
                                                   (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "14") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "6") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "25") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "8") (term "1,0,0,0"))
                                                   (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "shift_paren_or" (formula "25") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "commute_or_2" (formula "10") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "22") (term "0,1,0,0,0"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0,0"))
                                                   (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "commute_or_2" (formula "14") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "commute_or_2" (formula "5") (term "0,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "22") (term "0"))
                                                   (rule "distr_forallAnd" (formula "22"))
                                                   (rule "andLeft" (formula "22"))
                                                   (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0"))
                                                   (rule "distr_forallAnd" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "21") (term "0"))
                                                   (rule "distr_forallAnd" (formula "21"))
                                                   (rule "andLeft" (formula "21"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "eqSymm" (formula "22") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "true_left" (formula "22"))
                                                   (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0"))
                                                   (rule "distr_forallAnd" (formula "11"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0"))
                                                   (rule "distr_forallAnd" (formula "20"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0"))
                                                   (rule "distr_forallAnd" (formula "19"))
                                                   (rule "andLeft" (formula "19"))
                                                   (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0"))
                                                   (rule "distr_forallAnd" (formula "9"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "5") (term "0"))
                                                   (rule "distr_forallAnd" (formula "5"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "9") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "9") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "7") (term "0"))
                                                   (rule "distr_forallAnd" (formula "7"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "1,0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "commute_or_2" (formula "18") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "eqSymm" (formula "18") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "18") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "18") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0"))
                                                   (rule "distr_forallAnd" (formula "19"))
                                                   (rule "andLeft" (formula "19"))
                                                   (rule "allLeft" (formula "49") (inst "t=i_0"))
                                                   (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "49") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_contradInEq1" (formula "49") (ifseqformula "4"))
                                                   (rule "andLeft" (formula "49"))
                                                   (rule "inEqSimp_homoInEq1" (formula "49"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "49") (term "0"))
                                                   (rule "add_literals" (formula "49") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0"))
                                                   (rule "add_literals" (formula "49") (term "0"))
                                                   (rule "leq_literals" (formula "49"))
                                                   (rule "closeFalse" (formula "49"))
                                                )
                                                (branch "CUT: result_47.<created> = TRUE FALSE"
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "14") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "6") (term "1,0,0,0"))
                                                   (rule "commute_and" (formula "25") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "8") (term "1,0,0,0"))
                                                   (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "shift_paren_or" (formula "25") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "commute_or_2" (formula "10") (term "0,0,0,0"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "22") (term "0,1,0,0,0"))
                                                   (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "commute_or_2" (formula "14") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "commute_or_2" (formula "5") (term "0,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "22") (term "0"))
                                                   (rule "distr_forallAnd" (formula "22"))
                                                   (rule "andLeft" (formula "22"))
                                                   (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0"))
                                                   (rule "distr_forallAnd" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "21") (term "0"))
                                                   (rule "distr_forallAnd" (formula "21"))
                                                   (rule "andLeft" (formula "21"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "eqSymm" (formula "22") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "true_left" (formula "22"))
                                                   (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0"))
                                                   (rule "distr_forallAnd" (formula "11"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0"))
                                                   (rule "distr_forallAnd" (formula "20"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0"))
                                                   (rule "distr_forallAnd" (formula "19"))
                                                   (rule "andLeft" (formula "19"))
                                                   (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0"))
                                                   (rule "distr_forallAnd" (formula "9"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "5") (term "0"))
                                                   (rule "distr_forallAnd" (formula "5"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "9") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "9") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "7") (term "0"))
                                                   (rule "distr_forallAnd" (formula "7"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "eqSymm" (formula "20") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "20") (term "1,0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "20") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "20") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0"))
                                                   (rule "distr_forallAnd" (formula "20"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "allLeft" (formula "49") (inst "t=i_0"))
                                                   (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "49") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_contradInEq1" (formula "49") (ifseqformula "4"))
                                                   (rule "andLeft" (formula "49"))
                                                   (rule "inEqSimp_homoInEq1" (formula "49"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "49") (term "0"))
                                                   (rule "add_literals" (formula "49") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0"))
                                                   (rule "add_zero_right" (formula "49") (term "0"))
                                                   (rule "leq_literals" (formula "49"))
                                                   (rule "closeFalse" (formula "49"))
                                                )
                                             )
                                             (branch "CUT: result_46.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "cut_direct" (formula "48") (term "0,0,0,0"))
                                                (branch "CUT: result_47.<created> = TRUE TRUE"
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "true_left" (formula "49"))
                                                   (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "14") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "6") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "25") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "8") (term "1,0,0,0"))
                                                   (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "shift_paren_or" (formula "25") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "commute_or_2" (formula "10") (term "0,0,0,0"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "22") (term "0,1,0,0,0"))
                                                   (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "commute_or_2" (formula "14") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "commute_or_2" (formula "5") (term "0,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "22") (term "0"))
                                                   (rule "distr_forallAnd" (formula "22"))
                                                   (rule "andLeft" (formula "22"))
                                                   (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0"))
                                                   (rule "distr_forallAnd" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "eqSymm" (formula "22") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "true_left" (formula "22"))
                                                   (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "21") (term "0"))
                                                   (rule "distr_forallAnd" (formula "21"))
                                                   (rule "andLeft" (formula "21"))
                                                   (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0"))
                                                   (rule "distr_forallAnd" (formula "11"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0"))
                                                   (rule "distr_forallAnd" (formula "20"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0"))
                                                   (rule "distr_forallAnd" (formula "19"))
                                                   (rule "andLeft" (formula "19"))
                                                   (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0"))
                                                   (rule "distr_forallAnd" (formula "9"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "5") (term "0"))
                                                   (rule "distr_forallAnd" (formula "5"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "9") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "9") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "7") (term "0"))
                                                   (rule "distr_forallAnd" (formula "7"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "1,0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0"))
                                                   (rule "distr_forallAnd" (formula "20"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "allLeft" (formula "49") (inst "t=i_0"))
                                                   (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                                   (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "49") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "49") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "49"))
                                                   (rule "qeq_literals" (formula "3") (term "0"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                                (branch "CUT: result_47.<created> = TRUE FALSE"
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "14") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "6") (term "1,0,0,0"))
                                                   (rule "commute_and" (formula "25") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "8") (term "1,0,0,0"))
                                                   (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "25") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "commute_or_2" (formula "10") (term "0,0,0,0"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "22") (term "0,1,0,0,0"))
                                                   (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "commute_or_2" (formula "14") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "commute_or_2" (formula "5") (term "0,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "22") (term "0"))
                                                   (rule "distr_forallAnd" (formula "22"))
                                                   (rule "andLeft" (formula "22"))
                                                   (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0"))
                                                   (rule "distr_forallAnd" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "21") (term "0"))
                                                   (rule "distr_forallAnd" (formula "21"))
                                                   (rule "andLeft" (formula "21"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "eqSymm" (formula "22") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "true_left" (formula "22"))
                                                   (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0"))
                                                   (rule "distr_forallAnd" (formula "11"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0"))
                                                   (rule "distr_forallAnd" (formula "20"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0"))
                                                   (rule "distr_forallAnd" (formula "19"))
                                                   (rule "andLeft" (formula "19"))
                                                   (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0"))
                                                   (rule "distr_forallAnd" (formula "9"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "5") (term "0"))
                                                   (rule "distr_forallAnd" (formula "5"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "9") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "9") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "7") (term "0"))
                                                   (rule "distr_forallAnd" (formula "7"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "eqSymm" (formula "20") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "20") (term "1,0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "20") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "20") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "21") (term "0"))
                                                   (rule "distr_forallAnd" (formula "21"))
                                                   (rule "andLeft" (formula "21"))
                                                   (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "allLeft" (formula "49") (inst "t=i_0"))
                                                   (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                                   (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "49") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "49") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_contradInEq1" (formula "49") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "49") (term "0"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "closeFalse" (formula "49"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "result_49.<created> = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                          (rule "hideAuxiliaryEq" (formula "62"))
                                          (rule "replace_known_right" (formula "62") (term "0,0,0") (ifseqformula "73"))
                                           (builtin "One Step Simplification" (formula "62"))
                                          (rule "replace_known_right" (formula "66") (term "0,0,0,0,0,0,0") (ifseqformula "73"))
                                           (builtin "One Step Simplification" (formula "66"))
                                          (rule "replace_known_right" (formula "64") (term "0,0,0,0,0") (ifseqformula "73"))
                                           (builtin "One Step Simplification" (formula "64"))
                                          (rule "replace_known_right" (formula "65") (term "0,0,0,0,0,0") (ifseqformula "73"))
                                           (builtin "One Step Simplification" (formula "65"))
                                          (rule "replace_known_right" (formula "63") (term "0,0,0,0") (ifseqformula "73"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "replace_known_right" (formula "61") (term "0,0,0,0,0,0") (ifseqformula "73"))
                                           (builtin "One Step Simplification" (formula "61"))
                                          (rule "commute_or_2" (formula "14") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "23") (term "1,0,0,0"))
                                          (rule "commute_or_2" (formula "6") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "20") (term "1,0,0,0"))
                                          (rule "commute_or_2" (formula "9") (term "1,0,0,0"))
                                          (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "7") (term "1,0,0,0"))
                                          (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                          (rule "commute_or" (formula "5") (term "0,1,0,0,0"))
                                          (rule "commute_or" (formula "55") (term "0,0"))
                                          (rule "commute_or_2" (formula "13") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "55") (term "0"))
                                          (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                          (rule "commute_or" (formula "7") (term "0,0,0,0"))
                                          (rule "commute_or" (formula "5") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "7") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "5") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "10") (term "1,0,0,0,0"))
                                          (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "24") (term "1,0,0,0,0"))
                                          (rule "commute_and" (formula "10") (term "1,0,0,0"))
                                          (rule "shift_paren_or" (formula "14") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "6") (term "1,0,0,0,0"))
                                          (rule "commute_and" (formula "12") (term "1,0,0,0"))
                                          (rule "commute_and" (formula "24") (term "1,0,0,0"))
                                          (rule "shift_paren_or" (formula "26") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "8") (term "1,0,0,0,0"))
                                          (rule "shift_paren_or" (formula "22") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                          (rule "commute_and" (formula "14") (term "1,0,0,0"))
                                          (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                          (rule "commute_and" (formula "6") (term "1,0,0,0"))
                                          (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "24") (term "0,0,0,0"))
                                          (rule "cut_direct" (formula "49") (term "0,0,0,0"))
                                          (branch "CUT: result_47.<created> = TRUE TRUE"
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "true_left" (formula "50"))
                                             (rule "lenNonNegative" (formula "54") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "54"))
                                             (rule "commute_and" (formula "26") (term "1,0,0,0"))
                                             (rule "cut_direct" (formula "39") (term "0,0"))
                                             (branch "CUT: result_46.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "true_left" (formula "40"))
                                                (rule "cut_direct" (formula "36") (term "0"))
                                                (branch "CUT: result_45.<created> = TRUE TRUE"
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "true_left" (formula "37"))
                                                   (rule "commute_and" (formula "8") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                   (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "commute_or_2" (formula "14") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "22") (term "0,1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "26") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "53") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "53"))
                                                   (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                                                   (rule "applyEq" (formula "54") (term "0,0,1,0") (ifseqformula "55"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "true_left" (formula "54"))
                                                   (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "true_left" (formula "53"))
                                                   (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                   (rule "castedGetAny" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "14") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "14") (term "0"))
                                                   (rule "distr_forallAnd" (formula "14"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "26") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "26") (term "0"))
                                                   (rule "distr_forallAnd" (formula "26"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "commute_or_2" (formula "5") (term "0,0,0,0"))
                                                   (rule "commute_or_2" (formula "14") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "eqSymm" (formula "14") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "commute_and_2" (formula "21") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "commute_or_2" (formula "24") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "eqSymm" (formula "24") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "24") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "24") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "24") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0"))
                                                   (rule "distr_forallAnd" (formula "11"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0"))
                                                   (rule "distr_forallAnd" (formula "20"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "23") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "23") (term "0"))
                                                   (rule "distr_forallAnd" (formula "23"))
                                                   (rule "andLeft" (formula "23"))
                                                   (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0"))
                                                   (rule "distr_forallAnd" (formula "19"))
                                                   (rule "andLeft" (formula "19"))
                                                   (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0"))
                                                   (rule "distr_forallAnd" (formula "9"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "ifthenelse_split" (formula "61") (term "0"))
                                                   (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                      (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                      (rule "hideAuxiliaryEq" (formula "62"))
                                                      (rule "replace_known_left" (formula "64") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "64"))
                                                      (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "64"))
                                                      (rule "hideAuxiliaryEq" (formula "64"))
                                                      (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                      (rule "hideAuxiliaryEq" (formula "62"))
                                                      (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                      (rule "hideAuxiliaryEq" (formula "62"))
                                                      (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "60"))
                                                      (rule "true_left" (formula "60"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0"))
                                                      (rule "distr_forallAnd" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0"))
                                                      (rule "distr_forallAnd" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "commute_and_2" (formula "5") (term "1,0,0,0"))
                                                      (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "eqSymm" (formula "22") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "1,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "19") (term "0"))
                                                      (rule "distr_forallAnd" (formula "19"))
                                                      (rule "andLeft" (formula "19"))
                                                      (rule "allLeft" (formula "51") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "51") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "51") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "inEqSimp_contradInEq1" (formula "51") (ifseqformula "4"))
                                                      (rule "andLeft" (formula "51"))
                                                      (rule "inEqSimp_homoInEq1" (formula "51"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "51") (term "0"))
                                                      (rule "add_literals" (formula "51") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "51") (term "1,0"))
                                                      (rule "add_literals" (formula "51") (term "0"))
                                                      (rule "leq_literals" (formula "51"))
                                                      (rule "closeFalse" (formula "51"))
                                                   )
                                                   (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                      (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "61"))
                                                      (rule "hideAuxiliaryEq" (formula "61"))
                                                      (rule "replace_known_right" (formula "61") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "61"))
                                                      (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "64"))
                                                      (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "60"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0"))
                                                      (rule "distr_forallAnd" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0"))
                                                      (rule "distr_forallAnd" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "commute_and_2" (formula "5") (term "1,0,0,0"))
                                                      (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "eqSymm" (formula "22") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "1,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "19") (term "0"))
                                                      (rule "distr_forallAnd" (formula "19"))
                                                      (rule "andLeft" (formula "19"))
                                                      (rule "allLeft" (formula "51") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                                                      (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "51") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "51") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "inEqSimp_contradInEq1" (formula "51") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "51") (term "0"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "closeFalse" (formula "51"))
                                                   )
                                                )
                                                (branch "CUT: result_45.<created> = TRUE FALSE"
                                                    (builtin "One Step Simplification" (formula "36"))
                                                   (rule "commute_and" (formula "8") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                   (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "commute_or_2" (formula "14") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "22") (term "0,1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "26") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "53") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "53"))
                                                   (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                                                   (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "55"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "true_left" (formula "53"))
                                                   (rule "applyEq" (formula "53") (term "0,0,1,0") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "true_left" (formula "53"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                   (rule "castedGetAny" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "14") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "14") (term "0"))
                                                   (rule "distr_forallAnd" (formula "14"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "26") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "26") (term "0"))
                                                   (rule "distr_forallAnd" (formula "26"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "commute_or_2" (formula "5") (term "0,0,0,0"))
                                                   (rule "commute_or_2" (formula "14") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "eqSymm" (formula "14") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "commute_or_2" (formula "24") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "eqSymm" (formula "24") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "24") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "24") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "24") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0"))
                                                   (rule "distr_forallAnd" (formula "11"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0"))
                                                   (rule "distr_forallAnd" (formula "20"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "23") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "23") (term "0"))
                                                   (rule "distr_forallAnd" (formula "23"))
                                                   (rule "andLeft" (formula "23"))
                                                   (rule "commute_and_2" (formula "22") (term "1,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0"))
                                                   (rule "distr_forallAnd" (formula "19"))
                                                   (rule "andLeft" (formula "19"))
                                                   (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0"))
                                                   (rule "distr_forallAnd" (formula "9"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "ifthenelse_split" (formula "61") (term "0"))
                                                   (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                      (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                      (rule "hideAuxiliaryEq" (formula "62"))
                                                      (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                      (rule "hideAuxiliaryEq" (formula "62"))
                                                      (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                      (rule "hideAuxiliaryEq" (formula "63"))
                                                      (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "62"))
                                                      (rule "hideAuxiliaryEq" (formula "62"))
                                                      (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "60"))
                                                      (rule "true_left" (formula "60"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0"))
                                                      (rule "distr_forallAnd" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0"))
                                                      (rule "distr_forallAnd" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "eqSymm" (formula "22") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "1,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "50") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "50"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "4"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0"))
                                                      (rule "add_literals" (formula "4") (term "0"))
                                                      (rule "leq_literals" (formula "4"))
                                                      (rule "closeFalse" (formula "4"))
                                                   )
                                                   (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                      (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "61"))
                                                      (rule "hideAuxiliaryEq" (formula "61"))
                                                      (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "64"))
                                                      (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "replace_known_right" (formula "61") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "61"))
                                                      (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "60"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0"))
                                                      (rule "distr_forallAnd" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0"))
                                                      (rule "distr_forallAnd" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "eqSymm" (formula "22") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "1,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                      (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "50") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "50") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "50") (term "0"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "closeFalse" (formula "50"))
                                                   )
                                                )
                                             )
                                             (branch "CUT: result_46.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "cut_direct" (formula "36") (term "0"))
                                                (branch "CUT: result_45.<created> = TRUE TRUE"
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "true_left" (formula "37"))
                                                   (rule "commute_and" (formula "8") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                   (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "commute_or_2" (formula "14") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "22") (term "0,1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "26") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "53") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "53"))
                                                   (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                                                   (rule "applyEq" (formula "54") (term "0,0,1,0") (ifseqformula "55"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "true_left" (formula "54"))
                                                   (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "true_left" (formula "53"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                   (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                   (rule "castedGetAny" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "14") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "14") (term "0"))
                                                   (rule "distr_forallAnd" (formula "14"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "26") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "26") (term "0"))
                                                   (rule "distr_forallAnd" (formula "26"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "commute_or_2" (formula "5") (term "0,0,0,0"))
                                                   (rule "commute_or_2" (formula "14") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "eqSymm" (formula "14") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0"))
                                                   (rule "distr_forallAnd" (formula "11"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "eqSymm" (formula "25") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "25") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "25") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "true_left" (formula "25"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0"))
                                                   (rule "distr_forallAnd" (formula "20"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "23") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "23") (term "0"))
                                                   (rule "distr_forallAnd" (formula "23"))
                                                   (rule "andLeft" (formula "23"))
                                                   (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0"))
                                                   (rule "distr_forallAnd" (formula "19"))
                                                   (rule "andLeft" (formula "19"))
                                                   (rule "commute_and_2" (formula "22") (term "1,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0"))
                                                   (rule "distr_forallAnd" (formula "9"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "ifthenelse_split" (formula "61") (term "0"))
                                                   (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                      (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                      (rule "hideAuxiliaryEq" (formula "62"))
                                                      (rule "replace_known_left" (formula "65") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "65"))
                                                      (rule "eqSymm" (formula "65"))
                                                      (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "65"))
                                                      (rule "hideAuxiliaryEq" (formula "65"))
                                                      (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                      (rule "hideAuxiliaryEq" (formula "63"))
                                                      (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                      (rule "hideAuxiliaryEq" (formula "62"))
                                                      (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "60"))
                                                      (rule "true_left" (formula "60"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0"))
                                                      (rule "distr_forallAnd" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0"))
                                                      (rule "distr_forallAnd" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "commute_and_2" (formula "5") (term "1,0,0,0"))
                                                      (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "eqSymm" (formula "22") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "1,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "50") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (ifseqformula "4"))
                                                      (rule "andLeft" (formula "50"))
                                                      (rule "inEqSimp_homoInEq1" (formula "50"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "50") (term "0"))
                                                      (rule "add_literals" (formula "50") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "50") (term "1,0"))
                                                      (rule "add_literals" (formula "50") (term "0"))
                                                      (rule "leq_literals" (formula "50"))
                                                      (rule "closeFalse" (formula "50"))
                                                   )
                                                   (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                      (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "61"))
                                                      (rule "hideAuxiliaryEq" (formula "61"))
                                                      (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "replace_known_right" (formula "61") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "61"))
                                                      (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "64"))
                                                      (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "60"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0"))
                                                      (rule "distr_forallAnd" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0"))
                                                      (rule "distr_forallAnd" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "commute_and_2" (formula "5") (term "1,0,0,0"))
                                                      (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "eqSymm" (formula "22") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "1,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                      (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "50") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "50") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "50") (term "0"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "closeFalse" (formula "50"))
                                                   )
                                                )
                                                (branch "CUT: result_45.<created> = TRUE FALSE"
                                                    (builtin "One Step Simplification" (formula "36"))
                                                   (rule "commute_and" (formula "8") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                   (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "commute_or_2" (formula "14") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "22") (term "0,1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "26") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "53") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "53"))
                                                   (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                                                   (rule "applyEq" (formula "54") (term "0,0,1,0,0,1,0,0") (ifseqformula "55"))
                                                   (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "55"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "true_left" (formula "53"))
                                                   (rule "applyEq" (formula "53") (term "0,0,1,0") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "true_left" (formula "53"))
                                                   (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                   (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                   (rule "castedGetAny" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "14") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "14") (term "0"))
                                                   (rule "distr_forallAnd" (formula "14"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "26") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "26") (term "0"))
                                                   (rule "distr_forallAnd" (formula "26"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "22") (term "0"))
                                                   (rule "distr_forallAnd" (formula "22"))
                                                   (rule "andLeft" (formula "22"))
                                                   (rule "commute_or_2" (formula "5") (term "0,0,0,0"))
                                                   (rule "commute_or_2" (formula "14") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "eqSymm" (formula "14") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "eqSymm" (formula "25") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "25") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "25") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "true_left" (formula "25"))
                                                   (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0"))
                                                   (rule "distr_forallAnd" (formula "11"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0"))
                                                   (rule "distr_forallAnd" (formula "19"))
                                                   (rule "andLeft" (formula "19"))
                                                   (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "23") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "23") (term "0"))
                                                   (rule "distr_forallAnd" (formula "23"))
                                                   (rule "andLeft" (formula "23"))
                                                   (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0"))
                                                   (rule "distr_forallAnd" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0"))
                                                   (rule "distr_forallAnd" (formula "9"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "ifthenelse_split" (formula "61") (term "0"))
                                                   (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                      (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                      (rule "hideAuxiliaryEq" (formula "62"))
                                                      (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                      (rule "hideAuxiliaryEq" (formula "63"))
                                                      (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                      (rule "hideAuxiliaryEq" (formula "62"))
                                                      (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                      (rule "hideAuxiliaryEq" (formula "62"))
                                                      (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "60"))
                                                      (rule "true_left" (formula "60"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0"))
                                                      (rule "distr_forallAnd" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "12") (term "0"))
                                                      (rule "distr_forallAnd" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "eqSymm" (formula "22") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "1,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "commute_and_2" (formula "5") (term "1,0,0,0"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0"))
                                                      (rule "distr_forallAnd" (formula "20"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                      (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "50") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "50") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "50") (term "0"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "closeFalse" (formula "50"))
                                                   )
                                                   (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                      (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "61"))
                                                      (rule "hideAuxiliaryEq" (formula "61"))
                                                      (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "replace_known_right" (formula "61") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "61"))
                                                      (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "64"))
                                                      (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "60"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0"))
                                                      (rule "distr_forallAnd" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "12") (term "0"))
                                                      (rule "distr_forallAnd" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "eqSymm" (formula "22") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "1,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "commute_and_2" (formula "5") (term "1,0,0,0"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0"))
                                                      (rule "distr_forallAnd" (formula "20"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                      (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "50") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "50") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "50"))
                                                      (rule "qeq_literals" (formula "3") (term "0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "CUT: result_47.<created> = TRUE FALSE"
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "lenNonNegative" (formula "54") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "54"))
                                             (rule "commute_and" (formula "26") (term "1,0,0,0"))
                                             (rule "cut_direct" (formula "39") (term "0,0"))
                                             (branch "CUT: result_46.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "true_left" (formula "40"))
                                                (rule "cut_direct" (formula "36") (term "0"))
                                                (branch "CUT: result_45.<created> = TRUE TRUE"
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "true_left" (formula "37"))
                                                   (rule "commute_and" (formula "8") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                   (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "commute_or_2" (formula "14") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "22") (term "0,1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "26") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "53") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "53"))
                                                   (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                                                   (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "55"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "true_left" (formula "53"))
                                                   (rule "applyEq" (formula "53") (term "0,0,1,0,0,1,0,0") (ifseqformula "54"))
                                                   (rule "applyEq" (formula "53") (term "0,0,1,0") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "true_left" (formula "53"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                   (rule "castedGetAny" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "14") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "14") (term "0"))
                                                   (rule "distr_forallAnd" (formula "14"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "commute_or_2" (formula "5") (term "0,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "26") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "26") (term "0"))
                                                   (rule "distr_forallAnd" (formula "26"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "commute_or_2" (formula "14") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "eqSymm" (formula "14") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "commute_or_2" (formula "24") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "eqSymm" (formula "24") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "24") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "24") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "24") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0"))
                                                   (rule "distr_forallAnd" (formula "11"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0"))
                                                   (rule "distr_forallAnd" (formula "20"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "23") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "23") (term "0"))
                                                   (rule "distr_forallAnd" (formula "23"))
                                                   (rule "andLeft" (formula "23"))
                                                   (rule "commute_and_2" (formula "22") (term "1,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0"))
                                                   (rule "distr_forallAnd" (formula "19"))
                                                   (rule "andLeft" (formula "19"))
                                                   (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0"))
                                                   (rule "distr_forallAnd" (formula "9"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "ifthenelse_split" (formula "61") (term "0"))
                                                   (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                      (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                      (rule "hideAuxiliaryEq" (formula "62"))
                                                      (rule "replace_known_left" (formula "64") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "64"))
                                                      (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "64"))
                                                      (rule "hideAuxiliaryEq" (formula "64"))
                                                      (rule "replace_known_left" (formula "64") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "64"))
                                                      (rule "eqSymm" (formula "64"))
                                                      (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "64"))
                                                      (rule "hideAuxiliaryEq" (formula "64"))
                                                      (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                      (rule "hideAuxiliaryEq" (formula "62"))
                                                      (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "60"))
                                                      (rule "true_left" (formula "60"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0"))
                                                      (rule "distr_forallAnd" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0"))
                                                      (rule "distr_forallAnd" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "eqSymm" (formula "22") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "1,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                      (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "50") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "50") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "50") (term "0"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "closeFalse" (formula "50"))
                                                   )
                                                   (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                      (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "61"))
                                                      (rule "hideAuxiliaryEq" (formula "61"))
                                                      (rule "replace_known_right" (formula "61") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "61"))
                                                      (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "64"))
                                                      (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "60"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0"))
                                                      (rule "distr_forallAnd" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0"))
                                                      (rule "distr_forallAnd" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "eqSymm" (formula "22") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "1,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                      (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "50") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "50") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "50") (term "0"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "closeFalse" (formula "50"))
                                                   )
                                                )
                                                (branch "CUT: result_45.<created> = TRUE FALSE"
                                                    (builtin "One Step Simplification" (formula "36"))
                                                   (rule "commute_and" (formula "8") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                   (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "commute_or_2" (formula "14") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "22") (term "0,1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "26") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "53") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "53"))
                                                   (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                                                   (rule "applyEq" (formula "54") (term "0,0,1,0,0,1,0,0") (ifseqformula "55"))
                                                   (rule "applyEq" (formula "54") (term "0,0,1,0") (ifseqformula "55"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "true_left" (formula "54"))
                                                   (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "true_left" (formula "53"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                   (rule "castedGetAny" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "14") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "14") (term "0"))
                                                   (rule "distr_forallAnd" (formula "14"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "26") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "26") (term "0"))
                                                   (rule "distr_forallAnd" (formula "26"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "commute_or_2" (formula "5") (term "0,0,0,0"))
                                                   (rule "commute_or_2" (formula "14") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "eqSymm" (formula "14") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "commute_or_2" (formula "24") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "eqSymm" (formula "24") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "24") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "24") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "24") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0"))
                                                   (rule "distr_forallAnd" (formula "11"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0"))
                                                   (rule "distr_forallAnd" (formula "20"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "23") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "23") (term "0"))
                                                   (rule "distr_forallAnd" (formula "23"))
                                                   (rule "andLeft" (formula "23"))
                                                   (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0"))
                                                   (rule "distr_forallAnd" (formula "19"))
                                                   (rule "andLeft" (formula "19"))
                                                   (rule "commute_and_2" (formula "22") (term "1,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0"))
                                                   (rule "distr_forallAnd" (formula "9"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "ifthenelse_split" (formula "61") (term "0"))
                                                   (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                      (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                      (rule "hideAuxiliaryEq" (formula "62"))
                                                      (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                      (rule "hideAuxiliaryEq" (formula "63"))
                                                      (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                      (rule "hideAuxiliaryEq" (formula "62"))
                                                      (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "eqSymm" (formula "63"))
                                                      (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "63"))
                                                      (rule "hideAuxiliaryEq" (formula "63"))
                                                      (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "60"))
                                                      (rule "true_left" (formula "60"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0"))
                                                      (rule "distr_forallAnd" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0"))
                                                      (rule "distr_forallAnd" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "eqSymm" (formula "22") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "1,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                      (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "50") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "50") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "50") (term "0"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "closeFalse" (formula "50"))
                                                   )
                                                   (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                      (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "61"))
                                                      (rule "hideAuxiliaryEq" (formula "61"))
                                                      (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "64"))
                                                      (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "replace_known_right" (formula "61") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "61"))
                                                      (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "60"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0"))
                                                      (rule "distr_forallAnd" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0"))
                                                      (rule "distr_forallAnd" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "eqSymm" (formula "22") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "1,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "50") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "50"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "4"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0"))
                                                      (rule "add_zero_right" (formula "4") (term "0"))
                                                      (rule "leq_literals" (formula "4"))
                                                      (rule "closeFalse" (formula "4"))
                                                   )
                                                )
                                             )
                                             (branch "CUT: result_46.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "cut_direct" (formula "36") (term "0"))
                                                (branch "CUT: result_45.<created> = TRUE TRUE"
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "true_left" (formula "37"))
                                                   (rule "commute_and" (formula "8") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                   (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "commute_or_2" (formula "14") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "22") (term "0,1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "26") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "53") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "53"))
                                                   (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                                                   (rule "applyEq" (formula "54") (term "0,0,1,0,0,1,0,0") (ifseqformula "55"))
                                                   (rule "applyEq" (formula "54") (term "0,0,1,0") (ifseqformula "55"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "true_left" (formula "54"))
                                                   (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "true_left" (formula "53"))
                                                   (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                   (rule "castedGetAny" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "14") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "14") (term "0"))
                                                   (rule "distr_forallAnd" (formula "14"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "26") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "26") (term "0"))
                                                   (rule "distr_forallAnd" (formula "26"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "commute_or_2" (formula "5") (term "0,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "22") (term "0"))
                                                   (rule "distr_forallAnd" (formula "22"))
                                                   (rule "andLeft" (formula "22"))
                                                   (rule "commute_or_2" (formula "14") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "eqSymm" (formula "14") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "eqSymm" (formula "25") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "25") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "25") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "true_left" (formula "25"))
                                                   (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0"))
                                                   (rule "distr_forallAnd" (formula "11"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0"))
                                                   (rule "distr_forallAnd" (formula "19"))
                                                   (rule "andLeft" (formula "19"))
                                                   (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "23") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "23") (term "0"))
                                                   (rule "distr_forallAnd" (formula "23"))
                                                   (rule "andLeft" (formula "23"))
                                                   (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0"))
                                                   (rule "distr_forallAnd" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0"))
                                                   (rule "distr_forallAnd" (formula "9"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "ifthenelse_split" (formula "61") (term "0"))
                                                   (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                      (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                      (rule "hideAuxiliaryEq" (formula "62"))
                                                      (rule "replace_known_left" (formula "65") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "65"))
                                                      (rule "eqSymm" (formula "65"))
                                                      (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "65"))
                                                      (rule "hideAuxiliaryEq" (formula "65"))
                                                      (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                      (rule "hideAuxiliaryEq" (formula "62"))
                                                      (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                      (rule "hideAuxiliaryEq" (formula "62"))
                                                      (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "60"))
                                                      (rule "true_left" (formula "60"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0"))
                                                      (rule "distr_forallAnd" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "12") (term "0"))
                                                      (rule "distr_forallAnd" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "eqSymm" (formula "22") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "1,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0"))
                                                      (rule "distr_forallAnd" (formula "20"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "50") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (ifseqformula "4"))
                                                      (rule "andLeft" (formula "50"))
                                                      (rule "inEqSimp_homoInEq1" (formula "50"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "50") (term "0"))
                                                      (rule "add_literals" (formula "50") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "50") (term "1,0"))
                                                      (rule "add_zero_right" (formula "50") (term "0"))
                                                      (rule "leq_literals" (formula "50"))
                                                      (rule "closeFalse" (formula "50"))
                                                   )
                                                   (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                      (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "61"))
                                                      (rule "hideAuxiliaryEq" (formula "61"))
                                                      (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "64"))
                                                      (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "replace_known_right" (formula "61") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "61"))
                                                      (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "60"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0"))
                                                      (rule "distr_forallAnd" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "12") (term "0"))
                                                      (rule "distr_forallAnd" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "eqSymm" (formula "22") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "1,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "20") (term "0"))
                                                      (rule "distr_forallAnd" (formula "20"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "50") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (ifseqformula "4"))
                                                      (rule "andLeft" (formula "50"))
                                                      (rule "inEqSimp_homoInEq1" (formula "50"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "50") (term "0"))
                                                      (rule "add_literals" (formula "50") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "50") (term "1,0"))
                                                      (rule "add_literals" (formula "50") (term "0"))
                                                      (rule "leq_literals" (formula "50"))
                                                      (rule "closeFalse" (formula "50"))
                                                   )
                                                )
                                                (branch "CUT: result_45.<created> = TRUE FALSE"
                                                    (builtin "One Step Simplification" (formula "36"))
                                                   (rule "commute_and" (formula "8") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "21") (term "1,0,0,0"))
                                                   (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "14") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "commute_or_2" (formula "14") (term "0,0,0,0"))
                                                   (rule "commute_and" (formula "22") (term "0,1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "26") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "53") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "53"))
                                                   (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                                                   (rule "applyEq" (formula "54") (term "0,0,1,0,0,1,0,0") (ifseqformula "55"))
                                                   (rule "applyEq" (formula "54") (term "0,0,1,0") (ifseqformula "55"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "true_left" (formula "54"))
                                                   (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "true_left" (formula "53"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                   (rule "castedGetAny" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "commute_and" (formula "5") (term "0,1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "15") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "15") (term "0"))
                                                   (rule "distr_forallAnd" (formula "15"))
                                                   (rule "andLeft" (formula "15"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "26") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "26") (term "0"))
                                                   (rule "distr_forallAnd" (formula "26"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "commute_or_2" (formula "14") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "eqSymm" (formula "14") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "commute_or_2" (formula "5") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0"))
                                                   (rule "distr_forallAnd" (formula "11"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "eqSymm" (formula "25") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "25") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "25") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "true_left" (formula "25"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0"))
                                                   (rule "distr_forallAnd" (formula "20"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "23") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "23") (term "0"))
                                                   (rule "distr_forallAnd" (formula "23"))
                                                   (rule "andLeft" (formula "23"))
                                                   (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0"))
                                                   (rule "distr_forallAnd" (formula "19"))
                                                   (rule "andLeft" (formula "19"))
                                                   (rule "commute_and_2" (formula "22") (term "1,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0"))
                                                   (rule "distr_forallAnd" (formula "9"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "ifthenelse_split" (formula "61") (term "0"))
                                                   (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                      (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                      (rule "hideAuxiliaryEq" (formula "62"))
                                                      (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                      (rule "hideAuxiliaryEq" (formula "63"))
                                                      (rule "replace_known_left" (formula "64") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "64"))
                                                      (rule "eqSymm" (formula "64"))
                                                      (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "64"))
                                                      (rule "hideAuxiliaryEq" (formula "64"))
                                                      (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                      (rule "hideAuxiliaryEq" (formula "62"))
                                                      (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "61"))
                                                       (builtin "One Step Simplification" (formula "60"))
                                                      (rule "true_left" (formula "60"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0"))
                                                      (rule "distr_forallAnd" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0"))
                                                      (rule "distr_forallAnd" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "commute_and_2" (formula "5") (term "1,0,0,0"))
                                                      (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "eqSymm" (formula "22") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "1,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                      (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "50") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "50") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "50"))
                                                      (rule "qeq_literals" (formula "3") (term "0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                   (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                      (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "61"))
                                                      (rule "hideAuxiliaryEq" (formula "61"))
                                                      (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "64"))
                                                      (rule "replace_known_right" (formula "61") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "61"))
                                                      (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "60"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "24") (term "0"))
                                                      (rule "distr_forallAnd" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "13") (term "0"))
                                                      (rule "distr_forallAnd" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "commute_and_2" (formula "5") (term "1,0,0,0"))
                                                      (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "eqSymm" (formula "22") (term "1,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "1,0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "1,0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "cnf_rightDist" (formula "6") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "6") (term "0"))
                                                      (rule "distr_forallAnd" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "8") (term "0"))
                                                      (rule "distr_forallAnd" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                      (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "50") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "50") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "50"))
                                                      (rule "qeq_literals" (formula "3") (term "0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch " result_48.<created> = TRUE ∨ result_48.<created>@anon_heap_FileReader«anonHeapFunction» = TRUE ∨ result_48.<created>@anon_heap_parse«anonHeapFunction» = TRUE ∨ result_48.<created>@anon_heap_withDelimiter«anonHeapFunction» = TRUE ∨ result_48.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                    (rule "replaceKnownSelect_taclet00000000_21" (formula "1") (term "0,1,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00000000_22" (formula "1") (term "0,1,1"))
                                    (rule "notRight" (formula "104"))
                                    (rule "orRight" (formula "104"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "orRight" (formula "105"))
                                    (rule "orRight" (formula "105"))
                                    (rule "orRight" (formula "105"))
                                    (rule "replace_known_right" (formula "56") (term "1,0,0,0,0") (ifseqformula "106"))
                                     (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "105")) (ifInst ""  (formula "108")) (ifInst ""  (formula "109")))
                                    (rule "applyEqReverse" (formula "57") (term "1,0") (ifseqformula "56"))
                                    (rule "hideAuxiliaryEq" (formula "56"))
                                    (rule "replace_known_right" (formula "56") (term "1,0,0,0,0") (ifseqformula "106"))
                                     (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "104")) (ifInst ""  (formula "105")) (ifInst ""  (formula "107")) (ifInst ""  (formula "108")))
                                    (rule "replace_known_right" (formula "55") (term "0,0,0,0") (ifseqformula "104"))
                                     (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "107")) (ifInst ""  (formula "108")))
                                    (rule "hideAuxiliaryEq" (formula "55"))
                                    (rule "replace_known_right" (formula "53") (term "0,0") (ifseqformula "103"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "applyEqReverse" (formula "54") (term "1,0") (ifseqformula "53"))
                                    (rule "hideAuxiliaryEq" (formula "53"))
                                    (rule "replace_known_right" (formula "53") (term "1,0,0") (ifseqformula "106"))
                                     (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "102")))
                                    (rule "hideAuxiliaryEq" (formula "53"))
                                    (rule "replace_known_right" (formula "52") (term "1,0,0,0,0") (ifseqformula "102"))
                                     (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "101")) (ifInst ""  (formula "103")) (ifInst ""  (formula "104")) (ifInst ""  (formula "105")))
                                    (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "53"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "nnf_imp2or" (formula "24") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "nnf_imp2or" (formula "25") (term "0,0,0"))
                                    (rule "nnf_imp2or" (formula "6") (term "0,0,0"))
                                    (rule "nnf_imp2or" (formula "10") (term "0,0,0"))
                                    (rule "nnf_imp2or" (formula "7") (term "0,0,0"))
                                    (rule "nnf_imp2or" (formula "8") (term "0,0,0"))
                                    (rule "nnf_imp2or" (formula "20") (term "0,0,0"))
                                    (rule "nnf_imp2or" (formula "4") (term "0,0,0"))
                                    (rule "nnf_imp2or" (formula "9") (term "0,0,0"))
                                    (rule "nnf_imp2or" (formula "21") (term "0,0,0"))
                                    (rule "nnf_imp2or" (formula "5") (term "0,0,0"))
                                    (rule "nnf_imp2or" (formula "22") (term "0,0,0"))
                                    (rule "nnf_imp2or" (formula "23") (term "0,0,0"))
                                    (rule "nnf_imp2or" (formula "11") (term "0,0,0"))
                                    (rule "nnf_imp2or" (formula "19") (term "0,0,0"))
                                    (rule "nnf_imp2or" (formula "13") (term "0,0,0"))
                                    (rule "nnf_imp2or" (formula "12") (term "0,0,0"))
                                    (rule "nnf_imp2or" (formula "55") (term "0"))
                                    (rule "nnf_notAnd" (formula "55") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "55") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "55") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "55") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0"))
                                    (rule "mul_literals" (formula "55") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "55") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "55") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "55") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "55") (term "1,0,0,0"))
                                    (rule "nnf_imp2or" (formula "25") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "25") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "nnf_imp2or" (formula "6") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "6") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "nnf_notAnd" (formula "10") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "nnf_notAnd" (formula "7") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "nnf_notAnd" (formula "8") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "nnf_imp2or" (formula "20") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "20") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "nnf_imp2or" (formula "4") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "4") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "nnf_imp2or" (formula "21") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "21") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "nnf_notAnd" (formula "5") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "nnf_notAnd" (formula "22") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "nnf_imp2or" (formula "23") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "23") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "nnf_notAnd" (formula "11") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "nnf_imp2or" (formula "19") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "19") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "nnf_notAnd" (formula "13") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "nnf_imp2or" (formula "12") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "12") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "nnf_imp2or" (formula "10") (term "1,0,0,0"))
                                    (rule "nnf_imp2or" (formula "7") (term "1,0,0,0"))
                                    (rule "nnf_imp2or" (formula "8") (term "1,0,0,0"))
                                    (rule "nnf_notOr" (formula "25") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "25") (term "0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "nnf_notOr" (formula "6") (term "0,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "6") (term "0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "nnf_notOr" (formula "10") (term "1,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "7") (term "1,0,0,0,0"))
                                    (rule "nnf_imp2or" (formula "9") (term "1,0,0,0"))
                                    (rule "nnf_notOr" (formula "8") (term "1,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "20") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "20") (term "0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "nnf_imp2or" (formula "5") (term "1,0,0,0"))
                                    (rule "nnf_imp2or" (formula "22") (term "1,0,0,0"))
                                    (rule "nnf_notOr" (formula "4") (term "0,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "4") (term "0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "nnf_notOr" (formula "9") (term "1,0,0,0,0"))
                                    (rule "nnf_imp2or" (formula "11") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "21") (term "0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "nnf_notOr" (formula "5") (term "1,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "22") (term "1,0,0,0,0"))
                                    (rule "nnf_imp2or" (formula "13") (term "1,0,0,0"))
                                    (rule "nnf_notOr" (formula "23") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "23") (term "0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "nnf_notOr" (formula "11") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "19") (term "0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "nnf_notOr" (formula "13") (term "1,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "12") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "12") (term "0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "nnf_notAnd" (formula "10") (term "0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "nnf_notAnd" (formula "7") (term "0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "nnf_notAnd" (formula "8") (term "0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "nnf_notAnd" (formula "9") (term "0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "nnf_notAnd" (formula "5") (term "0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "nnf_notAnd" (formula "22") (term "0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "nnf_notOr" (formula "6") (term "0,0,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "11") (term "0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "nnf_notOr" (formula "21") (term "1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "13") (term "0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "nnf_notOr" (formula "4") (term "0,0,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "19") (term "1,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "12") (term "0,1,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "10") (term "0,1,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "8") (term "0,1,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "21") (term "0,1,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "19") (term "0,1,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "6") (term "0,0,0,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "4") (term "1,0,0,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "12") (term "0,0,1,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "10") (term "0,0,1,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "8") (term "0,0,1,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "19") (term "0,0,1,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "6") (term "0,0,0,0,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "4") (term "0,1,0,0,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "12") (term "0,0,0,1,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "10") (term "0,0,0,1,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "8") (term "0,0,0,1,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "6") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "4") (term "0,0,1,0,0,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "10") (term "0,0,0,0,1,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "8") (term "0,0,0,0,1,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "6") (term "0,1,0,0,0,0,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "4") (term "0,0,0,1,0,0,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "8") (term "0,0,0,0,0,1,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "6") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "4") (term "0,0,0,0,1,0,0,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "4") (term "0,0,0,0,0,1,0,0,0,0,0,0"))
                                    (rule "commute_or_2" (formula "55") (term "0"))
                                    (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "6") (term "1,0,0,0"))
                                    (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                    (rule "ifthenelse_split" (formula "62") (term "0"))
                                    (branch "result_49.<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                       (rule "hideAuxiliaryEq" (formula "63"))
                                       (rule "replace_known_left" (formula "63") (term "0,0,0") (ifseqformula "62"))
                                        (builtin "One Step Simplification" (formula "63"))
                                       (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                       (rule "hideAuxiliaryEq" (formula "63"))
                                       (rule "replace_known_left" (formula "66") (term "0,0,0,0,0,0,0") (ifseqformula "62"))
                                        (builtin "One Step Simplification" (formula "66"))
                                       (rule "eqSymm" (formula "66"))
                                       (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "66"))
                                       (rule "hideAuxiliaryEq" (formula "66"))
                                       (rule "replace_known_left" (formula "65") (term "0,0,0,0,0,0") (ifseqformula "62"))
                                        (builtin "One Step Simplification" (formula "65"))
                                       (rule "replace_known_left" (formula "63") (term "0,0,0,0") (ifseqformula "62"))
                                        (builtin "One Step Simplification" (formula "63"))
                                       (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                       (rule "hideAuxiliaryEq" (formula "63"))
                                       (rule "replace_known_left" (formula "63") (term "0,0,0,0,0") (ifseqformula "62"))
                                        (builtin "One Step Simplification" (formula "63"))
                                       (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "63"))
                                       (rule "hideAuxiliaryEq" (formula "63"))
                                       (rule "eqSymm" (formula "63"))
                                       (rule "replace_known_left" (formula "61") (term "0,0,0,0,0,0") (ifseqformula "62"))
                                        (builtin "One Step Simplification" (formula "61"))
                                       (rule "true_left" (formula "61"))
                                       (rule "applyEq" (formula "55") (term "0,0,0,1,0,0") (ifseqformula "62"))
                                       (rule "applyEq" (formula "53") (term "1") (ifseqformula "62"))
                                       (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "62"))
                                       (rule "applyEq" (formula "55") (term "0,1,0,0,0") (ifseqformula "62"))
                                       (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "62"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "62"))
                                       (rule "commute_or_2" (formula "7") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "21") (term "1,0,0,0"))
                                       (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "5") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "19") (term "1,0,0,0"))
                                       (rule "commute_or_2" (formula "13") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "12") (term "1,0,0,0"))
                                       (rule "commute_or_2" (formula "10") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "4") (term "0,1,0,0,0"))
                                       (rule "commute_or_2" (formula "8") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "55") (term "0,0"))
                                       (rule "commute_or_2" (formula "55") (term "0"))
                                       (rule "commute_or" (formula "6") (term "0,0,0,0"))
                                       (rule "commute_or" (formula "4") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                       (rule "shift_paren_or" (formula "25") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "20") (term "1,0,0,0,0"))
                                       (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "23") (term "1,0,0,0,0"))
                                       (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "6") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,0"))
                                       (rule "commute_and" (formula "25") (term "1,0,0,0"))
                                       (rule "commute_and" (formula "20") (term "1,0,0,0"))
                                       (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                       (rule "commute_or_2" (formula "7") (term "1,0,0,0,0"))
                                       (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "5") (term "1,0,0,0,0"))
                                       (rule "shift_paren_or" (formula "22") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "11") (term "1,0,0,0,0"))
                                       (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                       (rule "cut_direct" (formula "35") (term "0"))
                                       (branch "CUT: result_45.<created> = TRUE TRUE"
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "true_left" (formula "36"))
                                          (rule "cut_direct" (formula "48") (term "0,0,0,0"))
                                          (branch "CUT: result_47.<created> = TRUE TRUE"
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "true_left" (formula "49"))
                                             (rule "cut_direct" (formula "38") (term "0,0"))
                                             (branch "CUT: result_46.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "7") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "9") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "5") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "22") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "4") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "11") (term "1,0,0,0"))
                                                (rule "commute_and" (formula "13") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "commute_or_2" (formula "9") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "21") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "commute_and" (formula "4") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0"))
                                                (rule "distr_forallAnd" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "shift_paren_or" (formula "4") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0"))
                                                (rule "distr_forallAnd" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "13") (term "0"))
                                                (rule "distr_forallAnd" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "commute_or_2" (formula "4") (term "0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0"))
                                                (rule "distr_forallAnd" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0"))
                                                (rule "distr_forallAnd" (formula "20"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0"))
                                                (rule "distr_forallAnd" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0"))
                                                (rule "distr_forallAnd" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0"))
                                                (rule "distr_forallAnd" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "shift_paren_or" (formula "9") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "eqSymm" (formula "9") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0"))
                                                (rule "distr_forallAnd" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "commute_or_2" (formula "18") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "eqSymm" (formula "18") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "18") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "18") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "commute_and_2" (formula "4") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "1,0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0"))
                                                (rule "distr_forallAnd" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0"))
                                                (rule "distr_forallAnd" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0"))
                                                (rule "distr_forallAnd" (formula "11"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "50") (term "0,0,1"))
                                                (rule "leq_literals" (formula "50") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "50"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: result_46.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "7") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "9") (term "1,0,0,0"))
                                                (rule "commute_and" (formula "5") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "22") (term "1,0,0,0"))
                                                (rule "commute_and" (formula "11") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "4") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "13") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "commute_or_2" (formula "9") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "21") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "commute_and" (formula "4") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0"))
                                                (rule "distr_forallAnd" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "shift_paren_or" (formula "4") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0"))
                                                (rule "distr_forallAnd" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "13") (term "0"))
                                                (rule "distr_forallAnd" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0"))
                                                (rule "distr_forallAnd" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0"))
                                                (rule "distr_forallAnd" (formula "20"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0"))
                                                (rule "distr_forallAnd" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "commute_or_2" (formula "4") (term "0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0"))
                                                (rule "distr_forallAnd" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0"))
                                                (rule "distr_forallAnd" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0"))
                                                (rule "distr_forallAnd" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "shift_paren_or" (formula "9") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "eqSymm" (formula "9") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "commute_or_2" (formula "18") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "eqSymm" (formula "18") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "18") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "18") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "1,0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0"))
                                                (rule "distr_forallAnd" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "commute_and_2" (formula "4") (term "1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0"))
                                                (rule "distr_forallAnd" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0"))
                                                (rule "distr_forallAnd" (formula "11"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "50") (term "0,0,1"))
                                                (rule "leq_literals" (formula "50") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "50"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                          (branch "CUT: result_47.<created> = TRUE FALSE"
                                              (builtin "One Step Simplification" (formula "48"))
                                             (rule "cut_direct" (formula "38") (term "0,0"))
                                             (branch "CUT: result_46.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "7") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "9") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "5") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "22") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "11") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "4") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "13") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "commute_or_2" (formula "9") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "21") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "commute_and" (formula "4") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0"))
                                                (rule "distr_forallAnd" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "shift_paren_or" (formula "4") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0"))
                                                (rule "distr_forallAnd" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "13") (term "0"))
                                                (rule "distr_forallAnd" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0"))
                                                (rule "distr_forallAnd" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0"))
                                                (rule "distr_forallAnd" (formula "20"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0"))
                                                (rule "distr_forallAnd" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "commute_or_2" (formula "4") (term "0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0"))
                                                (rule "distr_forallAnd" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0"))
                                                (rule "distr_forallAnd" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0"))
                                                (rule "distr_forallAnd" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "shift_paren_or" (formula "9") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "eqSymm" (formula "9") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "commute_or_2" (formula "18") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "eqSymm" (formula "18") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "18") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "18") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "1,0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "commute_and_2" (formula "4") (term "1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0"))
                                                (rule "distr_forallAnd" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0"))
                                                (rule "distr_forallAnd" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0"))
                                                (rule "distr_forallAnd" (formula "11"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "50") (term "0,0,1"))
                                                (rule "leq_literals" (formula "50") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "inEqSimp_contradInEq1" (formula "50") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "50") (term "0"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "closeFalse" (formula "50"))
                                             )
                                             (branch "CUT: result_46.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "7") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "9") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "5") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "22") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "4") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "11") (term "1,0,0,0"))
                                                (rule "commute_and" (formula "13") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "commute_or_2" (formula "9") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "21") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "commute_and" (formula "4") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0"))
                                                (rule "distr_forallAnd" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "shift_paren_or" (formula "4") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0"))
                                                (rule "distr_forallAnd" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "13") (term "0"))
                                                (rule "distr_forallAnd" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0"))
                                                (rule "distr_forallAnd" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0"))
                                                (rule "distr_forallAnd" (formula "20"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0"))
                                                (rule "distr_forallAnd" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "commute_or_2" (formula "4") (term "0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0"))
                                                (rule "distr_forallAnd" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0"))
                                                (rule "distr_forallAnd" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "shift_paren_or" (formula "9") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "eqSymm" (formula "9") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0"))
                                                (rule "distr_forallAnd" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "commute_or_2" (formula "18") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "eqSymm" (formula "18") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "18") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "18") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "1,0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0"))
                                                (rule "distr_forallAnd" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "commute_and_2" (formula "4") (term "1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0"))
                                                (rule "distr_forallAnd" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0"))
                                                (rule "distr_forallAnd" (formula "11"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "50") (term "0,0,1"))
                                                (rule "leq_literals" (formula "50") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "inEqSimp_contradInEq1" (formula "50") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "50") (term "0"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "closeFalse" (formula "50"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_45.<created> = TRUE FALSE"
                                           (builtin "One Step Simplification" (formula "35"))
                                          (rule "cut_direct" (formula "48") (term "0,0,0,0"))
                                          (branch "CUT: result_47.<created> = TRUE TRUE"
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "true_left" (formula "49"))
                                             (rule "cut_direct" (formula "38") (term "0,0"))
                                             (branch "CUT: result_46.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "7") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "9") (term "1,0,0,0"))
                                                (rule "commute_and" (formula "5") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "22") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "4") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "11") (term "1,0,0,0"))
                                                (rule "commute_and" (formula "13") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "commute_or_2" (formula "9") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "21") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "commute_and" (formula "4") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0"))
                                                (rule "distr_forallAnd" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "shift_paren_or" (formula "4") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0"))
                                                (rule "distr_forallAnd" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "13") (term "0"))
                                                (rule "distr_forallAnd" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0"))
                                                (rule "distr_forallAnd" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0"))
                                                (rule "distr_forallAnd" (formula "20"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0"))
                                                (rule "distr_forallAnd" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "commute_or_2" (formula "4") (term "0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0"))
                                                (rule "distr_forallAnd" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0"))
                                                (rule "distr_forallAnd" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0"))
                                                (rule "distr_forallAnd" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "shift_paren_or" (formula "9") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "eqSymm" (formula "9") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "commute_or_2" (formula "18") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "eqSymm" (formula "18") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "18") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "18") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "1,0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0"))
                                                (rule "distr_forallAnd" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "commute_and_2" (formula "4") (term "1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0"))
                                                (rule "distr_forallAnd" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0"))
                                                (rule "distr_forallAnd" (formula "11"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "50") (term "0,0,1"))
                                                (rule "leq_literals" (formula "50") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "50"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: result_46.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "7") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "9") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "5") (term "1,0,0,0"))
                                                (rule "commute_and" (formula "22") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "4") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "11") (term "1,0,0,0"))
                                                (rule "commute_and" (formula "13") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "commute_or_2" (formula "9") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "21") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "commute_and" (formula "4") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0"))
                                                (rule "distr_forallAnd" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "shift_paren_or" (formula "4") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0"))
                                                (rule "distr_forallAnd" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "13") (term "0"))
                                                (rule "distr_forallAnd" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0"))
                                                (rule "distr_forallAnd" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0"))
                                                (rule "distr_forallAnd" (formula "20"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0"))
                                                (rule "distr_forallAnd" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "commute_or_2" (formula "4") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0"))
                                                (rule "distr_forallAnd" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0"))
                                                (rule "distr_forallAnd" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "shift_paren_or" (formula "9") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "eqSymm" (formula "9") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0"))
                                                (rule "distr_forallAnd" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "commute_or_2" (formula "18") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "eqSymm" (formula "18") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "18") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "18") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "1,0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0"))
                                                (rule "distr_forallAnd" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "commute_and_2" (formula "4") (term "1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0"))
                                                (rule "distr_forallAnd" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0"))
                                                (rule "distr_forallAnd" (formula "11"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "50") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "inEqSimp_contradInEq1" (formula "50") (ifseqformula "3"))
                                                (rule "andLeft" (formula "50"))
                                                (rule "inEqSimp_homoInEq1" (formula "50"))
                                                (rule "polySimp_pullOutFactor1b" (formula "50") (term "0"))
                                                (rule "add_literals" (formula "50") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "50") (term "1,0"))
                                                (rule "add_literals" (formula "50") (term "0"))
                                                (rule "leq_literals" (formula "50"))
                                                (rule "closeFalse" (formula "50"))
                                             )
                                          )
                                          (branch "CUT: result_47.<created> = TRUE FALSE"
                                              (builtin "One Step Simplification" (formula "48"))
                                             (rule "cut_direct" (formula "38") (term "0,0"))
                                             (branch "CUT: result_46.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "7") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "9") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "5") (term "1,0,0,0"))
                                                (rule "commute_and" (formula "22") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "11") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "4") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "13") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "commute_or_2" (formula "9") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "21") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "commute_and" (formula "4") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0"))
                                                (rule "distr_forallAnd" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "shift_paren_or" (formula "4") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0"))
                                                (rule "distr_forallAnd" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "13") (term "0"))
                                                (rule "distr_forallAnd" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0"))
                                                (rule "distr_forallAnd" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0"))
                                                (rule "distr_forallAnd" (formula "20"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0"))
                                                (rule "distr_forallAnd" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "commute_or_2" (formula "4") (term "0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0"))
                                                (rule "distr_forallAnd" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0"))
                                                (rule "distr_forallAnd" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0"))
                                                (rule "distr_forallAnd" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "shift_paren_or" (formula "9") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "eqSymm" (formula "9") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "commute_or_2" (formula "18") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "eqSymm" (formula "18") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "18") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "18") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "1,0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0"))
                                                (rule "distr_forallAnd" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "commute_and_2" (formula "4") (term "1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0"))
                                                (rule "distr_forallAnd" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0"))
                                                (rule "distr_forallAnd" (formula "11"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "50") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "inEqSimp_contradInEq1" (formula "50") (ifseqformula "3"))
                                                (rule "andLeft" (formula "50"))
                                                (rule "inEqSimp_homoInEq1" (formula "50"))
                                                (rule "polySimp_pullOutFactor1b" (formula "50") (term "0"))
                                                (rule "add_literals" (formula "50") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "50") (term "1,0"))
                                                (rule "add_literals" (formula "50") (term "0"))
                                                (rule "leq_literals" (formula "50"))
                                                (rule "closeFalse" (formula "50"))
                                             )
                                             (branch "CUT: result_46.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "7") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "9") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "5") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "22") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "11") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "4") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "13") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "commute_or_2" (formula "9") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "21") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "commute_and" (formula "4") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0"))
                                                (rule "distr_forallAnd" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0"))
                                                (rule "distr_forallAnd" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "shift_paren_or" (formula "4") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "13") (term "0"))
                                                (rule "distr_forallAnd" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0"))
                                                (rule "distr_forallAnd" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0"))
                                                (rule "distr_forallAnd" (formula "20"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0"))
                                                (rule "distr_forallAnd" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0"))
                                                (rule "distr_forallAnd" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "shift_paren_or" (formula "9") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "eqSymm" (formula "9") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0"))
                                                (rule "distr_forallAnd" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0"))
                                                (rule "distr_forallAnd" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "commute_or_2" (formula "4") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "commute_or_2" (formula "18") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "eqSymm" (formula "18") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "18") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "18") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "eqSymm" (formula "19") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "1,0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "19") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0"))
                                                (rule "distr_forallAnd" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "commute_and_2" (formula "4") (term "1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0"))
                                                (rule "distr_forallAnd" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0"))
                                                (rule "distr_forallAnd" (formula "11"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "50") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "inEqSimp_contradInEq1" (formula "50") (ifseqformula "3"))
                                                (rule "andLeft" (formula "50"))
                                                (rule "inEqSimp_homoInEq1" (formula "50"))
                                                (rule "polySimp_pullOutFactor1b" (formula "50") (term "0"))
                                                (rule "add_literals" (formula "50") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "50") (term "1,0"))
                                                (rule "add_literals" (formula "50") (term "0"))
                                                (rule "leq_literals" (formula "50"))
                                                (rule "closeFalse" (formula "50"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "result_49.<created> = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                       (rule "hideAuxiliaryEq" (formula "62"))
                                       (rule "replace_known_right" (formula "66") (term "0,0,0,0,0,0,0") (ifseqformula "73"))
                                        (builtin "One Step Simplification" (formula "66"))
                                       (rule "replace_known_right" (formula "65") (term "0,0,0,0,0,0") (ifseqformula "73"))
                                        (builtin "One Step Simplification" (formula "65"))
                                       (rule "replace_known_right" (formula "63") (term "0,0,0,0") (ifseqformula "73"))
                                        (builtin "One Step Simplification" (formula "63"))
                                       (rule "replace_known_right" (formula "64") (term "0,0,0,0,0") (ifseqformula "73"))
                                        (builtin "One Step Simplification" (formula "64"))
                                       (rule "replace_known_right" (formula "62") (term "0,0,0") (ifseqformula "73"))
                                        (builtin "One Step Simplification" (formula "62"))
                                       (rule "replace_known_right" (formula "61") (term "0,0,0,0,0,0") (ifseqformula "73"))
                                        (builtin "One Step Simplification" (formula "61"))
                                       (rule "commute_or_2" (formula "7") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "21") (term "1,0,0,0"))
                                       (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "5") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "19") (term "1,0,0,0"))
                                       (rule "commute_or_2" (formula "13") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "12") (term "1,0,0,0"))
                                       (rule "commute_or_2" (formula "10") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "4") (term "0,1,0,0,0"))
                                       (rule "commute_or_2" (formula "8") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "55") (term "0,0"))
                                       (rule "commute_or_2" (formula "55") (term "0"))
                                       (rule "commute_or" (formula "6") (term "0,0,0,0"))
                                       (rule "commute_or" (formula "4") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "6") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,0"))
                                       (rule "shift_paren_or" (formula "25") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "20") (term "1,0,0,0,0"))
                                       (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "7") (term "1,0,0,0,0"))
                                       (rule "commute_and" (formula "25") (term "1,0,0,0"))
                                       (rule "commute_or_2" (formula "9") (term "1,0,0,0,0"))
                                       (rule "commute_and" (formula "20") (term "1,0,0,0"))
                                       (rule "commute_or_2" (formula "5") (term "1,0,0,0,0"))
                                       (rule "commute_and" (formula "23") (term "1,0,0,0"))
                                       (rule "commute_or_2" (formula "22") (term "1,0,0,0,0"))
                                       (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "13") (term "1,0,0,0,0"))
                                       (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "19") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
                                       (rule "commute_and" (formula "7") (term "1,0,0,0"))
                                       (rule "shift_paren_or" (formula "6") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "4") (term "0,0,0,0"))
                                       (rule "commute_and" (formula "9") (term "1,0,0,0"))
                                       (rule "commute_and" (formula "5") (term "1,0,0,0"))
                                       (rule "commute_and" (formula "22") (term "1,0,0,0"))
                                       (rule "shift_paren_or" (formula "20") (term "0,0,0,0"))
                                       (rule "commute_and" (formula "11") (term "1,0,0,0"))
                                       (rule "shift_paren_or" (formula "7") (term "0,0,0,0"))
                                       (rule "commute_and" (formula "13") (term "1,0,0,0"))
                                       (rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
                                       (rule "cut_direct" (formula "35") (term "0"))
                                       (branch "CUT: result_45.<created> = TRUE TRUE"
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "true_left" (formula "36"))
                                          (rule "cut_direct" (formula "38") (term "0,0"))
                                          (branch "CUT: result_46.<created> = TRUE TRUE"
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "true_left" (formula "39"))
                                             (rule "lenNonNegative" (formula "54") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "54"))
                                             (rule "cut_direct" (formula "48") (term "0,0,0,0"))
                                             (branch "CUT: result_47.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "true_left" (formula "49"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "53") (inst "iv=iv"))
                                                (rule "andLeft" (formula "53"))
                                                (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                                                (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "true_left" (formula "53"))
                                                (rule "applyEq" (formula "53") (term "0,0,1,0") (ifseqformula "54"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "true_left" (formula "53"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                (rule "castedGetAny" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "commute_or_2" (formula "11") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "4") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "4") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "commute_or_2" (formula "4") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0"))
                                                (rule "distr_forallAnd" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0"))
                                                (rule "distr_forallAnd" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0"))
                                                (rule "distr_forallAnd" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0"))
                                                (rule "distr_forallAnd" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "eqSymm" (formula "26") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "26") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "26") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0"))
                                                (rule "distr_forallAnd" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0"))
                                                (rule "distr_forallAnd" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0"))
                                                (rule "distr_forallAnd" (formula "11"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "eqSymm" (formula "22") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "22") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "22") (term "1,0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "22") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0"))
                                                (rule "distr_forallAnd" (formula "20"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0"))
                                                (rule "distr_forallAnd" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0"))
                                                (rule "distr_forallAnd" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0"))
                                                (rule "distr_forallAnd" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "ifthenelse_split" (formula "62") (term "0"))
                                                (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                   (rule "hideAuxiliaryEq" (formula "63"))
                                                   (rule "replace_known_left" (formula "64") (term "1,0,0") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "64"))
                                                   (rule "hideAuxiliaryEq" (formula "64"))
                                                   (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                   (rule "hideAuxiliaryEq" (formula "63"))
                                                   (rule "replace_known_left" (formula "64") (term "1,0,0") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "63"))
                                                   (rule "hideAuxiliaryEq" (formula "63"))
                                                   (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                   (rule "true_left" (formula "61"))
                                                   (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "22") (term "0"))
                                                   (rule "distr_forallAnd" (formula "22"))
                                                   (rule "andLeft" (formula "22"))
                                                   (rule "commute_and_2" (formula "4") (term "1,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "13") (term "0"))
                                                   (rule "distr_forallAnd" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "eqSymm" (formula "11") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0"))
                                                   (rule "distr_forallAnd" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "commute_or_2" (formula "7") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0"))
                                                   (rule "distr_forallAnd" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "commute_or_2" (formula "5") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "eqSymm" (formula "5") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "5") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "5") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "5") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "allLeft" (formula "49") (inst "t=i_0"))
                                                   (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "49") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "49"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0"))
                                                   (rule "add_literals" (formula "3") (term "0"))
                                                   (rule "leq_literals" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                                (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                   (rule "hideAuxiliaryEq" (formula "62"))
                                                   (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "72"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "72"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "72"))
                                                    (builtin "One Step Simplification" (formula "62"))
                                                   (rule "replace_known_right" (formula "65") (term "1,0,0") (ifseqformula "72"))
                                                    (builtin "One Step Simplification" (formula "65"))
                                                   (rule "replace_known_right" (formula "61") (term "1") (ifseqformula "72"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                   (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "22") (term "0"))
                                                   (rule "distr_forallAnd" (formula "22"))
                                                   (rule "andLeft" (formula "22"))
                                                   (rule "commute_and_2" (formula "4") (term "1,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "13") (term "0"))
                                                   (rule "distr_forallAnd" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "eqSymm" (formula "11") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0"))
                                                   (rule "distr_forallAnd" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "commute_or_2" (formula "7") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0"))
                                                   (rule "distr_forallAnd" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "commute_or_2" (formula "5") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "eqSymm" (formula "5") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "5") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "5") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "5") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "allLeft" (formula "49") (inst "t=i_0"))
                                                   (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "49") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_contradInEq1" (formula "49") (ifseqformula "3"))
                                                   (rule "andLeft" (formula "49"))
                                                   (rule "inEqSimp_homoInEq1" (formula "49"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "49") (term "0"))
                                                   (rule "add_literals" (formula "49") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0"))
                                                   (rule "add_zero_right" (formula "49") (term "0"))
                                                   (rule "leq_literals" (formula "49"))
                                                   (rule "closeFalse" (formula "49"))
                                                )
                                             )
                                             (branch "CUT: result_47.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "53") (inst "iv=iv"))
                                                (rule "andLeft" (formula "53"))
                                                (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                                                (rule "applyEq" (formula "54") (term "0,0,1,0,0,1,0,0") (ifseqformula "55"))
                                                (rule "applyEq" (formula "54") (term "0,0,1,0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "true_left" (formula "54"))
                                                (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "54"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "true_left" (formula "53"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                (rule "castedGetAny" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "commute_or_2" (formula "11") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "4") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "4") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "commute_or_2" (formula "4") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0"))
                                                (rule "distr_forallAnd" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0"))
                                                (rule "distr_forallAnd" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0"))
                                                (rule "distr_forallAnd" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0"))
                                                (rule "distr_forallAnd" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "eqSymm" (formula "26") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "26") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "26") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0"))
                                                (rule "distr_forallAnd" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0"))
                                                (rule "distr_forallAnd" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0"))
                                                (rule "distr_forallAnd" (formula "11"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "eqSymm" (formula "22") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "22") (term "1,0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "22") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "22") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0"))
                                                (rule "distr_forallAnd" (formula "20"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0"))
                                                (rule "distr_forallAnd" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0"))
                                                (rule "distr_forallAnd" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0"))
                                                (rule "distr_forallAnd" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "ifthenelse_split" (formula "62") (term "0"))
                                                (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                   (rule "hideAuxiliaryEq" (formula "63"))
                                                   (rule "replace_known_left" (formula "64") (term "1,0,0") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "64"))
                                                   (rule "hideAuxiliaryEq" (formula "64"))
                                                   (rule "replace_known_left" (formula "64") (term "1,0,0") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "64"))
                                                   (rule "hideAuxiliaryEq" (formula "64"))
                                                   (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                   (rule "hideAuxiliaryEq" (formula "63"))
                                                   (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                   (rule "true_left" (formula "61"))
                                                   (rule "commute_and_2" (formula "4") (term "1,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "13") (term "0"))
                                                   (rule "distr_forallAnd" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "eqSymm" (formula "11") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0"))
                                                   (rule "distr_forallAnd" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "commute_or_2" (formula "7") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0"))
                                                   (rule "distr_forallAnd" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "commute_or_2" (formula "5") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "eqSymm" (formula "5") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "5") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "5") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "5") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "allLeft" (formula "49") (inst "t=i_0"))
                                                   (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "49") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_contradInEq1" (formula "49") (ifseqformula "3"))
                                                   (rule "andLeft" (formula "49"))
                                                   (rule "inEqSimp_homoInEq1" (formula "49"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "49") (term "0"))
                                                   (rule "add_literals" (formula "49") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0"))
                                                   (rule "add_zero_right" (formula "49") (term "0"))
                                                   (rule "leq_literals" (formula "49"))
                                                   (rule "closeFalse" (formula "49"))
                                                )
                                                (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                   (rule "hideAuxiliaryEq" (formula "62"))
                                                   (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "72"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "replace_known_right" (formula "65") (term "1,0,0") (ifseqformula "72"))
                                                    (builtin "One Step Simplification" (formula "65"))
                                                   (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "72"))
                                                    (builtin "One Step Simplification" (formula "62"))
                                                   (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "72"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "replace_known_right" (formula "61") (term "1") (ifseqformula "72"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                   (rule "commute_and_2" (formula "4") (term "1,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "13") (term "0"))
                                                   (rule "distr_forallAnd" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "eqSymm" (formula "11") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0"))
                                                   (rule "distr_forallAnd" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "commute_or_2" (formula "7") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0"))
                                                   (rule "distr_forallAnd" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "commute_or_2" (formula "5") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "eqSymm" (formula "5") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "5") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "5") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "5") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "allLeft" (formula "49") (inst "t=i_0"))
                                                   (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                                   (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "49") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "49") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "49"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                          )
                                          (branch "CUT: result_46.<created> = TRUE FALSE"
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "lenNonNegative" (formula "54") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "54"))
                                             (rule "cut_direct" (formula "48") (term "0,0,0,0"))
                                             (branch "CUT: result_47.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "true_left" (formula "49"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "53") (inst "iv=iv"))
                                                (rule "andLeft" (formula "53"))
                                                (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                                                (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "true_left" (formula "53"))
                                                (rule "applyEq" (formula "53") (term "0,0,1,0,0,1,0,0") (ifseqformula "54"))
                                                (rule "applyEq" (formula "53") (term "0,0,1,0") (ifseqformula "54"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "true_left" (formula "53"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "commute_or_2" (formula "11") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "4") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                (rule "castedGetAny" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "commute_or_2" (formula "4") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0"))
                                                (rule "distr_forallAnd" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0"))
                                                (rule "distr_forallAnd" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0"))
                                                (rule "distr_forallAnd" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "eqSymm" (formula "26") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "26") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "26") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0"))
                                                (rule "distr_forallAnd" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0"))
                                                (rule "distr_forallAnd" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0"))
                                                (rule "distr_forallAnd" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0"))
                                                (rule "distr_forallAnd" (formula "11"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "eqSymm" (formula "22") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "22") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "22") (term "1,0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "22") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0"))
                                                (rule "distr_forallAnd" (formula "20"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0"))
                                                (rule "distr_forallAnd" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0"))
                                                (rule "distr_forallAnd" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0"))
                                                (rule "distr_forallAnd" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "ifthenelse_split" (formula "61") (term "0"))
                                                (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                   (rule "hideAuxiliaryEq" (formula "62"))
                                                   (rule "replace_known_left" (formula "64") (term "1,0,0") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "64"))
                                                   (rule "hideAuxiliaryEq" (formula "64"))
                                                   (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "62"))
                                                   (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                   (rule "hideAuxiliaryEq" (formula "62"))
                                                   (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "62"))
                                                   (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "62"))
                                                   (rule "hideAuxiliaryEq" (formula "62"))
                                                   (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "60"))
                                                   (rule "true_left" (formula "60"))
                                                   (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "13") (term "0"))
                                                   (rule "distr_forallAnd" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "eqSymm" (formula "11") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "commute_and" (formula "4") (term "0,1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "eqSymm" (formula "22") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "true_left" (formula "22"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0"))
                                                   (rule "distr_forallAnd" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "commute_or_2" (formula "7") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                   (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                   (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "50") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "50") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "50"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                                (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "61"))
                                                   (rule "hideAuxiliaryEq" (formula "61"))
                                                   (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "62"))
                                                   (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "replace_known_right" (formula "61") (term "1,0,0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                   (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "60"))
                                                   (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "13") (term "0"))
                                                   (rule "distr_forallAnd" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "eqSymm" (formula "11") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "commute_and" (formula "4") (term "0,1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "eqSymm" (formula "22") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "true_left" (formula "22"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0"))
                                                   (rule "distr_forallAnd" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "commute_or_2" (formula "7") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                   (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "50") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "inEqSimp_contradInEq1" (formula "50") (ifseqformula "3"))
                                                   (rule "andLeft" (formula "50"))
                                                   (rule "inEqSimp_homoInEq1" (formula "50"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "50") (term "0"))
                                                   (rule "add_literals" (formula "50") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "50") (term "1,0"))
                                                   (rule "add_literals" (formula "50") (term "0"))
                                                   (rule "leq_literals" (formula "50"))
                                                   (rule "closeFalse" (formula "50"))
                                                )
                                             )
                                             (branch "CUT: result_47.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "53") (inst "iv=iv"))
                                                (rule "andLeft" (formula "53"))
                                                (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                                                (rule "applyEq" (formula "54") (term "0,0,1,0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "true_left" (formula "54"))
                                                (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "54"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "true_left" (formula "53"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "commute_or_2" (formula "11") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "shift_paren_or" (formula "4") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                (rule "castedGetAny" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "commute_or_2" (formula "4") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0"))
                                                (rule "distr_forallAnd" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0"))
                                                (rule "distr_forallAnd" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0"))
                                                (rule "distr_forallAnd" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0"))
                                                (rule "distr_forallAnd" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "eqSymm" (formula "26") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "26") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "26") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0"))
                                                (rule "distr_forallAnd" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0"))
                                                (rule "distr_forallAnd" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0"))
                                                (rule "distr_forallAnd" (formula "11"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "eqSymm" (formula "23") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "1,0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0"))
                                                (rule "distr_forallAnd" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0"))
                                                (rule "distr_forallAnd" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0"))
                                                (rule "distr_forallAnd" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0"))
                                                (rule "distr_forallAnd" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "23") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "23") (term "0"))
                                                (rule "distr_forallAnd" (formula "23"))
                                                (rule "andLeft" (formula "23"))
                                                (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "14") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "14") (term "0"))
                                                (rule "distr_forallAnd" (formula "14"))
                                                (rule "andLeft" (formula "14"))
                                                (rule "ifthenelse_split" (formula "61") (term "0"))
                                                (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                   (rule "hideAuxiliaryEq" (formula "62"))
                                                   (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "62"))
                                                   (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                   (rule "hideAuxiliaryEq" (formula "62"))
                                                   (rule "replace_known_left" (formula "64") (term "1,0,0") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "eqSymm" (formula "64"))
                                                   (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "64"))
                                                   (rule "hideAuxiliaryEq" (formula "64"))
                                                   (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "62"))
                                                   (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "62"))
                                                   (rule "hideAuxiliaryEq" (formula "62"))
                                                   (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "60"))
                                                   (rule "true_left" (formula "60"))
                                                   (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "eqSymm" (formula "11") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "commute_and" (formula "4") (term "0,1,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0"))
                                                   (rule "distr_forallAnd" (formula "19"))
                                                   (rule "andLeft" (formula "19"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0"))
                                                   (rule "distr_forallAnd" (formula "11"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "commute_or_2" (formula "7") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                   (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "50") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "inEqSimp_contradInEq1" (formula "50") (ifseqformula "3"))
                                                   (rule "andLeft" (formula "50"))
                                                   (rule "inEqSimp_homoInEq1" (formula "50"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "50") (term "0"))
                                                   (rule "add_literals" (formula "50") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "50") (term "1,0"))
                                                   (rule "add_literals" (formula "50") (term "0"))
                                                   (rule "leq_literals" (formula "50"))
                                                   (rule "closeFalse" (formula "50"))
                                                )
                                                (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "61"))
                                                   (rule "hideAuxiliaryEq" (formula "61"))
                                                   (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "replace_known_right" (formula "61") (term "1,0,0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                   (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "62"))
                                                   (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "60"))
                                                   (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "eqSymm" (formula "11") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "commute_and" (formula "4") (term "0,1,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0"))
                                                   (rule "distr_forallAnd" (formula "19"))
                                                   (rule "andLeft" (formula "19"))
                                                   (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "eqSymm" (formula "20") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "20") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "20") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "20") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "11") (term "0"))
                                                   (rule "distr_forallAnd" (formula "11"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "commute_or_2" (formula "7") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "allLeft" (formula "50") (inst "t=i_0"))
                                                   (rule "replace_known_left" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "inEqSimp_commuteGeq" (formula "50") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "50") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "50"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0"))
                                                   (rule "add_literals" (formula "3") (term "0"))
                                                   (rule "leq_literals" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "CUT: result_45.<created> = TRUE FALSE"
                                           (builtin "One Step Simplification" (formula "35"))
                                          (rule "cut_direct" (formula "38") (term "0,0"))
                                          (branch "CUT: result_46.<created> = TRUE TRUE"
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "true_left" (formula "39"))
                                             (rule "lenNonNegative" (formula "54") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "54"))
                                             (rule "cut_direct" (formula "48") (term "0,0,0,0"))
                                             (branch "CUT: result_47.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "true_left" (formula "49"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "53") (inst "iv=iv"))
                                                (rule "andLeft" (formula "53"))
                                                (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                                                (rule "applyEq" (formula "54") (term "0,0,1,0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "true_left" (formula "54"))
                                                (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "54"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "true_left" (formula "53"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "commute_or_2" (formula "11") (term "0,0,0,0"))
                                                (rule "commute_and" (formula "4") (term "0,1,0,0,0"))
                                                (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                (rule "castedGetAny" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "shift_paren_or" (formula "4") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "commute_or_2" (formula "4") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0"))
                                                (rule "distr_forallAnd" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0"))
                                                (rule "distr_forallAnd" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0"))
                                                (rule "distr_forallAnd" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0"))
                                                (rule "distr_forallAnd" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0"))
                                                (rule "distr_forallAnd" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "eqSymm" (formula "26") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "26") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "26") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0"))
                                                (rule "distr_forallAnd" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0"))
                                                (rule "distr_forallAnd" (formula "11"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "eqSymm" (formula "23") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "1,0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0"))
                                                (rule "distr_forallAnd" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0"))
                                                (rule "distr_forallAnd" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0"))
                                                (rule "distr_forallAnd" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0"))
                                                (rule "distr_forallAnd" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "cnf_rightDist" (formula "4") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "4") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "4") (term "0"))
                                                (rule "distr_forallAnd" (formula "4"))
                                                (rule "andLeft" (formula "4"))
                                                (rule "ifthenelse_split" (formula "62") (term "0"))
                                                (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                   (rule "hideAuxiliaryEq" (formula "63"))
                                                   (rule "replace_known_left" (formula "64") (term "1,0,0") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "64"))
                                                   (rule "hideAuxiliaryEq" (formula "64"))
                                                   (rule "replace_known_left" (formula "65") (term "1,0,0") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "65"))
                                                   (rule "eqSymm" (formula "65"))
                                                   (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "65"))
                                                   (rule "hideAuxiliaryEq" (formula "65"))
                                                   (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                   (rule "hideAuxiliaryEq" (formula "63"))
                                                   (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                   (rule "true_left" (formula "61"))
                                                   (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "24") (term "0"))
                                                   (rule "distr_forallAnd" (formula "24"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "15") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "15") (term "0"))
                                                   (rule "distr_forallAnd" (formula "15"))
                                                   (rule "andLeft" (formula "15"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0"))
                                                   (rule "distr_forallAnd" (formula "20"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "9") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "9") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0"))
                                                   (rule "distr_forallAnd" (formula "9"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "allLeft" (formula "51") (inst "t=i_0"))
                                                   (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                                                   (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "51") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "51") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "inEqSimp_contradInEq1" (formula "51") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "51") (term "0"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "closeFalse" (formula "51"))
                                                )
                                                (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                   (rule "hideAuxiliaryEq" (formula "62"))
                                                   (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "72"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "72"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "72"))
                                                    (builtin "One Step Simplification" (formula "62"))
                                                   (rule "replace_known_right" (formula "65") (term "1,0,0") (ifseqformula "72"))
                                                    (builtin "One Step Simplification" (formula "65"))
                                                   (rule "replace_known_right" (formula "61") (term "1") (ifseqformula "72"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                   (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "24") (term "0"))
                                                   (rule "distr_forallAnd" (formula "24"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "15") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "15") (term "0"))
                                                   (rule "distr_forallAnd" (formula "15"))
                                                   (rule "andLeft" (formula "15"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0"))
                                                   (rule "distr_forallAnd" (formula "20"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "eqSymm" (formula "21") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "9") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "9") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0"))
                                                   (rule "distr_forallAnd" (formula "9"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "allLeft" (formula "51") (inst "t=i_0"))
                                                   (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                                                   (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "51") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "51") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "51"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                             (branch "CUT: result_47.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "53") (inst "iv=iv"))
                                                (rule "andLeft" (formula "53"))
                                                (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                                                (rule "applyEq" (formula "54") (term "0,0,1,0,0,1,0,0") (ifseqformula "55"))
                                                (rule "applyEq" (formula "54") (term "0,0,1,0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "true_left" (formula "54"))
                                                (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "54"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "true_left" (formula "53"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "commute_or_2" (formula "11") (term "0,0,0,0"))
                                                (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                (rule "castedGetAny" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "shift_paren_or" (formula "4") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "commute_or_2" (formula "4") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0"))
                                                (rule "distr_forallAnd" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0"))
                                                (rule "distr_forallAnd" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0"))
                                                (rule "distr_forallAnd" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0"))
                                                (rule "distr_forallAnd" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "eqSymm" (formula "26") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "26") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "26") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0"))
                                                (rule "distr_forallAnd" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0"))
                                                (rule "distr_forallAnd" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0"))
                                                (rule "distr_forallAnd" (formula "11"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "eqSymm" (formula "22") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "22") (term "1,0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "22") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "22") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0"))
                                                (rule "distr_forallAnd" (formula "20"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0"))
                                                (rule "distr_forallAnd" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0"))
                                                (rule "distr_forallAnd" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0"))
                                                (rule "distr_forallAnd" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "ifthenelse_split" (formula "62") (term "0"))
                                                (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                   (rule "hideAuxiliaryEq" (formula "63"))
                                                   (rule "replace_known_left" (formula "64") (term "1,0,0") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "64"))
                                                   (rule "hideAuxiliaryEq" (formula "64"))
                                                   (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                   (rule "hideAuxiliaryEq" (formula "63"))
                                                   (rule "replace_known_left" (formula "64") (term "1,0,0") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "63"))
                                                   (rule "hideAuxiliaryEq" (formula "63"))
                                                   (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                   (rule "true_left" (formula "61"))
                                                   (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "13") (term "0"))
                                                   (rule "distr_forallAnd" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "eqSymm" (formula "11") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "commute_and" (formula "4") (term "0,1,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0"))
                                                   (rule "distr_forallAnd" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "commute_or_2" (formula "7") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0"))
                                                   (rule "distr_forallAnd" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "commute_or_2" (formula "5") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "eqSymm" (formula "5") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "5") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "5") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "5") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "commute_or_2" (formula "18") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "eqSymm" (formula "18") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "18") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "18") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "allLeft" (formula "48") (inst "t=i_0"))
                                                   (rule "replace_known_left" (formula "48") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "48") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "48") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "48"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0"))
                                                   (rule "add_literals" (formula "3") (term "0"))
                                                   (rule "leq_literals" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                                (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                   (rule "hideAuxiliaryEq" (formula "62"))
                                                   (rule "replace_known_right" (formula "65") (term "1,0,0") (ifseqformula "72"))
                                                    (builtin "One Step Simplification" (formula "65"))
                                                   (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "72"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "72"))
                                                    (builtin "One Step Simplification" (formula "62"))
                                                   (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "72"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "replace_known_right" (formula "61") (term "1") (ifseqformula "72"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                   (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "13") (term "0"))
                                                   (rule "distr_forallAnd" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "eqSymm" (formula "11") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "commute_and" (formula "4") (term "0,1,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0"))
                                                   (rule "distr_forallAnd" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "commute_or_2" (formula "7") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0"))
                                                   (rule "distr_forallAnd" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "commute_or_2" (formula "5") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "eqSymm" (formula "5") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "5") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "5") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "5") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "allLeft" (formula "49") (inst "t=i_0"))
                                                   (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "49") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_contradInEq1" (formula "49") (ifseqformula "3"))
                                                   (rule "andLeft" (formula "49"))
                                                   (rule "inEqSimp_homoInEq1" (formula "49"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "49") (term "0"))
                                                   (rule "add_literals" (formula "49") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0"))
                                                   (rule "add_zero_right" (formula "49") (term "0"))
                                                   (rule "leq_literals" (formula "49"))
                                                   (rule "closeFalse" (formula "49"))
                                                )
                                             )
                                          )
                                          (branch "CUT: result_46.<created> = TRUE FALSE"
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "lenNonNegative" (formula "54") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "54"))
                                             (rule "cut_direct" (formula "48") (term "0,0,0,0"))
                                             (branch "CUT: result_47.<created> = TRUE TRUE"
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "true_left" (formula "49"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "53") (inst "iv=iv"))
                                                (rule "andLeft" (formula "53"))
                                                (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                                                (rule "applyEq" (formula "54") (term "0,0,1,0,0,1,0,0") (ifseqformula "55"))
                                                (rule "applyEq" (formula "54") (term "0,0,1,0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "true_left" (formula "54"))
                                                (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "54"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "true_left" (formula "53"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "commute_or_2" (formula "11") (term "0,0,0,0"))
                                                (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                (rule "castedGetAny" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "shift_paren_or" (formula "4") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "commute_or_2" (formula "4") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0"))
                                                (rule "distr_forallAnd" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0"))
                                                (rule "distr_forallAnd" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0"))
                                                (rule "distr_forallAnd" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0"))
                                                (rule "distr_forallAnd" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "eqSymm" (formula "26") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "26") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "26") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "26") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0"))
                                                (rule "distr_forallAnd" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0"))
                                                (rule "distr_forallAnd" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0"))
                                                (rule "distr_forallAnd" (formula "11"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "eqSymm" (formula "22") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "22") (term "1,0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "22") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "22") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0"))
                                                (rule "distr_forallAnd" (formula "20"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0"))
                                                (rule "distr_forallAnd" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0"))
                                                (rule "distr_forallAnd" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "5") (term "0"))
                                                (rule "distr_forallAnd" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "eqSymm" (formula "23") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "23") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "cnf_rightDist" (formula "22") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "22") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "ifthenelse_split" (formula "61") (term "0"))
                                                (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                   (rule "hideAuxiliaryEq" (formula "62"))
                                                   (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "62"))
                                                   (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                   (rule "hideAuxiliaryEq" (formula "62"))
                                                   (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                   (rule "hideAuxiliaryEq" (formula "63"))
                                                   (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "62"))
                                                   (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                   (rule "hideAuxiliaryEq" (formula "62"))
                                                   (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "62"))
                                                   (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "60"))
                                                   (rule "true_left" (formula "60"))
                                                   (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "13") (term "0"))
                                                   (rule "distr_forallAnd" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "eqSymm" (formula "11") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "eqSymm" (formula "22") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "true_left" (formula "22"))
                                                   (rule "commute_and" (formula "4") (term "0,1,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0"))
                                                   (rule "distr_forallAnd" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "commute_or_2" (formula "7") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0"))
                                                   (rule "distr_forallAnd" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "commute_or_2" (formula "5") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "eqSymm" (formula "5") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "5") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "5") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "5") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "allLeft" (formula "49") (inst "t=i_0"))
                                                   (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "49") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_contradInEq1" (formula "49") (ifseqformula "3"))
                                                   (rule "andLeft" (formula "49"))
                                                   (rule "inEqSimp_homoInEq1" (formula "49"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "49") (term "0"))
                                                   (rule "add_literals" (formula "49") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0"))
                                                   (rule "add_zero_right" (formula "49") (term "0"))
                                                   (rule "leq_literals" (formula "49"))
                                                   (rule "closeFalse" (formula "49"))
                                                )
                                                (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "61"))
                                                   (rule "hideAuxiliaryEq" (formula "61"))
                                                   (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "replace_known_right" (formula "61") (term "1,0,0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                   (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "62"))
                                                   (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "60"))
                                                   (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "13") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "13") (term "0"))
                                                   (rule "distr_forallAnd" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "eqSymm" (formula "11") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "eqSymm" (formula "22") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "true_left" (formula "22"))
                                                   (rule "commute_and" (formula "4") (term "0,1,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "18") (term "0"))
                                                   (rule "distr_forallAnd" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "commute_or_2" (formula "7") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "8") (term "0"))
                                                   (rule "distr_forallAnd" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "commute_or_2" (formula "5") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "eqSymm" (formula "5") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "5") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "5") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "5") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "allLeft" (formula "49") (inst "t=i_0"))
                                                   (rule "replace_known_left" (formula "49") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                                   (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "49") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "49") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "49"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                             (branch "CUT: result_47.<created> = TRUE FALSE"
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "53") (inst "iv=iv"))
                                                (rule "andLeft" (formula "53"))
                                                (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                                                (rule "applyEq" (formula "54") (term "0,0,1,0,0,1,0,0") (ifseqformula "55"))
                                                (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "true_left" (formula "53"))
                                                (rule "applyEq" (formula "53") (term "0,0,1,0") (ifseqformula "54"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "true_left" (formula "53"))
                                                (rule "shift_paren_or" (formula "23") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "shift_paren_or" (formula "8") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "commute_or_2" (formula "11") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "6") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                (rule "castedGetAny" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "shift_paren_or" (formula "4") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "shift_paren_or" (formula "9") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "25") (term "0"))
                                                (rule "distr_forallAnd" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "shift_paren_or" (formula "5") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "commute_or_2" (formula "4") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "shift_paren_or" (formula "25") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "25") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "21") (term "0"))
                                                (rule "distr_forallAnd" (formula "21"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "12") (term "0"))
                                                (rule "distr_forallAnd" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "24") (term "0"))
                                                (rule "distr_forallAnd" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "10") (term "0"))
                                                (rule "distr_forallAnd" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "8") (term "0"))
                                                (rule "distr_forallAnd" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "11") (term "0"))
                                                (rule "distr_forallAnd" (formula "11"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "20") (term "0"))
                                                (rule "distr_forallAnd" (formula "20"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "cnf_rightDist" (formula "7") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "7") (term "0"))
                                                (rule "distr_forallAnd" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "commute_or_2" (formula "24") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "eqSymm" (formula "24") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "24") (term "1,0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "24") (term "0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "24") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                (rule "distr_forallAnd" (formula "9") (term "0"))
                                                (rule "distr_forallAnd" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "eqSymm" (formula "22") (term "1,1,0,0,0"))
                                                (rule "castedGetAny" (formula "22") (term "1,0,0,0,0,0,0"))
                                                (rule "castedGetAny" (formula "22") (term "0,0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "22") (term "0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "ifthenelse_split" (formula "61") (term "0"))
                                                (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "62"))
                                                   (rule "hideAuxiliaryEq" (formula "62"))
                                                   (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "63"))
                                                   (rule "hideAuxiliaryEq" (formula "63"))
                                                   (rule "replace_known_left" (formula "64") (term "1,0,0") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "eqSymm" (formula "64"))
                                                   (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "64"))
                                                   (rule "hideAuxiliaryEq" (formula "64"))
                                                   (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "62"))
                                                   (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "62"))
                                                   (rule "hideAuxiliaryEq" (formula "62"))
                                                   (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "60"))
                                                   (rule "true_left" (formula "60"))
                                                   (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "eqSymm" (formula "11") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "5") (term "0"))
                                                   (rule "distr_forallAnd" (formula "5"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "21") (term "0"))
                                                   (rule "distr_forallAnd" (formula "21"))
                                                   (rule "andLeft" (formula "21"))
                                                   (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "eqSymm" (formula "22") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "22") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "true_left" (formula "22"))
                                                   (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "commute_or_2" (formula "7") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "commute_and" (formula "4") (term "0,1,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "cnf_rightDist" (formula "17") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "17") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "17") (term "0"))
                                                   (rule "distr_forallAnd" (formula "17"))
                                                   (rule "andLeft" (formula "17"))
                                                   (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0"))
                                                   (rule "distr_forallAnd" (formula "9"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "allLeft" (formula "51") (inst "t=i_0"))
                                                   (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "51") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "51") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "51"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0"))
                                                   (rule "add_literals" (formula "3") (term "0"))
                                                   (rule "leq_literals" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                                (branch " result_49.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "61"))
                                                   (rule "hideAuxiliaryEq" (formula "61"))
                                                   (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "62"))
                                                   (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "replace_known_right" (formula "61") (term "1,0,0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                   (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "60"))
                                                   (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "eqSymm" (formula "11") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "cnf_rightDist" (formula "5") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "5") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "5") (term "0"))
                                                   (rule "distr_forallAnd" (formula "5"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "cnf_rightDist" (formula "21") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "21") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "21") (term "0"))
                                                   (rule "distr_forallAnd" (formula "21"))
                                                   (rule "andLeft" (formula "21"))
                                                   (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSymm" (formula "19") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "19") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "eqSymm" (formula "21") (term "1,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "21") (term "0,1,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "commute_or_2" (formula "7") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "7") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "commute_and" (formula "4") (term "0,1,0,0,0"))
                                                   (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "19") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "1,0,0,1,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,0,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "cnf_rightDist" (formula "17") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "17") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "17") (term "0"))
                                                   (rule "distr_forallAnd" (formula "17"))
                                                   (rule "andLeft" (formula "17"))
                                                   (rule "cnf_rightDist" (formula "9") (term "0,0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "9") (term "0"))
                                                   (rule "distr_forallAnd" (formula "9"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "allLeft" (formula "51") (inst "t=i_0"))
                                                   (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "51") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "51") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "51"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0"))
                                                   (rule "add_literals" (formula "3") (term "0"))
                                                   (rule "leq_literals" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch
                                  (builtin "One Step Simplification" (formula "102") (ifInst ""  (formula "82")))
                                 (rule "closeTrue" (formula "102"))
                              )
                           )
                           (branch
                               (builtin "One Step Simplification" (formula "102"))
                              (rule "closeTrue" (formula "102"))
                           )
                        )
                        (branch
                            (builtin "One Step Simplification" (formula "102"))
                           (rule "allRight" (formula "102") (inst "sk=f_0"))
                           (rule "allRight" (formula "102") (inst "sk=o_0"))
                           (rule "orRight" (formula "102"))
                           (rule "eqSymm" (formula "103"))
                           (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0"))
                           (rule "pullOutSelect" (formula "103") (term "0") (inst "selectSK=f_0_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "72"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "61"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "49"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "45"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "39"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,0,0") (ifseqformula "35"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "31"))
                           (rule "eqSymm" (formula "104"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "62"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "50"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "46"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "40"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "36"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,1,0,0") (ifseqformula "32"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "47"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "41"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "37"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "33"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "42"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "38"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "34"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "39"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "35"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "36"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_6"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "109")))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "nnf_imp2or" (formula "27") (term "0,0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "nnf_imp2or" (formula "62") (term "0"))
                           (rule "nnf_imp2or" (formula "26") (term "0,0,0"))
                           (rule "nnf_imp2or" (formula "23") (term "0,0,0"))
                           (rule "nnf_imp2or" (formula "22") (term "0,0,0"))
                           (rule "nnf_imp2or" (formula "8") (term "0,0,0"))
                           (rule "nnf_imp2or" (formula "25") (term "0,0,0"))
                           (rule "nnf_imp2or" (formula "9") (term "0,0,0"))
                           (rule "nnf_imp2or" (formula "7") (term "0,0,0"))
                           (rule "nnf_imp2or" (formula "13") (term "0,0,0"))
                           (rule "nnf_imp2or" (formula "12") (term "0,0,0"))
                           (rule "nnf_imp2or" (formula "24") (term "0,0,0"))
                           (rule "nnf_imp2or" (formula "28") (term "0,0,0"))
                           (rule "nnf_imp2or" (formula "15") (term "0,0,0"))
                           (rule "nnf_imp2or" (formula "11") (term "0,0,0"))
                           (rule "nnf_imp2or" (formula "14") (term "0,0,0"))
                           (rule "nnf_imp2or" (formula "16") (term "0,0,0"))
                           (rule "nnf_imp2or" (formula "10") (term "0,0,0"))
                           (rule "nnf_notAnd" (formula "62") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "62") (term "1,0,0"))
                           (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0"))
                           (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "62") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "62") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "62") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "62") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "62") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "26") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "nnf_notAnd" (formula "23") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "nnf_notAnd" (formula "22") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "nnf_notAnd" (formula "8") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "nnf_notAnd" (formula "25") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "nnf_imp2or" (formula "9") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "nnf_notAnd" (formula "7") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "nnf_imp2or" (formula "13") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "13") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "nnf_notAnd" (formula "12") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "nnf_imp2or" (formula "24") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "24") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "nnf_imp2or" (formula "28") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "28") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "nnf_notAnd" (formula "15") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "nnf_notAnd" (formula "11") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "nnf_notAnd" (formula "14") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "nnf_notAnd" (formula "16") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "nnf_notAnd" (formula "10") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "nnf_imp2or" (formula "26") (term "1,0,0,0"))
                           (rule "nnf_imp2or" (formula "23") (term "1,0,0,0"))
                           (rule "nnf_imp2or" (formula "22") (term "1,0,0,0"))
                           (rule "nnf_imp2or" (formula "8") (term "1,0,0,0"))
                           (rule "nnf_imp2or" (formula "25") (term "1,0,0,0"))
                           (rule "nnf_notOr" (formula "26") (term "1,0,0,0,0"))
                           (rule "nnf_notOr" (formula "23") (term "1,0,0,0,0"))
                           (rule "nnf_imp2or" (formula "7") (term "1,0,0,0"))
                           (rule "nnf_notOr" (formula "22") (term "1,0,0,0,0"))
                           (rule "nnf_notOr" (formula "8") (term "1,0,0,0,0"))
                           (rule "nnf_imp2or" (formula "12") (term "1,0,0,0"))
                           (rule "nnf_notOr" (formula "25") (term "1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "9") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "nnf_notOr" (formula "7") (term "0,0,0,0,0"))
                           (rule "nnf_imp2or" (formula "15") (term "1,0,0,0"))
                           (rule "nnf_notOr" (formula "13") (term "1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "13") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "nnf_notOr" (formula "12") (term "1,0,0,0,0"))
                           (rule "nnf_imp2or" (formula "11") (term "1,0,0,0"))
                           (rule "nnf_imp2or" (formula "14") (term "1,0,0,0"))
                           (rule "nnf_notOr" (formula "24") (term "1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "24") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "nnf_imp2or" (formula "16") (term "1,0,0,0"))
                           (rule "nnf_notOr" (formula "28") (term "1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "28") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "nnf_imp2or" (formula "10") (term "1,0,0,0"))
                           (rule "nnf_notOr" (formula "15") (term "1,0,0,0,0"))
                           (rule "nnf_notOr" (formula "11") (term "1,0,0,0,0"))
                           (rule "nnf_notOr" (formula "14") (term "1,0,0,0,0"))
                           (rule "nnf_notOr" (formula "16") (term "1,0,0,0,0"))
                           (rule "nnf_notOr" (formula "10") (term "1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "26") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "nnf_notAnd" (formula "23") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "nnf_notAnd" (formula "22") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "nnf_notAnd" (formula "8") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "nnf_notAnd" (formula "25") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "nnf_notAnd" (formula "7") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "nnf_notAnd" (formula "12") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "nnf_notOr" (formula "9") (term "0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "15") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "nnf_notAnd" (formula "11") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "nnf_notAnd" (formula "14") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "nnf_notAnd" (formula "16") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "nnf_notOr" (formula "13") (term "0,1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "10") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "nnf_notOr" (formula "24") (term "0,1,0,0,0,0"))
                           (rule "nnf_notOr" (formula "22") (term "0,1,0,0,0,0"))
                           (rule "nnf_notOr" (formula "7") (term "0,0,0,0,0,0"))
                           (rule "nnf_notOr" (formula "9") (term "0,0,0,0,0,0"))
                           (rule "nnf_notOr" (formula "15") (term "0,1,0,0,0,0"))
                           (rule "nnf_notOr" (formula "11") (term "0,1,0,0,0,0"))
                           (rule "nnf_notOr" (formula "13") (term "0,0,1,0,0,0,0"))
                           (rule "nnf_notOr" (formula "22") (term "0,0,1,0,0,0,0"))
                           (rule "nnf_notOr" (formula "7") (term "1,0,0,0,0,0,0"))
                           (rule "nnf_notOr" (formula "9") (term "0,0,0,0,0,0,0"))
                           (rule "nnf_notOr" (formula "15") (term "0,0,1,0,0,0,0"))
                           (rule "nnf_notOr" (formula "11") (term "0,0,1,0,0,0,0"))
                           (rule "nnf_notOr" (formula "13") (term "0,0,0,1,0,0,0,0"))
                           (rule "nnf_notOr" (formula "7") (term "0,1,0,0,0,0,0,0"))
                           (rule "nnf_notOr" (formula "9") (term "0,0,0,0,0,0,0,0"))
                           (rule "nnf_notOr" (formula "15") (term "0,0,0,1,0,0,0,0"))
                           (rule "nnf_notOr" (formula "11") (term "0,0,0,1,0,0,0,0"))
                           (rule "nnf_notOr" (formula "13") (term "0,0,0,0,1,0,0,0,0"))
                           (rule "nnf_notOr" (formula "7") (term "0,0,1,0,0,0,0,0,0"))
                           (rule "nnf_notOr" (formula "9") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "nnf_notOr" (formula "11") (term "0,0,0,0,1,0,0,0,0"))
                           (rule "nnf_notOr" (formula "7") (term "0,0,0,1,0,0,0,0,0,0"))
                           (rule "nnf_notOr" (formula "9") (term "0,1,0,0,0,0,0,0,0,0"))
                           (rule "nnf_notOr" (formula "11") (term "0,0,0,0,0,1,0,0,0,0"))
                           (rule "nnf_notOr" (formula "7") (term "0,0,0,0,1,0,0,0,0,0,0"))
                           (rule "nnf_notOr" (formula "9") (term "0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "nnf_notOr" (formula "7") (term "0,0,0,0,0,1,0,0,0,0,0,0"))
                           (rule "commute_or_2" (formula "5") (term "0,1,0,0"))
                           (rule "commute_or_2" (formula "62") (term "0"))
                           (rule "commute_or_2" (formula "6") (term "0,0,1,0,0"))
                           (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                           (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
                           (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                           (rule "ifthenelse_split" (formula "69") (term "0"))
                           (branch "result_49.<created> = TRUE TRUE"
                              (rule "applyEqReverse" (formula "71") (term "1,0") (ifseqformula "70"))
                              (rule "hideAuxiliaryEq" (formula "70"))
                              (rule "replace_known_left" (formula "74") (term "0,0,0,0,0,0,0") (ifseqformula "69"))
                               (builtin "One Step Simplification" (formula "74"))
                              (rule "eqSymm" (formula "74"))
                              (rule "applyEqReverse" (formula "73") (term "1") (ifseqformula "74"))
                              (rule "hideAuxiliaryEq" (formula "74"))
                              (rule "replace_known_left" (formula "71") (term "0,0,0,0") (ifseqformula "69"))
                               (builtin "One Step Simplification" (formula "71"))
                              (rule "applyEqReverse" (formula "72") (term "1,0") (ifseqformula "71"))
                              (rule "hideAuxiliaryEq" (formula "71"))
                              (rule "replace_known_left" (formula "71") (term "0,0,0,0,0") (ifseqformula "69"))
                               (builtin "One Step Simplification" (formula "71"))
                              (rule "applyEqReverse" (formula "72") (term "1,0") (ifseqformula "71"))
                              (rule "hideAuxiliaryEq" (formula "71"))
                              (rule "replace_known_left" (formula "71") (term "0,0,0,0,0,0") (ifseqformula "69"))
                               (builtin "One Step Simplification" (formula "71"))
                              (rule "replace_known_left" (formula "70") (term "0,0,0") (ifseqformula "69"))
                               (builtin "One Step Simplification" (formula "70"))
                              (rule "applyEqReverse" (formula "71") (term "0") (ifseqformula "70"))
                              (rule "hideAuxiliaryEq" (formula "70"))
                              (rule "eqSymm" (formula "70"))
                              (rule "replace_known_left" (formula "68") (term "0,0,0,0,0,0") (ifseqformula "69"))
                               (builtin "One Step Simplification" (formula "68"))
                              (rule "true_left" (formula "68"))
                              (rule "applyEq" (formula "60") (term "1") (ifseqformula "69"))
                              (rule "applyEq" (formula "62") (term "0,1,0,0,0") (ifseqformula "69"))
                              (rule "applyEq" (formula "62") (term "0,0,0,1,0,0") (ifseqformula "69"))
                              (rule "applyEq" (formula "61") (term "0,0") (ifseqformula "69"))
                              (rule "commute_or_2" (formula "28") (term "0,0,0"))
                              (rule "commute_or_2" (formula "9") (term "1,0,0,0"))
                              (rule "commute_or_2" (formula "26") (term "0,0,0"))
                              (rule "ifthenelse_split" (formula "56") (term "0"))
                              (branch "result_48.<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "58") (term "1,0") (ifseqformula "57"))
                                 (rule "hideAuxiliaryEq" (formula "57"))
                                 (rule "replace_known_left" (formula "58") (term "0,0,0,0") (ifseqformula "56"))
                                  (builtin "One Step Simplification" (formula "58"))
                                 (rule "applyEqReverse" (formula "59") (term "1,0") (ifseqformula "58"))
                                 (rule "hideAuxiliaryEq" (formula "58"))
                                 (rule "replace_known_left" (formula "59") (term "0,0,0,0,0,0") (ifseqformula "56"))
                                  (builtin "One Step Simplification" (formula "59"))
                                 (rule "eqSymm" (formula "59"))
                                 (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "59"))
                                 (rule "hideAuxiliaryEq" (formula "59"))
                                 (rule "replace_known_left" (formula "58") (term "0,0,0,0,0") (ifseqformula "56"))
                                  (builtin "One Step Simplification" (formula "58"))
                                 (rule "replace_known_left" (formula "57") (term "0,0,0") (ifseqformula "56"))
                                  (builtin "One Step Simplification" (formula "57"))
                                 (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "57"))
                                 (rule "hideAuxiliaryEq" (formula "57"))
                                 (rule "replace_known_left" (formula "55") (term "0,0,0,0,0") (ifseqformula "56"))
                                  (builtin "One Step Simplification" (formula "55"))
                                 (rule "true_left" (formula "55"))
                                 (rule "commute_or_2" (formula "13") (term "1,0,0,0"))
                                 (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "24") (term "1,0,0,0"))
                                 (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "14") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "16") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,0,0,0"))
                                 (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "15") (term "1,0,0,0"))
                                 (rule "commute_or_2" (formula "11") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "7") (term "0,1,0,0,0"))
                                 (rule "commute_or" (formula "58") (term "0,0"))
                                 (rule "commute_or" (formula "9") (term "0,0,0,0"))
                                 (rule "commute_or" (formula "7") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "6") (term "0,1,0,0"))
                                 (rule "commute_or_2" (formula "4") (term "0,1,0,0"))
                                 (rule "commute_or_2" (formula "58") (term "0"))
                                 (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                                 (rule "cnf_rightDist" (formula "24") (term "0,0,0,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,0"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "73"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "71"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "73")))
                                    (rule "replace_known_right" (formula "5") (term "1,0,0,0,0,0,0,1,0,0") (ifseqformula "73"))
                                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "71")) (ifInst ""  (formula "72")))
                                    (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "71"))
                                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "72")) (ifInst ""  (formula "73")))
                                    (rule "replace_known_right" (formula "3") (term "1,0,0,0,0,1,0,0") (ifseqformula "73"))
                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")) (ifInst ""  (formula "72")))
                                    (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "71"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "72")) (ifInst ""  (formula "73")))
                                    (rule "replace_known_right" (formula "101") (term "0,0") (ifseqformula "71"))
                                     (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "72")))
                                    (rule "closeTrue" (formula "101"))
                                 )
                                 (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE) FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "cnf_rightDist" (formula "14") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "4") (term "0,0,0,1,0,0"))
                                    (rule "cnf_rightDist" (formula "12") (term "0,0,0,0"))
                                    (rule "cnf_rightDist" (formula "10") (term "0,0,0,0"))
                                    (rule "cut_direct" (formula "99") (term "0,0"))
                                    (branch "CUT: o_0 = null TRUE"
                                        (builtin "One Step Simplification" (formula "100"))
                                       (rule "false_right" (formula "100"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "100") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "97") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "96")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_0 = null FALSE"
                                        (builtin "One Step Simplification" (formula "100"))
                                       (rule "notRight" (formula "100"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "100")))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "4") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "99")))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "98")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "97"))
                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                                       (rule "applyEqReverse" (formula "98") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "96")) (ifInst ""  (formula "97")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                              )
                              (branch "result_48.<created> = TRUE FALSE"
                                 (rule "applyEqReverse" (formula "57") (term "1,0") (ifseqformula "56"))
                                 (rule "hideAuxiliaryEq" (formula "56"))
                                 (rule "replace_known_right" (formula "59") (term "0,0,0,0,0,0") (ifseqformula "75"))
                                  (builtin "One Step Simplification" (formula "59"))
                                 (rule "replace_known_right" (formula "57") (term "0,0,0,0") (ifseqformula "75"))
                                  (builtin "One Step Simplification" (formula "57"))
                                 (rule "replace_known_right" (formula "58") (term "0,0,0,0,0") (ifseqformula "75"))
                                  (builtin "One Step Simplification" (formula "58"))
                                 (rule "replace_known_right" (formula "56") (term "0,0,0") (ifseqformula "75"))
                                  (builtin "One Step Simplification" (formula "56"))
                                 (rule "replace_known_right" (formula "55") (term "0,0,0,0,0") (ifseqformula "75"))
                                  (builtin "One Step Simplification" (formula "55"))
                                 (rule "commute_or_2" (formula "13") (term "1,0,0,0"))
                                 (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "24") (term "1,0,0,0"))
                                 (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "14") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "16") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,0,0,0"))
                                 (rule "commute_or_2" (formula "15") (term "1,0,0,0"))
                                 (rule "commute_or_2" (formula "11") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "7") (term "0,1,0,0,0"))
                                 (rule "commute_or" (formula "61") (term "0,0"))
                                 (rule "commute_or" (formula "9") (term "0,0,0,0"))
                                 (rule "commute_or" (formula "7") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "6") (term "0,1,0,0"))
                                 (rule "commute_or_2" (formula "61") (term "0"))
                                 (rule "commute_or_2" (formula "4") (term "0,1,0,0"))
                                 (rule "cnf_rightDist" (formula "24") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "13") (term "0,0,0"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "75"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "5") (term "1,0,0,0,0,0,0,1,0,0") (ifseqformula "75"))
                                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "76")) (ifInst ""  (formula "74")))
                                    (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "76"))
                                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "74")) (ifInst ""  (formula "75")))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "75"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "76")) (ifInst ""  (formula "74")))
                                    (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "75"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")) (ifInst ""  (formula "74")))
                                    (rule "replace_known_right" (formula "3") (term "1,0,0,0,0,1,0,0") (ifseqformula "75"))
                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "76")) (ifInst ""  (formula "74")))
                                    (rule "replace_known_right" (formula "105") (term "0,1") (ifseqformula "74"))
                                     (builtin "One Step Simplification" (formula "105") (ifInst ""  (formula "76")))
                                    (rule "closeTrue" (formula "105"))
                                 )
                                 (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE) FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "cnf_rightDist" (formula "14") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "4") (term "0,0,0,1,0,0"))
                                    (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "6") (term "0,0,0"))
                                    (rule "commute_or" (formula "23") (term "0,0,0"))
                                    (rule "cut_direct" (formula "103") (term "0,0"))
                                    (branch "CUT: o_0 = null TRUE"
                                        (builtin "One Step Simplification" (formula "104"))
                                       (rule "false_right" (formula "104"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "104") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "100")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_0 = null FALSE"
                                        (builtin "One Step Simplification" (formula "104"))
                                       (rule "notRight" (formula "104"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "104"))
                                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "103")))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "102"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "101"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "100"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "101")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                              )
                           )
                           (branch "result_49.<created> = TRUE FALSE"
                              (rule "applyEqReverse" (formula "70") (term "1,0") (ifseqformula "69"))
                              (rule "hideAuxiliaryEq" (formula "69"))
                              (rule "replace_known_right" (formula "70") (term "0,0,0,0") (ifseqformula "80"))
                               (builtin "One Step Simplification" (formula "70"))
                              (rule "replace_known_right" (formula "73") (term "0,0,0,0,0,0,0") (ifseqformula "80"))
                               (builtin "One Step Simplification" (formula "73"))
                              (rule "replace_known_right" (formula "69") (term "0,0,0") (ifseqformula "80"))
                               (builtin "One Step Simplification" (formula "69"))
                              (rule "replace_known_right" (formula "71") (term "0,0,0,0,0") (ifseqformula "80"))
                               (builtin "One Step Simplification" (formula "71"))
                              (rule "replace_known_right" (formula "72") (term "0,0,0,0,0,0") (ifseqformula "80"))
                               (builtin "One Step Simplification" (formula "72"))
                              (rule "replace_known_right" (formula "68") (term "0,0,0,0,0,0") (ifseqformula "80"))
                               (builtin "One Step Simplification" (formula "68"))
                              (rule "commute_or_2" (formula "28") (term "0,0,0"))
                              (rule "commute_or_2" (formula "9") (term "1,0,0,0"))
                              (rule "commute_or_2" (formula "26") (term "0,0,0"))
                              (rule "ifthenelse_split" (formula "56") (term "0"))
                              (branch "result_48.<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "58") (term "1,0") (ifseqformula "57"))
                                 (rule "hideAuxiliaryEq" (formula "57"))
                                 (rule "replace_known_left" (formula "59") (term "0,0,0,0,0") (ifseqformula "56"))
                                  (builtin "One Step Simplification" (formula "59"))
                                 (rule "applyEqReverse" (formula "60") (term "1,0") (ifseqformula "59"))
                                 (rule "hideAuxiliaryEq" (formula "59"))
                                 (rule "replace_known_left" (formula "58") (term "0,0,0,0") (ifseqformula "56"))
                                  (builtin "One Step Simplification" (formula "58"))
                                 (rule "applyEqReverse" (formula "59") (term "1,0") (ifseqformula "58"))
                                 (rule "hideAuxiliaryEq" (formula "58"))
                                 (rule "replace_known_left" (formula "57") (term "0,0,0") (ifseqformula "56"))
                                  (builtin "One Step Simplification" (formula "57"))
                                 (rule "applyEqReverse" (formula "58") (term "1,0") (ifseqformula "57"))
                                 (rule "hideAuxiliaryEq" (formula "57"))
                                 (rule "replace_known_left" (formula "57") (term "0,0,0,0,0,0") (ifseqformula "56"))
                                  (builtin "One Step Simplification" (formula "57"))
                                 (rule "eqSymm" (formula "57"))
                                 (rule "replace_known_left" (formula "55") (term "0,0,0,0,0") (ifseqformula "56"))
                                  (builtin "One Step Simplification" (formula "55"))
                                 (rule "true_left" (formula "55"))
                                 (rule "applyEq" (formula "69") (term "1") (ifseqformula "56"))
                                 (rule "applyEq" (formula "58") (term "0,0,0,1,0,0") (ifseqformula "56"))
                                 (rule "applyEq" (formula "58") (term "0,1,0,0,0") (ifseqformula "56"))
                                 (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "56"))
                                 (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "13") (term "1,0,0,0"))
                                 (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "24") (term "1,0,0,0"))
                                 (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "14") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "16") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,0,0,0"))
                                 (rule "commute_or_2" (formula "15") (term "1,0,0,0"))
                                 (rule "commute_or_2" (formula "11") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "7") (term "0,1,0,0,0"))
                                 (rule "commute_or" (formula "9") (term "0,0,0,0"))
                                 (rule "commute_or" (formula "7") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "6") (term "0,1,0,0"))
                                 (rule "commute_or_2" (formula "4") (term "0,1,0,0"))
                                 (rule "commute_or" (formula "58") (term "0,0"))
                                 (rule "commute_or_2" (formula "58") (term "0"))
                                 (rule "cnf_rightDist" (formula "24") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "13") (term "0,0,0"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "76"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "77"))
                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "75")) (ifInst ""  (formula "76")))
                                    (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "77"))
                                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "75")) (ifInst ""  (formula "76")))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "77"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "75")) (ifInst ""  (formula "76")))
                                    (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "77"))
                                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "75")) (ifInst ""  (formula "76")))
                                    (rule "replace_known_right" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "75"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "77")) (ifInst ""  (formula "76")))
                                    (rule "replace_known_right" (formula "106") (term "0,0") (ifseqformula "77"))
                                     (builtin "One Step Simplification" (formula "106") (ifInst ""  (formula "75")))
                                    (rule "closeTrue" (formula "106"))
                                 )
                                 (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE) FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "cnf_rightDist" (formula "14") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "4") (term "0,0,0,1,0,0"))
                                    (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "27") (term "1,0,0,0,0"))
                                    (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "6") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "25") (term "1,0,0,0,0"))
                                    (rule "commute_or" (formula "23") (term "0,0,0"))
                                    (rule "commute_or" (formula "21") (term "0,0,0"))
                                    (rule "cut_direct" (formula "104") (term "0,0"))
                                    (branch "CUT: o_0 = null TRUE"
                                        (builtin "One Step Simplification" (formula "105"))
                                       (rule "false_right" (formula "105"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "101")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_0 = null FALSE"
                                        (builtin "One Step Simplification" (formula "105"))
                                       (rule "notRight" (formula "105"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "105"))
                                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "104")))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "103"))
                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "102"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "101")) (ifInst ""  (formula "102")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                              )
                              (branch "result_48.<created> = TRUE FALSE"
                                 (rule "applyEqReverse" (formula "57") (term "1,0") (ifseqformula "56"))
                                 (rule "hideAuxiliaryEq" (formula "56"))
                                 (rule "replace_known_right" (formula "57") (term "0,0,0,0") (ifseqformula "79"))
                                  (builtin "One Step Simplification" (formula "57"))
                                 (rule "replace_known_right" (formula "56") (term "0,0,0") (ifseqformula "79"))
                                  (builtin "One Step Simplification" (formula "56"))
                                 (rule "replace_known_right" (formula "58") (term "0,0,0,0,0") (ifseqformula "79"))
                                  (builtin "One Step Simplification" (formula "58"))
                                 (rule "replace_known_right" (formula "59") (term "0,0,0,0,0,0") (ifseqformula "79"))
                                  (builtin "One Step Simplification" (formula "59"))
                                 (rule "replace_known_right" (formula "55") (term "0,0,0,0,0") (ifseqformula "79"))
                                  (builtin "One Step Simplification" (formula "55"))
                                 (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "13") (term "1,0,0,0"))
                                 (rule "commute_or_2" (formula "8") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "24") (term "1,0,0,0"))
                                 (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "14") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "16") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "61") (term "0,0"))
                                 (rule "commute_or_2" (formula "15") (term "1,0,0,0"))
                                 (rule "commute_or_2" (formula "11") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "7") (term "0,1,0,0,0"))
                                 (rule "commute_or_2" (formula "61") (term "0"))
                                 (rule "commute_or" (formula "9") (term "0,0,0,0"))
                                 (rule "commute_or" (formula "7") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "6") (term "0,1,0,0"))
                                 (rule "commute_or_2" (formula "4") (term "0,1,0,0"))
                                 (rule "commute_or_2" (formula "13") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "24") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                                 (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "15") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "7") (term "0,0,0"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "79"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "4") (term "1,0,0,0,0,0,1,0,0") (ifseqformula "79"))
                                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "80")) (ifInst ""  (formula "78")))
                                    (rule "replace_known_right" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "78"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "80")) (ifInst ""  (formula "79")))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "80"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")) (ifInst ""  (formula "79")))
                                    (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "80"))
                                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "78")) (ifInst ""  (formula "79")))
                                    (rule "replace_known_right" (formula "3") (term "0,0,0,0,0,1,0,0") (ifseqformula "78"))
                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")) (ifInst ""  (formula "79")))
                                    (rule "replace_known_right" (formula "110") (term "0,0") (ifseqformula "80"))
                                     (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "78")))
                                    (rule "closeTrue" (formula "110"))
                                 )
                                 (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_withFirstRecordAsHeader«anonHeapFunction» = TRUE) FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "commute_or_2" (formula "4") (term "0,0,0,1,0,0"))
                                    (rule "commute_or_2" (formula "27") (term "1,0,0,0,0"))
                                    (rule "commute_or_2" (formula "25") (term "1,0,0,0,0"))
                                    (rule "cut_direct" (formula "108") (term "0,0"))
                                    (branch "CUT: o_0 = null TRUE"
                                        (builtin "One Step Simplification" (formula "109"))
                                       (rule "false_right" (formula "109"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "108") (term "1") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "106") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "105")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_0 = null FALSE"
                                        (builtin "One Step Simplification" (formula "109"))
                                       (rule "notRight" (formula "109"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "109")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_left" (formula "5") (term "0,0,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "108")))
                                       (rule "applyEqReverse" (formula "109") (term "1") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "107")))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "106")))
                                       (rule "applyEqReverse" (formula "107") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "105")) (ifInst ""  (formula "106")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "Exceptional Post (LinkedList)"
                         (builtin "One Step Simplification" (formula "66"))
                         (builtin "One Step Simplification" (formula "86"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,1,0,1,0,1") (ifseqformula "55"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,0,1,0,1,0,1") (ifseqformula "44"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,0,0,1,0,1,0,1") (ifseqformula "40"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,0,0,0,1,0,1,0,1") (ifseqformula "34"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,0,0,0,0,1,0,1,0,1") (ifseqformula "30"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,0,0,0,0,0,0,1,0,1,0,1") (ifseqformula "26"))
                        (rule "andLeft" (formula "66"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "1,0,0") (ifseqformula "66"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,1,0,0") (ifseqformula "55"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "1,1,0,1,0") (ifseqformula "66"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,1,0,0") (ifseqformula "44"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0,1,0,0") (ifseqformula "40"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,1,1,0,1,0") (ifseqformula "55"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0,0,1,0,0") (ifseqformula "34"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,1,1,0,1,0") (ifseqformula "44"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0,0,0,1,0,0") (ifseqformula "30"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0,1,1,0,1,0") (ifseqformula "40"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0,0,1,1,0,1,0") (ifseqformula "34"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "26"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0,0,0,1,1,0,1,0") (ifseqformula "30"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,0,0,0,0,0,1,1,0,1,0") (ifseqformula "26"))
                        (rule "andLeft" (formula "67"))
                        (rule "andLeft" (formula "68"))
                        (rule "andLeft" (formula "67"))
                        (rule "andLeft" (formula "69"))
                        (rule "andLeft" (formula "68"))
                        (rule "andLeft" (formula "67"))
                        (rule "andLeft" (formula "69"))
                        (rule "notLeft" (formula "67"))
                        (rule "close" (formula "74") (ifseqformula "73"))
                     )
                     (branch "Pre (LinkedList)"
                         (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "65")) (ifInst ""  (formula "65")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "1") (ifseqformula "55"))
                        (rule "wellFormedAnonEQ" (formula "84") (term "0") (ifseqformula "55"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,1") (ifseqformula "44"))
                        (rule "wellFormedAnonEQ" (formula "84") (term "0,0") (ifseqformula "44"))
                        (rule "wellFormedAnonEQ" (formula "84") (term "0,0,0") (ifseqformula "40"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,1") (ifseqformula "40"))
                        (rule "wellFormedAnonEQ" (formula "84") (term "0,0,0,0") (ifseqformula "34"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,0,1") (ifseqformula "34"))
                        (rule "wellFormedAnonEQ" (formula "84") (term "0,0,0,0,0") (ifseqformula "30"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,0,0,1") (ifseqformula "30"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,0,0,0,1") (ifseqformula "26"))
                        (rule "wellFormedAnonEQ" (formula "84") (term "0,0,0,0,0,0") (ifseqformula "26"))
                        (rule "replace_known_left" (formula "84") (term "1,0") (ifseqformula "54"))
                         (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "19")) (ifInst ""  (formula "25")) (ifInst ""  (formula "29")) (ifInst ""  (formula "33")) (ifInst ""  (formula "39")) (ifInst ""  (formula "43")))
                        (rule "orRight" (formula "84"))
                        (rule "orRight" (formula "84"))
                        (rule "orRight" (formula "84"))
                        (rule "orRight" (formula "84"))
                        (rule "orRight" (formula "84"))
                        (rule "orRight" (formula "84"))
                        (rule "replace_known_right" (formula "60") (term "0,0,0,0") (ifseqformula "84"))
                         (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "86")) (ifInst ""  (formula "85")))
                        (rule "applyEqReverse" (formula "61") (term "1,0") (ifseqformula "60"))
                        (rule "hideAuxiliaryEq" (formula "60"))
                        (rule "replace_known_right" (formula "61") (term "1,0,0") (ifseqformula "84"))
                         (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "83")) (ifInst ""  (formula "86")) (ifInst ""  (formula "87")) (ifInst ""  (formula "85")))
                        (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "61"))
                        (rule "hideAuxiliaryEq" (formula "61"))
                        (rule "replace_known_right" (formula "58") (term "0,0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "58"))
                        (rule "applyEqReverse" (formula "59") (term "1,0") (ifseqformula "58"))
                        (rule "hideAuxiliaryEq" (formula "58"))
                        (rule "replace_known_right" (formula "59") (term "1,0,0,0") (ifseqformula "83"))
                         (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "81")) (ifInst ""  (formula "84")) (ifInst ""  (formula "82")))
                        (rule "hideAuxiliaryEq" (formula "59"))
                        (rule "replace_known_right" (formula "59") (term "1,0,0,0,0,0") (ifseqformula "85"))
                         (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "80")) (ifInst ""  (formula "83")) (ifInst ""  (formula "84")) (ifInst ""  (formula "82")) (ifInst ""  (formula "81")))
                        (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "59"))
                        (rule "applyEqReverse" (formula "51") (term "0,1,0,0,0") (ifseqformula "59"))
                        (rule "applyEqReverse" (formula "51") (term "0,0,0,1,0") (ifseqformula "59"))
                        (rule "hideAuxiliaryEq" (formula "59"))
                        (rule "replace_known_right" (formula "58") (term "0,0,0") (ifseqformula "79"))
                         (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "80")))
                        (rule "hideAuxiliaryEq" (formula "58"))
                        (rule "replace_known_right" (formula "57") (term "1") (ifseqformula "79"))
                         (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "78")) (ifInst ""  (formula "81")) (ifInst ""  (formula "83")) (ifInst ""  (formula "84")) (ifInst ""  (formula "82")) (ifInst ""  (formula "80")))
                        (rule "closeFalse" (formula "57"))
                     )
                  )
                  (branch "Exceptional Post (keySet)"
                      (builtin "One Step Simplification" (formula "74"))
                      (builtin "One Step Simplification" (formula "55"))
                     (rule "andLeft" (formula "55"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "1,0") (ifseqformula "55"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,1,0") (ifseqformula "44"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,1,0") (ifseqformula "40"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,0,1,0") (ifseqformula "34"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,0,0,1,0") (ifseqformula "30"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,0,0,0,1,0") (ifseqformula "26"))
                     (rule "andLeft" (formula "56"))
                     (rule "andLeft" (formula "57"))
                     (rule "andLeft" (formula "56"))
                     (rule "andLeft" (formula "58"))
                     (rule "notLeft" (formula "56"))
                     (rule "close" (formula "60") (ifseqformula "59"))
                  )
                  (branch "Pre (keySet)"
                      (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "52")))
                     (rule "wellFormedAnonEQ" (formula "72") (ifseqformula "44"))
                     (rule "wellFormedAnonEQ" (formula "72") (term "0") (ifseqformula "40"))
                     (rule "wellFormedAnonEQ" (formula "72") (term "0,0") (ifseqformula "34"))
                     (rule "wellFormedAnonEQ" (formula "72") (term "0,0,0") (ifseqformula "30"))
                     (rule "wellFormedAnonEQ" (formula "72") (term "0,0,0,0") (ifseqformula "26"))
                     (rule "replace_known_left" (formula "72") (term "1,0,0,0,0") (ifseqformula "25"))
                      (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "19")) (ifInst ""  (formula "29")) (ifInst ""  (formula "33")) (ifInst ""  (formula "39")) (ifInst ""  (formula "43")))
                     (rule "closeTrue" (formula "72"))
                  )
                  (branch "Null reference (inputColMap = null)"
                      (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "54")))
                     (rule "closeTrue" (formula "72"))
                  )
               )
               (branch "Exceptional Post (getHeaderMap)"
                   (builtin "One Step Simplification" (formula "42"))
                   (builtin "One Step Simplification" (formula "60"))
                  (rule "andLeft" (formula "42"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "1,0") (ifseqformula "42"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,1,0") (ifseqformula "38"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,1,0") (ifseqformula "32"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,1,0") (ifseqformula "28"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,0,1,0") (ifseqformula "24"))
                  (rule "andLeft" (formula "43"))
                  (rule "andLeft" (formula "43"))
                  (rule "andLeft" (formula "45"))
                  (rule "notLeft" (formula "43"))
                  (rule "close" (formula "46") (ifseqformula "45"))
               )
               (branch "Pre (getHeaderMap)"
                   (builtin "One Step Simplification" (formula "58"))
                  (rule "wellFormedAnonEQ" (formula "58") (term "1") (ifseqformula "38"))
                  (rule "wellFormedAnonEQ" (formula "58") (term "0,1") (ifseqformula "32"))
                  (rule "wellFormedAnonEQ" (formula "58") (term "0,0,1") (ifseqformula "28"))
                  (rule "wellFormedAnonEQ" (formula "58") (term "0,0,0,1") (ifseqformula "24"))
                  (rule "replace_known_left" (formula "58") (term "1,0,0,1") (ifseqformula "27"))
                   (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "17")) (ifInst ""  (formula "23")) (ifInst ""  (formula "31")) (ifInst ""  (formula "37")))
                  (rule "nnf_imp2or" (formula "15") (term "0,0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "nnf_imp2or" (formula "3") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "4") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "14") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "13") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "1") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "2") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "16") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "10") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "12") (term "0,0,0"))
                  (rule "nnf_imp2or" (formula "11") (term "0,0,0"))
                  (rule "nnf_notAnd" (formula "3") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "nnf_notAnd" (formula "4") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "nnf_imp2or" (formula "14") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "14") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "nnf_imp2or" (formula "13") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "13") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "nnf_notAnd" (formula "1") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "nnf_imp2or" (formula "2") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "2") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "nnf_notAnd" (formula "16") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "nnf_imp2or" (formula "11") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "11") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "nnf_imp2or" (formula "3") (term "1,0,0,0"))
                  (rule "nnf_imp2or" (formula "4") (term "1,0,0,0"))
                  (rule "nnf_notOr" (formula "3") (term "1,0,0,0,0"))
                  (rule "nnf_imp2or" (formula "1") (term "1,0,0,0"))
                  (rule "nnf_notOr" (formula "4") (term "1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "14") (term "1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "14") (term "0,1,0,0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "nnf_imp2or" (formula "16") (term "1,0,0,0"))
                  (rule "nnf_imp2or" (formula "10") (term "1,0,0,0"))
                  (rule "nnf_notOr" (formula "13") (term "1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "13") (term "0,1,0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "nnf_imp2or" (formula "12") (term "1,0,0,0"))
                  (rule "nnf_notOr" (formula "1") (term "1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "2") (term "0,1,0,0,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "nnf_notOr" (formula "16") (term "1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "10") (term "1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "12") (term "1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "11") (term "0,1,0,0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "nnf_notAnd" (formula "3") (term "0,1,0,0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "nnf_notAnd" (formula "4") (term "0,1,0,0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "nnf_notAnd" (formula "1") (term "0,1,0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "nnf_notAnd" (formula "16") (term "0,1,0,0,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "nnf_notAnd" (formula "10") (term "0,1,0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "nnf_notAnd" (formula "12") (term "0,1,0,0,0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "nnf_notOr" (formula "2") (term "1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "11") (term "1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "3") (term "0,1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "1") (term "0,1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "10") (term "0,1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "12") (term "0,1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "3") (term "0,0,1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "1") (term "0,0,1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "10") (term "0,0,1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "3") (term "0,0,0,1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "1") (term "0,0,0,1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "1") (term "0,0,0,0,1,0,0,0,0"))
                  (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVParser" (formula "58"))
                  (rule "closeTrue" (formula "58"))
               )
               (branch "Null reference (parser = null)"
                   (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "41")))
                  (rule "closeTrue" (formula "58"))
               )
            )
            (branch "if x false"
                (builtin "One Step Simplification" (formula "59"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Exceptional Post (parse)"
             (builtin "One Step Simplification" (formula "34"))
             (builtin "One Step Simplification" (formula "51"))
            (rule "andLeft" (formula "34"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,0") (ifseqformula "34"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,0") (ifseqformula "28"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,1,0") (ifseqformula "24"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,1,0") (ifseqformula "20"))
            (rule "andLeft" (formula "35"))
            (rule "andLeft" (formula "35"))
            (rule "andLeft" (formula "37"))
            (rule "notLeft" (formula "35"))
            (rule "close" (formula "38") (ifseqformula "37"))
         )
         (branch "Pre (parse)"
             (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")))
            (rule "wellFormedAnonEQ" (formula "49") (term "0,1") (ifseqformula "28"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "1,1") (ifseqformula "28"))
            (rule "wellFormedAnonEQ" (formula "49") (term "0,0,1") (ifseqformula "24"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,1,1") (ifseqformula "24"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,0,1,1") (ifseqformula "20"))
            (rule "wellFormedAnonEQ" (formula "49") (term "0,0,0,1") (ifseqformula "20"))
            (rule "replace_known_left" (formula "49") (term "1,1,1") (ifseqformula "30"))
             (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "13")) (ifInst ""  (formula "19")) (ifInst ""  (formula "23")) (ifInst ""  (formula "27")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
            (rule "nnf_imp2or" (formula "11") (term "0,0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "nnf_imp2or" (formula "7") (term "0,0,0"))
            (rule "nnf_imp2or" (formula "6") (term "0,0,0"))
            (rule "nnf_imp2or" (formula "9") (term "0,0,0"))
            (rule "nnf_imp2or" (formula "10") (term "0,0,0"))
            (rule "nnf_imp2or" (formula "12") (term "0,0,0"))
            (rule "nnf_imp2or" (formula "8") (term "0,0,0"))
            (rule "nnf_notAnd" (formula "7") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "nnf_notAnd" (formula "6") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "nnf_notAnd" (formula "10") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "nnf_notAnd" (formula "12") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "nnf_imp2or" (formula "8") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "8") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "nnf_imp2or" (formula "7") (term "1,0,0,0"))
            (rule "nnf_imp2or" (formula "6") (term "1,0,0,0"))
            (rule "nnf_imp2or" (formula "9") (term "1,0,0,0"))
            (rule "nnf_imp2or" (formula "10") (term "1,0,0,0"))
            (rule "nnf_imp2or" (formula "12") (term "1,0,0,0"))
            (rule "nnf_notOr" (formula "7") (term "1,0,0,0,0"))
            (rule "nnf_notOr" (formula "6") (term "1,0,0,0,0"))
            (rule "nnf_notOr" (formula "9") (term "1,0,0,0,0"))
            (rule "nnf_notOr" (formula "10") (term "1,0,0,0,0"))
            (rule "nnf_notOr" (formula "12") (term "1,0,0,0,0"))
            (rule "nnf_notAnd" (formula "8") (term "0,1,0,0,0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "nnf_notAnd" (formula "7") (term "0,1,0,0,0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "nnf_notAnd" (formula "6") (term "0,1,0,0,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "nnf_notAnd" (formula "9") (term "0,1,0,0,0"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "nnf_notAnd" (formula "10") (term "0,1,0,0,0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "nnf_notAnd" (formula "12") (term "0,1,0,0,0"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "nnf_notOr" (formula "8") (term "1,0,0,0,0"))
            (rule "nnf_notOr" (formula "6") (term "0,1,0,0,0,0"))
            (rule "nnf_notOr" (formula "8") (term "0,1,0,0,0,0"))
            (rule "nnf_notOr" (formula "6") (term "0,0,1,0,0,0,0"))
            (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVFormat" (formula "49"))
            (rule "notRight" (formula "49"))
            (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=org_apache_commons_csv_CSVFormat_RFC4180_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replaceKnownSelect_taclet00_2" (formula "1") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
            (rule "close" (formula "41") (ifseqformula "2"))
         )
         (branch "Null reference (var_2 = null)"
             (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "37")))
            (rule "closeTrue" (formula "49"))
         )
      )
      (branch "Exceptional Post (FileReader)"
          (builtin "One Step Simplification" (formula "28"))
          (builtin "One Step Simplification" (formula "41"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,1,0,1,0,1") (ifseqformula "24"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,0,1,0,1,0,1") (ifseqformula "20"))
         (rule "andLeft" (formula "28"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,0,0") (ifseqformula "28"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1,0,0") (ifseqformula "24"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,1,0,0") (ifseqformula "20"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,1,0,1,0") (ifseqformula "28"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1,1,0,1,0") (ifseqformula "24"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,1,1,0,1,0") (ifseqformula "20"))
         (rule "andLeft" (formula "29"))
         (rule "andLeft" (formula "29"))
         (rule "andLeft" (formula "31"))
         (rule "andLeft" (formula "30"))
         (rule "andLeft" (formula "29"))
         (rule "andLeft" (formula "31"))
         (rule "notLeft" (formula "29"))
         (rule "close" (formula "35") (ifseqformula "34"))
      )
      (branch "Pre (FileReader)"
          (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "38")) (ifInst ""  (formula "38")))
         (rule "wellFormedAnonEQ" (formula "39") (term "0") (ifseqformula "24"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "1") (ifseqformula "24"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,1") (ifseqformula "20"))
         (rule "wellFormedAnonEQ" (formula "39") (term "0,0") (ifseqformula "20"))
         (rule "replace_known_left" (formula "39") (term "1,0") (ifseqformula "23"))
          (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "13")) (ifInst ""  (formula "19")) (ifInst ""  (formula "16")))
         (rule "closeTrue" (formula "39"))
      )
   )
   (branch "Exceptional Post (withDelimiter)"
       (builtin "One Step Simplification" (formula "27"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,0") (ifseqformula "15"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,1,0") (ifseqformula "11"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "18"))
      (rule "notLeft" (formula "16"))
      (rule "close" (formula "20") (ifseqformula "19"))
   )
   (branch "Pre (withDelimiter)"
       (builtin "One Step Simplification" (formula "25"))
      (rule "wellFormedAnonEQ" (formula "25") (term "0,1") (ifseqformula "11"))
      (rule "expand_inChar" (formula "25") (term "1,1"))
      (rule "replace_char_MIN" (formula "25") (term "0,1,1,1"))
      (rule "replace_char_MAX" (formula "25") (term "1,0,1,1"))
      (rule "replace_known_left" (formula "25") (term "0,0,1") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "10")))
      (rule "inEqSimp_commuteLeq" (formula "25") (term "1,1"))
      (rule "nnf_imp2or" (formula "2") (term "0,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "nnf_imp2or" (formula "3") (term "0,0,0"))
      (rule "nnf_imp2or" (formula "1") (term "0,0,0"))
      (rule "nnf_imp2or" (formula "3") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "3") (term "0,0,0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "nnf_imp2or" (formula "1") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "1") (term "0,0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "nnf_notOr" (formula "3") (term "1,0,0,0,0"))
      (rule "nnf_notAnd" (formula "3") (term "0,1,0,0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "nnf_notOr" (formula "1") (term "1,0,0,0,0"))
      (rule "nnf_notAnd" (formula "1") (term "0,1,0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVFormat" (formula "25") (term "0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "25") (term "0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "25") (term "0,0,0"))
      (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "15"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "commute_and" (formula "25"))
      (rule "commute_or_2" (formula "3") (term "0,0,0"))
      (rule "commute_or_2" (formula "1") (term "0,0,0"))
      (rule "commute_or_2" (formula "3") (term "1,0,0,0,0"))
      (rule "commute_or_2" (formula "1") (term "1,0,0,0,0"))
      (rule "shift_paren_or" (formula "3") (term "0,0,0,0"))
      (rule "shift_paren_or" (formula "1") (term "0,0,0,0"))
      (rule "commute_and" (formula "3") (term "1,0,0,0"))
      (rule "commute_and" (formula "1") (term "1,0,0,0"))
      (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "cnf_rightDist" (formula "3") (term "0,0,0"))
      (rule "distr_forallAnd" (formula "3") (term "0,0"))
      (rule "distr_forallAnd" (formula "3") (term "0"))
      (rule "distr_forallAnd" (formula "3"))
      (rule "andLeft" (formula "3"))
      (rule "commute_or_2" (formula "3") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "eqSymm" (formula "3") (term "1,0,0,0,0"))
      (rule "castedGetAny" (formula "3") (term "1,0,0,1,0,0,0"))
      (rule "castedGetAny" (formula "3") (term "0,0,0,0,0,0"))
      (rule "castedGetAny" (formula "3") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "shift_paren_or" (formula "3") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "eqSymm" (formula "3") (term "1,1,0,0,0"))
      (rule "castedGetAny" (formula "3") (term "0,0,1,0,0,0"))
      (rule "castedGetAny" (formula "3") (term "0,0,0,0,0,0"))
      (rule "castedGetAny" (formula "3") (term "0,1,1,0,0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
      (rule "distr_forallAnd" (formula "1") (term "0,0"))
      (rule "distr_forallAnd" (formula "1") (term "0"))
      (rule "distr_forallAnd" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "commute_or_2" (formula "1") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "eqSymm" (formula "1") (term "1,0,0,0,0"))
      (rule "castedGetAny" (formula "1") (term "0,0,0,0,0,0"))
      (rule "castedGetAny" (formula "1") (term "1,0,0,1,0,0,0"))
      (rule "castedGetAny" (formula "1") (term "0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "shift_paren_or" (formula "1") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "eqSymm" (formula "1") (term "1,1,0,0,0"))
      (rule "castedGetAny" (formula "1") (term "0,0,1,0,0,0"))
      (rule "castedGetAny" (formula "1") (term "0,0,0,0,0,0"))
      (rule "castedGetAny" (formula "1") (term "0,1,1,0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "charLiteral_to_int" (formula "23") (term "0,1"))
      (rule "leq_literals" (formula "23") (term "1"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "inEqSimp_geqRight" (formula "23"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "charLiteral_to_int" (formula "1") (term "0"))
      (rule "leq_literals" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "Null reference (c_1 = null)"
       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "14")))
      (rule "closeTrue" (formula "25"))
   )
)
(branch "Exceptional Post (withFirstRecordAsHeader)"
    (builtin "One Step Simplification" (formula "22"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,0") (ifseqformula "11"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "14"))
   (rule "notLeft" (formula "12"))
   (rule "close" (formula "15") (ifseqformula "14"))
)
(branch "Pre (withFirstRecordAsHeader)"
    (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "4")))
   (rule "nnf_imp2or" (formula "2") (term "0,0"))
    (builtin "One Step Simplification" (formula "2"))
   (rule "nnf_imp2or" (formula "3") (term "0,0,0"))
   (rule "nnf_imp2or" (formula "1") (term "0,0,0"))
   (rule "nnf_notAnd" (formula "3") (term "0,0,0,0"))
    (builtin "One Step Simplification" (formula "3"))
   (rule "nnf_notAnd" (formula "1") (term "0,0,0,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "nnf_imp2or" (formula "3") (term "1,0,0,0"))
   (rule "nnf_imp2or" (formula "1") (term "1,0,0,0"))
   (rule "nnf_notOr" (formula "3") (term "1,0,0,0,0"))
   (rule "nnf_notOr" (formula "1") (term "1,0,0,0,0"))
   (rule "nnf_notAnd" (formula "3") (term "0,1,0,0,0"))
    (builtin "One Step Simplification" (formula "3"))
   (rule "nnf_notAnd" (formula "1") (term "0,1,0,0,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVFormat" (formula "20"))
   (rule "notRight" (formula "20"))
   (rule "close" (formula "11") (ifseqformula "1"))
)
(branch "Null reference (c_2 = null)"
    (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "10")))
   (rule "closeTrue" (formula "20"))
)
)
}
