\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Nov 15 03:14:26 CET 2019
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Fri Nov 15 03:14:26 CET 2019
contract=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:initPolyasValsAddDataForVoter(org.apache.commons.csv.CSVRecord,de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter)].Non-interference contract.0
name=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:initPolyasValsAddDataForVoter(org.apache.commons.csv.CSVRecord,de.polyas.core3.open.cred.CredentialGenerator.GeneratedDataForVoter)].Non-interference contract.0
class=de.uka.ilkd.key.informationflow.po.InfFlowContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "268824")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1") (userinteraction))
(rule "andLeft" (formula "1") (userinteraction))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "10"))
(rule "notLeft" (formula "9"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "8") (term "1,0,0,1"))
(rule "eqSymm" (formula "8") (term "0,0,0,1"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "12"))
 (builtin "One Step Simplification" (formula "5"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "11"))
 (builtin "One Step Simplification" (formula "4"))
(rule "assignment" (formula "8") (term "1"))
 (builtin "One Step Simplification" (formula "8"))
(rule "boxToDiamond" (formula "8") (term "1"))
 (builtin "One Step Simplification" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "6"))
(rule "true_left" (formula "6"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_initPolyasValsAddDataForVoter,savedHeapBefore_initPolyasValsAddDataForVoter"))
 (builtin "One Step Simplification" (formula "10"))
(rule "methodCallUnfoldTarget" (formula "10") (term "1") (inst "#v0=a"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "a"))
(rule "activeUseStaticFieldReadAccess" (formula "10") (term "1"))
(rule "assignment_read_static_attribute" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "methodCallUnfoldArguments" (formula "10") (term "1"))
(rule "variableDeclarationAssign" (formula "10") (term "1"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "var"))
(rule "assignment" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "variableDeclarationAssign" (formula "10") (term "1"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "var_1"))
(rule "assignment_read_attribute" (formula "10") (term "1"))
(branch "Normal Execution (_dataForVoter_9_A != null)"
    (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "14")))
    (builtin "One Step Simplification" (formula "11"))
   (rule "false_right" (formula "10"))
    (builtin "Use Operation Contract" (formula "10") (newnames "heapBefore_add,result_99,exc_128,heapAfter_add,anon_heap_add") (contract "java.util.ArrayList[java.util.Collection::add(java.lang.Object)].JML normal_behavior operation contract.0"))
   (branch "Post (add)"
       (builtin "One Step Simplification" (formula "9"))
       (builtin "One Step Simplification" (formula "8"))
       (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "11")) (ifInst ""  (formula "1")) (ifInst ""  (formula "11")))
       (builtin "One Step Simplification" (formula "14"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "blockEmpty" (formula "18") (term "1"))
      (rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=java_util_Collection_seq_0"))
      (rule "simplifySelectOfAnonEQ" (formula "10") (ifseqformula "8"))
       (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "23")))
      (rule "eqSymm" (formula "11"))
      (rule "hideAuxiliaryEq" (formula "11"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "10") (term "1"))
      (rule "elementOfSingleton" (formula "10") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "eqSymm" (formula "10"))
      (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "11"))
      (rule "true_left" (formula "11"))
      (rule "methodCallUnfoldTarget" (formula "16") (term "1") (inst "#v0=a"))
      (rule "variableDeclaration" (formula "16") (term "1") (newnames "a_1"))
      (rule "activeUseStaticFieldReadAccess" (formula "16") (term "1"))
      (rule "assignment_read_static_attribute" (formula "16") (term "1"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "pullOutSelect" (formula "16") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_4" (formula "16") (term "0,1,0"))
      (rule "methodCallUnfoldArguments" (formula "16") (term "1"))
      (rule "variableDeclarationAssign" (formula "16") (term "1"))
      (rule "variableDeclaration" (formula "16") (term "1") (newnames "var_2"))
      (rule "assignment" (formula "16") (term "1"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "variableDeclarationAssign" (formula "16") (term "1"))
      (rule "variableDeclaration" (formula "16") (term "1") (newnames "var_3"))
      (rule "assignment_read_attribute" (formula "16") (term "1"))
      (branch "Normal Execution (_dataForVoter_9_A != null)"
          (builtin "One Step Simplification" (formula "17"))
          (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "20")))
         (rule "false_right" (formula "16"))
         (rule "pullOutSelect" (formula "16") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "6")))
         (rule "elementOfSingleton" (formula "1") (term "0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_6" (formula "16") (term "0,1,0"))
          (builtin "Use Operation Contract" (formula "16") (newnames "heapBefore_add_0,result_100,exc_129,heapAfter_add_0,anon_heap_add_0") (contract "java.util.ArrayList[java.util.Collection::add(java.lang.Object)].JML normal_behavior operation contract.0"))
         (branch "Post (add)"
             (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "19")) (ifInst ""  (formula "19")))
             (builtin "One Step Simplification" (formula "20"))
             (builtin "One Step Simplification" (formula "15"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,1") (ifseqformula "8"))
            (rule "replaceKnownSelect_taclet00_1" (formula "14") (term "0,1,0,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "14") (term "0,1,0,0,1,1"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "14"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "16"))
            (rule "eqSeqConcat" (formula "16"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "16"))
            (rule "polySimp_addComm0" (formula "16") (term "1"))
            (rule "eqSeqSingleton" (formula "18"))
            (rule "andLeft" (formula "18"))
            (rule "lenOfSeqConcat" (formula "17") (term "2,0"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "polySimp_addComm0" (formula "17") (term "2,0"))
            (rule "lenOfSeqConcat" (formula "16") (term "1,1"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "polySimp_addComm0" (formula "16") (term "1,1"))
            (rule "polySimp_addAssoc" (formula "16") (term "1"))
            (rule "add_literals" (formula "16") (term "0,1"))
            (rule "lenOfSeqConcat" (formula "18") (term "1,0,0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "polySimp_addComm0" (formula "18") (term "1,0,0"))
            (rule "lenOfSeqConcat" (formula "19") (term "1,0,0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "polySimp_addComm0" (formula "19") (term "1,0,0"))
            (rule "lenOfSeqSub" (formula "18") (term "0"))
            (rule "polySimp_elimSub" (formula "18") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,1,0"))
            (rule "mul_literals" (formula "18") (term "0,1,1,0"))
            (rule "polySimp_addComm0" (formula "18") (term "1,0"))
            (rule "ifEqualsInteger" (formula "18"))
            (rule "equal_literals" (formula "18") (term "1,1"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "andLeft" (formula "18"))
            (rule "applyEqRigid" (formula "20") (term "2,0,0") (ifseqformula "16"))
            (rule "applyEqRigid" (formula "18") (term "1") (ifseqformula "16"))
            (rule "applyEqRigid" (formula "19") (term "1,0") (ifseqformula "16"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "add_literals" (formula "19") (term "0,0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "19") (term "0"))
            (rule "add_literals" (formula "19") (term "1,1,0"))
            (rule "times_zero_1" (formula "19") (term "1,0"))
            (rule "add_zero_right" (formula "19") (term "0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "true_left" (formula "19"))
            (rule "getOfSeqSub" (formula "19") (term "0"))
            (rule "castDel" (formula "19") (term "2,0"))
            (rule "leq_literals" (formula "19") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "add_zero_left" (formula "19") (term "1,1,0"))
            (rule "polySimp_elimSub" (formula "19") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
            (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
            (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "19") (term "1,0,0"))
            (rule "add_literals" (formula "19") (term "1,1,1,0,0"))
            (rule "times_zero_1" (formula "19") (term "1,1,0,0"))
            (rule "add_zero_right" (formula "19") (term "1,0,0"))
            (rule "less_literals" (formula "19") (term "0,0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "pullOutSelect" (formula "17") (term "0,0") (inst "selectSK=java_util_Collection_seq_1"))
            (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "14"))
             (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "33")))
            (rule "replaceKnownSelect_taclet0000_8" (formula "16") (term "0,0"))
            (rule "replaceKnownSelect_taclet0000_8" (formula "20") (term "0,0"))
            (rule "replaceKnownSelect_taclet00_1" (formula "17") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "17") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "0,1,0,0") (ifseqformula "8"))
            (rule "elementOfSingleton" (formula "17") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "hideAuxiliaryEq" (formula "17"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "17") (term "0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "19") (term "0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "16") (term "0,0"))
            (rule "eqSeqConcat" (formula "17"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "polySimp_addComm0" (formula "17") (term "1"))
            (rule "eqSeqSingleton" (formula "19"))
            (rule "andLeft" (formula "19"))
            (rule "lenOfSeqSub" (formula "17") (term "0"))
            (rule "polySimp_elimSub" (formula "17") (term "1,0"))
            (rule "times_zero_2" (formula "17") (term "1,1,0"))
            (rule "add_zero_right" (formula "17") (term "1,0"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "lenOfSeqSub" (formula "19") (term "2,0,0"))
            (rule "polySimp_elimSub" (formula "19") (term "1,2,0,0"))
            (rule "times_zero_2" (formula "19") (term "1,1,2,0,0"))
            (rule "add_zero_right" (formula "19") (term "1,2,0,0"))
            (rule "lenOfSeqSub" (formula "20") (term "2,0,0"))
            (rule "polySimp_elimSub" (formula "20") (term "1,2,0,0"))
            (rule "mul_literals" (formula "20") (term "1,1,2,0,0"))
            (rule "add_zero_right" (formula "20") (term "1,2,0,0"))
            (rule "lenOfSeqSub" (formula "19") (term "0"))
            (rule "polySimp_elimSub" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,0"))
            (rule "ifEqualsInteger" (formula "19"))
            (rule "equal_literals" (formula "19") (term "1,1"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "andLeft" (formula "19"))
            (rule "getOfSeqSub" (formula "21") (term "0"))
            (rule "castDel" (formula "21") (term "2,0"))
            (rule "add_zero_left" (formula "21") (term "1,1,0"))
            (rule "leq_literals" (formula "21") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "polySimp_elimSub" (formula "21") (term "1,0,0"))
            (rule "polySimp_addComm0" (formula "21") (term "1,0,0"))
            (rule "getOfSeqSub" (formula "21") (term "1,0"))
            (rule "castDel" (formula "21") (term "2,1,0"))
            (rule "add_zero_right" (formula "21") (term "1,1,1,0"))
            (rule "polySimp_elimSub" (formula "21") (term "1,1,0,1,0"))
            (rule "mul_literals" (formula "21") (term "1,1,1,0,1,0"))
            (rule "add_zero_right" (formula "21") (term "1,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,1,0"))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "26"))
            (rule "true_left" (formula "26"))
            (rule "commute_or" (formula "27"))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "24"))
            (rule "true_left" (formula "24"))
            (rule "methodCallEmpty" (formula "30") (term "1"))
            (rule "commute_and" (formula "21") (term "0,1,0"))
            (rule "tryEmpty" (formula "30") (term "1"))
            (rule "emptyModality" (formula "30") (term "1"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "notRight" (formula "30"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "eqSymm" (formula "2"))
            (rule "equalityToSeqGetAndSeqLenLeft" (formula "13") (inst "iv=iv"))
            (rule "andLeft" (formula "13"))
            (rule "lenOfSeqConcat" (formula "13") (term "0"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "polySimp_addComm0" (formula "13") (term "0"))
            (rule "lenOfSeqConcat" (formula "14") (term "1,1,0,0"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
            (rule "lenOfSeqConcatEQ" (formula "13") (term "1") (ifseqformula "15"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "polySimp_addComm0" (formula "13") (term "1"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
            (rule "getOfSeqConcat" (formula "13") (term "0,1,0"))
            (rule "polySimp_elimSub" (formula "13") (term "1,2,0,1,0"))
            (rule "polySimp_addComm0" (formula "13") (term "1,2,0,1,0"))
            (rule "getOfSeqSingleton" (formula "13") (term "2,0,1,0"))
            (rule "castDel" (formula "13") (term "2,2,0,1,0"))
            (rule "castDel" (formula "13") (term "1,2,0,1,0"))
            (rule "getOfSeqConcatEQ" (formula "13") (term "1,1,0") (ifseqformula "14"))
            (rule "polySimp_elimSub" (formula "13") (term "1,2,1,1,0"))
            (rule "polySimp_addComm0" (formula "13") (term "1,2,1,1,0"))
            (rule "getOfSeqSingleton" (formula "13") (term "2,1,1,0"))
            (rule "castDel" (formula "13") (term "1,2,1,1,0"))
            (rule "castDel" (formula "13") (term "2,2,1,1,0"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "lenNonNegative" (formula "19") (term "1,1"))
            (rule "inEqSimp_commuteLeq" (formula "19"))
            (rule "replace_known_left" (formula "25") (term "1,0,1,0") (ifseqformula "19"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "seqGetAlphaCast" (formula "27") (term "0"))
            (rule "castDel" (formula "27") (term "0"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "true_left" (formula "27"))
            (rule "lenNonNegative" (formula "20") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "20"))
            (rule "substringSubstring" (formula "23") (term "0") (inst "newSym=newSym_0"))
            (rule "add_zero_left" (formula "23") (term "2,0,1,1"))
            (rule "qeq_literals" (formula "23") (term "1,0,0,0"))
             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "19")))
            (rule "add_literals" (formula "23") (term "1,0,1,1"))
            (rule "qeq_literals" (formula "23") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "polySimp_elimSub" (formula "23") (term "1,1,0"))
            (rule "times_zero_2" (formula "23") (term "1,1,1,0"))
            (rule "add_zero_right" (formula "23") (term "1,1,0"))
            (rule "applyEqRigid" (formula "23") (term "0,0,1") (ifseqformula "24"))
            (rule "commute_and_2" (formula "23") (term "0"))
            (rule "commute_and" (formula "23") (term "0,0"))
            (rule "equalityToSeqGetAndSeqLenLeft" (formula "24") (inst "iv=iv"))
            (rule "andLeft" (formula "24"))
            (rule "lenOfSeqSub" (formula "25") (term "1,1,0,0"))
            (rule "polySimp_elimSub" (formula "25") (term "1,1,1,0,0"))
            (rule "times_zero_2" (formula "25") (term "1,1,1,1,0,0"))
            (rule "add_zero_right" (formula "25") (term "1,1,1,0,0"))
            (rule "lenOfSeqSub" (formula "24") (term "0"))
            (rule "polySimp_elimSub" (formula "24") (term "1,0"))
            (rule "times_zero_2" (formula "24") (term "1,1,0"))
            (rule "add_zero_right" (formula "24") (term "1,0"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "eqSymm" (formula "24") (term "1"))
            (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
            (rule "applyEqRigid" (formula "25") (term "0,0,1,0") (ifseqformula "26"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "true_left" (formula "25"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "0") (ifseqformula "4"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "36"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "5"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "0") (ifseqformula "6"))
            (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "18"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
            (rule "true_left" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "0") (ifseqformula "6"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "39"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "true_left" (formula "36"))
            (rule "seqGetAlphaCast" (formula "31") (term "1,1,0"))
            (rule "castDel" (formula "31") (term "0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "true_left" (formula "31"))
            (rule "Use_information_flow_contract_for_add_857115291_12" (formula "34") (ifseqformula "17"))
            (rule "replaceKnownSelect_taclet00_1" (formula "34") (term "1,1,1"))
            (rule "replaceKnownSelect_taclet0000_8" (formula "34") (term "0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "34") (term "1,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "34") (term "0,1,1"))
            (rule "replaceKnownSelect_taclet00_1" (formula "34") (term "0,0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "34") (term "0,0,0,1"))
            (rule "eqSymm" (formula "34") (term "1,1"))
            (rule "replace_known_right" (formula "34") (term "0,1,1,0") (ifseqformula "37"))
             (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "34") (term "1,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "34") (term "0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "commute_and" (formula "34") (term "0"))
            (rule "Use_information_flow_contract_for_add_857115291_13" (formula "35") (ifseqformula "17"))
            (rule "replaceKnownSelect_taclet00_1" (formula "35") (term "1,1,1"))
            (rule "replaceKnownSelect_taclet0000_8" (formula "35") (term "0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "35") (term "1,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "35") (term "0,1,1"))
            (rule "replaceKnownSelect_taclet00_1" (formula "35") (term "0,0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "35") (term "0,0,0,1"))
            (rule "eqSymm" (formula "35") (term "1,1"))
            (rule "replace_known_right" (formula "35") (term "0,1,0,0") (ifseqformula "40"))
             (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "38")))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "35") (term "1,0"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "35") (term "0"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "commute_and" (formula "35") (term "0"))
            (rule "Use_information_flow_contract_for_add_857115291_13" (formula "17") (ifseqformula "17"))
             (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "38")) (ifInst ""  (formula "38")))
            (rule "true_left" (formula "17"))
            (rule "Use_information_flow_contract_for_add_857115291_12" (formula "17") (ifseqformula "17"))
             (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "38")) (ifInst ""  (formula "38")))
            (rule "true_left" (formula "17"))
            (rule "Use_information_flow_contract_for_add_857115291_12" (formula "17") (ifseqformula "35"))
            (rule "replaceKnownSelect_taclet00_1" (formula "17") (term "0,1,1"))
            (rule "replaceKnownSelect_taclet0000_8" (formula "17") (term "1,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "17") (term "0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "17") (term "1,1,1"))
            (rule "replaceKnownSelect_taclet00_1" (formula "17") (term "1,0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "17") (term "1,0,0,1"))
            (rule "eqSymm" (formula "17") (term "1,0,1"))
            (rule "eqSymm" (formula "17") (term "0,0,1"))
            (rule "replace_known_right" (formula "17") (term "0,1,0,0") (ifseqformula "38"))
             (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "40")))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "17") (term "0,0"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "17") (term "0"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "commute_and" (formula "17") (term "0"))
            (rule "Use_information_flow_contract_for_add_857115291_13" (formula "35") (ifseqformula "35"))
             (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "40")) (ifInst ""  (formula "40")))
            (rule "true_left" (formula "35"))
            (rule "Use_information_flow_contract_for_add_857115291_12" (formula "35") (ifseqformula "35"))
             (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "40")) (ifInst ""  (formula "40")))
            (rule "true_left" (formula "35"))
            (rule "Use_information_flow_contract_for_add_857115291_13" (formula "17") (ifseqformula "35"))
            (rule "replaceKnownSelect_taclet00_1" (formula "17") (term "0,1,1"))
            (rule "replaceKnownSelect_taclet0000_8" (formula "17") (term "1,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "17") (term "0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "17") (term "1,1,1"))
            (rule "replaceKnownSelect_taclet00_1" (formula "17") (term "1,0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "17") (term "1,0,0,1"))
            (rule "eqSymm" (formula "17") (term "1,0,1"))
            (rule "eqSymm" (formula "17") (term "0,0,1"))
            (rule "replace_known_right" (formula "17") (term "0,1,0,0") (ifseqformula "38"))
             (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "40")))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "17") (term "0,0"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "17") (term "0"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "commute_and" (formula "17") (term "0"))
            (rule "andLeft" (formula "12"))
            (rule "andLeft" (formula "12"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "12"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "14"))
            (rule "andLeft" (formula "12"))
            (rule "andLeft" (formula "14"))
            (rule "andLeft" (formula "19"))
            (rule "notLeft" (formula "16"))
            (rule "andLeft" (formula "12"))
            (rule "notLeft" (formula "19"))
            (rule "notLeft" (formula "19"))
            (rule "andLeft" (formula "12"))
            (rule "notLeft" (formula "13"))
            (rule "eqSymm" (formula "19") (term "1,0,0,1"))
            (rule "eqSymm" (formula "19") (term "0,0,0,1"))
            (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "46"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "assignment" (formula "19") (term "1"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "boxToDiamond" (formula "19") (term "1"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "notLeft" (formula "19"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "18"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "18"))
            (rule "notLeft" (formula "20"))
            (rule "notLeft" (formula "19"))
            (rule "notLeft" (formula "18"))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "17"))
            (rule "true_left" (formula "17"))
            (rule "methodBodyExpand" (formula "44") (term "1") (newnames "heapBefore_initPolyasValsAddDataForVoter_0,savedHeapBefore_initPolyasValsAddDataForVoter_0"))
             (builtin "One Step Simplification" (formula "44"))
            (rule "methodCallUnfoldTarget" (formula "44") (term "1") (inst "#v0=a"))
            (rule "variableDeclaration" (formula "44") (term "1") (newnames "a_2"))
            (rule "activeUseStaticFieldReadAccess" (formula "44") (term "1"))
            (rule "assignment_read_static_attribute" (formula "44") (term "1"))
             (builtin "One Step Simplification" (formula "44"))
            (rule "methodCallUnfoldArguments" (formula "44") (term "1"))
            (rule "variableDeclarationAssign" (formula "44") (term "1"))
            (rule "variableDeclaration" (formula "44") (term "1") (newnames "var_4"))
            (rule "assignment" (formula "44") (term "1"))
             (builtin "One Step Simplification" (formula "44"))
            (rule "variableDeclarationAssign" (formula "44") (term "1"))
            (rule "variableDeclaration" (formula "44") (term "1") (newnames "var_5"))
            (rule "assignment_read_attribute" (formula "44") (term "1"))
            (branch "Normal Execution (_dataForVoter_9_B != null)"
                (builtin "One Step Simplification" (formula "45"))
                (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "47")))
               (rule "false_right" (formula "44"))
                (builtin "Use Operation Contract" (formula "44") (newnames "heapBefore_add_1,result_101,exc_130,heapAfter_add_1,anon_heap_add_1") (contract "java.util.ArrayList[java.util.Collection::add(java.lang.Object)].JML normal_behavior operation contract.0"))
               (branch "Post (add)"
                   (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "46")) (ifInst ""  (formula "12")) (ifInst ""  (formula "46")))
                   (builtin "One Step Simplification" (formula "43"))
                   (builtin "One Step Simplification" (formula "48"))
                   (builtin "One Step Simplification" (formula "42"))
                  (rule "andLeft" (formula "44"))
                  (rule "andLeft" (formula "42"))
                  (rule "andLeft" (formula "43"))
                  (rule "andLeft" (formula "44"))
                  (rule "andLeft" (formula "44"))
                  (rule "blockEmpty" (formula "52") (term "1"))
                  (rule "applyEq" (formula "46") (term "5") (ifseqformula "43"))
                  (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=java_util_Collection_seq_2"))
                  (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "42"))
                   (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "57")))
                  (rule "eqSymm" (formula "45"))
                  (rule "applyEqReverse" (formula "44") (term "1") (ifseqformula "45"))
                  (rule "hideAuxiliaryEq" (formula "45"))
                  (rule "elementOfSingleton" (formula "44") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "44"))
                  (rule "eqSymm" (formula "44"))
                  (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "47"))
                  (rule "true_left" (formula "47"))
                  (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "45"))
                  (rule "true_left" (formula "45"))
                  (rule "methodCallUnfoldTarget" (formula "50") (term "1") (inst "#v0=a"))
                  (rule "variableDeclaration" (formula "50") (term "1") (newnames "a_3"))
                  (rule "activeUseStaticFieldReadAccess" (formula "50") (term "1"))
                  (rule "assignment_read_static_attribute" (formula "50") (term "1"))
                   (builtin "One Step Simplification" (formula "50"))
                  (rule "pullOutSelect" (formula "50") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "methodCallUnfoldArguments" (formula "50") (term "1"))
                  (rule "variableDeclarationAssign" (formula "50") (term "1"))
                  (rule "variableDeclaration" (formula "50") (term "1") (newnames "var_6"))
                  (rule "assignment" (formula "50") (term "1"))
                   (builtin "One Step Simplification" (formula "50"))
                  (rule "variableDeclarationAssign" (formula "50") (term "1"))
                  (rule "variableDeclaration" (formula "50") (term "1") (newnames "var_7"))
                  (rule "assignment_read_attribute" (formula "50") (term "1"))
                  (branch "Normal Execution (_dataForVoter_9_B != null)"
                      (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "53")))
                      (builtin "One Step Simplification" (formula "51"))
                     (rule "false_right" (formula "50"))
                     (rule "pullOutSelect" (formula "50") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "17")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "51") (term "0,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                      (builtin "Use Operation Contract" (formula "50") (newnames "heapBefore_add_2,result_102,exc_131,heapAfter_add_2,anon_heap_add_2") (contract "java.util.ArrayList[java.util.Collection::add(java.lang.Object)].JML normal_behavior operation contract.0"))
                     (branch "Post (add)"
                         (builtin "One Step Simplification" (formula "48"))
                         (builtin "One Step Simplification" (formula "54"))
                         (builtin "One Step Simplification" (formula "49"))
                         (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "53")) (ifInst ""  (formula "53")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "1,1") (ifseqformula "42"))
                        (rule "replaceKnownSelect_taclet000000_11" (formula "48") (term "0,1,0,0,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet000000_12" (formula "48") (term "0,1,0,0,1,1"))
                        (rule "andLeft" (formula "50"))
                        (rule "andLeft" (formula "48"))
                        (rule "andLeft" (formula "52"))
                        (rule "andLeft" (formula "49"))
                        (rule "andLeft" (formula "50"))
                        (rule "andLeft" (formula "50"))
                        (rule "applyEq" (formula "52") (term "5") (ifseqformula "49"))
                        (rule "applyEq" (formula "50") (term "0,1") (ifseqformula "44"))
                        (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=java_util_Collection_seq_3"))
                        (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "48"))
                         (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "64")))
                        (rule "replaceKnownSelect_taclet000000_11" (formula "50") (term "2,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet000000_12" (formula "50") (term "2,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,1,0,0") (ifseqformula "42"))
                        (rule "eqSymm" (formula "51"))
                        (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "51"))
                        (rule "hideAuxiliaryEq" (formula "51"))
                        (rule "elementOfSingleton" (formula "50") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "50"))
                        (rule "eqSeqConcat" (formula "50"))
                         (builtin "One Step Simplification" (formula "50"))
                        (rule "andLeft" (formula "50"))
                        (rule "andLeft" (formula "50"))
                        (rule "polySimp_addComm0" (formula "50") (term "1"))
                        (rule "eqSeqSingleton" (formula "52"))
                        (rule "andLeft" (formula "52"))
                        (rule "lenOfSeqSub" (formula "52") (term "0"))
                        (rule "polySimp_elimSub" (formula "52") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "52") (term "1,0"))
                        (rule "lenOfSeqConcatEQ" (formula "51") (term "2,0") (ifseqformula "44"))
                         (builtin "One Step Simplification" (formula "51"))
                        (rule "polySimp_addComm0" (formula "51") (term "2,0"))
                        (rule "lenOfSeqConcatEQ" (formula "50") (term "1,1") (ifseqformula "44"))
                         (builtin "One Step Simplification" (formula "50"))
                        (rule "polySimp_addComm0" (formula "50") (term "1,1"))
                        (rule "polySimp_addAssoc" (formula "50") (term "1"))
                        (rule "add_literals" (formula "50") (term "0,1"))
                        (rule "lenOfSeqConcatEQ" (formula "53") (term "1,0,0") (ifseqformula "44"))
                         (builtin "One Step Simplification" (formula "53"))
                        (rule "polySimp_addComm0" (formula "53") (term "1,0,0"))
                        (rule "lenOfSeqConcatEQ" (formula "52") (term "0,0,0") (ifseqformula "44"))
                         (builtin "One Step Simplification" (formula "52"))
                        (rule "polySimp_addComm0" (formula "52") (term "0,0,0"))
                        (rule "ifEqualsInteger" (formula "52"))
                        (rule "equal_literals" (formula "52") (term "1,1"))
                         (builtin "One Step Simplification" (formula "52"))
                        (rule "andLeft" (formula "52"))
                        (rule "lenOfSeqSubEQ" (formula "53") (term "0,0,0") (ifseqformula "51"))
                        (rule "polySimp_elimSub" (formula "53") (term "1,0,0,0"))
                        (rule "times_zero_2" (formula "53") (term "1,1,0,0,0"))
                        (rule "add_zero_right" (formula "53") (term "1,0,0,0"))
                        (rule "polySimp_addComm0" (formula "53") (term "0"))
                        (rule "getOfSeqSub" (formula "54") (term "0"))
                        (rule "castDel" (formula "54") (term "2,0"))
                        (rule "leq_literals" (formula "54") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "54"))
                        (rule "add_zero_left" (formula "54") (term "1,1,0"))
                        (rule "polySimp_elimSub" (formula "54") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "54") (term "0,1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "54") (term "1,0,0"))
                        (rule "polySimp_addComm0" (formula "54") (term "0,1,0,0"))
                        (rule "eqSeqConcatEQ" (formula "51") (ifseqformula "44"))
                         (builtin "One Step Simplification" (formula "51"))
                        (rule "andLeft" (formula "51"))
                        (rule "andLeft" (formula "51"))
                        (rule "polySimp_addComm0" (formula "51") (term "1"))
                        (rule "eqSeqSingleton" (formula "53"))
                        (rule "andLeft" (formula "53"))
                        (rule "lenOfSeqSub" (formula "51") (term "0"))
                        (rule "polySimp_elimSub" (formula "51") (term "1,0"))
                        (rule "times_zero_2" (formula "51") (term "1,1,0"))
                        (rule "add_zero_right" (formula "51") (term "1,0"))
                         (builtin "One Step Simplification" (formula "51"))
                        (rule "lenOfSeqSub" (formula "53") (term "2,0,0"))
                        (rule "polySimp_elimSub" (formula "53") (term "1,2,0,0"))
                        (rule "mul_literals" (formula "53") (term "1,1,2,0,0"))
                        (rule "add_zero_right" (formula "53") (term "1,2,0,0"))
                        (rule "lenOfSeqSub" (formula "54") (term "2,0,0"))
                        (rule "polySimp_elimSub" (formula "54") (term "1,2,0,0"))
                        (rule "mul_literals" (formula "54") (term "1,1,2,0,0"))
                        (rule "add_zero_right" (formula "54") (term "1,2,0,0"))
                        (rule "lenOfSeqSub" (formula "53") (term "0"))
                        (rule "polySimp_elimSub" (formula "53") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "53") (term "1,0"))
                        (rule "ifEqualsInteger" (formula "53"))
                        (rule "equal_literals" (formula "53") (term "1,1"))
                         (builtin "One Step Simplification" (formula "53"))
                        (rule "andLeft" (formula "53"))
                        (rule "getOfSeqSub" (formula "55") (term "0"))
                        (rule "castDel" (formula "55") (term "2,0"))
                        (rule "add_zero_left" (formula "55") (term "1,1,0"))
                        (rule "leq_literals" (formula "55") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "55"))
                        (rule "polySimp_elimSub" (formula "55") (term "1,0,0"))
                        (rule "polySimp_addComm0" (formula "55") (term "1,0,0"))
                        (rule "getOfSeqSub" (formula "55") (term "1,0"))
                        (rule "castDel" (formula "55") (term "2,1,0"))
                        (rule "add_zero_right" (formula "55") (term "1,1,1,0"))
                        (rule "polySimp_elimSub" (formula "55") (term "1,1,0,1,0"))
                        (rule "mul_literals" (formula "55") (term "1,1,1,0,1,0"))
                        (rule "add_zero_right" (formula "55") (term "1,1,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,1,0"))
                        (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "61"))
                        (rule "true_left" (formula "61"))
                        (rule "commute_or" (formula "62"))
                        (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "59"))
                        (rule "true_left" (formula "59"))
                        (rule "methodCallEmpty" (formula "65") (term "1"))
                        (rule "commute_and" (formula "55") (term "0,1,0"))
                        (rule "tryEmpty" (formula "65") (term "1"))
                        (rule "emptyModality" (formula "65") (term "1"))
                        (rule "Use_information_flow_contract_for_add_857115291_12" (formula "45") (ifseqformula "21"))
                        (rule "doubleImpLeft" (formula "45"))
                        (branch "pre_A & pre_B add_857115291_12 (information flow)"
                           (rule "andRight" (formula "62"))
                           (branch "Case 1"
                              (rule "andRight" (formula "62"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "66"))
                                 (rule "impRight" (formula "78"))
                                 (rule "notRight" (formula "67"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "eqSymm" (formula "83"))
                                 (rule "eqSymm" (formula "6"))
                                 (rule "eqSymm" (formula "4"))
                                 (rule "eqSymm" (formula "5"))
                                 (rule "eqSymm" (formula "2"))
                                 (rule "polySimp_homoEq" (formula "34"))
                                 (rule "polySimp_homoEq" (formula "57") (term "1"))
                                 (rule "mul_literals" (formula "57") (term "1,0,1"))
                                 (rule "add_zero_right" (formula "57") (term "0,1"))
                                 (rule "polySimp_homoEq" (formula "40"))
                                 (rule "polySimp_homoEq" (formula "35") (term "1"))
                                 (rule "mul_literals" (formula "35") (term "1,0,1"))
                                 (rule "add_zero_right" (formula "35") (term "0,1"))
                                 (rule "polySimp_homoEq" (formula "63"))
                                 (rule "polySimp_homoEq" (formula "56"))
                                 (rule "polySimp_homoEq" (formula "60"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0"))
                                 (rule "polySimp_addComm1" (formula "56") (term "0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "40") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "0,1,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "0,1,0"))
                                 (rule "polySimp_rightDist" (formula "60") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "60") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "60") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "60") (term "0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1"))
                                 (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "42"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0"))
                                 (rule "add_zero_right" (formula "64") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "61") (term "0,1,1,0,0"))
                                 (rule "add_zero_right" (formula "61") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,1,0,0"))
                                 (rule "mul_literals" (formula "61") (term "0,1,0,0,1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "59"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "59") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,1,0,0"))
                                 (rule "add_zero_right" (formula "41") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,1,0,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35") (term "0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "37") (term "0"))
                                 (rule "add_zero_right" (formula "37") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "57") (term "0"))
                                 (rule "add_zero_right" (formula "57") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "62"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                 (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "63") (term "0"))
                                 (rule "polySimp_rightDist" (formula "57") (term "1,0,0"))
                                 (rule "mul_literals" (formula "57") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "60") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                 (rule "add_literals" (formula "39") (term "0,0,0,1"))
                                 (rule "add_zero_left" (formula "39") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "64") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "61") (term "0,0,0,1,1,0,0"))
                                 (rule "add_zero_left" (formula "61") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,1,1,0,0"))
                                 (rule "add_zero_left" (formula "41") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "35") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "62") (term "0"))
                                 (rule "polySimp_addComm1" (formula "62") (term "0,0"))
                                 (rule "add_literals" (formula "62") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "61") (term "0,0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "61") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor2" (formula "61") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "61") (term "1,0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "61") (term "0,0,0,1,0"))
                                 (rule "leq_literals" (formula "61") (term "0,0,1,0"))
                                  (builtin "One Step Simplification" (formula "61"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "41") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor2" (formula "41") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "41") (term "1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "41") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "41") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "41"))
                                 (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                 (rule "add_literals" (formula "57") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "57") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0"))
                                 (rule "add_zero_right" (formula "59") (term "0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "42") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2" (formula "42") (term "0"))
                                 (rule "add_literals" (formula "42") (term "1,0"))
                                 (rule "times_zero_1" (formula "42") (term "0"))
                                 (rule "leq_literals" (formula "42"))
                                 (rule "true_left" (formula "42"))
                                 (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "63") (term "0,0,0,0,0"))
                                 (rule "replace_known_left" (formula "63") (term "0,0") (ifseqformula "61"))
                                  (builtin "One Step Simplification" (formula "63"))
                                 (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "36") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "36") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                 (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0"))
                                 (rule "add_zero_right" (formula "40") (term "0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "62") (term "0,1,0"))
                                 (rule "add_zero_right" (formula "62") (term "0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0"))
                                 (rule "add_zero_right" (formula "59") (term "0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "39"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "58") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0"))
                                 (rule "add_zero_right" (formula "60") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "60") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "60") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "60") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                 (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "41") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "40") (term "0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "40") (term "0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "62") (term "0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "62") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "59") (term "0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "59") (term "0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "60") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "58"))
                                  (builtin "One Step Simplification" (formula "60"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "41") (term "0,0") (ifseqformula "39"))
                                  (builtin "One Step Simplification" (formula "41"))
                                 (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "36") (term "0,0,1,0"))
                                 (rule "applyEqRigid" (formula "60") (term "0,1,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "62") (term "0,0,0,0,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "57") (term "0,2,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "57") (term "0,1,2,0,0") (ifseqformula "4"))
                                 (rule "lenOfSeqSubEQ" (formula "55") (term "1,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "55") (term "1,1,0"))
                                 (rule "mul_literals" (formula "55") (term "1,1,1,0"))
                                 (rule "add_zero_right" (formula "55") (term "1,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "59") (term "1,0,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "59") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "59") (term "1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "59") (term "1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "59") (term "0"))
                                 (rule "lenOfSeqSubEQ" (formula "58") (term "0,0,0,0,1,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "58") (term "1,0,0,0,0,1,0"))
                                 (rule "times_zero_2" (formula "58") (term "1,1,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "58") (term "1,0,0,0,0,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "62") (term "1,1,1,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "62") (term "1,1,1,1,0"))
                                 (rule "mul_literals" (formula "62") (term "1,1,1,1,1,0"))
                                 (rule "add_zero_right" (formula "62") (term "1,1,1,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "56") (term "0,0,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "56") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "56") (term "1,1,0,0,0"))
                                 (rule "add_zero_right" (formula "56") (term "1,0,0,0"))
                                 (rule "lenOfSeqSubEQ" (formula "60") (term "0,0,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "60") (term "1,0,0,0"))
                                 (rule "times_zero_2" (formula "60") (term "1,1,0,0,0"))
                                 (rule "add_zero_right" (formula "60") (term "1,0,0,0"))
                                 (rule "lenOfSeqSubEQ" (formula "61") (term "1,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "61") (term "1,1,0"))
                                 (rule "mul_literals" (formula "61") (term "1,1,1,0"))
                                 (rule "add_zero_right" (formula "61") (term "1,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "56") (term "1,0,1") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "56") (term "1,1,0,1"))
                                 (rule "mul_literals" (formula "56") (term "1,1,1,0,1"))
                                 (rule "add_zero_right" (formula "56") (term "1,1,0,1"))
                                 (rule "lenOfSeqSubEQ" (formula "58") (term "1,0,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "58") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "58") (term "1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "58") (term "1,1,0,0"))
                                 (rule "lenOfSeqSubEQ" (formula "58") (term "1,1,0,1,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "58") (term "1,1,1,0,1,0"))
                                 (rule "times_zero_2" (formula "58") (term "1,1,1,1,0,1,0"))
                                 (rule "add_zero_right" (formula "58") (term "1,1,1,0,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "63") (term "1,1,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "63") (term "1,1,1,0"))
                                 (rule "times_zero_2" (formula "63") (term "1,1,1,1,0"))
                                 (rule "add_zero_right" (formula "63") (term "1,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0"))
                                 (rule "add_zero_right" (formula "55") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,0"))
                                 (rule "add_zero_right" (formula "59") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "59") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "58") (term "0,0,0,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "62") (term "0,1,1,1,0"))
                                 (rule "add_zero_right" (formula "62") (term "0,0,1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,0"))
                                 (rule "add_zero_right" (formula "56") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0"))
                                 (rule "add_zero_right" (formula "60") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "61") (term "0,1,0"))
                                 (rule "add_zero_right" (formula "61") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,0,1"))
                                 (rule "add_zero_right" (formula "56") (term "0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,0,0"))
                                 (rule "add_zero_right" (formula "58") (term "0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,1,0,1,0"))
                                 (rule "add_zero_right" (formula "58") (term "0,0,1,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "63") (term "0,1,1,0"))
                                 (rule "add_zero_right" (formula "63") (term "0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,0,1,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "59") (term "1,1,1,0,1,0"))
                                 (rule "times_zero_2" (formula "59") (term "1,1,1,1,0,1,0"))
                                 (rule "add_zero_right" (formula "59") (term "1,1,1,0,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "59") (term "0,0,0,0,1,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "59") (term "1,0,0,0,0,1,0"))
                                 (rule "times_zero_2" (formula "59") (term "1,1,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "59") (term "1,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,0,1,0"))
                                 (rule "add_zero_right" (formula "59") (term "0,0,1,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "59") (term "0,0,0,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,1,0"))
                                 (rule "applyEqRigid" (formula "49") (term "0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "57") (term "1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "27") (term "5") (ifseqformula "25"))
                                 (rule "applyEq" (formula "60") (term "1") (ifseqformula "5"))
                                 (rule "applyEq" (formula "43") (term "0,1,0") (ifseqformula "26"))
                                 (rule "eqSymm" (formula "43") (term "1,0"))
                                 (rule "applyEq" (formula "82") (term "0,1") (ifseqformula "12"))
                                 (rule "applyEqRigid" (formula "82") (term "0,1,0") (ifseqformula "3"))
                                 (rule "applyEqRigid" (formula "82") (term "0,1,1") (ifseqformula "12"))
                                 (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "78") (term "0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "64") (term "1") (ifseqformula "6"))
                                 (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "50") (term "1") (ifseqformula "5"))
                                 (rule "applyEq" (formula "69") (term "0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "63") (term "1") (ifseqformula "6"))
                                 (rule "applyEq" (formula "81") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "49") (term "0,1,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "70") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "66") (term "1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "69") (term "0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "66") (term "1,0,1") (ifseqformula "6"))
                                 (rule "applyEq" (formula "43") (term "0,1") (ifseqformula "26"))
                                 (rule "eqSymm" (formula "43") (term "1"))
                                 (rule "applyEq" (formula "44") (term "5") (ifseqformula "31"))
                                 (rule "applyEq" (formula "49") (term "0") (ifseqformula "26"))
                                 (rule "eqSymm" (formula "49"))
                                 (rule "polySimp_sepPosMonomial" (formula "35") (term "1"))
                                 (rule "mul_literals" (formula "35") (term "1,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "34"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                 (rule "mul_literals" (formula "34") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                 (rule "applyEqRigid" (formula "42") (term "1,1,0") (ifseqformula "34"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "1,0"))
                                 (rule "add_literals" (formula "42") (term "0,1,0"))
                                 (rule "applyEqRigid" (formula "62") (term "1,1,1,1,0") (ifseqformula "34"))
                                 (rule "applyEqRigid" (formula "62") (term "0,0,0,1,0") (ifseqformula "34"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "62") (term "0,0,1,0"))
                                 (rule "mul_literals" (formula "62") (term "0,0,0,1,0"))
                                 (rule "applyEqRigid" (formula "59") (term "0,1,0,0,1,1,0,1,0") (ifseqformula "34"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,1,0,1,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,0,1,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,1,0,1,0"))
                                 (rule "add_literals" (formula "59") (term "0,0,0,1,1,0,1,0"))
                                 (rule "applyEqRigid" (formula "56") (term "1,0,0,0") (ifseqformula "34"))
                                 (rule "applyEqRigid" (formula "57") (term "1,2,0,0") (ifseqformula "34"))
                                 (rule "polySimp_addAssoc" (formula "57") (term "2,0,0"))
                                 (rule "add_literals" (formula "57") (term "0,2,0,0"))
                                 (rule "applyEqRigid" (formula "40") (term "1,1,0,1,0") (ifseqformula "34"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "1,0,1,0"))
                                 (rule "add_literals" (formula "40") (term "0,1,0,1,0"))
                                 (rule "applyEqRigid" (formula "39") (term "1,1,0,1,0") (ifseqformula "34"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "1,0,1,0"))
                                 (rule "add_literals" (formula "39") (term "0,1,0,1,0"))
                                 (rule "applyEq" (formula "40") (term "0,0,0,0,1,0") (ifseqformula "34"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "0,0,0,1,0"))
                                 (rule "mul_literals" (formula "40") (term "0,0,0,0,1,0"))
                                 (rule "applyEqRigid" (formula "58") (term "0,1,0,0,1,1,0,1,0") (ifseqformula "34"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,1,0,1,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,1,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,1,0,1,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,0,1,1,0,1,0"))
                                 (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "34"))
                                 (rule "applyEqRigid" (formula "37") (term "0,1") (ifseqformula "34"))
                                 (rule "applyEq" (formula "60") (term "1,1,0") (ifseqformula "34"))
                                 (rule "applyEq" (formula "57") (term "2,0") (ifseqformula "34"))
                                 (rule "lenOfSeqSubEQ" (formula "35") (term "0,0,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "35") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "1,1,0,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "1,0,0,0"))
                                 (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0"))
                                 (rule "mul_literals" (formula "37") (term "1,1,0,1,0,0"))
                                 (rule "add_zero_right" (formula "37") (term "1,0,1,0,0"))
                                 (rule "lenOfSeqSubEQ" (formula "63") (term "0,1,0,0,1,1,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "63") (term "1,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "63") (term "1,1,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "63") (term "1,0,1,0,0,1,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "40") (term "1,0,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "40") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "40") (term "1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0"))
                                 (rule "lenOfSeqSubEQ" (formula "62") (term "0,1,0,0,1,1,1,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "62") (term "1,0,1,0,0,1,1,1,0"))
                                 (rule "mul_literals" (formula "62") (term "1,1,0,1,0,0,1,1,1,0"))
                                 (rule "add_zero_right" (formula "62") (term "1,0,1,0,0,1,1,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "58") (term "0,1,0,0,1,0,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "58") (term "1,0,1,0,0,1,0,0"))
                                 (rule "times_zero_2" (formula "58") (term "1,1,0,1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "58") (term "1,0,1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "58") (term "0"))
                                 (rule "lenOfSeqSubEQ" (formula "61") (term "0,1,0,0,1,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "61") (term "1,0,1,0,0,1,0"))
                                 (rule "times_zero_2" (formula "61") (term "1,1,0,1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "61") (term "1,0,1,0,0,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "41") (term "1,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "41") (term "1,1,0"))
                                 (rule "mul_literals" (formula "41") (term "1,1,1,0"))
                                 (rule "add_zero_right" (formula "41") (term "1,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "36") (term "1,0,0,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "36") (term "1,1,0,0,0"))
                                 (rule "times_zero_2" (formula "36") (term "1,1,1,0,0,0"))
                                 (rule "add_zero_right" (formula "36") (term "1,1,0,0,0"))
                                 (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,1,0,1,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "59") (term "1,1,1,1,0,1,0"))
                                 (rule "mul_literals" (formula "59") (term "1,1,1,1,1,0,1,0"))
                                 (rule "add_zero_right" (formula "59") (term "1,1,1,1,0,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "38") (term "2,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "38") (term "1,2,0"))
                                 (rule "mul_literals" (formula "38") (term "1,1,2,0"))
                                 (rule "add_zero_right" (formula "38") (term "1,2,0"))
                                 (rule "lenOfSeqSubEQ" (formula "56") (term "0,1,0,0,0,0,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "56") (term "1,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "56") (term "1,1,0,1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "56") (term "1,0,1,0,0,0,0,0"))
                                 (rule "lenOfSeqSubEQ" (formula "55") (term "0,1,0,0,1,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "55") (term "1,0,1,0,0,1,0"))
                                 (rule "times_zero_2" (formula "55") (term "1,1,0,1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "55") (term "1,0,1,0,0,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "61") (term "1,1,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "61") (term "1,1,1,0"))
                                 (rule "times_zero_2" (formula "61") (term "1,1,1,1,0"))
                                 (rule "add_zero_right" (formula "61") (term "1,1,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "60") (term "0,1,0,0,0,0,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "60") (term "1,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "60") (term "1,1,0,1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "60") (term "1,0,1,0,0,0,0,0"))
                                 (rule "lenOfSeqSubEQ" (formula "59") (term "1,0,0,0,0,1,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "59") (term "1,1,0,0,0,0,1,0"))
                                 (rule "times_zero_2" (formula "59") (term "1,1,1,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "59") (term "1,1,0,0,0,0,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "59") (term "0,1,0,0,0,0,0,0,1,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0,0,0,0,0,0,1,0"))
                                 (rule "times_zero_2" (formula "59") (term "1,1,0,1,0,0,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,0,0,0,0,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "56") (term "0,1,0,0,1,0,1") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "56") (term "1,0,1,0,0,1,0,1"))
                                 (rule "times_zero_2" (formula "56") (term "1,1,0,1,0,0,1,0,1"))
                                 (rule "add_zero_right" (formula "56") (term "1,0,1,0,0,1,0,1"))
                                 (rule "lenOfSeqSubEQ" (formula "60") (term "1,0,0,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "60") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "60") (term "1,1,1,0,0,0"))
                                 (rule "add_zero_right" (formula "60") (term "1,1,0,0,0"))
                                 (rule "lenOfSeqSubEQ" (formula "63") (term "1,1,1,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "63") (term "1,1,1,1,0"))
                                 (rule "mul_literals" (formula "63") (term "1,1,1,1,1,0"))
                                 (rule "add_zero_right" (formula "63") (term "1,1,1,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "55") (term "1,1,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "55") (term "1,1,1,0"))
                                 (rule "mul_literals" (formula "55") (term "1,1,1,1,0"))
                                 (rule "add_zero_right" (formula "55") (term "1,1,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "59") (term "0,1,0,0,1,0,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "59") (term "1,1,0,1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,1,0,0"))
                                 (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,0,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "59") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "59") (term "1,1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "59") (term "1,1,1,0,0"))
                                 (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,1,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,1,0"))
                                 (rule "times_zero_2" (formula "36") (term "1,1,0,1,0,1,0"))
                                 (rule "add_zero_right" (formula "36") (term "1,0,1,0,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "34") (term "0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "34") (term "1,0"))
                                 (rule "times_zero_2" (formula "34") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "34") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "polySimp_homoEq" (formula "34") (term "1"))
                                 (rule "times_zero_2" (formula "34") (term "1,0,1"))
                                 (rule "add_zero_right" (formula "34") (term "0,1"))
                                 (rule "lenOfSeqSubEQ" (formula "38") (term "1,2,0,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "38") (term "1,1,2,0,0"))
                                 (rule "mul_literals" (formula "38") (term "1,1,1,2,0,0"))
                                 (rule "add_zero_right" (formula "38") (term "1,1,2,0,0"))
                                 (rule "lenOfSeqSubEQ" (formula "56") (term "1,1,0,1") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "56") (term "1,1,1,0,1"))
                                 (rule "mul_literals" (formula "56") (term "1,1,1,1,0,1"))
                                 (rule "add_zero_right" (formula "56") (term "1,1,1,0,1"))
                                 (rule "lenOfSeqSubEQ" (formula "39") (term "1,0,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0"))
                                 (rule "times_zero_2" (formula "39") (term "1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "39") (term "1,1,0,0"))
                                 (rule "lenOfSeqSubEQ" (formula "36") (term "2,0,1,1") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "36") (term "1,2,0,1,1"))
                                 (rule "mul_literals" (formula "36") (term "1,1,2,0,1,1"))
                                 (rule "add_zero_right" (formula "36") (term "1,2,0,1,1"))
                                 (rule "lenOfSeqSubEQ" (formula "35") (term "0,1") (ifseqformula "57"))
                                 (rule "lenOfSeqSubEQ" (formula "39") (term "0,0,0,0,1,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "35") (term "1,0,1"))
                                 (rule "mul_literals" (formula "35") (term "1,1,0,1"))
                                 (rule "add_zero_right" (formula "35") (term "1,0,1"))
                                 (rule "polySimp_elimSub" (formula "39") (term "1,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "39") (term "1,1,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "39") (term "1,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "63") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                                 (rule "add_zero_right" (formula "40") (term "0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,1,0,0,1,1,1,0"))
                                 (rule "add_zero_right" (formula "62") (term "0,0,0,1,0,0,1,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "58") (term "0,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "61") (term "0,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                 (rule "add_zero_right" (formula "41") (term "0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,1,0,1,0"))
                                 (rule "add_zero_right" (formula "59") (term "0,0,1,1,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "38") (term "0,2,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,2,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "56") (term "0,0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "55") (term "0,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "61") (term "0,1,1,0"))
                                 (rule "add_zero_right" (formula "61") (term "0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "60") (term "0,0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "58") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "59") (term "0,0,1,0,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,1,0,0,1,1,1,0"))
                                 (rule "mul_literals" (formula "62") (term "0,1,0,0,0,1,0,0,1,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,1,0,0,1,0,1"))
                                 (rule "add_zero_right" (formula "56") (term "0,0,0,1,0,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "61") (term "0,1,0,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "60") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "63") (term "0,1,1,1,0"))
                                 (rule "add_zero_right" (formula "63") (term "0,0,1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,1,1,0,1,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,0,1,1,1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,2,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,2,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,1,0"))
                                 (rule "add_zero_right" (formula "55") (term "0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "61") (term "0,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "60") (term "0,1,0,0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,0,0"))
                                 (rule "add_zero_right" (formula "59") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,0,1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,1,0"))
                                 (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,0,1,0,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0,0,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,0,0,1,0,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "0"))
                                 (rule "add_zero_right" (formula "34") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0,0,1,0,1"))
                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0,0,1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,2,0,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,1,2,0,0"))
                                 (rule "ifEqualsInteger" (formula "35") (term "1"))
                                 (rule "equal_literals" (formula "35") (term "1,1,1"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "polySimp_homoEq" (formula "35") (term "1,1"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "60") (term "0,1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,1,0,1"))
                                 (rule "add_zero_right" (formula "56") (term "0,0,1,1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0,0"))
                                 (rule "add_zero_right" (formula "39") (term "0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,1,1,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,1,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "36") (term "0,2,0,1,1"))
                                 (rule "add_zero_right" (formula "36") (term "0,0,2,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "55") (term "0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,1,0,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "63") (term "0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,0,0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,1,0,0,1,1,1,0"))
                                 (rule "add_literals" (formula "62") (term "0,0,0,0,1,0,0,1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "61") (term "0,0,0,0,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,2,0,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,1,2,0,0"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,1,1"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,1,1,0,1,0"))
                                 (rule "add_literals" (formula "59") (term "0,0,0,1,1,1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,1,0,1"))
                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,1,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,2,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,2,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "56") (term "0,0,0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,2,0,1,1"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,0,2,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "55") (term "0,0,0,0,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,1,0"))
                                 (rule "add_literals" (formula "61") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "60") (term "0,0,0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "59") (term "0,0,0,1,0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "59") (term "0,0,0,0,1,0,0,0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,1,0,0,1,0,1"))
                                 (rule "add_literals" (formula "56") (term "0,0,0,0,1,0,0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "60") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "60") (term "0,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "63") (term "0,0,1,1,1,0"))
                                 (rule "add_literals" (formula "63") (term "0,0,0,1,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "40") (term "0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,1,0"))
                                 (rule "add_literals" (formula "55") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "59") (term "0,0,0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "59") (term "0,0,0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,0,1,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0,0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,2,0,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,1,2,0,0"))
                                 (rule "lenOfSeqSubEQ" (formula "58") (term "1,1,0,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "58") (term "1,1,1,0,0"))
                                 (rule "times_zero_2" (formula "58") (term "1,1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "58") (term "1,1,1,0,0"))
                                 (rule "lenOfSeqSubEQ" (formula "58") (term "1,0,0,0,0,1,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "58") (term "1,1,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "58") (term "1,1,1,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "58") (term "1,1,0,0,0,0,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "58") (term "1,1,1,0,1,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "58") (term "1,1,1,1,0,1,0"))
                                 (rule "mul_literals" (formula "58") (term "1,1,1,1,1,0,1,0"))
                                 (rule "add_zero_right" (formula "58") (term "1,1,1,1,0,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "58") (term "0,1,0,0,0,0,0,0,1,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "58") (term "1,0,1,0,0,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "58") (term "1,1,0,1,0,0,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "58") (term "1,0,1,0,0,0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,1,1"))
                                 (rule "add_literals" (formula "35") (term "0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,1,0,1"))
                                 (rule "add_literals" (formula "56") (term "0,0,0,1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,2,0,1,1"))
                                 (rule "add_literals" (formula "36") (term "0,0,0,2,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                 (rule "add_literals" (formula "35") (term "0,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,1,0,0"))
                                 (rule "add_zero_right" (formula "58") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,1,0,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,0,1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "58") (term "0,0,1,0,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,1,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,1,1,0,1,0"))
                                 (rule "add_zero_right" (formula "58") (term "0,0,1,1,1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,1,1,0,1,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,1,1,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,0,1,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,1,0,0,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "58") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,1,0,0,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,0,1,0,0,0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,1,1,0,1,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,0,1,1,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,0,0,1,0,0,0,0,0,0,1,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "37") (term "1"))
                                 (rule "mul_literals" (formula "37") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "62") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "62") (term "0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "62") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "59") (term "0,1,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "59") (term "0,0,1,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "59") (term "0,0,1,1,0,1,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "34") (term "1"))
                                 (rule "mul_literals" (formula "34") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                 (rule "mul_literals" (formula "32") (term "1"))
                                 (rule "replace_known_left" (formula "62") (term "0,1,0") (ifseqformula "32"))
                                  (builtin "One Step Simplification" (formula "62"))
                                 (rule "polySimp_addAssoc" (formula "62") (term "0"))
                                 (rule "polySimp_addComm1" (formula "62") (term "0,0"))
                                 (rule "add_literals" (formula "62") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "58") (term "0,1,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "0,0,1,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "0,0,1,1,0,1,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "40"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                 (rule "mul_literals" (formula "40") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                 (rule "applyEq" (formula "55") (term "0,1,0,0,1,0") (ifseqformula "40"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "55") (term "0,0,0,1,0"))
                                 (rule "applyEqRigid" (formula "63") (term "0,1,0,0,1,1,0") (ifseqformula "40"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "63") (term "0,0,1,1,0"))
                                 (rule "add_literals" (formula "63") (term "0,0,0,1,1,0"))
                                 (rule "applyEq" (formula "37") (term "0,1,0,0") (ifseqformula "40"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0"))
                                 (rule "applyEq" (formula "36") (term "2,0,1,1") (ifseqformula "40"))
                                 (rule "applyEq" (formula "58") (term "1,0,0,0,0,1,0") (ifseqformula "40"))
                                 (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "40"))
                                 (rule "applyEqRigid" (formula "38") (term "1,2,0,0") (ifseqformula "40"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "2,0,0"))
                                 (rule "add_literals" (formula "38") (term "0,2,0,0"))
                                 (rule "add_zero_left" (formula "38") (term "2,0,0"))
                                 (rule "applyEqRigid" (formula "38") (term "2,0") (ifseqformula "40"))
                                 (rule "applyEqRigid" (formula "36") (term "0,1,0,1,0") (ifseqformula "40"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "36") (term "0,0,1,0"))
                                 (rule "applyEq" (formula "60") (term "0,1,0,0,0,0,0") (ifseqformula "40"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "60") (term "0,0,0,0,0,0"))
                                 (rule "applyEq" (formula "39") (term "0,0,0,0,1,0") (ifseqformula "40"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "0,0,0,1,0"))
                                 (rule "mul_literals" (formula "39") (term "0,0,0,0,1,0"))
                                 (rule "applyEqRigid" (formula "59") (term "0,1,0,0,0,0,0,0,1,0") (ifseqformula "40"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "59") (term "0,0,0,0,0,0,0,1,0"))
                                 (rule "applyEqRigid" (formula "62") (term "0,1,0,0,1,0") (ifseqformula "40"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "62") (term "0,0,0,1,0"))
                                 (rule "applyEq" (formula "36") (term "1,0,0,0") (ifseqformula "40"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "36") (term "0,0,0"))
                                 (rule "applyEqRigid" (formula "35") (term "0,0,0") (ifseqformula "40"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,0,0"))
                                 (rule "applyEq" (formula "59") (term "1,0,0,0,0,1,0") (ifseqformula "40"))
                                 (rule "applyEqRigid" (formula "59") (term "1,1,1,0,1,0") (ifseqformula "40"))
                                 (rule "applyEq" (formula "58") (term "0,1,0,0,0,0,0,0,1,0") (ifseqformula "40"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,0,0,0,0,0,1,0"))
                                 (rule "applyEq" (formula "56") (term "1,1,0,1") (ifseqformula "40"))
                                 (rule "applyEqRigid" (formula "60") (term "1,0,0,0") (ifseqformula "40"))
                                 (rule "applyEqRigid" (formula "41") (term "1,0") (ifseqformula "40"))
                                 (rule "applyEqRigid" (formula "56") (term "0,1,0,0,1,0,1") (ifseqformula "40"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,1"))
                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,1"))
                                 (rule "add_literals" (formula "56") (term "0,0,0,1,0,1"))
                                 (rule "applyEqRigid" (formula "56") (term "0,1,0,0,0,0,0") (ifseqformula "40"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "56") (term "0,0,0,0,0,0"))
                                 (rule "applyEqRigid" (formula "61") (term "1,1,0") (ifseqformula "40"))
                                 (rule "applyEqRigid" (formula "58") (term "1,1,1,0,1,0") (ifseqformula "40"))
                                 (rule "applyEqRigid" (formula "63") (term "1,1,1,0") (ifseqformula "40"))
                                 (rule "applyEq" (formula "61") (term "0,1,0,0,1,0") (ifseqformula "40"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "61") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "61") (term "0,0,0,1,0"))
                                 (rule "applyEq" (formula "39") (term "1,0,0") (ifseqformula "40"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                                 (rule "add_literals" (formula "39") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "39") (term "0,0"))
                                 (rule "applyEq" (formula "59") (term "1,1,0,0") (ifseqformula "40"))
                                 (rule "applyEqRigid" (formula "59") (term "0,1,0,0,1,0,0") (ifseqformula "40"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "59") (term "0,0,0,1,0,0"))
                                 (rule "applyEqRigid" (formula "58") (term "1,1,0,0") (ifseqformula "40"))
                                 (rule "applyEq" (formula "58") (term "0,1,0,0,1,0,0") (ifseqformula "40"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "35") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "35") (term "0,1,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "55"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,1"))
                                 (rule "mul_literals" (formula "55") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "55") (term "1,1"))
                                 (rule "applyEqRigid" (formula "61") (term "1,0") (ifseqformula "55"))
                                 (rule "polySimp_addAssoc" (formula "61") (term "0"))
                                 (rule "polySimp_addComm1" (formula "61") (term "0,0"))
                                 (rule "add_literals" (formula "61") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "61") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2" (formula "61") (term "0"))
                                 (rule "add_literals" (formula "61") (term "1,0"))
                                 (rule "times_zero_1" (formula "61") (term "0"))
                                 (rule "leq_literals" (formula "61"))
                                 (rule "true_left" (formula "61"))
                                 (rule "applyEqRigid" (formula "59") (term "0,0,0,0,1,0") (ifseqformula "55"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "0,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "59") (term "0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "0,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "59") (term "0,0,0,0,1,0,0"))
                                 (rule "applyEqRigid" (formula "62") (term "1,1,0") (ifseqformula "55"))
                                 (rule "polySimp_addAssoc" (formula "62") (term "1,0"))
                                 (rule "add_literals" (formula "62") (term "0,1,0"))
                                 (rule "applyEqRigid" (formula "60") (term "0,0,0") (ifseqformula "55"))
                                 (rule "applyEq" (formula "56") (term "1,0,1") (ifseqformula "55"))
                                 (rule "polySimp_addAssoc" (formula "56") (term "0,1"))
                                 (rule "add_literals" (formula "56") (term "0,0,1"))
                                 (rule "applyEqRigid" (formula "58") (term "0,0,0,0,1,0") (ifseqformula "55"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "0,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "58") (term "0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "0,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "58") (term "0,0,0,0,1,0,0"))
                                 (rule "applyEqRigid" (formula "58") (term "1,0") (ifseqformula "55"))
                                 (rule "polySimp_addComm1" (formula "58") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "58") (term "0,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,0"))
                                 (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "55"))
                                 (rule "polySimp_addComm1" (formula "59") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "59") (term "0,0"))
                                 (rule "add_literals" (formula "59") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "61"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "1"))
                                 (rule "polySimp_rightDist" (formula "61") (term "1"))
                                 (rule "mul_literals" (formula "61") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "61") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "61") (term "1,1"))
                                 (rule "applyEqRigid" (formula "56") (term "0,0,0") (ifseqformula "61"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "56") (term "0,0"))
                                 (rule "mul_literals" (formula "56") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "35") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "0,0,0"))
                                 (rule "polySimp_homoEq" (formula "40"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0"))
                                 (rule "polySimp_sepPosMonomial" (formula "56") (term "1"))
                                 (rule "mul_literals" (formula "56") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "0,0,0,1,0,0"))
                                 (rule "replace_known_left" (formula "37") (term "0,0,1,0,0") (ifseqformula "32"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,1,2,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "0,0,1,2,0,1,1"))
                                 (rule "polySimp_elimOne" (formula "36") (term "0,0,1,2,0,1,1"))
                                 (rule "replace_known_left" (formula "36") (term "0,1,2,0,1,1") (ifseqformula "32"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "2,0,1,1"))
                                 (rule "add_literals" (formula "36") (term "0,2,0,1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,2,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "0,0,2,0,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "0,0,2,0,0"))
                                 (rule "replace_known_left" (formula "38") (term "0,2,0,0") (ifseqformula "32"))
                                  (builtin "One Step Simplification" (formula "38"))
                                 (rule "polySimp_sepNegMonomial" (formula "59"))
                                 (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                                 (rule "polySimp_elimOne" (formula "59") (term "0"))
                                 (rule "applyEqRigid" (formula "58") (term "0,1,0") (ifseqformula "59"))
                                 (rule "polySimp_pullOutFactor1" (formula "58") (term "0"))
                                 (rule "add_literals" (formula "58") (term "1,0"))
                                 (rule "times_zero_1" (formula "58") (term "0"))
                                 (rule "leq_literals" (formula "58"))
                                 (rule "true_left" (formula "58"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "0,0,0,1,0,0,0,1,0"))
                                 (rule "replace_known_left" (formula "39") (term "0,0,1,0,0,0,1,0") (ifseqformula "32"))
                                  (builtin "One Step Simplification" (formula "39"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "39") (term "0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "39") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor2" (formula "39") (term "0"))
                                 (rule "add_literals" (formula "39") (term "1,0"))
                                 (rule "times_zero_1" (formula "39") (term "0"))
                                 (rule "leq_literals" (formula "39"))
                                 (rule "true_left" (formula "39"))
                                 (rule "polySimp_sepPosMonomial" (formula "39"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1"))
                                 (rule "mul_literals" (formula "39") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                 (rule "applyEqRigid" (formula "54") (term "0,1,0,0,0") (ifseqformula "39"))
                                 (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "54") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "54") (term "0,0,0"))
                                 (rule "add_literals" (formula "54") (term "0,0,0,0"))
                                 (rule "applyEq" (formula "59") (term "0,1,0,0,0") (ifseqformula "39"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "59") (term "0,0,0"))
                                 (rule "add_literals" (formula "59") (term "0,0,0,0"))
                                 (rule "applyEq" (formula "36") (term "0,0,0") (ifseqformula "39"))
                                 (rule "applyEqRigid" (formula "36") (term "0,1,0,1,0") (ifseqformula "39"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "36") (term "0,0,1,0"))
                                 (rule "applyEq" (formula "57") (term "1,1,1,1,0") (ifseqformula "39"))
                                 (rule "polySimp_addAssoc" (formula "57") (term "1,1,1,0"))
                                 (rule "add_literals" (formula "57") (term "0,1,1,1,0"))
                                 (rule "add_zero_left" (formula "57") (term "1,1,1,0"))
                                 (rule "applyEqRigid" (formula "35") (term "0,1,0,0") (ifseqformula "39"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "35") (term "0,0"))
                                 (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "39"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "1,0"))
                                 (rule "add_literals" (formula "40") (term "0,1,0"))
                                 (rule "add_zero_left" (formula "40") (term "1,0"))
                                 (rule "applyEq" (formula "54") (term "1,1,0") (ifseqformula "39"))
                                 (rule "polySimp_addAssoc" (formula "54") (term "1,0"))
                                 (rule "add_literals" (formula "54") (term "0,1,0"))
                                 (rule "add_zero_left" (formula "54") (term "1,0"))
                                 (rule "applyEqRigid" (formula "38") (term "1,2,0") (ifseqformula "39"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "2,0"))
                                 (rule "add_literals" (formula "38") (term "0,2,0"))
                                 (rule "add_zero_left" (formula "38") (term "2,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0"))
                                 (rule "mul_literals" (formula "58") (term "1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "55") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "56") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "56") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "38") (term "0,0") (ifseqformula "32"))
                                  (builtin "One Step Simplification" (formula "38"))
                                 (rule "polySimp_homoEq" (formula "38"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "38"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1"))
                                 (rule "mul_literals" (formula "38") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                  (builtin "One Step Simplification" (formula "38"))
                                 (rule "polySimp_homoEq" (formula "38") (term "1"))
                                 (rule "times_zero_2" (formula "38") (term "1,0,1"))
                                 (rule "add_zero_right" (formula "38") (term "0,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "38") (term "1"))
                                 (rule "mul_literals" (formula "38") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "52") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "52") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "57") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "57") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "57") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0"))
                                 (rule "mul_literals" (formula "36") (term "1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                 (rule "inEqSimp_invertInEq0" (formula "35") (term "0"))
                                 (rule "mul_literals" (formula "35") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "0,0"))
                                 (rule "equalityToSeqGetAndSeqLenRight" (formula "75") (inst "iv=iv"))
                                 (rule "inEqSimp_ltToLeq" (formula "75") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,1,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "75") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "75") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "75") (term "1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "75") (term "1,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "75") (term "0,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "75") (term "1,1,1,0,0,1"))
                                 (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "32"))
                                 (rule "leq_literals" (formula "33") (term "0"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "inEqSimp_contradEq7" (formula "34") (term "1,1") (ifseqformula "32"))
                                 (rule "mul_literals" (formula "34") (term "1,0,0,1,1"))
                                 (rule "add_literals" (formula "34") (term "0,0,1,1"))
                                 (rule "leq_literals" (formula "34") (term "0,1,1"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "inEqSimp_subsumption1" (formula "35") (term "0,0") (ifseqformula "34"))
                                 (rule "leq_literals" (formula "35") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "pullOutSelect" (formula "74") (term "1,0,1,1,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                                 (rule "applyEq" (formula "75") (term "1,0,1,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "replaceKnownSelect_taclet00_3" (formula "1") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_4" (formula "1") (term "2,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "75") (term "1,0,1,0") (ifseqformula "1"))
                                 (rule "replaceKnownSelect_taclet0000_8" (formula "75") (term "0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "75") (term "0,1,0"))
                                 (rule "applyEqReverse" (formula "75") (term "1,0,1,1,0,1") (ifseqformula "1"))
                                 (rule "replaceKnownSelect_taclet0000_8" (formula "75") (term "0,1,1,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "75") (term "0,1,1,0,1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "74") (term "0,0,0") (inst "selectSK=java_util_Collection_seq_4"))
                                 (rule "applyEq" (formula "75") (term "0,0,1,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "75") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "44"))
                                 (rule "eqSymm" (formula "75") (term "0"))
                                 (rule "eqSymm" (formula "75") (term "1,0,1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSeqConcatEQ" (formula "46") (ifseqformula "27"))
                                  (builtin "One Step Simplification" (formula "46"))
                                 (rule "andLeft" (formula "46"))
                                 (rule "andLeft" (formula "46"))
                                 (rule "polySimp_homoEq" (formula "46"))
                                 (rule "polySimp_addComm0" (formula "46") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "46") (term "0"))
                                 (rule "eqSeqSingleton" (formula "48"))
                                 (rule "andLeft" (formula "48"))
                                 (rule "lenOfSeqSubEQ" (formula "47") (term "2,0") (ifseqformula "57"))
                                 (rule "polySimp_elimSub" (formula "47") (term "1,2,0"))
                                 (rule "mul_literals" (formula "47") (term "1,1,2,0"))
                                 (rule "add_zero_right" (formula "47") (term "1,2,0"))
                                 (rule "lenOfSeqSubEQ" (formula "46") (term "1,0") (ifseqformula "37"))
                                 (rule "polySimp_elimSub" (formula "46") (term "1,1,0"))
                                 (rule "mul_literals" (formula "46") (term "1,1,1,0"))
                                 (rule "add_zero_right" (formula "46") (term "1,1,0"))
                                 (rule "lenOfSeqSub" (formula "48") (term "0"))
                                 (rule "polySimp_elimSub" (formula "48") (term "1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "49") (term "1,0,0") (ifseqformula "47"))
                                 (rule "polySimp_elimSub" (formula "49") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "49") (term "1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "49") (term "1,1,0,0"))
                                 (rule "ifEqualsInteger" (formula "48"))
                                 (rule "equal_literals" (formula "48") (term "1,1"))
                                  (builtin "One Step Simplification" (formula "48"))
                                 (rule "andLeft" (formula "48"))
                                 (rule "polySimp_homoEq" (formula "49"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "47") (term "0,2,0"))
                                 (rule "add_zero_right" (formula "47") (term "0,0,2,0"))
                                 (rule "polySimp_rightDist" (formula "47") (term "1,0,0,2,0"))
                                 (rule "mul_literals" (formula "47") (term "0,1,0,0,2,0"))
                                 (rule "polySimp_addAssoc" (formula "47") (term "0,0,2,0"))
                                 (rule "add_literals" (formula "47") (term "0,0,0,2,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "46") (term "0,1,0"))
                                 (rule "add_zero_right" (formula "46") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "48") (term "0") (ifseqformula "37"))
                                 (rule "polySimp_elimSub" (formula "48") (term "1,0"))
                                 (rule "times_zero_2" (formula "48") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "48") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "50") (term "0,1,0,0"))
                                 (rule "add_zero_right" (formula "50") (term "0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0"))
                                 (rule "lenOfSeqSubEQ" (formula "49") (term "1,0") (ifseqformula "37"))
                                 (rule "polySimp_elimSub" (formula "49") (term "1,1,0"))
                                 (rule "mul_literals" (formula "49") (term "1,1,1,0"))
                                 (rule "add_zero_right" (formula "49") (term "1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "50") (term "0,1,1,0,0"))
                                 (rule "add_zero_right" (formula "50") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,1,0,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,0,0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "50") (term "0,0,0,1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0"))
                                 (rule "add_zero_right" (formula "48") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "50") (term "0,0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,0,0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "50") (term "0,0,0,0,1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "49") (term "0,1,0"))
                                 (rule "add_zero_right" (formula "49") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "48"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "46"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1"))
                                 (rule "mul_literals" (formula "46") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                 (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "46"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                 (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                                 (rule "add_literals" (formula "48") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "48") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2" (formula "48") (term "0"))
                                 (rule "add_literals" (formula "48") (term "1,0"))
                                 (rule "times_zero_1" (formula "48") (term "0"))
                                 (rule "leq_literals" (formula "48"))
                                 (rule "true_left" (formula "48"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "47") (term "0,2,0"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "0,0,2,0"))
                                 (rule "polySimp_elimOne" (formula "47") (term "0,0,2,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "48") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "0,0,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "48") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "0,0,0"))
                                 (rule "applyEq" (formula "46") (term "0") (ifseqformula "54"))
                                 (rule "polySimp_homoEq" (formula "46"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                 (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                 (rule "add_literals" (formula "46") (term "0,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "46"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "0"))
                                 (rule "applyEqRigid" (formula "55") (term "0,0") (ifseqformula "46"))
                                 (rule "inEqSimp_homoInEq1" (formula "55") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1,0,0"))
                                 (rule "mul_literals" (formula "55") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "55") (term "0,0"))
                                 (rule "add_literals" (formula "55") (term "0,0,0"))
                                 (rule "applyEq" (formula "58") (term "0,0,0") (ifseqformula "46"))
                                 (rule "inEqSimp_homoInEq1" (formula "58") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "58") (term "0,0,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,0,0"))
                                 (rule "applyEq" (formula "60") (term "1,1,0") (ifseqformula "46"))
                                 (rule "polySimp_addAssoc" (formula "60") (term "1,0"))
                                 (rule "add_literals" (formula "60") (term "0,1,0"))
                                 (rule "add_zero_left" (formula "60") (term "1,0"))
                                 (rule "applyEqRigid" (formula "57") (term "0,0,0") (ifseqformula "46"))
                                 (rule "inEqSimp_homoInEq1" (formula "57") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "57") (term "0,0,0"))
                                 (rule "add_literals" (formula "57") (term "0,0,0,0"))
                                 (rule "applyEqRigid" (formula "55") (term "0,1") (ifseqformula "46"))
                                 (rule "polySimp_homoEq" (formula "55") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1,0,1"))
                                 (rule "mul_literals" (formula "55") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "55") (term "0,1"))
                                 (rule "add_literals" (formula "55") (term "0,0,1"))
                                 (rule "add_zero_left" (formula "55") (term "0,1"))
                                 (rule "applyEq" (formula "54") (term "1,1") (ifseqformula "46"))
                                 (rule "polySimp_addAssoc" (formula "54") (term "1"))
                                 (rule "add_literals" (formula "54") (term "0,1"))
                                 (rule "applyEq" (formula "57") (term "1,1") (ifseqformula "46"))
                                 (rule "polySimp_addAssoc" (formula "57") (term "1"))
                                 (rule "add_literals" (formula "57") (term "0,1"))
                                 (rule "add_zero_left" (formula "57") (term "1"))
                                 (rule "applyEq" (formula "59") (term "1,1") (ifseqformula "46"))
                                 (rule "polySimp_addAssoc" (formula "59") (term "1"))
                                 (rule "add_literals" (formula "59") (term "0,1"))
                                 (rule "polySimp_invertEq" (formula "55") (term "1"))
                                 (rule "mul_literals" (formula "55") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "55") (term "0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "48") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "0,0,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "0,0,0,0,1,0,0"))
                                 (rule "applyEq" (formula "48") (term "1,0,0") (ifseqformula "54"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "55") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "58") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "57") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "57") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "57") (term "0,0,0"))
                                 (rule "eqSeqConcatEQ" (formula "40") (term "1") (ifseqformula "27"))
                                  (builtin "One Step Simplification" (formula "40"))
                                 (rule "polySimp_homoEq" (formula "40") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "40") (term "0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1"))
                                 (rule "eqSeqSingleton" (formula "40") (term "1,1"))
                                 (rule "lenOfSeqSubEQ" (formula "40") (term "2,0,1,0,1") (ifseqformula "37"))
                                 (rule "polySimp_elimSub" (formula "40") (term "1,2,0,1,0,1"))
                                 (rule "times_zero_2" (formula "40") (term "1,1,2,0,1,0,1"))
                                 (rule "add_zero_right" (formula "40") (term "1,2,0,1,0,1"))
                                 (rule "lenOfSeqSubEQ" (formula "40") (term "1,0,0,0,1") (ifseqformula "37"))
                                 (rule "polySimp_elimSub" (formula "40") (term "1,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "40") (term "1,1,1,0,0,0,1"))
                                 (rule "add_zero_right" (formula "40") (term "1,1,0,0,0,1"))
                                 (rule "lenOfSeqSub" (formula "40") (term "0,0,1,1"))
                                 (rule "polySimp_elimSub" (formula "40") (term "1,0,0,1,1"))
                                 (rule "lenOfSeqSubEQ" (formula "40") (term "1,0,0,1,1,1") (ifseqformula "37"))
                                 (rule "polySimp_elimSub" (formula "40") (term "1,1,0,0,1,1,1"))
                                 (rule "times_zero_2" (formula "40") (term "1,1,1,0,0,1,1,1"))
                                 (rule "add_zero_right" (formula "40") (term "1,1,0,0,1,1,1"))
                                 (rule "ifEqualsInteger" (formula "40") (term "0,1,1"))
                                 (rule "equal_literals" (formula "40") (term "1,1,0,1,1"))
                                  (builtin "One Step Simplification" (formula "40"))
                                 (rule "polySimp_homoEq" (formula "40") (term "1,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0,1,1"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,0,1,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "0,1,0,1,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0,1,0,1,1"))
                                 (rule "lenOfSeqSubEQ" (formula "40") (term "0,0,0,1,1") (ifseqformula "37"))
                                 (rule "polySimp_elimSub" (formula "40") (term "1,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "40") (term "1,1,0,0,0,1,1"))
                                 (rule "add_zero_right" (formula "40") (term "1,0,0,0,1,1"))
                                 (rule "lenOfSeqSubEQ" (formula "40") (term "1,0,1,0,1,1") (ifseqformula "47"))
                                 (rule "polySimp_elimSub" (formula "40") (term "1,1,0,1,0,1,1"))
                                 (rule "mul_literals" (formula "40") (term "1,1,1,0,1,0,1,1"))
                                 (rule "add_zero_right" (formula "40") (term "1,1,0,1,0,1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "0,2,0,1,0,1"))
                                 (rule "add_zero_right" (formula "40") (term "0,0,2,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,2,0,1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0,0,0,1"))
                                 (rule "add_zero_right" (formula "40") (term "0,0,1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0,0,1,1,1"))
                                 (rule "add_zero_right" (formula "40") (term "0,0,1,0,0,1,1,1"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,1,1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,1,1"))
                                 (rule "add_zero_right" (formula "40") (term "0,0,0,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0,1,0,1,1"))
                                 (rule "add_zero_right" (formula "40") (term "0,0,1,0,1,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,1,0,1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,1,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "40") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1"))
                                 (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "40") (term "1,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,1,0,1,1"))
                                 (rule "mul_literals" (formula "40") (term "0,1,1,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,1,1"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,2,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "0,0,2,0,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "40") (term "0,0,2,0,1,0,1"))
                                 (rule "applyEqRigid" (formula "40") (term "2,0,1,0,1") (ifseqformula "54"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,1,0,0,1,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "0,0,1,0,0,1,1,1"))
                                 (rule "polySimp_elimOne" (formula "40") (term "0,0,1,0,0,1,1,1"))
                                 (rule "applyEqRigid" (formula "40") (term "1,0,0,1,1,1") (ifseqformula "54"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,1,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "0,0,1,0,0,0,1,1"))
                                 (rule "polySimp_elimOne" (formula "40") (term "0,0,1,0,0,0,1,1"))
                                 (rule "applyEqRigid" (formula "40") (term "1,0,0,0,1,1") (ifseqformula "54"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "40") (term "0,0,0,0,0,1,1"))
                                 (rule "add_zero_left" (formula "40") (term "0,0,0,0,1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "40") (term "0,0,0,0,0,1"))
                                 (rule "applyEq" (formula "40") (term "0,0,0,1") (ifseqformula "54"))
                                 (rule "polySimp_homoEq" (formula "40") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,1"))
                                 (rule "mul_literals" (formula "40") (term "0,1,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0,1"))
                                 (rule "add_literals" (formula "40") (term "0,0,0,0,0,1"))
                                 (rule "add_zero_left" (formula "40") (term "0,0,0,0,1"))
                                 (rule "polySimp_sepNegMonomial" (formula "40") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "40") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,0,1,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,1,0,1,1"))
                                 (rule "polySimp_elimOne" (formula "40") (term "0,0,0,1,0,1,1"))
                                 (rule "applyEq" (formula "40") (term "0,1,0,1,1") (ifseqformula "54"))
                                 (rule "polySimp_homoEq" (formula "40") (term "1,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0,1,1"))
                                 (rule "mul_literals" (formula "40") (term "0,1,0,1,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0,1,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,0,1,0,1,1"))
                                 (rule "add_literals" (formula "40") (term "0,0,0,1,0,1,1"))
                                 (rule "add_zero_left" (formula "40") (term "0,0,1,0,1,1"))
                                 (rule "polySimp_sepNegMonomial" (formula "40") (term "1,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,1,1"))
                                 (rule "polySimp_elimOne" (formula "40") (term "0,1,0,1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1,1"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,0,0,1,1"))
                                 (rule "pullOutSelect" (formula "1") (term "1,2,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_3"))
                                 (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,0,1,0,1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,0,0,0,1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "53"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "replaceKnownSelect_taclet000000_13" (formula "1") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_14" (formula "1") (term "2,0"))
                                 (rule "eqSymm" (formula "2") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "78") (term "0,1,1,1,0,0,1") (ifseqformula "2"))
                                 (rule "applyEqReverse" (formula "78") (term "0,1,1,0,1") (ifseqformula "2"))
                                 (rule "applyEqReverse" (formula "78") (term "0,1,0") (ifseqformula "2"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "78") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "78") (term "1,0,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "78") (term "1,0,1,1,0,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "eqSymm" (formula "76") (term "0"))
                                 (rule "eqSymm" (formula "76") (term "1,0,1"))
                                 (rule "applyEqRigid" (formula "76") (term "1,1,1,0,0,1") (ifseqformula "45"))
                                 (rule "polySimp_addAssoc" (formula "76") (term "1,1,0,0,1"))
                                 (rule "add_literals" (formula "76") (term "0,1,1,0,0,1"))
                                 (rule "add_zero_left" (formula "76") (term "1,1,0,0,1"))
                                 (rule "applyEqRigid" (formula "76") (term "0,0") (ifseqformula "45"))
                                 (rule "polySimp_homoEq" (formula "76") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "76") (term "1,0,0"))
                                 (rule "mul_literals" (formula "76") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "76") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "76") (term "0,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "76") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "76") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "76") (term "0,0"))
                                 (rule "getOfSeqSub" (formula "47") (term "0"))
                                 (rule "castDel" (formula "47") (term "2,0"))
                                 (rule "add_zero_left" (formula "47") (term "1,1,0"))
                                 (rule "leq_literals" (formula "47") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "47"))
                                 (rule "polySimp_elimSub" (formula "47") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "47") (term "0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "47") (term "1,0,0"))
                                 (rule "polySimp_addComm0" (formula "47") (term "0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "47") (term "1,0,0"))
                                 (rule "add_literals" (formula "47") (term "1,1,1,0,0"))
                                 (rule "times_zero_1" (formula "47") (term "1,1,0,0"))
                                 (rule "add_zero_right" (formula "47") (term "1,0,0"))
                                 (rule "less_literals" (formula "47") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "47"))
                                 (rule "getOfSeqSub" (formula "39") (term "0,1,1,1"))
                                 (rule "castDel" (formula "39") (term "2,0,1,1,1"))
                                 (rule "leq_literals" (formula "39") (term "0,0,0,1,1,1"))
                                  (builtin "One Step Simplification" (formula "39"))
                                 (rule "add_zero_left" (formula "39") (term "1,1,0,1,1,1"))
                                 (rule "polySimp_elimSub" (formula "39") (term "1,0,0,1,1,1"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,1,1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,1,1"))
                                 (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "1,0,0,1,1,1"))
                                 (rule "polySimp_addComm0" (formula "39") (term "0,1,0,0,1,1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,1,1"))
                                 (rule "add_zero_right" (formula "39") (term "0,0,0,1,1,1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,1,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,1,1,1"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,1,1,1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "0,1,0,0,0,1,1,1"))
                                 (rule "mul_literals" (formula "39") (term "0,0,1,0,0,0,1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,1,1,1"))
                                 (rule "add_literals" (formula "39") (term "0,0,0,0,0,1,1,1"))
                                 (rule "add_zero_left" (formula "39") (term "0,0,0,0,1,1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,1,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,1,1,1"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,0,0,1,1,1"))
                                 (rule "eqSeqConcatEQ" (formula "39") (term "1,0") (ifseqformula "26"))
                                  (builtin "One Step Simplification" (formula "39"))
                                 (rule "eqSymm" (formula "39") (term "1,1,0"))
                                 (rule "polySimp_homoEq" (formula "39") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "39") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "39") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "39") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                 (rule "equal_literals" (formula "39") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "39"))
                                 (rule "true_left" (formula "39"))
                                 (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "62"))
                                 (rule "closeTrue" (formula "62"))
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "66"))
                                 (rule "impRight" (formula "78"))
                                 (rule "notRight" (formula "63"))
                                 (rule "close" (formula "65") (ifseqformula "1"))
                              )
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "62"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "66"))
                                 (rule "impRight" (formula "78"))
                                 (rule "notRight" (formula "67"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "eqSymm" (formula "83"))
                                 (rule "eqSymm" (formula "6"))
                                 (rule "eqSymm" (formula "4"))
                                 (rule "eqSymm" (formula "5"))
                                 (rule "eqSymm" (formula "2"))
                                 (rule "polySimp_homoEq" (formula "40"))
                                 (rule "polySimp_homoEq" (formula "56"))
                                 (rule "polySimp_homoEq" (formula "63"))
                                 (rule "polySimp_homoEq" (formula "34"))
                                 (rule "polySimp_homoEq" (formula "35") (term "1"))
                                 (rule "mul_literals" (formula "35") (term "1,0,1"))
                                 (rule "add_zero_right" (formula "35") (term "0,1"))
                                 (rule "polySimp_homoEq" (formula "60"))
                                 (rule "polySimp_homoEq" (formula "57") (term "1"))
                                 (rule "mul_literals" (formula "57") (term "1,0,1"))
                                 (rule "add_zero_right" (formula "57") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "56") (term "0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "40") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "0,1,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "0,1,0"))
                                 (rule "polySimp_rightDist" (formula "60") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "60") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "60") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "60") (term "0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "37") (term "0"))
                                 (rule "add_zero_right" (formula "37") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,1,0,0"))
                                 (rule "add_zero_right" (formula "41") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,1,0,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "57") (term "0"))
                                 (rule "add_zero_right" (formula "57") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "57") (term "1,0,0"))
                                 (rule "mul_literals" (formula "57") (term "0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "39"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0"))
                                 (rule "add_zero_right" (formula "64") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "62"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "61") (term "0,1,1,0,0"))
                                 (rule "add_zero_right" (formula "61") (term "0,0,1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35") (term "0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "59"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "59") (term "0"))
                                 (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,1,0,0"))
                                 (rule "mul_literals" (formula "61") (term "0,1,0,0,1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "42"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "63") (term "0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "60") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "61") (term "0,0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "61") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor2" (formula "61") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "61") (term "1,0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "61") (term "0,0,0,1,0"))
                                 (rule "leq_literals" (formula "61") (term "0,0,1,0"))
                                  (builtin "One Step Simplification" (formula "61"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,1,1,0,0"))
                                 (rule "add_zero_left" (formula "41") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                 (rule "add_literals" (formula "57") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "57") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "64") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "62") (term "0"))
                                 (rule "polySimp_addComm1" (formula "62") (term "0,0"))
                                 (rule "add_literals" (formula "62") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "35") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "41") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor2" (formula "41") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "41") (term "1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "41") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "41") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "41"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0"))
                                 (rule "add_zero_right" (formula "39") (term "0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "61") (term "0,0,0,1,1,0,0"))
                                 (rule "add_zero_left" (formula "61") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "64") (term "0,0,0,0,0"))
                                 (rule "replace_known_left" (formula "64") (term "0,0") (ifseqformula "62"))
                                  (builtin "One Step Simplification" (formula "64"))
                                 (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0"))
                                 (rule "add_zero_right" (formula "59") (term "0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "36") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "36") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "36") (term "0,0,0,0"))
                                 (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0"))
                                 (rule "add_zero_right" (formula "40") (term "0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "63") (term "0,1,0"))
                                 (rule "add_zero_right" (formula "63") (term "0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,1,0"))
                                 (rule "add_zero_right" (formula "60") (term "0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "60") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "42") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2" (formula "42") (term "0"))
                                 (rule "add_literals" (formula "42") (term "1,0"))
                                 (rule "times_zero_1" (formula "42") (term "0"))
                                 (rule "leq_literals" (formula "42"))
                                 (rule "true_left" (formula "42"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "39") (term "0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "39") (term "0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "58") (term "0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "36") (term "0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                 (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "41") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "40") (term "0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "40") (term "0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "62") (term "0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "62") (term "0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0"))
                                 (rule "add_zero_right" (formula "60") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "60") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "60") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "60") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "59") (term "0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "59") (term "0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "41") (term "0,0") (ifseqformula "39"))
                                  (builtin "One Step Simplification" (formula "41"))
                                 (rule "polySimp_addAssoc" (formula "60") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "58"))
                                  (builtin "One Step Simplification" (formula "60"))
                                 (rule "applyEqRigid" (formula "60") (term "0,1,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "58") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                 (rule "applyEqRigid" (formula "59") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "58") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                 (rule "applyEqRigid" (formula "82") (term "0,1,1") (ifseqformula "12"))
                                 (rule "applyEqRigid" (formula "62") (term "0,0,0,0,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "56") (term "0,0,0,0") (ifseqformula "4"))
                                 (rule "applyEqRigid" (formula "57") (term "0,2,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "82") (term "0,1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "59") (term "0,1,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "82") (term "0,1") (ifseqformula "12"))
                                 (rule "applyEq" (formula "57") (term "1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "27") (term "5") (ifseqformula "25"))
                                 (rule "applyEq" (formula "55") (term "0,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "66") (term "1,0,0") (ifseqformula "6"))
                                 (rule "applyEqRigid" (formula "61") (term "0,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "57") (term "0,1,2,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "49") (term "0,1,0") (ifseqformula "5"))
                                 (rule "applyEqRigid" (formula "62") (term "0,1,1,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "64") (term "1") (ifseqformula "6"))
                                 (rule "applyEq" (formula "50") (term "1") (ifseqformula "5"))
                                 (rule "applyEq" (formula "63") (term "1") (ifseqformula "6"))
                                 (rule "applyEqRigid" (formula "63") (term "0,1,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "56") (term "0,1,0,1") (ifseqformula "4"))
                                 (rule "applyEqRigid" (formula "58") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "57") (term "0,1,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "67") (term "0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "67") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "57") (term "0,0,0,0") (ifseqformula "4"))
                                 (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "32"))
                                  (builtin "One Step Simplification" (formula "57"))
                                 (rule "applyEq" (formula "43") (term "0,1") (ifseqformula "26"))
                                 (rule "eqSymm" (formula "43") (term "1"))
                                 (rule "applyEq" (formula "43") (term "0,1,0") (ifseqformula "26"))
                                 (rule "eqSymm" (formula "43") (term "1,0"))
                                 (rule "applyEq" (formula "78") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "10"))
                                 (rule "applyEqRigid" (formula "49") (term "0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "74") (term "0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "63") (term "1,0,1") (ifseqformula "6"))
                                 (rule "applyEq" (formula "66") (term "0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "44") (term "5") (ifseqformula "31"))
                                 (rule "applyEq" (formula "26") (term "0") (ifseqformula "49"))
                                 (rule "applyEq" (formula "57") (term "1") (ifseqformula "5"))
                                 (rule "applyEq" (formula "49") (term "1") (ifseqformula "26"))
                                 (rule "polySimp_sepPosMonomial" (formula "35") (term "1"))
                                 (rule "mul_literals" (formula "35") (term "1,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "34"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                 (rule "mul_literals" (formula "34") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                 (rule "applyEq" (formula "40") (term "0,0,0,0,1,0") (ifseqformula "34"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "0,0,0,1,0"))
                                 (rule "mul_literals" (formula "40") (term "0,0,0,0,1,0"))
                                 (rule "applyEq" (formula "38") (term "2,0") (ifseqformula "34"))
                                 (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "34"))
                                 (rule "polySimp_addComm1" (formula "58") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "58") (term "0,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "58") (term "0,0"))
                                 (rule "applyEqRigid" (formula "41") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqRigid" (formula "36") (term "2,0,1,1") (ifseqformula "34"))
                                 (rule "applyEq" (formula "39") (term "0,0,0,0,1,0") (ifseqformula "34"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "0,0,0,1,0"))
                                 (rule "mul_literals" (formula "39") (term "0,0,0,0,1,0"))
                                 (rule "applyEq" (formula "60") (term "1,1,0") (ifseqformula "34"))
                                 (rule "polySimp_addAssoc" (formula "60") (term "1,0"))
                                 (rule "add_literals" (formula "60") (term "0,1,0"))
                                 (rule "applyEq" (formula "32") (term "0") (ifseqformula "34"))
                                 (rule "applyEqRigid" (formula "56") (term "1,2,0,0") (ifseqformula "34"))
                                 (rule "polySimp_addAssoc" (formula "56") (term "2,0,0"))
                                 (rule "add_literals" (formula "56") (term "0,2,0,0"))
                                 (rule "applyEq" (formula "40") (term "1,1,0,1,0") (ifseqformula "34"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "1,0,1,0"))
                                 (rule "add_literals" (formula "40") (term "0,1,0,1,0"))
                                 (rule "applyEqRigid" (formula "37") (term "0,1") (ifseqformula "34"))
                                 (rule "applyEqRigid" (formula "42") (term "1,1,0") (ifseqformula "34"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "1,0"))
                                 (rule "add_literals" (formula "42") (term "0,1,0"))
                                 (rule "applyEq" (formula "39") (term "1,1,0,1,0") (ifseqformula "34"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "1,0,1,0"))
                                 (rule "add_literals" (formula "39") (term "0,1,0,1,0"))
                                 (rule "applyEqRigid" (formula "55") (term "1,0") (ifseqformula "34"))
                                 (rule "polySimp_addComm1" (formula "55") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "55") (term "0,0"))
                                 (rule "add_literals" (formula "55") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "55") (term "0,0"))
                                 (rule "applyEq" (formula "36") (term "1,0,0,0") (ifseqformula "34"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                 (rule "applyEq" (formula "59") (term "1,1,1,0") (ifseqformula "34"))
                                 (rule "polySimp_addAssoc" (formula "59") (term "1,1,0"))
                                 (rule "add_literals" (formula "59") (term "0,1,1,0"))
                                 (rule "applyEqRigid" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,0,0"))
                                 (rule "applyEqRigid" (formula "38") (term "1,2,0,0") (ifseqformula "34"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "2,0,0"))
                                 (rule "add_literals" (formula "38") (term "0,2,0,0"))
                                 (rule "lenOfSeqSubEQ" (formula "40") (term "1,0,0") (ifseqformula "38"))
                                 (rule "polySimp_elimSub" (formula "40") (term "1,1,0,0"))
                                 (rule "times_zero_2" (formula "40") (term "1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "40") (term "1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0"))
                                 (rule "lenOfSeqSubEQ" (formula "39") (term "1,0,0") (ifseqformula "38"))
                                 (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "39") (term "1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "39") (term "1,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0"))
                                 (rule "lenOfSeqSubEQ" (formula "57") (term "1,0") (ifseqformula "38"))
                                 (rule "polySimp_elimSub" (formula "57") (term "1,1,0"))
                                 (rule "mul_literals" (formula "57") (term "1,1,1,0"))
                                 (rule "add_zero_right" (formula "57") (term "1,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "56") (term "2,0") (ifseqformula "38"))
                                 (rule "polySimp_elimSub" (formula "56") (term "1,2,0"))
                                 (rule "mul_literals" (formula "56") (term "1,1,2,0"))
                                 (rule "add_zero_right" (formula "56") (term "1,2,0"))
                                 (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,1,0") (ifseqformula "38"))
                                 (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "36") (term "1,1,0,1,0,1,0"))
                                 (rule "add_zero_right" (formula "36") (term "1,0,1,0,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "59") (term "0,0,0,1,0") (ifseqformula "38"))
                                 (rule "polySimp_elimSub" (formula "59") (term "1,0,0,0,1,0"))
                                 (rule "times_zero_2" (formula "59") (term "1,1,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "59") (term "1,0,0,0,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "34") (term "0") (ifseqformula "38"))
                                 (rule "polySimp_elimSub" (formula "34") (term "1,0"))
                                 (rule "times_zero_2" (formula "34") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "34") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "polySimp_homoEq" (formula "34") (term "1"))
                                 (rule "mul_literals" (formula "34") (term "1,0,1"))
                                 (rule "add_zero_right" (formula "34") (term "0,1"))
                                 (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,0") (ifseqformula "38"))
                                 (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0"))
                                 (rule "mul_literals" (formula "37") (term "1,1,0,1,0,0"))
                                 (rule "add_zero_right" (formula "37") (term "1,0,1,0,0"))
                                 (rule "lenOfSeqSubEQ" (formula "35") (term "0,1") (ifseqformula "38"))
                                 (rule "polySimp_elimSub" (formula "35") (term "1,0,1"))
                                 (rule "times_zero_2" (formula "35") (term "1,1,0,1"))
                                 (rule "add_zero_right" (formula "35") (term "1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                                 (rule "add_zero_right" (formula "40") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0"))
                                 (rule "add_zero_right" (formula "39") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,0"))
                                 (rule "add_zero_right" (formula "57") (term "0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "57") (term "0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "56") (term "0,2,0"))
                                 (rule "add_zero_right" (formula "56") (term "0,0,2,0"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0,2,0"))
                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,2,0"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "40") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,1,0"))
                                 (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,0,0,1,0,1,0"))
                                 (rule "ifEqualsInteger" (formula "35") (term "1"))
                                 (rule "equal_literals" (formula "35") (term "1,1,1"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "polySimp_homoEq" (formula "35") (term "1,1"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,1,1"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "59") (term "0,0,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "39") (term "0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "57") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "0"))
                                 (rule "add_zero_right" (formula "34") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "56") (term "0,0,2,0"))
                                 (rule "add_literals" (formula "56") (term "0,0,0,2,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,0,1,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0,0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,1,1"))
                                 (rule "add_literals" (formula "35") (term "0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "59") (term "0,0,0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                 (rule "add_literals" (formula "35") (term "0,0,0,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "37") (term "1"))
                                 (rule "mul_literals" (formula "37") (term "1,1"))
                                 (rule "polySimp_sepNegMonomial" (formula "55"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                 (rule "polySimp_elimOne" (formula "55") (term "0"))
                                 (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "55"))
                                 (rule "polySimp_pullOutFactor1" (formula "58") (term "0"))
                                 (rule "add_literals" (formula "58") (term "1,0"))
                                 (rule "times_zero_1" (formula "58") (term "0"))
                                 (rule "leq_literals" (formula "58"))
                                 (rule "true_left" (formula "58"))
                                 (rule "applyEqRigid" (formula "58") (term "0,1,0,0") (ifseqformula "55"))
                                 (rule "polySimp_sepPosMonomial" (formula "34") (term "1"))
                                 (rule "mul_literals" (formula "34") (term "1,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "40"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1"))
                                 (rule "mul_literals" (formula "40") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                 (rule "applyEq" (formula "36") (term "0,1,0,1,0") (ifseqformula "40"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "36") (term "0,0,1,0"))
                                 (rule "applyEq" (formula "37") (term "0,1,0,0") (ifseqformula "40"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0"))
                                 (rule "applyEqRigid" (formula "57") (term "1,0") (ifseqformula "40"))
                                 (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "40"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,0"))
                                 (rule "add_literals" (formula "39") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "39") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2" (formula "39") (term "0"))
                                 (rule "add_literals" (formula "39") (term "1,0"))
                                 (rule "times_zero_1" (formula "39") (term "0"))
                                 (rule "leq_literals" (formula "39"))
                                 (rule "true_left" (formula "39"))
                                 (rule "applyEqRigid" (formula "57") (term "0,0,0,1,0") (ifseqformula "39"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "57") (term "0,0,1,0"))
                                 (rule "mul_literals" (formula "57") (term "0,0,0,1,0"))
                                 (rule "applyEqRigid" (formula "55") (term "2,0") (ifseqformula "39"))
                                 (rule "polySimp_sepNegMonomial" (formula "35") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "35") (term "0,1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                 (rule "mul_literals" (formula "32") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0"))
                                 (rule "mul_literals" (formula "36") (term "1,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "57"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "1"))
                                 (rule "polySimp_rightDist" (formula "57") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "57") (term "1,1"))
                                 (rule "mul_literals" (formula "57") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "57") (term "1,1"))
                                  (builtin "One Step Simplification" (formula "57"))
                                 (rule "polySimp_homoEq" (formula "57") (term "1"))
                                 (rule "mul_literals" (formula "57") (term "1,0,1"))
                                 (rule "add_zero_right" (formula "57") (term "0,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "57") (term "1"))
                                 (rule "mul_literals" (formula "57") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "0,0"))
                                 (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "32"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "true_left" (formula "35"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "0,0,0"))
                                 (rule "polySimp_homoEq" (formula "38"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0"))
                                 (rule "polySimp_sepPosMonomial" (formula "38"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                 (rule "mul_literals" (formula "38") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                 (rule "applyEq" (formula "54") (term "1,2,0") (ifseqformula "38"))
                                 (rule "polySimp_addAssoc" (formula "54") (term "2,0"))
                                 (rule "add_literals" (formula "54") (term "0,2,0"))
                                 (rule "add_zero_left" (formula "54") (term "2,0"))
                                 (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "38"))
                                 (rule "polySimp_addAssoc" (formula "55") (term "1,0"))
                                 (rule "add_literals" (formula "55") (term "0,1,0"))
                                 (rule "add_zero_left" (formula "55") (term "1,0"))
                                 (rule "applyEqRigid" (formula "56") (term "0,1,0,0") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0"))
                                 (rule "mul_literals" (formula "56") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "56") (term "0,0"))
                                 (rule "add_literals" (formula "56") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "56") (term "0,0"))
                                 (rule "applyEqRigid" (formula "36") (term "0,1,0,0") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0"))
                                 (rule "applyEq" (formula "35") (term "0,1,0,1,0") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "35") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "38") (term "0,0") (ifseqformula "32"))
                                  (builtin "One Step Simplification" (formula "38"))
                                 (rule "polySimp_homoEq" (formula "38"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "38"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                 (rule "mul_literals" (formula "38") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                  (builtin "One Step Simplification" (formula "38"))
                                 (rule "polySimp_homoEq" (formula "38") (term "1"))
                                 (rule "mul_literals" (formula "38") (term "1,0,1"))
                                 (rule "add_zero_right" (formula "38") (term "0,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "38") (term "1"))
                                 (rule "mul_literals" (formula "38") (term "1,1"))
                                 (rule "inEqSimp_invertInEq0" (formula "55") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "0,0"))
                                 (rule "mul_literals" (formula "55") (term "1,0"))
                                 (rule "polySimp_elimOne" (formula "55") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                 (rule "inEqSimp_contradEq7" (formula "55") (term "1") (ifseqformula "32"))
                                 (rule "mul_literals" (formula "55") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "55") (term "0,0,1"))
                                 (rule "leq_literals" (formula "55") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "55"))
                                 (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "32"))
                                 (rule "leq_literals" (formula "33") (term "0"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "inEqSimp_subsumption1" (formula "34") (term "0,0") (ifseqformula "32"))
                                 (rule "leq_literals" (formula "34") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "equalityToSeqGetAndSeqLenRight" (formula "72") (inst "iv=iv"))
                                 (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "72") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "72") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "72") (term "1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "72") (term "0,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0,0,1"))
                                 (rule "pullOutSelect" (formula "72") (term "0,1,0") (inst "selectSK=java_util_Collection_seq_4"))
                                 (rule "applyEq" (formula "73") (term "0,1,1,0,1") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "25"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "73") (term "1,0,0,1,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                                 (rule "applyEq" (formula "74") (term "1,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "74") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "replaceKnownSelect_taclet000000_13" (formula "1") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_14" (formula "1") (term "2,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "74") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                                 (rule "replaceKnownSelect_taclet00000000_18" (formula "74") (term "0,1,1,1,0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00000000_19" (formula "74") (term "0,1,1,1,0,0,1"))
                                 (rule "applyEqReverse" (formula "74") (term "1,0,0,0") (ifseqformula "1"))
                                 (rule "replaceKnownSelect_taclet00000000_18" (formula "74") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00000000_19" (formula "74") (term "0,0,0"))
                                 (rule "applyEqReverse" (formula "74") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                 (rule "replaceKnownSelect_taclet00000000_18" (formula "74") (term "0,0,1,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00000000_19" (formula "74") (term "0,0,1,0,1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "lenOfSeqConcat" (formula "73") (term "1,1,1,0,0,1"))
                                  (builtin "One Step Simplification" (formula "73"))
                                 (rule "polySimp_addComm0" (formula "73") (term "1,1,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "73") (term "1,1,0,0,1"))
                                 (rule "add_literals" (formula "73") (term "0,1,1,0,0,1"))
                                 (rule "add_zero_left" (formula "73") (term "1,1,0,0,1"))
                                 (rule "lenOfSeqConcat" (formula "73") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "73"))
                                 (rule "polySimp_homoEq" (formula "73") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                 (rule "polySimp_addComm0" (formula "73") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "73") (term "1,0,0"))
                                 (rule "mul_literals" (formula "73") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "73") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "73") (term "0,0,0"))
                                 (rule "applyEqRigid" (formula "73") (term "0,0,1,0,0") (ifseqformula "27"))
                                 (rule "lenOfSeqConcatEQ" (formula "73") (term "0,1,0,0") (ifseqformula "46"))
                                  (builtin "One Step Simplification" (formula "73"))
                                 (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                 (rule "polySimp_addComm0" (formula "73") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "73") (term "1,0,0"))
                                 (rule "mul_literals" (formula "73") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "73") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "73") (term "0,0,0"))
                                 (rule "add_literals" (formula "73") (term "0,0,0,0"))
                                 (rule "lenOfSeqSubEQ" (formula "73") (term "0,1,0,0") (ifseqformula "37"))
                                 (rule "polySimp_elimSub" (formula "73") (term "1,0,1,0,0"))
                                 (rule "mul_literals" (formula "73") (term "1,1,0,1,0,0"))
                                 (rule "add_zero_right" (formula "73") (term "1,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "73") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "73") (term "0,1,0,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "73") (term "0,0,0,0,1,0,0"))
                                 (rule "applyEq" (formula "73") (term "0,0,0,1,0,1") (ifseqformula "27"))
                                 (rule "applyEqRigid" (formula "73") (term "0,1,1,0,0,1") (ifseqformula "27"))
                                 (rule "lenOfSeqConcatEQ" (formula "73") (term "1,1,0,0,1") (ifseqformula "46"))
                                  (builtin "One Step Simplification" (formula "73"))
                                 (rule "polySimp_addComm0" (formula "73") (term "1,1,0,0,1"))
                                 (rule "lenOfSeqSubEQ" (formula "73") (term "1,1,1,0,0,1") (ifseqformula "53"))
                                 (rule "polySimp_elimSub" (formula "73") (term "1,1,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "73") (term "1,1,1,1,1,0,0,1"))
                                 (rule "add_zero_right" (formula "73") (term "1,1,1,1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "73") (term "0,1,1,1,0,0,1"))
                                 (rule "add_zero_right" (formula "73") (term "0,0,1,1,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,1,1,0,0,1"))
                                 (rule "applyEq" (formula "73") (term "0,1,0,0,1,0,1") (ifseqformula "7"))
                                 (rule "polySimp_sepNegMonomial" (formula "73") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "73") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "73") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "73") (term "0,1,1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "73") (term "0,0,1,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "73") (term "0,0,1,1,1,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "73") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "73") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "73") (term "0,0,0,0"))
                                 (rule "getOfSeqConcat" (formula "73") (term "0,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "73") (term "1,2,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "73") (term "1,2,0,1,0,1"))
                                 (rule "getOfSeqSingleton" (formula "73") (term "2,0,1,0,1"))
                                 (rule "castDel" (formula "73") (term "1,2,0,1,0,1"))
                                 (rule "castDel" (formula "73") (term "2,2,0,1,0,1"))
                                 (rule "lenOfSeqConcatEQ" (formula "73") (term "1,0,0,1,0,1") (ifseqformula "46"))
                                  (builtin "One Step Simplification" (formula "73"))
                                 (rule "polySimp_addComm0" (formula "73") (term "1,0,0,1,0,1"))
                                 (rule "lenOfSeqConcatEQ" (formula "73") (term "0,0,0,0,2,0,1,0,1") (ifseqformula "46"))
                                  (builtin "One Step Simplification" (formula "73"))
                                 (rule "polySimp_mulComm0" (formula "73") (term "0,0,0,2,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "73") (term "1,0,0,0,2,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "73") (term "0,0,0,2,0,1,0,1"))
                                 (rule "mul_literals" (formula "73") (term "0,0,0,0,2,0,1,0,1"))
                                 (rule "lenOfSeqSubEQ" (formula "73") (term "1,1,0,0,1,0,1") (ifseqformula "37"))
                                 (rule "polySimp_elimSub" (formula "73") (term "1,1,1,0,0,1,0,1"))
                                 (rule "mul_literals" (formula "73") (term "1,1,1,1,0,0,1,0,1"))
                                 (rule "add_zero_right" (formula "73") (term "1,1,1,0,0,1,0,1"))
                                 (rule "lenOfSeqSubEQ" (formula "73") (term "0,1,0,0,0,2,0,1,0,1") (ifseqformula "37"))
                                 (rule "polySimp_elimSub" (formula "73") (term "1,0,1,0,0,0,2,0,1,0,1"))
                                 (rule "mul_literals" (formula "73") (term "1,1,0,1,0,0,0,2,0,1,0,1"))
                                 (rule "add_zero_right" (formula "73") (term "1,0,1,0,0,0,2,0,1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "73") (term "0,1,1,0,0,1,0,1"))
                                 (rule "add_zero_right" (formula "73") (term "0,0,1,1,0,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "73") (term "1,0,0,1,1,0,0,1,0,1"))
                                 (rule "mul_literals" (formula "73") (term "0,1,0,0,1,1,0,0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "73") (term "0,0,1,1,0,0,1,0,1"))
                                 (rule "add_literals" (formula "73") (term "0,0,0,1,1,0,0,1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,1,0,0,0,2,0,1,0,1"))
                                 (rule "add_zero_right" (formula "73") (term "0,0,0,1,0,0,0,2,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,1,0,0,0,2,0,1,0,1"))
                                 (rule "mul_literals" (formula "73") (term "0,1,0,0,0,1,0,0,0,2,0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,1,0,0,0,2,0,1,0,1"))
                                 (rule "add_literals" (formula "73") (term "0,0,0,0,1,0,0,0,2,0,1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,1,0,1"))
                                 (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,1,0,1"))
                                 (rule "add_literals" (formula "73") (term "0,0,0,0,0,1,0,1"))
                                 (rule "add_zero_left" (formula "73") (term "0,0,0,0,1,0,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "73") (term "0,2,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "73") (term "1,0,2,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "73") (term "1,0,2,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,2,0,1,0,1"))
                                 (rule "mul_literals" (formula "73") (term "0,1,0,2,0,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "73") (term "1,1,0,2,0,1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "73") (term "1,0,0,1,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "73") (term "0,1,1,0,2,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "73") (term "0,0,1,1,0,2,0,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "73") (term "0,0,1,1,0,2,0,1,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "73") (term "0,1,0,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "73") (term "0,0,1,0,0,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "73") (term "0,0,1,0,0,1,0,1"))
                                 (rule "eqSeqConcatEQ" (formula "27") (ifseqformula "46"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "andLeft" (formula "27"))
                                 (rule "andLeft" (formula "27"))
                                 (rule "polySimp_homoEq" (formula "27"))
                                 (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0"))
                                 (rule "eqSeqSingleton" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "lenOfSeqSubEQ" (formula "28") (term "2,0") (ifseqformula "40"))
                                 (rule "polySimp_elimSub" (formula "28") (term "1,2,0"))
                                 (rule "times_zero_2" (formula "28") (term "1,1,2,0"))
                                 (rule "add_zero_right" (formula "28") (term "1,2,0"))
                                 (rule "lenOfSeqSubEQ" (formula "27") (term "1,0") (ifseqformula "40"))
                                 (rule "polySimp_elimSub" (formula "27") (term "1,1,0"))
                                 (rule "mul_literals" (formula "27") (term "1,1,1,0"))
                                 (rule "add_zero_right" (formula "27") (term "1,1,0"))
                                 (rule "lenOfSeqSub" (formula "29") (term "0"))
                                 (rule "polySimp_elimSub" (formula "29") (term "1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "30") (term "1,0,0") (ifseqformula "40"))
                                 (rule "polySimp_elimSub" (formula "30") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "30") (term "1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "30") (term "1,1,0,0"))
                                 (rule "ifEqualsInteger" (formula "29"))
                                 (rule "equal_literals" (formula "29") (term "1,1"))
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "polySimp_homoEq" (formula "30"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "28") (term "0,2,0"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,2,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,2,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,2,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,2,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,2,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0"))
                                 (rule "add_zero_right" (formula "27") (term "0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0"))
                                 (rule "lenOfSeqSubEQ" (formula "29") (term "0") (ifseqformula "41"))
                                 (rule "polySimp_elimSub" (formula "29") (term "1,0"))
                                 (rule "times_zero_2" (formula "29") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "29") (term "1,0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1,0,0"))
                                 (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                 (rule "lenOfSeqSubEQ" (formula "30") (term "1,0") (ifseqformula "28"))
                                 (rule "polySimp_elimSub" (formula "30") (term "1,1,0"))
                                 (rule "mul_literals" (formula "30") (term "1,1,1,0"))
                                 (rule "add_zero_right" (formula "30") (term "1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0"))
                                 (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,0"))
                                 (rule "add_zero_right" (formula "30") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "29"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "27"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1"))
                                 (rule "mul_literals" (formula "27") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                 (rule "applyEq" (formula "30") (term "0,1,0,0,1,0") (ifseqformula "27"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "30") (term "0,0,0,1,0"))
                                 (rule "applyEq" (formula "28") (term "2,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "27"))
                                 (rule "applyEqRigid" (formula "30") (term "1,1,0") (ifseqformula "27"))
                                 (rule "applyEqRigid" (formula "29") (term "1,0") (ifseqformula "27"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "29") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2" (formula "29") (term "0"))
                                 (rule "add_literals" (formula "29") (term "1,0"))
                                 (rule "times_zero_1" (formula "29") (term "0"))
                                 (rule "leq_literals" (formula "29"))
                                 (rule "true_left" (formula "29"))
                                 (rule "polySimp_sepPosMonomial" (formula "29"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1"))
                                 (rule "mul_literals" (formula "29") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "polySimp_homoEq" (formula "29") (term "1"))
                                 (rule "mul_literals" (formula "29") (term "1,0,1"))
                                 (rule "add_zero_right" (formula "29") (term "0,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "29") (term "1"))
                                 (rule "mul_literals" (formula "29") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "0,0,0"))
                                 (rule "applyEqRigid" (formula "57") (term "1,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "76") (term "1,1,1,1,0,0,1") (ifseqformula "27"))
                                 (rule "applyEq" (formula "76") (term "0,0,1,1,1,0,0,1") (ifseqformula "27"))
                                 (rule "inEqSimp_homoInEq1" (formula "76") (term "0,1,1,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,1,1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "76") (term "1,0,0,1,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "76") (term "0,1,0,0,1,1,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "76") (term "0,0,1,1,1,0,0,1"))
                                 (rule "add_literals" (formula "76") (term "0,0,0,1,1,1,0,0,1"))
                                 (rule "applyEqRigid" (formula "76") (term "1,0,0,1,0,1") (ifseqformula "27"))
                                 (rule "applyEq" (formula "76") (term "0,0") (ifseqformula "27"))
                                 (rule "polySimp_homoEq" (formula "76") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "76") (term "1,0,0"))
                                 (rule "mul_literals" (formula "76") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "76") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "76") (term "0,0,0"))
                                 (rule "add_literals" (formula "76") (term "0,0,0,0"))
                                 (rule "applyEqRigid" (formula "39") (term "0,0") (ifseqformula "27"))
                                 (rule "inEqSimp_homoInEq1" (formula "39") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                                 (rule "add_literals" (formula "39") (term "0,0,0"))
                                 (rule "applyEq" (formula "58") (term "0") (ifseqformula "27"))
                                 (rule "applyEqRigid" (formula "56") (term "2,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "27"))
                                 (rule "inEqSimp_homoInEq0" (formula "38") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "38") (term "0,0,0"))
                                 (rule "applyEq" (formula "76") (term "1,1,0,2,0,1,0,1") (ifseqformula "27"))
                                 (rule "polySimp_addAssoc" (formula "76") (term "1,0,2,0,1,0,1"))
                                 (rule "add_literals" (formula "76") (term "0,1,0,2,0,1,0,1"))
                                 (rule "add_zero_left" (formula "76") (term "1,0,2,0,1,0,1"))
                                 (rule "polySimp_sepNegMonomial" (formula "76") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "76") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "76") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "76") (term "0,1,1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "76") (term "0,0,1,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "76") (term "0,0,1,1,1,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "58"))
                                 (rule "mul_literals" (formula "58") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "0,0"))
                                 (rule "eqSeqConcatEQ" (formula "43") (term "1,0") (ifseqformula "49"))
                                  (builtin "One Step Simplification" (formula "43"))
                                 (rule "eqSymm" (formula "43") (term "1,1,0"))
                                 (rule "polySimp_homoEq" (formula "43") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "43") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "43") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,1,0"))
                                 (rule "equal_literals" (formula "43") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "43"))
                                 (rule "true_left" (formula "43"))
                                 (rule "pullOutSelect" (formula "1") (term "1,0,1,0,1,1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_3"))
                                 (rule "applyEq" (formula "2") (term "1,0,0,0,1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "replaceKnownSelect_taclet00_3" (formula "1") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_4" (formula "1") (term "2,0"))
                                 (rule "eqSymm" (formula "2") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                 (rule "replaceKnownSelect_taclet00_1" (formula "2") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "2") (term "2,0"))
                                 (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "75")) (ifInst ""  (formula "10")))
                                 (rule "applyEqReverse" (formula "76") (term "0,1,1,0,1") (ifseqformula "2"))
                                 (rule "applyEqReverse" (formula "76") (term "0,1,1,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "getOfSeqConcatEQ" (formula "74") (term "1,0,1,0,1") (ifseqformula "47"))
                                 (rule "polySimp_elimSub" (formula "74") (term "1,2,1,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "74") (term "1,2,1,0,1,0,1"))
                                 (rule "getOfSeqSingleton" (formula "74") (term "2,1,0,1,0,1"))
                                 (rule "castDel" (formula "74") (term "1,2,1,0,1,0,1"))
                                 (rule "castDel" (formula "74") (term "2,2,1,0,1,0,1"))
                                 (rule "lenOfSeqSubEQ" (formula "74") (term "1,0,1,0,1,0,1") (ifseqformula "27"))
                                 (rule "polySimp_elimSub" (formula "74") (term "1,1,0,1,0,1,0,1"))
                                 (rule "mul_literals" (formula "74") (term "1,1,1,0,1,0,1,0,1"))
                                 (rule "add_zero_right" (formula "74") (term "1,1,0,1,0,1,0,1"))
                                 (rule "lenOfSeqSubEQ" (formula "74") (term "0,0,0,0,2,1,0,1,0,1") (ifseqformula "27"))
                                 (rule "polySimp_elimSub" (formula "74") (term "1,0,0,0,0,2,1,0,1,0,1"))
                                 (rule "mul_literals" (formula "74") (term "1,1,0,0,0,0,2,1,0,1,0,1"))
                                 (rule "add_zero_right" (formula "74") (term "1,0,0,0,0,2,1,0,1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "74") (term "0,1,0,1,0,1,0,1"))
                                 (rule "add_zero_right" (formula "74") (term "0,0,1,0,1,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "74") (term "1,0,0,1,0,1,0,1,0,1"))
                                 (rule "mul_literals" (formula "74") (term "0,1,0,0,1,0,1,0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "74") (term "0,0,1,0,1,0,1,0,1"))
                                 (rule "add_literals" (formula "74") (term "0,0,0,1,0,1,0,1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0,0,0,2,1,0,1,0,1"))
                                 (rule "add_zero_right" (formula "74") (term "0,0,0,0,0,0,2,1,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,0,0,0,2,1,0,1,0,1"))
                                 (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0,0,2,1,0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "74") (term "0,0,0,0,0,0,2,1,0,1,0,1"))
                                 (rule "add_literals" (formula "74") (term "0,0,0,0,0,0,0,2,1,0,1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "74") (term "0,1,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,1,0,1,0,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "74") (term "0,2,1,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "74") (term "1,0,2,1,0,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "74") (term "1,0,2,1,0,1,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "74") (term "0,0,1,0,0,0,1,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "74") (term "0,0,0,1,0,0,0,1,0,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "74") (term "0,0,0,1,0,0,0,1,0,1,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "74") (term "0,1,0,2,1,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "74") (term "0,0,1,0,2,1,0,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "74") (term "0,0,1,0,2,1,0,1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,1,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "74") (term "1,0,1,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "74") (term "1,0,1,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,1,0,1,0,1"))
                                 (rule "mul_literals" (formula "74") (term "0,1,0,1,0,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "74") (term "1,1,0,1,0,1,0,1"))
                                 (rule "getOfSeqSub" (formula "29") (term "0"))
                                 (rule "castDel" (formula "29") (term "2,0"))
                                 (rule "leq_literals" (formula "29") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "add_zero_left" (formula "29") (term "1,1,0"))
                                 (rule "polySimp_elimSub" (formula "29") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "1,0,0"))
                                 (rule "polySimp_addComm0" (formula "29") (term "0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "29") (term "1,0,0"))
                                 (rule "add_literals" (formula "29") (term "1,1,1,0,0"))
                                 (rule "times_zero_1" (formula "29") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "29") (term "1,0,0"))
                                 (rule "less_literals" (formula "29") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "getOfSeqSubEQ" (formula "74") (term "1,1,0,1,0,1") (ifseqformula "27"))
                                 (rule "castDel" (formula "74") (term "2,1,1,0,1,0,1"))
                                 (rule "add_zero_right" (formula "74") (term "1,1,1,1,0,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "74") (term "1,1,0,1,1,0,1,0,1"))
                                 (rule "mul_literals" (formula "74") (term "1,1,1,0,1,1,0,1,0,1"))
                                 (rule "add_zero_right" (formula "74") (term "1,1,0,1,1,0,1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,1,1,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "74") (term "1,0,0,1,0,1,1,0,1,0,1"))
                                 (rule "mul_literals" (formula "74") (term "0,1,0,0,1,0,1,1,0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "74") (term "0,0,1,0,1,1,0,1,0,1"))
                                 (rule "add_literals" (formula "74") (term "0,0,0,1,0,1,1,0,1,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "74") (term "0,0,1,1,0,1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,1,1,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "74") (term "1,1,0,1,1,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "74") (term "1,1,0,1,1,0,1,0,1"))
                                 (rule "mul_literals" (formula "74") (term "0,1,1,0,1,1,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "74") (term "1,1,1,0,1,1,0,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "74") (term "1,1,1,0,1,1,0,1,0,1"))
                                 (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "61"))
                                 (rule "closeTrue" (formula "61"))
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "66"))
                                 (rule "notRight" (formula "62"))
                                 (rule "close" (formula "71") (ifseqformula "1"))
                              )
                           )
                        )
                        (branch "pre add_857115291_12 (information flow)"
                           (rule "andRight" (formula "62"))
                           (branch "Case 1"
                               (builtin "One Step Simplification" (formula "66"))
                              (rule "impRight" (formula "78"))
                              (rule "notRight" (formula "67"))
                              (rule "andLeft" (formula "2"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "3"))
                              (rule "andLeft" (formula "1"))
                              (rule "eqSymm" (formula "83"))
                              (rule "eqSymm" (formula "6"))
                              (rule "eqSymm" (formula "4"))
                              (rule "close" (formula "68") (ifseqformula "4"))
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "66"))
                              (rule "impRight" (formula "78"))
                              (rule "notRight" (formula "67"))
                              (rule "andLeft" (formula "2"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "3"))
                              (rule "andLeft" (formula "1"))
                              (rule "eqSymm" (formula "83"))
                              (rule "eqSymm" (formula "6"))
                              (rule "eqSymm" (formula "4"))
                              (rule "eqSymm" (formula "5"))
                              (rule "close" (formula "68") (ifseqformula "5"))
                           )
                        )
                        (branch "post add_857115291_12 (information flow)"
                           (rule "Use_information_flow_contract_for_add_857115291_13" (formula "46") (ifseqformula "21"))
                           (rule "doubleImpLeft" (formula "46"))
                           (branch "pre_A & pre_B add_857115291_13 (information flow)"
                              (rule "andRight" (formula "63"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "63"))
                                 (branch "Case 1"
                                     (builtin "One Step Simplification" (formula "67"))
                                    (rule "replaceKnownSelect_taclet000000_11" (formula "45") (term "0"))
                                    (rule "replaceKnownSelect_taclet00_1" (formula "45") (term "1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000000_12" (formula "45") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "45") (term "1"))
                                    (rule "impRight" (formula "79"))
                                    (rule "notRight" (formula "68"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "eqSymm" (formula "84"))
                                    (rule "eqSymm" (formula "6"))
                                    (rule "eqSymm" (formula "5"))
                                    (rule "eqSymm" (formula "4"))
                                    (rule "eqSymm" (formula "2"))
                                    (rule "polySimp_homoEq" (formula "35") (term "1"))
                                    (rule "mul_literals" (formula "35") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "35") (term "0,1"))
                                    (rule "polySimp_homoEq" (formula "61"))
                                    (rule "polySimp_homoEq" (formula "58") (term "1"))
                                    (rule "mul_literals" (formula "58") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "58") (term "0,1"))
                                    (rule "polySimp_homoEq" (formula "57"))
                                    (rule "polySimp_homoEq" (formula "40"))
                                    (rule "polySimp_homoEq" (formula "34"))
                                    (rule "polySimp_homoEq" (formula "64"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "57") (term "0"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "61") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "61") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "61") (term "0,1,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "40") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "0,1,0"))
                                    (rule "polySimp_rightDist" (formula "64") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "64") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "0,1,0"))
                                    (rule "eqSeqConcat4" (formula "51"))
                                    (rule "andLeft" (formula "51"))
                                    (rule "inEqSimp_ltToLeq" (formula "39"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,1,1,0,0"))
                                    (rule "add_zero_right" (formula "61") (term "0,0,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,1,0,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0"))
                                    (rule "add_zero_right" (formula "64") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "64") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "42"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,1,0,0"))
                                    (rule "add_zero_right" (formula "41") (term "0,0,1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "62"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "0"))
                                    (rule "add_zero_right" (formula "35") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "57") (term "0"))
                                    (rule "add_zero_right" (formula "57") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1"))
                                    (rule "add_zero_right" (formula "59") (term "0,0,1"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,1,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "37") (term "0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "57") (term "1,0,0"))
                                    (rule "mul_literals" (formula "57") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "60") (term "0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "63") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "61") (term "0,0,0,1,1,0,0"))
                                    (rule "add_zero_left" (formula "61") (term "0,0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "64") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "61") (term "0,0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "61") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor2" (formula "61") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "61") (term "1,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "61") (term "0,0,0,1,0"))
                                    (rule "leq_literals" (formula "61") (term "0,0,1,0"))
                                     (builtin "One Step Simplification" (formula "61"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "62") (term "0"))
                                    (rule "polySimp_addComm1" (formula "62") (term "0,0"))
                                    (rule "add_literals" (formula "62") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,1,1,0,0"))
                                    (rule "add_zero_left" (formula "41") (term "0,0,1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "35") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                    (rule "add_literals" (formula "57") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "57") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "59") (term "0,0,1"))
                                    (rule "add_literals" (formula "59") (term "0,0,0,1"))
                                    (rule "add_zero_left" (formula "59") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "41") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor2" (formula "41") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "41") (term "1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "41") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "41") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "64") (term "0,0,0,0,0"))
                                    (rule "replace_known_left" (formula "64") (term "0,0") (ifseqformula "62"))
                                     (builtin "One Step Simplification" (formula "64"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                    (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "42") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2" (formula "42") (term "0"))
                                    (rule "add_literals" (formula "42") (term "1,0"))
                                    (rule "times_zero_1" (formula "42") (term "0"))
                                    (rule "leq_literals" (formula "42"))
                                    (rule "true_left" (formula "42"))
                                    (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "36") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,0,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "39") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0"))
                                    (rule "add_zero_right" (formula "59") (term "0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "62") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "62") (term "0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0"))
                                    (rule "add_zero_right" (formula "60") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "60") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "60") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "60") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "58"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "58") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "59") (term "0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "59") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                    (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "41") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "40") (term "0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "62") (term "0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "62") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "60") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "58"))
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "41") (term "0,0") (ifseqformula "39"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "36") (term "0,0,1,0"))
                                    (rule "applyEqRigid" (formula "59") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "58") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "58") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "63") (term "0,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "82") (term "0,1,1") (ifseqformula "12"))
                                    (rule "applyEq" (formula "82") (term "0,1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "57") (term "0,1,2,0,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "27") (term "5") (ifseqformula "25"))
                                    (rule "applyEq" (formula "43") (term "0,1,0") (ifseqformula "26"))
                                    (rule "eqSymm" (formula "43") (term "1,0"))
                                    (rule "applyEq" (formula "43") (term "0,1") (ifseqformula "26"))
                                    (rule "eqSymm" (formula "43") (term "1"))
                                    (rule "applyEqRigid" (formula "58") (term "0,1,0,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "69") (term "0") (ifseqformula "6"))
                                    (rule "applyEqRigid" (formula "57") (term "0,2,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "56") (term "0,0,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "56") (term "1,0,0,0"))
                                    (rule "times_zero_2" (formula "56") (term "1,1,0,0,0"))
                                    (rule "add_zero_right" (formula "56") (term "1,0,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "56") (term "1,0,1") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "56") (term "1,1,0,1"))
                                    (rule "mul_literals" (formula "56") (term "1,1,1,0,1"))
                                    (rule "add_zero_right" (formula "56") (term "1,1,0,1"))
                                    (rule "lenOfSeqSubEQ" (formula "60") (term "1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "60") (term "1,1,0"))
                                    (rule "times_zero_2" (formula "60") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "60") (term "1,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "61") (term "0,0,0,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "61") (term "1,0,0,0,1,0"))
                                    (rule "times_zero_2" (formula "61") (term "1,1,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "61") (term "1,0,0,0,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "59") (term "0,0,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "59") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "59") (term "1,1,0,0,0"))
                                    (rule "add_zero_right" (formula "59") (term "1,0,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "58") (term "1,0,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "58") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "58") (term "1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "58") (term "1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "58") (term "0"))
                                    (rule "lenOfSeqSubEQ" (formula "55") (term "1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "55") (term "1,1,0"))
                                    (rule "times_zero_2" (formula "55") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "55") (term "1,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "59") (term "1,1,1,0"))
                                    (rule "times_zero_2" (formula "59") (term "1,1,1,1,0"))
                                    (rule "add_zero_right" (formula "59") (term "1,1,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "61") (term "1,1,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "61") (term "1,1,1,1,0"))
                                    (rule "times_zero_2" (formula "61") (term "1,1,1,1,1,0"))
                                    (rule "add_zero_right" (formula "61") (term "1,1,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,0"))
                                    (rule "add_zero_right" (formula "56") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,0,1"))
                                    (rule "add_zero_right" (formula "56") (term "0,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "60") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "61") (term "0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0"))
                                    (rule "add_zero_right" (formula "59") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "58") (term "1,1,0,1,0,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "58") (term "1,1,1,0,1,0,0"))
                                    (rule "times_zero_2" (formula "58") (term "1,1,1,1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "58") (term "1,1,1,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "58") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "55") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,0"))
                                    (rule "add_zero_right" (formula "59") (term "0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,1,1,1,0"))
                                    (rule "add_zero_right" (formula "61") (term "0,0,1,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,0,0"))
                                    (rule "add_zero_right" (formula "58") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "58") (term "0,0,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,1,0,1,0"))
                                    (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "59") (term "1") (ifseqformula "5"))
                                    (rule "applyEqRigid" (formula "80") (term "0,0") (ifseqformula "3"))
                                    (rule "eqSymm" (formula "80"))
                                    (rule "applyEq" (formula "65") (term "1,0,1") (ifseqformula "6"))
                                    (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "69") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "68") (term "0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "62") (term "1") (ifseqformula "6"))
                                    (rule "applyEq" (formula "57") (term "1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "50") (term "1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "63") (term "1") (ifseqformula "6"))
                                    (rule "applyEq" (formula "49") (term "0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "65") (term "1,0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "75") (term "0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "44") (term "5") (ifseqformula "31"))
                                    (rule "applyEqRigid" (formula "79") (term "0,0") (ifseqformula "12"))
                                    (rule "eqSymm" (formula "79"))
                                    (rule "applyEq" (formula "26") (term "0") (ifseqformula "49"))
                                    (rule "applyEq" (formula "49") (term "1") (ifseqformula "26"))
                                    (rule "polySimp_sepPosMonomial" (formula "35") (term "1"))
                                    (rule "mul_literals" (formula "35") (term "1,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "34"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1"))
                                    (rule "mul_literals" (formula "34") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                    (rule "applyEqRigid" (formula "36") (term "2,0,1,1") (ifseqformula "34"))
                                    (rule "applyEq" (formula "59") (term "1,1,1,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "38") (term "2,0") (ifseqformula "34"))
                                    (rule "applyEqRigid" (formula "37") (term "0,1,0,0") (ifseqformula "34"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0"))
                                    (rule "applyEq" (formula "37") (term "0,1") (ifseqformula "34"))
                                    (rule "applyEq" (formula "36") (term "0,1,0,1,0") (ifseqformula "34"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,1,0"))
                                    (rule "add_literals" (formula "36") (term "1,1,0,1,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,1,0"))
                                    (rule "add_literals" (formula "36") (term "0,1,0"))
                                    (rule "qeq_literals" (formula "36") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "applyEq" (formula "38") (term "1,2,0,0") (ifseqformula "34"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "2,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,2,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "58") (term "1,1,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "58") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "58") (term "1,1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "58") (term "1,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "58") (term "0"))
                                    (rule "lenOfSeqSubEQ" (formula "35") (term "0,1") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "35") (term "1,0,1"))
                                    (rule "times_zero_2" (formula "35") (term "1,1,0,1"))
                                    (rule "add_zero_right" (formula "35") (term "1,0,1"))
                                    (rule "lenOfSeqSubEQ" (formula "35") (term "0,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "35") (term "1,0,0,0"))
                                    (rule "times_zero_2" (formula "35") (term "1,1,0,0,0"))
                                    (rule "add_zero_right" (formula "35") (term "1,0,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "32") (term "0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "32") (term "1,0"))
                                    (rule "times_zero_2" (formula "32") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "32") (term "1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "57") (term "1,2,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "57") (term "1,1,2,0,0"))
                                    (rule "times_zero_2" (formula "57") (term "1,1,1,2,0,0"))
                                    (rule "add_zero_right" (formula "57") (term "1,1,2,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "55") (term "0,1,0,0,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "55") (term "1,0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "55") (term "1,1,0,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "55") (term "1,0,1,0,0,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "56") (term "1,0,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "56") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "56") (term "1,1,1,0,0,0"))
                                    (rule "add_zero_right" (formula "56") (term "1,1,0,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "59") (term "1,0,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "59") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "59") (term "1,1,1,0,0,0"))
                                    (rule "add_zero_right" (formula "59") (term "1,1,0,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "56") (term "0,1,0,0,0,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "56") (term "1,0,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "56") (term "1,1,0,1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "56") (term "1,0,1,0,0,0,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "59") (term "0,1,0,0,1,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "59") (term "1,1,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,1,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "39") (term "1,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "39") (term "1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0"))
                                    (rule "lenOfSeqSubEQ" (formula "61") (term "0,1,0,0,1,1,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "61") (term "1,0,1,0,0,1,1,1,0"))
                                    (rule "mul_literals" (formula "61") (term "1,1,0,1,0,0,1,1,1,0"))
                                    (rule "add_zero_right" (formula "61") (term "1,0,1,0,0,1,1,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "40") (term "1,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "40") (term "1,1,0,0"))
                                    (rule "times_zero_2" (formula "40") (term "1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "40") (term "1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0"))
                                    (rule "lenOfSeqSubEQ" (formula "42") (term "1,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "42") (term "1,1,1,0"))
                                    (rule "times_zero_2" (formula "42") (term "1,1,1,1,0"))
                                    (rule "add_zero_right" (formula "42") (term "1,1,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "41") (term "1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "41") (term "1,1,0"))
                                    (rule "times_zero_2" (formula "41") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "41") (term "1,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "56") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "56") (term "1,1,1,0,1"))
                                    (rule "times_zero_2" (formula "56") (term "1,1,1,1,0,1"))
                                    (rule "add_zero_right" (formula "56") (term "1,1,1,0,1"))
                                    (rule "lenOfSeqSubEQ" (formula "57") (term "2,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "57") (term "1,2,0"))
                                    (rule "times_zero_2" (formula "57") (term "1,1,2,0"))
                                    (rule "add_zero_right" (formula "57") (term "1,2,0"))
                                    (rule "lenOfSeqSubEQ" (formula "36") (term "1,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "36") (term "1,1,0,0"))
                                    (rule "times_zero_2" (formula "36") (term "1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "36") (term "1,1,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "60") (term "0,1,0,0,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "60") (term "1,0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "60") (term "1,1,0,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "60") (term "1,0,1,0,0,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "60") (term "1,1,1,0"))
                                    (rule "mul_literals" (formula "60") (term "1,1,1,1,0"))
                                    (rule "add_zero_right" (formula "60") (term "1,1,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "59") (term "0,1,0,0,0,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0,0,0,0,0"))
                                    (rule "times_zero_2" (formula "59") (term "1,1,0,1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,0,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "62") (term "1,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "62") (term "1,1,1,0"))
                                    (rule "times_zero_2" (formula "62") (term "1,1,1,1,0"))
                                    (rule "add_zero_right" (formula "62") (term "1,1,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "34") (term "0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "34") (term "1,0"))
                                    (rule "mul_literals" (formula "34") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "34") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "polySimp_homoEq" (formula "34") (term "1"))
                                    (rule "times_zero_2" (formula "34") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "34") (term "0,1"))
                                    (rule "lenOfSeqSubEQ" (formula "56") (term "0,1,0,0,1,0,1") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "56") (term "1,0,1,0,0,1,0,1"))
                                    (rule "times_zero_2" (formula "56") (term "1,1,0,1,0,0,1,0,1"))
                                    (rule "add_zero_right" (formula "56") (term "1,0,1,0,0,1,0,1"))
                                    (rule "lenOfSeqSubEQ" (formula "55") (term "1,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "55") (term "1,1,1,0"))
                                    (rule "times_zero_2" (formula "55") (term "1,1,1,1,0"))
                                    (rule "add_zero_right" (formula "55") (term "1,1,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "61") (term "1,1,1,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "61") (term "1,1,1,1,1,0"))
                                    (rule "mul_literals" (formula "61") (term "1,1,1,1,1,1,0"))
                                    (rule "add_zero_right" (formula "61") (term "1,1,1,1,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "61") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "61") (term "1,0,1,0,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "61") (term "1,1,0,1,0,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "61") (term "1,0,1,0,0,0,0,0,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "61") (term "1,0,0,0,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "61") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "61") (term "1,1,1,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "61") (term "1,1,0,0,0,1,0"))
                                    (rule "ifEqualsInteger" (formula "35") (term "1"))
                                    (rule "equal_literals" (formula "35") (term "1,1,1"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "polySimp_homoEq" (formula "35") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,1,0"))
                                    (rule "add_zero_right" (formula "58") (term "0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0"))
                                    (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,2,0,0"))
                                    (rule "add_zero_right" (formula "57") (term "0,0,1,2,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "55") (term "0,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "56") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "59") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "56") (term "0,0,0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,1,0,0,1,1,1,0"))
                                    (rule "add_zero_right" (formula "61") (term "0,0,0,1,0,0,1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,1,1"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "58") (term "0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1,1,0"))
                                    (rule "add_zero_right" (formula "42") (term "0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "41") (term "0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,2,0,0"))
                                    (rule "mul_literals" (formula "57") (term "0,1,0,0,1,2,0,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0"))
                                    (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,1,0,1"))
                                    (rule "add_zero_right" (formula "56") (term "0,0,1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "57") (term "0,2,0"))
                                    (rule "add_zero_right" (formula "57") (term "0,0,2,0"))
                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,0"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,1,0,0,1,1,1,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,0,1,0,0,1,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "60") (term "0,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,0"))
                                    (rule "add_zero_right" (formula "60") (term "0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "62") (term "0,1,1,0"))
                                    (rule "add_zero_right" (formula "62") (term "0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,1,0,1"))
                                    (rule "mul_literals" (formula "56") (term "0,1,0,0,1,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "34") (term "0"))
                                    (rule "add_zero_right" (formula "34") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "58") (term "1,1,1,0,1,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "58") (term "1,1,1,1,0,1,0,0"))
                                    (rule "mul_literals" (formula "58") (term "1,1,1,1,1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "58") (term "1,1,1,1,0,1,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "58") (term "0,1,0,0,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "58") (term "1,0,1,0,0,1,0"))
                                    (rule "times_zero_2" (formula "58") (term "1,1,0,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "58") (term "1,0,1,0,0,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "58") (term "0,1,0,0,1,1,0,1,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "58") (term "1,0,1,0,0,1,1,0,1,0,0"))
                                    (rule "mul_literals" (formula "58") (term "1,1,0,1,0,0,1,1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "58") (term "1,0,1,0,0,1,1,0,1,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "58") (term "0,0,0,0,1,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "58") (term "1,0,0,0,0,1,0,0"))
                                    (rule "times_zero_2" (formula "58") (term "1,1,0,0,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "58") (term "1,0,0,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "57") (term "1,0,0,2,0"))
                                    (rule "mul_literals" (formula "57") (term "0,1,0,0,2,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,1,0,0,1,0,1"))
                                    (rule "add_zero_right" (formula "56") (term "0,0,0,1,0,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,1,0"))
                                    (rule "add_zero_right" (formula "55") (term "0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,1,1,1,1,0"))
                                    (rule "add_zero_right" (formula "61") (term "0,0,1,1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "60") (term "0,1,0,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,1,0,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "61") (term "0,0,0,1,0,0,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "60") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,1,1"))
                                    (rule "add_literals" (formula "35") (term "0,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,1,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "61") (term "0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "62") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "58") (term "0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0"))
                                    (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1"))
                                    (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                                    (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,2,0,0"))
                                    (rule "add_literals" (formula "57") (term "0,0,0,1,2,0,0"))
                                    (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "55") (term "0,0,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "56") (term "0,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "59") (term "0,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "56") (term "0,0,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "59") (term "0,0,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,1,0,0,1,1,1,0"))
                                    (rule "add_literals" (formula "61") (term "0,0,0,0,1,0,0,1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0,0,1,0,1"))
                                    (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "55") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,1,1,1,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,1,1,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,1,0,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,0,1,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "58") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,1,0,1"))
                                    (rule "add_literals" (formula "56") (term "0,0,0,1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "57") (term "0,0,2,0"))
                                    (rule "add_literals" (formula "57") (term "0,0,0,2,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "60") (term "0,0,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "60") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "60") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "59") (term "0,0,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "62") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,1,0,0,1,0,1"))
                                    (rule "add_literals" (formula "55") (term "0,0,0,0,1,0,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "54") (term "0,0,0,1,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "38") (term "0,0,0,0,1,0") (ifseqformula "37"))
                                    (rule "polySimp_elimSub" (formula "38") (term "1,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "38") (term "1,1,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "38") (term "1,0,0,0,0,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "38") (term "1,1,0,1,0") (ifseqformula "37"))
                                    (rule "polySimp_elimSub" (formula "38") (term "1,1,1,0,1,0"))
                                    (rule "mul_literals" (formula "38") (term "1,1,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "38") (term "1,1,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "60") (term "0,0,1,1,1,1,0"))
                                    (rule "add_literals" (formula "60") (term "0,0,0,1,1,1,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "39") (term "1,1,0,1,0") (ifseqformula "37"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,1,1,0,1,0"))
                                    (rule "mul_literals" (formula "39") (term "1,1,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "1,1,1,0,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "39") (term "0,0,0,0,1,0") (ifseqformula "37"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,0,0,0,0,1,0"))
                                    (rule "times_zero_2" (formula "39") (term "1,1,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,1,0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "60") (term "0,0,0,0,1,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "60") (term "0,0,1,0,0,0,1,0"))
                                    (rule "add_literals" (formula "60") (term "0,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                    (rule "add_literals" (formula "34") (term "0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "57") (term "0,0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,1,0,0,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "57") (term "0,0,0,1,0,0,1,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,1,0,0,1,1,0,1,0"))
                                    (rule "mul_literals" (formula "57") (term "0,1,0,0,0,1,0,0,1,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "57") (term "0,0,1,1,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,1,1,0,1,0"))
                                    (rule "mul_literals" (formula "57") (term "0,1,0,0,1,1,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "57") (term "0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "57") (term "0"))
                                    (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,1,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,1,0,1,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,1,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,1,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,1,0,1,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,1,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "57") (term "0,0,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,1,1,0,1,0,0"))
                                    (rule "add_literals" (formula "57") (term "0,0,0,1,1,1,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,1,0,0,1,1,0,1,0,0"))
                                    (rule "add_literals" (formula "57") (term "0,0,0,0,1,0,0,1,1,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "57") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,1,0,1,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0,1,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,1,0,1,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,1,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "57") (term "0,0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "36") (term "1"))
                                    (rule "mul_literals" (formula "36") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "34") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "0,1,1"))
                                    (rule "polySimp_elimOne" (formula "34") (term "0,1,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "55") (term "1"))
                                    (rule "mul_literals" (formula "55") (term "1,1"))
                                    (rule "ifEqualsInteger" (formula "55") (term "1"))
                                    (rule "equal_literals" (formula "55") (term "1,1,1"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "ifEqualsInteger" (formula "55") (term "1,1"))
                                    (rule "equal_literals" (formula "55") (term "1,1,1,1"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "polySimp_homoEq" (formula "55") (term "1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "55") (term "1,0,1,1,1"))
                                    (rule "mul_literals" (formula "55") (term "0,1,0,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "55") (term "0,1,1,1"))
                                    (rule "add_literals" (formula "55") (term "0,0,1,1,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "54"))
                                    (rule "polySimp_mulComm0" (formula "54") (term "1"))
                                    (rule "polySimp_rightDist" (formula "54") (term "1"))
                                    (rule "mul_literals" (formula "54") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "54") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "54") (term "1,1"))
                                    (rule "applyEqRigid" (formula "57") (term "1,1,0,1,0") (ifseqformula "54"))
                                    (rule "polySimp_addComm1" (formula "57") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "57") (term "1,0,1,0,0"))
                                    (rule "add_literals" (formula "57") (term "0,1,0,1,0,0"))
                                    (rule "applyEqRigid" (formula "58") (term "0,0,0") (ifseqformula "54"))
                                    (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "54"))
                                    (rule "polySimp_addAssoc" (formula "59") (term "0"))
                                    (rule "polySimp_addComm1" (formula "59") (term "0,0"))
                                    (rule "add_literals" (formula "59") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "59") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2" (formula "59") (term "0"))
                                    (rule "add_literals" (formula "59") (term "1,0"))
                                    (rule "times_zero_1" (formula "59") (term "0"))
                                    (rule "leq_literals" (formula "59"))
                                    (rule "true_left" (formula "59"))
                                    (rule "applyEqRigid" (formula "59") (term "0,0,0,1,0") (ifseqformula "54"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "0,0,1,0"))
                                    (rule "mul_literals" (formula "59") (term "0,0,0,1,0"))
                                    (rule "applyEqRigid" (formula "59") (term "1,1,1,0") (ifseqformula "54"))
                                    (rule "polySimp_addAssoc" (formula "59") (term "1,1,0"))
                                    (rule "add_literals" (formula "59") (term "0,1,1,0"))
                                    (rule "applyEqRigid" (formula "55") (term "0,0,0") (ifseqformula "54"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "55") (term "0,0"))
                                    (rule "mul_literals" (formula "55") (term "0,0,0"))
                                    (rule "applyEqRigid" (formula "57") (term "1,0") (ifseqformula "54"))
                                    (rule "polySimp_addComm1" (formula "57") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                    (rule "add_literals" (formula "57") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "32") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "56") (term "0,1,2,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "56") (term "0,0,1,2,0,0"))
                                    (rule "polySimp_elimOne" (formula "56") (term "0,0,1,2,0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "39"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "polySimp_homoEq" (formula "39") (term "1"))
                                    (rule "mul_literals" (formula "39") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "39") (term "0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "58") (term "0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "58") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "0,0,1,1,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "55") (term "1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "0,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "55") (term "0,1,1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "56") (term "0,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "56") (term "0,0,2,0"))
                                    (rule "polySimp_elimOne" (formula "56") (term "0,0,2,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0"))
                                    (rule "mul_literals" (formula "35") (term "1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "60") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "60") (term "0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "60") (term "0,0,1,1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "59"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1"))
                                    (rule "mul_literals" (formula "59") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "59") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "59") (term "1,1"))
                                     (builtin "One Step Simplification" (formula "59"))
                                    (rule "polySimp_homoEq" (formula "59") (term "1"))
                                    (rule "mul_literals" (formula "59") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "59") (term "0,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "57"))
                                    (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                    (rule "polySimp_elimOne" (formula "57") (term "0"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "polySimp_homoEq" (formula "57") (term "1"))
                                    (rule "mul_literals" (formula "57") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "57") (term "0,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "39") (term "1"))
                                    (rule "mul_literals" (formula "39") (term "1,1"))
                                    (rule "ifEqualsInteger" (formula "39") (term "1"))
                                    (rule "equal_literals" (formula "39") (term "1,1,1"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "polySimp_homoEq" (formula "39") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,1,1"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,1,1"))
                                    (rule "add_literals" (formula "39") (term "0,0,1,1"))
                                    (rule "inEqSimp_invertInEq0" (formula "34") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "0,0"))
                                    (rule "times_zero_2" (formula "34") (term "1,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "34") (term "0,0,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "59") (term "1"))
                                    (rule "mul_literals" (formula "59") (term "1,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "57") (term "1"))
                                    (rule "mul_literals" (formula "57") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "39") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0,1,1"))
                                    (rule "polySimp_elimOne" (formula "39") (term "0,1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,1,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "0,0,1,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "0,0,1,1,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0,0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "0,0,0,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "55") (term "0,0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "55") (term "0,0,1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "54") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "54") (term "0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "54") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "54") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "54") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "54") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0"))
                                    (rule "mul_literals" (formula "58") (term "1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "55") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "58") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "58") (term "0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "59") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "59") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "59") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "57") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "57") (term "0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "57") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_invertInEq0" (formula "39") (term "0"))
                                    (rule "times_zero_2" (formula "39") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "39") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "true_left" (formula "34"))
                                    (rule "inEqSimp_invertInEq0" (formula "37") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,1,0"))
                                    (rule "mul_literals" (formula "37") (term "1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "0,0,0,1,0"))
                                    (rule "replace_known_left" (formula "37") (term "0,0,1,0") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "polySimp_pullOutFactor1" (formula "37") (term "0"))
                                    (rule "add_literals" (formula "37") (term "1,0"))
                                    (rule "times_zero_1" (formula "37") (term "0"))
                                    (rule "leq_literals" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "52") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "52") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "51") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "51") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_invertInEq0" (formula "54") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "54") (term "0,0"))
                                    (rule "mul_literals" (formula "54") (term "1,0"))
                                    (rule "polySimp_elimOne" (formula "54") (term "0,0"))
                                    (rule "replace_known_left" (formula "54") (term "0") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "true_left" (formula "54"))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "73") (inst "iv=iv"))
                                    (rule "inEqSimp_ltToLeq" (formula "73") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "73") (term "0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "73") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "73") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,0,1"))
                                    (rule "inEqSimp_subsumption1" (formula "34") (term "0") (ifseqformula "32"))
                                    (rule "leq_literals" (formula "34") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "applyEq" (formula "40") (term "0,1,0") (ifseqformula "34"))
                                    (rule "eqSymm" (formula "40") (term "1,0"))
                                    (rule "applyEqRigid" (formula "37") (term "1") (ifseqformula "34"))
                                    (rule "applyEqRigid" (formula "46") (term "0,0") (ifseqformula "34"))
                                    (rule "eqSymm" (formula "46"))
                                    (rule "applyEq" (formula "4") (term "1") (ifseqformula "34"))
                                    (rule "applyEqRigid" (formula "54") (term "1") (ifseqformula "34"))
                                    (rule "applyEq" (formula "40") (term "0,1,0") (ifseqformula "46"))
                                    (rule "applyEq" (formula "26") (term "1") (ifseqformula "46"))
                                    (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "46"))
                                    (rule "pullOutSelect" (formula "74") (term "1,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                                    (rule "applyEq" (formula "75") (term "1,0,1,1,0,1") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "replaceKnownSelect_taclet00_3" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_4" (formula "1") (term "2,0"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "75") (term "1,0,1,1,0,1") (ifseqformula "1"))
                                    (rule "replaceKnownSelect_taclet0000_8" (formula "75") (term "0,1,1,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "75") (term "0,1,1,0,1"))
                                    (rule "applyEqReverse" (formula "75") (term "1,0,1,0") (ifseqformula "1"))
                                    (rule "replaceKnownSelect_taclet0000_8" (formula "75") (term "0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "75") (term "0,1,0"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "74") (term "0,0,1,0,1") (inst "selectSK=java_util_Collection_seq_4"))
                                    (rule "applyEq" (formula "75") (term "0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "75") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "45"))
                                    (rule "eqSymm" (formula "75") (term "1,0,1"))
                                    (rule "eqSymm" (formula "75") (term "0"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSeqConcat" (formula "47"))
                                     (builtin "One Step Simplification" (formula "47"))
                                    (rule "andLeft" (formula "47"))
                                    (rule "andLeft" (formula "47"))
                                    (rule "polySimp_addComm0" (formula "47") (term "1"))
                                    (rule "eqSeqSingleton" (formula "49"))
                                    (rule "andLeft" (formula "49"))
                                    (rule "lenOfSeqSub" (formula "49") (term "0"))
                                    (rule "polySimp_elimSub" (formula "49") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "49") (term "1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "47") (term "1,1") (ifseqformula "38"))
                                    (rule "polySimp_homoEq" (formula "47"))
                                    (rule "polySimp_elimSub" (formula "47") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "47") (term "1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "47") (term "1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "47") (term "0"))
                                    (rule "lenOfSeqSubEQ" (formula "50") (term "1,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "50") (term "1,1,0,0"))
                                    (rule "times_zero_2" (formula "50") (term "1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "50") (term "1,1,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "48") (term "2,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "48") (term "1,2,0"))
                                    (rule "mul_literals" (formula "48") (term "1,1,2,0"))
                                    (rule "add_zero_right" (formula "48") (term "1,2,0"))
                                    (rule "ifEqualsInteger" (formula "49"))
                                    (rule "equal_literals" (formula "49") (term "1,1"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "andLeft" (formula "49"))
                                    (rule "polySimp_homoEq" (formula "50"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "50") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "50") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "47") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "47") (term "0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "47") (term "0,0,0,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "49") (term "0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "49") (term "1,0"))
                                    (rule "mul_literals" (formula "49") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "49") (term "1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "50") (term "1,0,0") (ifseqformula "48"))
                                    (rule "polySimp_elimSub" (formula "50") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "50") (term "1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "50") (term "1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "50") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "51") (term "0,1,0,0"))
                                    (rule "add_zero_right" (formula "51") (term "0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "48") (term "0,2,0"))
                                    (rule "add_zero_right" (formula "48") (term "0,0,2,0"))
                                    (rule "polySimp_rightDist" (formula "48") (term "1,0,0,2,0"))
                                    (rule "mul_literals" (formula "48") (term "0,1,0,0,2,0"))
                                    (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "51") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "48") (term "0,0,2,0"))
                                    (rule "add_literals" (formula "48") (term "0,0,0,2,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0"))
                                    (rule "add_zero_right" (formula "49") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "49") (term "0,0,0"))
                                    (rule "add_literals" (formula "49") (term "0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "50") (term "0,1,1,0"))
                                    (rule "add_zero_right" (formula "50") (term "0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "50") (term "0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "50") (term "0,1,0,1,0"))
                                    (rule "add_zero_right" (formula "50") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,1,0"))
                                    (rule "add_literals" (formula "50") (term "0,0,0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "49"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "50") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "50") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "47"))
                                    (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                    (rule "polySimp_rightDist" (formula "47") (term "1"))
                                    (rule "mul_literals" (formula "47") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                                    (rule "applyEqRigid" (formula "48") (term "2,0") (ifseqformula "47"))
                                    (rule "applyEq" (formula "50") (term "1,1,0") (ifseqformula "47"))
                                    (rule "applyEqRigid" (formula "51") (term "1,0,0") (ifseqformula "47"))
                                    (rule "applyEq" (formula "50") (term "0,1,0,0,1,0") (ifseqformula "47"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "50") (term "0,0,0,1,0"))
                                    (rule "applyEq" (formula "49") (term "1,0") (ifseqformula "47"))
                                    (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                    (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                    (rule "add_literals" (formula "49") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "49") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2" (formula "49") (term "0"))
                                    (rule "add_literals" (formula "49") (term "1,0"))
                                    (rule "times_zero_1" (formula "49") (term "0"))
                                    (rule "leq_literals" (formula "49"))
                                    (rule "true_left" (formula "49"))
                                    (rule "polySimp_sepPosMonomial" (formula "49"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                    (rule "polySimp_rightDist" (formula "49") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                                    (rule "mul_literals" (formula "49") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "polySimp_homoEq" (formula "49") (term "1"))
                                    (rule "mul_literals" (formula "49") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "49") (term "0,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "49") (term "1"))
                                    (rule "mul_literals" (formula "49") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "47") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "47") (term "0,0,0"))
                                    (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "47"))
                                    (rule "applyEqRigid" (formula "56") (term "1,0") (ifseqformula "47"))
                                    (rule "applyEq" (formula "57") (term "0,0,1") (ifseqformula "47"))
                                    (rule "inEqSimp_homoInEq1" (formula "57") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "57") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "57") (term "0,0,1"))
                                    (rule "add_literals" (formula "57") (term "0,0,0,1"))
                                    (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "47"))
                                    (rule "applyEq" (formula "56") (term "0,0,0") (ifseqformula "47"))
                                    (rule "inEqSimp_homoInEq1" (formula "56") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "56") (term "0,0,0"))
                                    (rule "add_literals" (formula "56") (term "0,0,0,0"))
                                    (rule "applyEqRigid" (formula "40") (term "1,1,0") (ifseqformula "47"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "1,0"))
                                    (rule "add_literals" (formula "40") (term "0,1,0"))
                                    (rule "add_zero_left" (formula "40") (term "1,0"))
                                    (rule "applyEq" (formula "61") (term "1,1,0") (ifseqformula "47"))
                                    (rule "polySimp_addAssoc" (formula "61") (term "1,0"))
                                    (rule "add_literals" (formula "61") (term "0,1,0"))
                                    (rule "add_zero_left" (formula "61") (term "1,0"))
                                    (rule "applyEqRigid" (formula "59") (term "0,0,1,1,0") (ifseqformula "47"))
                                    (rule "inEqSimp_homoInEq1" (formula "59") (term "0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "59") (term "0,0,0,1,1,0"))
                                    (rule "applyEq" (formula "58") (term "1,2,0,0") (ifseqformula "47"))
                                    (rule "polySimp_addAssoc" (formula "58") (term "2,0,0"))
                                    (rule "add_literals" (formula "58") (term "0,2,0,0"))
                                    (rule "add_zero_left" (formula "58") (term "2,0,0"))
                                    (rule "applyEqRigid" (formula "58") (term "2,0") (ifseqformula "47"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "49") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "49") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                    (rule "mul_literals" (formula "33") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "57") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "57") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "57") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "56") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "56") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "56") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "59") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "59") (term "0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "59") (term "0,0,1,1,0"))
                                    (rule "eqSeqConcat" (formula "27"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "polySimp_addComm0" (formula "27") (term "1"))
                                    (rule "eqSeqSingleton" (formula "29"))
                                    (rule "andLeft" (formula "29"))
                                    (rule "lenOfSeqSub" (formula "29") (term "0"))
                                    (rule "polySimp_elimSub" (formula "29") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "29") (term "1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "28") (term "2,0") (ifseqformula "39"))
                                    (rule "polySimp_elimSub" (formula "28") (term "1,2,0"))
                                    (rule "mul_literals" (formula "28") (term "1,1,2,0"))
                                    (rule "add_zero_right" (formula "28") (term "1,2,0"))
                                    (rule "lenOfSeqSubEQ" (formula "27") (term "1,1") (ifseqformula "51"))
                                    (rule "polySimp_homoEq" (formula "27"))
                                    (rule "polySimp_elimSub" (formula "27") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "27") (term "0"))
                                    (rule "lenOfSeqSubEQ" (formula "30") (term "1,0,0") (ifseqformula "39"))
                                    (rule "polySimp_elimSub" (formula "30") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "1,1,0,0"))
                                    (rule "ifEqualsInteger" (formula "29"))
                                    (rule "equal_literals" (formula "29") (term "1,1"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "andLeft" (formula "29"))
                                    (rule "polySimp_homoEq" (formula "30"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "28") (term "0,2,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,2,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,2,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,2,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,2,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,2,0"))
                                    (rule "lenOfSeqSubEQ" (formula "29") (term "0") (ifseqformula "52"))
                                    (rule "polySimp_elimSub" (formula "29") (term "1,0"))
                                    (rule "mul_literals" (formula "29") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "29") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1,0,0"))
                                    (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "30") (term "1,0,0") (ifseqformula "28"))
                                    (rule "polySimp_elimSub" (formula "30") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0"))
                                    (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "29"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "27"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1"))
                                    (rule "mul_literals" (formula "27") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                    (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "27"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "29") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2" (formula "29") (term "0"))
                                    (rule "add_literals" (formula "29") (term "1,0"))
                                    (rule "times_zero_1" (formula "29") (term "0"))
                                    (rule "leq_literals" (formula "29"))
                                    (rule "true_left" (formula "29"))
                                    (rule "polySimp_sepPosMonomial" (formula "29"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1"))
                                    (rule "mul_literals" (formula "29") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "0,0,2,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "0,0,2,0"))
                                    (rule "applyEqRigid" (formula "28") (term "2,0") (ifseqformula "50"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "0,0,1,0,0"))
                                    (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "50"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "0,0,0"))
                                    (rule "applyEqRigid" (formula "59") (term "0") (ifseqformula "27"))
                                    (rule "polySimp_homoEq" (formula "59"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "59") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "59") (term "0,0"))
                                    (rule "add_literals" (formula "59") (term "0,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "59"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1"))
                                    (rule "mul_literals" (formula "59") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "59") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "59") (term "1,1"))
                                    (rule "applyEqRigid" (formula "63") (term "0,0") (ifseqformula "59"))
                                    (rule "inEqSimp_homoInEq1" (formula "63") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "63") (term "1,0,0"))
                                    (rule "mul_literals" (formula "63") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                                    (rule "add_literals" (formula "63") (term "0,0,0"))
                                    (rule "applyEqRigid" (formula "63") (term "0,1") (ifseqformula "59"))
                                    (rule "polySimp_homoEq" (formula "63") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "63") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "63") (term "1,0,1"))
                                    (rule "mul_literals" (formula "63") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "63") (term "0,1"))
                                    (rule "add_literals" (formula "63") (term "0,0,1"))
                                    (rule "add_zero_left" (formula "63") (term "0,1"))
                                    (rule "applyEq" (formula "60") (term "0,0") (ifseqformula "59"))
                                    (rule "inEqSimp_homoInEq1" (formula "60") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "60") (term "1,0,0"))
                                    (rule "mul_literals" (formula "60") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "60") (term "0,0"))
                                    (rule "add_literals" (formula "60") (term "0,0,0"))
                                    (rule "applyEq" (formula "62") (term "0,0,0") (ifseqformula "59"))
                                    (rule "inEqSimp_homoInEq1" (formula "62") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "62") (term "0,0,0"))
                                    (rule "add_literals" (formula "62") (term "0,0,0,0"))
                                    (rule "polySimp_invertEq" (formula "63") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "63") (term "0,1"))
                                    (rule "times_zero_2" (formula "63") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "63") (term "0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "0,0,0,1,0,0,0"))
                                    (rule "applyEq" (formula "29") (term "0,1,0,0,0") (ifseqformula "50"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "0,0,1,0"))
                                    (rule "applyEqRigid" (formula "29") (term "1,0") (ifseqformula "50"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "63") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "63") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "63") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "60") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "60") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "60") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "62") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "62") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "62") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "0,0,0"))
                                    (rule "eqSeqConcat" (formula "43") (term "1"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "polySimp_addComm0" (formula "43") (term "1,0,0,1"))
                                    (rule "eqSeqSingleton" (formula "43") (term "1,1"))
                                    (rule "lenOfSeqSubEQ" (formula "43") (term "2,0,1,0,1") (ifseqformula "28"))
                                    (rule "polySimp_elimSub" (formula "43") (term "1,2,0,1,0,1"))
                                    (rule "times_zero_2" (formula "43") (term "1,1,2,0,1,0,1"))
                                    (rule "add_zero_right" (formula "43") (term "1,2,0,1,0,1"))
                                    (rule "lenOfSeqSub" (formula "43") (term "0,0,1,1"))
                                    (rule "polySimp_elimSub" (formula "43") (term "1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "43") (term "1,0,0,1,1"))
                                    (rule "lenOfSeqSubEQ" (formula "43") (term "1,1,0,0,1") (ifseqformula "28"))
                                    (rule "polySimp_elimSub" (formula "43") (term "1,1,1,0,0,1"))
                                    (rule "times_zero_2" (formula "43") (term "1,1,1,1,0,0,1"))
                                    (rule "add_zero_right" (formula "43") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_homoEq" (formula "43") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1"))
                                    (rule "lenOfSeqSubEQ" (formula "43") (term "1,0,0,1,1,1") (ifseqformula "50"))
                                    (rule "polySimp_elimSub" (formula "43") (term "1,1,0,0,1,1,1"))
                                    (rule "mul_literals" (formula "43") (term "1,1,1,0,0,1,1,1"))
                                    (rule "add_zero_right" (formula "43") (term "1,1,0,0,1,1,1"))
                                    (rule "ifEqualsInteger" (formula "43") (term "0,1,1"))
                                    (rule "equal_literals" (formula "43") (term "1,1,0,1,1"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "polySimp_homoEq" (formula "43") (term "1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0,1,1"))
                                    (rule "polySimp_mulAssoc" (formula "43") (term "0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "0,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "43") (term "0,1,0,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,1,0,1,1"))
                                    (rule "lenOfSeqSubEQ" (formula "43") (term "1,0,0,1,0,1,1") (ifseqformula "28"))
                                    (rule "polySimp_elimSub" (formula "43") (term "1,1,0,0,1,0,1,1"))
                                    (rule "times_zero_2" (formula "43") (term "1,1,1,0,0,1,0,1,1"))
                                    (rule "add_zero_right" (formula "43") (term "1,1,0,0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "43") (term "0,1,0,1,1"))
                                    (rule "lenOfSeqSubEQ" (formula "43") (term "0,0,0,1,1") (ifseqformula "28"))
                                    (rule "polySimp_elimSub" (formula "43") (term "1,0,0,0,1,1"))
                                    (rule "times_zero_2" (formula "43") (term "1,1,0,0,0,1,1"))
                                    (rule "add_zero_right" (formula "43") (term "1,0,0,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "0,1,0,0,0,1"))
                                    (rule "add_zero_right" (formula "43") (term "0,0,1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "0,1,0,0,1,1,1"))
                                    (rule "add_zero_right" (formula "43") (term "0,0,1,0,0,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,1,1,1"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,1,1,1"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,1,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "0,2,0,1,0,1"))
                                    (rule "add_zero_right" (formula "43") (term "0,0,2,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,2,0,1,0,1"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,2,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,0,2,0,1,0,1"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,2,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "0,1,0,1,0,1,1"))
                                    (rule "add_zero_right" (formula "43") (term "0,0,1,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,1,0,1,1"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,1,1"))
                                    (rule "add_zero_right" (formula "43") (term "0,0,0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,1,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "43") (term "0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "43") (term "1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,1,0,1,1"))
                                    (rule "mul_literals" (formula "43") (term "0,1,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,1,0,0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "0,0,1,0,0,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "43") (term "0,0,1,0,0,1,1,1"))
                                    (rule "applyEqRigid" (formula "43") (term "1,0,0,1,1,1") (ifseqformula "27"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,2,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "0,0,2,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "43") (term "0,0,2,0,1,0,1"))
                                    (rule "applyEq" (formula "43") (term "2,0,1,0,1") (ifseqformula "27"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,1,0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "0,0,1,0,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "43") (term "0,0,1,0,0,0,1,1"))
                                    (rule "applyEqRigid" (formula "43") (term "1,0,0,0,1,1") (ifseqformula "27"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,0,0,1,1"))
                                    (rule "add_zero_left" (formula "43") (term "0,0,0,0,1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "43") (term "0,0,0,0,0,1"))
                                    (rule "applyEq" (formula "43") (term "0,0,0,1") (ifseqformula "27"))
                                    (rule "polySimp_homoEq" (formula "43") (term "0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,1"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0,1"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "43") (term "0,0,0,0,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "43") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "43") (term "0,0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,0,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "43") (term "0,0,0,1,0,1,1"))
                                    (rule "applyEq" (formula "43") (term "0,1,0,1,1") (ifseqformula "27"))
                                    (rule "polySimp_homoEq" (formula "43") (term "1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "43") (term "0,0,1,0,1,1"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,1,0,1,1"))
                                    (rule "add_zero_left" (formula "43") (term "0,0,1,0,1,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "43") (term "1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "43") (term "0,1,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,0,0,1,1"))
                                    (rule "getOfSeqSub" (formula "52") (term "0"))
                                    (rule "castDel" (formula "52") (term "2,0"))
                                    (rule "leq_literals" (formula "52") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "52"))
                                    (rule "add_zero_left" (formula "52") (term "1,1,0"))
                                    (rule "polySimp_elimSub" (formula "52") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "52") (term "0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "52") (term "1,0,0"))
                                    (rule "polySimp_addComm0" (formula "52") (term "0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "52") (term "1,0,0"))
                                    (rule "add_literals" (formula "52") (term "1,1,1,0,0"))
                                    (rule "times_zero_1" (formula "52") (term "1,1,0,0"))
                                    (rule "add_zero_right" (formula "52") (term "1,0,0"))
                                    (rule "less_literals" (formula "52") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "52"))
                                    (rule "pullOutSelect" (formula "1") (term "1,0,1,0,1,1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_3"))
                                    (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0,0,0,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "57"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "replaceKnownSelect_taclet000000_13" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000000_14" (formula "1") (term "2,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "replaceKnownSelect_taclet000000_11" (formula "2") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000000_12" (formula "2") (term "2,0"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "73")))
                                    (rule "applyEqReverse" (formula "81") (term "0,1,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "81") (term "0,1,1,0,1") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "81") (term "0,1,1,1,0,0,1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "eqSymm" (formula "79") (term "0"))
                                    (rule "eqSymm" (formula "79") (term "1,0,1"))
                                    (rule "applyEqRigid" (formula "79") (term "1,1,1,0,0,1") (ifseqformula "57"))
                                    (rule "polySimp_addAssoc" (formula "79") (term "1,1,0,0,1"))
                                    (rule "add_literals" (formula "79") (term "0,1,1,0,0,1"))
                                    (rule "add_zero_left" (formula "79") (term "1,1,0,0,1"))
                                    (rule "applyEqRigid" (formula "79") (term "0,0") (ifseqformula "57"))
                                    (rule "polySimp_homoEq" (formula "79") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "79") (term "1,0,0"))
                                    (rule "mul_literals" (formula "79") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "79") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "79") (term "0,0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "79") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "79") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "79") (term "0,0"))
                                    (rule "getOfSeqSub" (formula "28") (term "0"))
                                    (rule "castDel" (formula "28") (term "2,0"))
                                    (rule "leq_literals" (formula "28") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "add_zero_left" (formula "28") (term "1,1,0"))
                                    (rule "polySimp_elimSub" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "28") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "0,0,0"))
                                    (rule "getOfSeqSub" (formula "42") (term "0,1,1,1"))
                                    (rule "castDel" (formula "42") (term "2,0,1,1,1"))
                                    (rule "add_zero_left" (formula "42") (term "1,1,0,1,1,1"))
                                    (rule "leq_literals" (formula "42") (term "0,0,0,1,1,1"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "polySimp_elimSub" (formula "42") (term "1,0,0,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,1,1,1"))
                                    (rule "mul_literals" (formula "42") (term "0,1,1,0,0,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "1,0,0,1,1,1"))
                                    (rule "polySimp_addComm0" (formula "42") (term "0,1,0,0,1,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,1,1,1"))
                                    (rule "add_zero_right" (formula "42") (term "0,0,0,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "42") (term "0,1,0,0,0,1,1,1"))
                                    (rule "mul_literals" (formula "42") (term "0,0,1,0,0,0,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,1,1,1"))
                                    (rule "add_literals" (formula "42") (term "0,0,0,0,0,1,1,1"))
                                    (rule "add_zero_left" (formula "42") (term "0,0,0,0,1,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,0,0,1,1,1"))
                                    (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "66"))
                                    (rule "closeTrue" (formula "66"))
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "67"))
                                    (rule "replaceKnownSelect_taclet000000_11" (formula "45") (term "0"))
                                    (rule "replaceKnownSelect_taclet00_1" (formula "45") (term "1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000000_12" (formula "45") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "45") (term "1"))
                                    (rule "impRight" (formula "79"))
                                    (rule "notRight" (formula "64"))
                                    (rule "close" (formula "66") (ifseqformula "1"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "63"))
                                 (branch "Case 1"
                                     (builtin "One Step Simplification" (formula "67"))
                                    (rule "replaceKnownSelect_taclet000000_11" (formula "45") (term "0"))
                                    (rule "replaceKnownSelect_taclet00_1" (formula "45") (term "1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000000_12" (formula "45") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "45") (term "1"))
                                    (rule "impRight" (formula "79"))
                                    (rule "notRight" (formula "68"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "eqSymm" (formula "84"))
                                    (rule "eqSymm" (formula "6"))
                                    (rule "eqSymm" (formula "5"))
                                    (rule "eqSymm" (formula "4"))
                                    (rule "eqSymm" (formula "2"))
                                    (rule "polySimp_homoEq" (formula "35") (term "1"))
                                    (rule "mul_literals" (formula "35") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "35") (term "0,1"))
                                    (rule "polySimp_homoEq" (formula "61"))
                                    (rule "polySimp_homoEq" (formula "58") (term "1"))
                                    (rule "mul_literals" (formula "58") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "58") (term "0,1"))
                                    (rule "polySimp_homoEq" (formula "57"))
                                    (rule "polySimp_homoEq" (formula "40"))
                                    (rule "polySimp_homoEq" (formula "34"))
                                    (rule "polySimp_homoEq" (formula "64"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "57") (term "0"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "61") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "61") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "61") (term "0,1,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "40") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "0,1,0"))
                                    (rule "polySimp_rightDist" (formula "64") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "64") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "0,1,0"))
                                    (rule "eqSeqConcat4" (formula "51"))
                                    (rule "andLeft" (formula "51"))
                                    (rule "inEqSimp_ltToLeq" (formula "39"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,1,1,0,0"))
                                    (rule "add_zero_right" (formula "61") (term "0,0,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,1,0,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0"))
                                    (rule "add_zero_right" (formula "64") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "64") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "42"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,1,0,0"))
                                    (rule "add_zero_right" (formula "41") (term "0,0,1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "62"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "0"))
                                    (rule "add_zero_right" (formula "35") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "57") (term "0"))
                                    (rule "add_zero_right" (formula "57") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1"))
                                    (rule "add_zero_right" (formula "59") (term "0,0,1"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,1,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "37") (term "0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "57") (term "1,0,0"))
                                    (rule "mul_literals" (formula "57") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "60") (term "0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "63") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "61") (term "0,0,0,1,1,0,0"))
                                    (rule "add_zero_left" (formula "61") (term "0,0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "64") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "61") (term "0,0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "61") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor2" (formula "61") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "61") (term "1,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "61") (term "0,0,0,1,0"))
                                    (rule "leq_literals" (formula "61") (term "0,0,1,0"))
                                     (builtin "One Step Simplification" (formula "61"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "62") (term "0"))
                                    (rule "polySimp_addComm1" (formula "62") (term "0,0"))
                                    (rule "add_literals" (formula "62") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,1,1,0,0"))
                                    (rule "add_zero_left" (formula "41") (term "0,0,1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "35") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                    (rule "add_literals" (formula "57") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "57") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "59") (term "0,0,1"))
                                    (rule "add_literals" (formula "59") (term "0,0,0,1"))
                                    (rule "add_zero_left" (formula "59") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "41") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor2" (formula "41") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "41") (term "1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "41") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "41") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "64") (term "0,0,0,0,0"))
                                    (rule "replace_known_left" (formula "64") (term "0,0") (ifseqformula "62"))
                                     (builtin "One Step Simplification" (formula "64"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                    (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "42") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2" (formula "42") (term "0"))
                                    (rule "add_literals" (formula "42") (term "1,0"))
                                    (rule "times_zero_1" (formula "42") (term "0"))
                                    (rule "leq_literals" (formula "42"))
                                    (rule "true_left" (formula "42"))
                                    (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "36") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,0,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "39") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0"))
                                    (rule "add_zero_right" (formula "59") (term "0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "62") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "62") (term "0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0"))
                                    (rule "add_zero_right" (formula "60") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "60") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "60") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "60") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "58"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "58") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "59") (term "0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "59") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                    (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "41") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "40") (term "0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "62") (term "0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "62") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "60") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "58"))
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "41") (term "0,0") (ifseqformula "39"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "36") (term "0,0,1,0"))
                                    (rule "applyEq" (formula "58") (term "0,1,0,0") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "58") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "43") (term "0,1,0") (ifseqformula "26"))
                                    (rule "eqSymm" (formula "43") (term "1,0"))
                                    (rule "applyEq" (formula "62") (term "0,1,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "82") (term "0,0") (ifseqformula "3"))
                                    (rule "eqSymm" (formula "82"))
                                    (rule "applyEqRigid" (formula "57") (term "1") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "42") (term "1,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "42") (term "1,1,1,0"))
                                    (rule "mul_literals" (formula "42") (term "1,1,1,1,0"))
                                    (rule "add_zero_right" (formula "42") (term "1,1,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "36") (term "2,0,1,1") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "36") (term "1,2,0,1,1"))
                                    (rule "times_zero_2" (formula "36") (term "1,1,2,0,1,1"))
                                    (rule "add_zero_right" (formula "36") (term "1,2,0,1,1"))
                                    (rule "lenOfSeqSubEQ" (formula "58") (term "0,0,0,0,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "58") (term "1,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "58") (term "1,1,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "58") (term "1,0,0,0,0,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "32") (term "0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "32") (term "1,0"))
                                    (rule "mul_literals" (formula "32") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "32") (term "1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "1,0,1,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "39") (term "0,0,0,0,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,0,0,0,0,1,0"))
                                    (rule "times_zero_2" (formula "39") (term "1,1,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "1,0,0,0,0,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "37") (term "0,1") (ifseqformula "57"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "polySimp_elimSub" (formula "37") (term "0,1,1"))
                                    (rule "mul_literals" (formula "37") (term "1,0,1,1"))
                                    (rule "add_zero_right" (formula "37") (term "0,1,1"))
                                    (rule "lenOfSeqSubEQ" (formula "40") (term "1,1,0,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "40") (term "1,1,1,0,1,0"))
                                    (rule "mul_literals" (formula "40") (term "1,1,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "40") (term "1,1,1,0,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "38") (term "1,2,0,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "38") (term "1,1,2,0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,1,1,2,0,0"))
                                    (rule "add_zero_right" (formula "38") (term "1,1,2,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "39") (term "1,0,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0"))
                                    (rule "times_zero_2" (formula "39") (term "1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "39") (term "1,1,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "38") (term "2,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "38") (term "1,2,0"))
                                    (rule "mul_literals" (formula "38") (term "1,1,2,0"))
                                    (rule "add_zero_right" (formula "38") (term "1,2,0"))
                                    (rule "lenOfSeqSubEQ" (formula "35") (term "0,0,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "35") (term "1,0,0,0"))
                                    (rule "times_zero_2" (formula "35") (term "1,1,0,0,0"))
                                    (rule "add_zero_right" (formula "35") (term "1,0,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "40") (term "1,0,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "40") (term "1,1,0,0"))
                                    (rule "times_zero_2" (formula "40") (term "1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "40") (term "1,1,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "41") (term "1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "41") (term "1,1,0"))
                                    (rule "mul_literals" (formula "41") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "41") (term "1,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "36") (term "1,0,0,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "36") (term "1,1,0,0,0"))
                                    (rule "times_zero_2" (formula "36") (term "1,1,1,0,0,0"))
                                    (rule "add_zero_right" (formula "36") (term "1,1,0,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "39") (term "1,1,0,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,1,1,0,1,0"))
                                    (rule "times_zero_2" (formula "39") (term "1,1,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "1,1,1,0,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "62") (term "1,1,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "62") (term "1,1,1,1,0"))
                                    (rule "mul_literals" (formula "62") (term "1,1,1,1,1,0"))
                                    (rule "add_zero_right" (formula "62") (term "1,1,1,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "35") (term "1,0,1") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "35") (term "1,1,0,1"))
                                    (rule "mul_literals" (formula "35") (term "1,1,1,0,1"))
                                    (rule "add_zero_right" (formula "35") (term "1,1,0,1"))
                                    (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "36") (term "1,1,0,1,0,1,0"))
                                    (rule "add_zero_right" (formula "36") (term "1,0,1,0,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "34") (term "1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "34") (term "1,1,0"))
                                    (rule "times_zero_2" (formula "34") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "34") (term "1,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "40") (term "0,0,0,0,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "40") (term "1,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "40") (term "1,1,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "40") (term "1,0,0,0,0,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "58") (term "1,0,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "58") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "58") (term "1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "58") (term "1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1,1,0"))
                                    (rule "add_zero_right" (formula "42") (term "0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "0,2,0,1,1"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,2,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,2,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "58") (term "0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0"))
                                    (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "58") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,2,0,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,1,2,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,2,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "38") (term "0,2,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,2,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0"))
                                    (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0,0"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "41") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "62") (term "0,1,1,1,0"))
                                    (rule "add_zero_right" (formula "62") (term "0,0,1,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0,1"))
                                    (rule "add_zero_right" (formula "35") (term "0,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,1,0"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "34") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "58") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "58") (term "0"))
                                    (rule "applyEqRigid" (formula "56") (term "0,1,0,1") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "56") (term "1,0,1") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "56") (term "1,1,0,1"))
                                    (rule "mul_literals" (formula "56") (term "1,1,1,0,1"))
                                    (rule "add_zero_right" (formula "56") (term "1,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,0,1"))
                                    (rule "add_zero_right" (formula "56") (term "0,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,1"))
                                    (rule "applyEq" (formula "49") (term "0,1,0") (ifseqformula "5"))
                                    (rule "applyEqRigid" (formula "49") (term "0,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "70") (term "0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "63") (term "1") (ifseqformula "6"))
                                    (rule "applyEqRigid" (formula "57") (term "0,1,2,0,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "57") (term "1,2,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "57") (term "1,1,2,0,0"))
                                    (rule "mul_literals" (formula "57") (term "1,1,1,2,0,0"))
                                    (rule "add_zero_right" (formula "57") (term "1,1,2,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,2,0,0"))
                                    (rule "add_zero_right" (formula "57") (term "0,0,1,2,0,0"))
                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,2,0,0"))
                                    (rule "applyEqRigid" (formula "59") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,0,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "59") (term "1,1,1,0,1,0"))
                                    (rule "times_zero_2" (formula "59") (term "1,1,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "59") (term "1,1,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "59") (term "0,0,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,0,1,0"))
                                    (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "61") (term "1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "61") (term "1,1,0"))
                                    (rule "times_zero_2" (formula "61") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "61") (term "1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "61") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0"))
                                    (rule "applyEq" (formula "57") (term "0,2,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "57") (term "2,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "57") (term "1,2,0"))
                                    (rule "mul_literals" (formula "57") (term "1,1,2,0"))
                                    (rule "add_zero_right" (formula "57") (term "1,2,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "57") (term "0,2,0"))
                                    (rule "add_zero_right" (formula "57") (term "0,0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,2,0"))
                                    (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "59") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "59") (term "0,0,0,0,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "59") (term "1,0,0,0,0,1,0"))
                                    (rule "times_zero_2" (formula "59") (term "1,1,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "59") (term "1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "59") (term "0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,1,0"))
                                    (rule "applyEq" (formula "64") (term "1") (ifseqformula "6"))
                                    (rule "applyEq" (formula "55") (term "0,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "55") (term "1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "55") (term "1,1,0"))
                                    (rule "mul_literals" (formula "55") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "55") (term "1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "55") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0"))
                                    (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "56") (term "0,0,0,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "56") (term "0,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "56") (term "1,0,0,0"))
                                    (rule "times_zero_2" (formula "56") (term "1,1,0,0,0"))
                                    (rule "add_zero_right" (formula "56") (term "1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,0"))
                                    (rule "add_zero_right" (formula "56") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                    (rule "applyEq" (formula "66") (term "1,0,1") (ifseqformula "6"))
                                    (rule "applyEq" (formula "27") (term "5") (ifseqformula "25"))
                                    (rule "applyEqRigid" (formula "63") (term "0,1,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "63") (term "1,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "63") (term "1,1,1,0"))
                                    (rule "mul_literals" (formula "63") (term "1,1,1,1,0"))
                                    (rule "add_zero_right" (formula "63") (term "1,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "63") (term "0,1,1,0"))
                                    (rule "add_zero_right" (formula "63") (term "0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,1,0"))
                                    (rule "applyEq" (formula "59") (term "0,1,0,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "59") (term "1,0,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "59") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "59") (term "1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "59") (term "1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "59") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "59") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0"))
                                    (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "66") (term "1,0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "77") (term "0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "43") (term "0,1") (ifseqformula "26"))
                                    (rule "eqSymm" (formula "43") (term "1"))
                                    (rule "applyEq" (formula "50") (term "1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "69") (term "0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "60") (term "0,0,0,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "60") (term "0,0,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "60") (term "1,0,0,0"))
                                    (rule "times_zero_2" (formula "60") (term "1,1,0,0,0"))
                                    (rule "add_zero_right" (formula "60") (term "1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0"))
                                    (rule "add_zero_right" (formula "60") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                    (rule "applyEq" (formula "60") (term "1") (ifseqformula "5"))
                                    (rule "applyEqRigid" (formula "60") (term "0,1,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "60") (term "1,1,1,0"))
                                    (rule "times_zero_2" (formula "60") (term "1,1,1,1,0"))
                                    (rule "add_zero_right" (formula "60") (term "1,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,0"))
                                    (rule "add_zero_right" (formula "60") (term "0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,0"))
                                    (rule "applyEq" (formula "69") (term "0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "62") (term "0,0,0,0,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "62") (term "0,0,0,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "62") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "62") (term "1,1,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "62") (term "1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "62") (term "0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,1,0"))
                                    (rule "applyEq" (formula "44") (term "5") (ifseqformula "31"))
                                    (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "26") (term "0") (ifseqformula "49"))
                                    (rule "applyEqRigid" (formula "63") (term "0,1,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "63") (term "1,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "63") (term "1,1,0,1,0,0,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "63") (term "1,1,1,0,1,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "63") (term "1,1,0,1,0,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "63") (term "0,1,0,1,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "63") (term "0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
                                    (rule "applyEq" (formula "63") (term "0,1,1,0,1,0,0,1,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "63") (term "1,1,0,1,0,0,1,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "63") (term "1,1,1,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "63") (term "1,1,1,1,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "63") (term "1,1,1,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "63") (term "0,1,1,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "63") (term "0,0,1,1,0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,1,0,1,0,0,1,1,0"))
                                    (rule "applyEqRigid" (formula "63") (term "0,0,1,0,0,1,0,1,0,0,1,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "63") (term "0,1,0,0,1,0,1,0,0,1,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "63") (term "1,0,1,0,0,1,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "63") (term "1,1,0,1,0,0,1,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "63") (term "1,0,1,0,0,1,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,1,0,0,1,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "63") (term "0,0,0,1,0,0,1,0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,1,0,0,1,0,1,0,0,1,1,0"))
                                    (rule "applyEq" (formula "39") (term "0,0,1,0,0,1,1,0,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "39") (term "0,1,0,0,1,1,0,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,0,1,0,0,1,1,0,1,0"))
                                    (rule "mul_literals" (formula "39") (term "1,1,0,1,0,0,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "1,0,1,0,0,1,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0,0,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,0,0,1,1,0,1,0"))
                                    (rule "applyEq" (formula "40") (term "0,1,0,0,0,0,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "40") (term "1,0,0,0,0,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "40") (term "1,1,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "40") (term "1,1,1,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "40") (term "1,1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,0,1,0"))
                                    (rule "applyEq" (formula "34") (term "0,1,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "34") (term "1,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "34") (term "1,1,1,0"))
                                    (rule "times_zero_2" (formula "34") (term "1,1,1,1,0"))
                                    (rule "add_zero_right" (formula "34") (term "1,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,1,0"))
                                    (rule "add_zero_right" (formula "34") (term "0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,1,0"))
                                    (rule "applyEq" (formula "37") (term "0,0,1,1") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,1") (ifseqformula "38"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "polySimp_elimSub" (formula "37") (term "0,1,1,1"))
                                    (rule "times_zero_2" (formula "37") (term "1,0,1,1,1"))
                                    (rule "add_zero_right" (formula "37") (term "0,1,1,1"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,1"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,1"))
                                    (rule "applyEq" (formula "63") (term "0,0,1,0,0,0,1,0,0,1,1,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "63") (term "0,1,0,0,0,1,0,0,1,1,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "63") (term "1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                    (rule "mul_literals" (formula "63") (term "1,1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                    (rule "add_zero_right" (formula "63") (term "1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,1,0,0,0,1,0,0,1,1,1,0"))
                                    (rule "add_zero_right" (formula "63") (term "0,0,0,1,0,0,0,1,0,0,1,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,1,0,0,0,1,0,0,1,1,1,0"))
                                    (rule "applyEqRigid" (formula "63") (term "0,0,1,0,0,1,1,1,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "63") (term "0,1,0,0,1,1,1,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "63") (term "1,0,1,0,0,1,1,1,1,0"))
                                    (rule "mul_literals" (formula "63") (term "1,1,0,1,0,0,1,1,1,1,0"))
                                    (rule "add_zero_right" (formula "63") (term "1,0,1,0,0,1,1,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,1,0,0,1,1,1,1,0"))
                                    (rule "add_zero_right" (formula "63") (term "0,0,0,1,0,0,1,1,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,1,0,0,1,1,1,1,0"))
                                    (rule "applyEqRigid" (formula "40") (term "0,0,1,0,0,1,0,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "40") (term "0,1,0,0,1,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "40") (term "1,0,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "1,1,0,1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "40") (term "1,0,1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,0,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0"))
                                    (rule "applyEqRigid" (formula "59") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "4"))
                                    (rule "polySimp_addComm1" (formula "59") (term "0"))
                                    (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,0,1,0,0,1,0,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "59") (term "1,1,1,0,1,0,0,1,0,0"))
                                    (rule "times_zero_2" (formula "59") (term "1,1,1,1,0,1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "59") (term "1,1,1,0,1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "59") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,0,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "59") (term "0,0,1,1,0,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,0,1,0,0,1,0"))
                                    (rule "applyEq" (formula "63") (term "0,1,1,1,1,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "63") (term "1,1,1,1,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "63") (term "1,1,1,1,1,1,0"))
                                    (rule "mul_literals" (formula "63") (term "1,1,1,1,1,1,1,0"))
                                    (rule "add_zero_right" (formula "63") (term "1,1,1,1,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "63") (term "0,1,1,1,1,1,0"))
                                    (rule "add_zero_right" (formula "63") (term "0,0,1,1,1,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,1,1,1,1,0"))
                                    (rule "applyEq" (formula "61") (term "0,1,1,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "61") (term "1,1,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "61") (term "1,1,1,1,0"))
                                    (rule "times_zero_2" (formula "61") (term "1,1,1,1,1,0"))
                                    (rule "add_zero_right" (formula "61") (term "1,1,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,1,1,1,0"))
                                    (rule "add_zero_right" (formula "61") (term "0,0,1,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,1,1,0"))
                                    (rule "applyEqRigid" (formula "38") (term "0,0,1,0,0,2,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "38") (term "0,1,0,0,2,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "38") (term "1,0,1,0,0,2,0"))
                                    (rule "times_zero_2" (formula "38") (term "1,1,0,1,0,0,2,0"))
                                    (rule "add_zero_right" (formula "38") (term "1,0,1,0,0,2,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,1,0,0,2,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,0,1,0,0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,0,0,2,0"))
                                    (rule "applyEqRigid" (formula "55") (term "0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "55") (term "0,1,0,0,1,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "55") (term "1,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "55") (term "1,1,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "55") (term "1,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "55") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0,0,1,1,0"))
                                    (rule "applyEqRigid" (formula "32") (term "0,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "32") (term "1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "32") (term "1,1,0"))
                                    (rule "times_zero_2" (formula "32") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "32") (term "1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "32") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0"))
                                    (rule "applyEq" (formula "36") (term "0,1,0,1,0,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "36") (term "1,0,1,0,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "36") (term "1,1,0,1,0,1,0"))
                                    (rule "times_zero_2" (formula "36") (term "1,1,1,0,1,0,1,0"))
                                    (rule "add_zero_right" (formula "36") (term "1,1,0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,1,0,1,0"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,1,0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,1,0,1,0"))
                                    (rule "applyEq" (formula "56") (term "0,1,0,1,0,0,0,0,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "56") (term "1,0,1,0,0,0,0,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "56") (term "1,1,0,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "56") (term "1,1,1,0,1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "56") (term "1,1,0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,0,1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "56") (term "0,0,1,0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,1,0,0,0,0,0"))
                                    (rule "applyEq" (formula "36") (term "0,0,1,0,0,1,0,0,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,0,1,0,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,1,0,1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,0,1,0,0,0"))
                                    (rule "applyEq" (formula "41") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "41") (term "0,1,0,0,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "41") (term "1,0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "41") (term "1,1,0,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "41") (term "1,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "41") (term "0,0,0,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,0,0,1,0"))
                                    (rule "applyEqRigid" (formula "57") (term "0,1,0,1,0,0,1,2,0,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "57") (term "1,0,1,0,0,1,2,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "57") (term "1,1,0,1,0,0,1,2,0,0"))
                                    (rule "mul_literals" (formula "57") (term "1,1,1,0,1,0,0,1,2,0,0"))
                                    (rule "add_zero_right" (formula "57") (term "1,1,0,1,0,0,1,2,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,0,1,0,0,1,2,0,0"))
                                    (rule "add_zero_right" (formula "57") (term "0,0,1,0,1,0,0,1,2,0,0"))
                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,1,0,0,1,2,0,0"))
                                    (rule "applyEq" (formula "58") (term "0,1,0,0,0,0,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "58") (term "1,0,0,0,0,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "58") (term "1,1,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "58") (term "1,1,1,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "58") (term "1,1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "58") (term "0,0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0,0,1,0"))
                                    (rule "applyEqRigid" (formula "61") (term "0,1,0,1,0,0,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "61") (term "1,0,1,0,0,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "61") (term "1,1,0,1,0,0,1,0"))
                                    (rule "times_zero_2" (formula "61") (term "1,1,1,0,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "61") (term "1,1,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,1,0,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "61") (term "0,0,1,0,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,1,0,0,1,0"))
                                    (rule "applyEqRigid" (formula "38") (term "0,1,1,2,0,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "38") (term "1,1,2,0,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "38") (term "1,1,1,2,0,0"))
                                    (rule "times_zero_2" (formula "38") (term "1,1,1,1,2,0,0"))
                                    (rule "add_zero_right" (formula "38") (term "1,1,1,2,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,1,2,0,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,1,1,2,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,1,2,0,0"))
                                    (rule "applyEq" (formula "55") (term "0,1,1,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "55") (term "1,1,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "55") (term "1,1,1,1,0"))
                                    (rule "mul_literals" (formula "55") (term "1,1,1,1,1,0"))
                                    (rule "add_zero_right" (formula "55") (term "1,1,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,1,1,0"))
                                    (rule "add_zero_right" (formula "55") (term "0,0,1,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,1,1,0"))
                                    (rule "applyEq" (formula "35") (term "0,1,1,0,1") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "35") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "35") (term "1,1,1,0,1"))
                                    (rule "mul_literals" (formula "35") (term "1,1,1,1,0,1"))
                                    (rule "add_zero_right" (formula "35") (term "1,1,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,1,0,1"))
                                    (rule "add_zero_right" (formula "35") (term "0,0,1,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,1,0,1"))
                                    (rule "applyEq" (formula "57") (term "0,1,0,1,0,0,2,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "57") (term "1,0,1,0,0,2,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "57") (term "1,1,0,1,0,0,2,0"))
                                    (rule "times_zero_2" (formula "57") (term "1,1,1,0,1,0,0,2,0"))
                                    (rule "add_zero_right" (formula "57") (term "1,1,0,1,0,0,2,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,0,1,0,0,2,0"))
                                    (rule "add_zero_right" (formula "57") (term "0,0,1,0,1,0,0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,1,0,0,2,0"))
                                    (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "34") (term "0,1,0,0,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "34") (term "1,0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "34") (term "1,1,0,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "34") (term "1,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "34") (term "0,0,0,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0,0,1,0"))
                                    (rule "applyEqRigid" (formula "42") (term "0,1,1,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "42") (term "1,1,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "42") (term "1,1,1,1,0"))
                                    (rule "times_zero_2" (formula "42") (term "1,1,1,1,1,0"))
                                    (rule "add_zero_right" (formula "42") (term "1,1,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1,1,1,0"))
                                    (rule "add_zero_right" (formula "42") (term "0,0,1,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,1,1,0"))
                                    (rule "applyEq" (formula "63") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "63") (term "0,1,0,0,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "63") (term "1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "63") (term "1,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "63") (term "1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "63") (term "0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0"))
                                    (rule "applyEqRigid" (formula "57") (term "0,1,1,2,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "57") (term "1,1,2,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "57") (term "1,1,1,2,0"))
                                    (rule "times_zero_2" (formula "57") (term "1,1,1,1,2,0"))
                                    (rule "add_zero_right" (formula "57") (term "1,1,1,2,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,1,2,0"))
                                    (rule "add_zero_right" (formula "57") (term "0,0,1,1,2,0"))
                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,1,2,0"))
                                    (rule "applyEq" (formula "39") (term "0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "39") (term "0,1,0,0,0,0,0,0,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,0,1,0,0,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "39") (term "1,1,0,1,0,0,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "1,0,1,0,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0,0,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,0,0,0,0,0,0,1,0"))
                                    (rule "applyEq" (formula "58") (term "0,0,1,0,0,1,0,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "58") (term "0,1,0,0,1,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "58") (term "1,0,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "58") (term "1,1,0,1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "58") (term "1,0,1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "58") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "58") (term "0,0,0,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0,0,1,0"))
                                    (rule "applyEqRigid" (formula "62") (term "0,1,1,1,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "62") (term "1,1,1,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "62") (term "1,1,1,1,1,0"))
                                    (rule "times_zero_2" (formula "62") (term "1,1,1,1,1,1,0"))
                                    (rule "add_zero_right" (formula "62") (term "1,1,1,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "62") (term "0,1,1,1,1,0"))
                                    (rule "add_zero_right" (formula "62") (term "0,0,1,1,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,1,1,1,0"))
                                    (rule "applyEq" (formula "55") (term "0,1,0,1,0,0,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "55") (term "1,0,1,0,0,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "55") (term "1,1,0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "55") (term "1,1,1,0,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "55") (term "1,1,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "55") (term "0,0,1,0,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,1,0,0,1,0"))
                                    (rule "applyEq" (formula "36") (term "0,1,1,0,0,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "36") (term "1,1,0,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "36") (term "1,1,1,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,1,1,1,0,0,0"))
                                    (rule "add_zero_right" (formula "36") (term "1,1,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,1,0,0,0"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,1,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,1,0,0,0"))
                                    (rule "applyEqRigid" (formula "80") (term "0,1,1") (ifseqformula "3"))
                                    (rule "applyEq" (formula "62") (term "0,0,1,0,0,1,1,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "62") (term "0,1,0,0,1,1,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "62") (term "1,0,1,0,0,1,1,1,0"))
                                    (rule "mul_literals" (formula "62") (term "1,1,0,1,0,0,1,1,1,0"))
                                    (rule "add_zero_right" (formula "62") (term "1,0,1,0,0,1,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,1,0,0,1,1,1,0"))
                                    (rule "add_zero_right" (formula "62") (term "0,0,0,1,0,0,1,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,1,0,0,1,1,1,0"))
                                    (rule "applyEq" (formula "36") (term "0,0,1,0,0,2,0,1,1") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,0,2,0,1,1") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,2,0,1,1"))
                                    (rule "mul_literals" (formula "36") (term "1,1,0,1,0,0,2,0,1,1"))
                                    (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,2,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,2,0,1,1"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,2,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,0,2,0,1,1"))
                                    (rule "applyEqRigid" (formula "42") (term "0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "42") (term "0,1,0,0,1,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "42") (term "1,0,1,0,0,1,1,0"))
                                    (rule "times_zero_2" (formula "42") (term "1,1,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "42") (term "1,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "42") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,1,0,0,1,1,0"))
                                    (rule "applyEqRigid" (formula "39") (term "0,1,0,0,0,0,1,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "39") (term "1,0,0,0,0,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "39") (term "1,1,1,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "1,1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0,0,1,0"))
                                    (rule "applyEqRigid" (formula "56") (term "0,0,1,0,0,1,0,0,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "56") (term "0,1,0,0,1,0,0,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "56") (term "1,0,1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "56") (term "1,1,0,1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "56") (term "1,0,1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "56") (term "0,0,0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0,0,1,0,0,0"))
                                    (rule "applyEq" (formula "57") (term "0,0,1,0,0,0,1,0,0,2,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "57") (term "0,1,0,0,0,1,0,0,2,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "57") (term "1,0,1,0,0,0,1,0,0,2,0"))
                                    (rule "mul_literals" (formula "57") (term "1,1,0,1,0,0,0,1,0,0,2,0"))
                                    (rule "add_zero_right" (formula "57") (term "1,0,1,0,0,0,1,0,0,2,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,1,0,0,0,1,0,0,2,0"))
                                    (rule "add_zero_right" (formula "57") (term "0,0,0,1,0,0,0,1,0,0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0,0,0,1,0,0,2,0"))
                                    (rule "applyEq" (formula "57") (term "0,1,1,1,2,0,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "57") (term "1,1,1,2,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "57") (term "1,1,1,1,2,0,0"))
                                    (rule "mul_literals" (formula "57") (term "1,1,1,1,1,2,0,0"))
                                    (rule "add_zero_right" (formula "57") (term "1,1,1,1,2,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,1,1,2,0,0"))
                                    (rule "add_zero_right" (formula "57") (term "0,0,1,1,1,2,0,0"))
                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,1,1,2,0,0"))
                                    (rule "applyEqRigid" (formula "80") (term "0,0") (ifseqformula "12"))
                                    (rule "eqSymm" (formula "80"))
                                    (rule "applyEqRigid" (formula "32") (term "0,0,1,0,0,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "32") (term "0,1,0,0,0") (ifseqformula "57"))
                                    (rule "ifthenelse_split" (formula "32") (term "1,1,0,0,1,0,0,0"))
                                    (branch " 1 + de.polyas.core3.open.cred.CredTool.polyasVals.seq@heapAtPre_B«anonHeapFunction».length * -1 ≤ 0 TRUE"
                                       (rule "replace_known_left" (formula "56") (term "0,0,1,0,0,1,0,1,0,0,1,1,1,0,1,0,0,1,0,1,0,0,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                       (rule "replace_known_left" (formula "58") (term "0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,2,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                       (rule "replace_known_left" (formula "33") (term "0,1,1,0,1,0,0,1,1,0,1,0,0,0,1,0,1,0,0,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                       (rule "replace_known_left" (formula "40") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0,0,0,0,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                       (rule "replace_known_left" (formula "64") (term "0,1,0,1,0,0,1,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                       (rule "replace_known_left" (formula "60") (term "0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                       (rule "replace_known_left" (formula "59") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                       (rule "replace_known_left" (formula "41") (term "0,1,1,0,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                       (rule "replace_known_left" (formula "42") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                       (rule "replace_known_left" (formula "35") (term "0,1,1,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                       (rule "replace_known_left" (formula "63") (term "0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                       (rule "replace_known_left" (formula "43") (term "0,1,1,0,1,0,0,1,0,1,0,0,1,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                       (rule "replace_known_left" (formula "61") (term "0,1,1,1,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                       (rule "replace_known_left" (formula "62") (term "0,0,1,0,0,1,0,1,0,0,0,1,0,0,1,0,1,0,0,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                       (rule "replace_known_left" (formula "39") (term "0,1,0,1,0,0,1,1,2,0,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                       (rule "replace_known_left" (formula "36") (term "0,0,0,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                       (rule "replace_known_left" (formula "57") (term "0,1,1,0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "36")))
                                       (rule "true_left" (formula "57"))
                                       (rule "replace_known_left" (formula "37") (term "0,1,0,1,0,0,0,1,0,0,1,0,1,0,0,2,0,1,1") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                       (rule "replace_known_left" (formula "38") (term "0,0,1,1,1") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                       (rule "true_left" (formula "38"))
                                       (rule "polySimp_elimSub" (formula "33") (term "1,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "33") (term "1,1,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "33") (term "1,0,1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "58") (term "0"))
                                       (rule "polySimp_addComm1" (formula "57") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "33") (term "0,0,0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,1,0,0,0"))
                                       (rule "replace_known_left" (formula "33") (term "0,0,1,0,0,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "32")))
                                       (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "33"))
                                        (builtin "One Step Simplification" (formula "57"))
                                       (rule "applyEqRigid" (formula "49") (term "1") (ifseqformula "26"))
                                       (rule "applyEqRigid" (formula "36") (term "0,1,0,1") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "36") (term "1,0,1") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "36") (term "1,1,0,1"))
                                       (rule "mul_literals" (formula "36") (term "1,1,1,0,1"))
                                       (rule "add_zero_right" (formula "36") (term "1,1,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,1"))
                                       (rule "add_zero_right" (formula "36") (term "0,0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,1"))
                                       (rule "replace_known_left" (formula "36") (term "0,1,0,1") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "applyEq" (formula "38") (term "0,1,2,0,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "38") (term "1,2,0,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "38") (term "1,1,2,0,0"))
                                       (rule "times_zero_2" (formula "38") (term "1,1,1,2,0,0"))
                                       (rule "add_zero_right" (formula "38") (term "1,1,2,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,2,0,0"))
                                       (rule "add_zero_right" (formula "38") (term "0,0,1,2,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,2,0,0"))
                                       (rule "replace_known_left" (formula "38") (term "0,1,2,0,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "applyEqRigid" (formula "39") (term "0,1,0,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "39") (term "1,0,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "39") (term "1,1,1,0,0"))
                                       (rule "add_zero_right" (formula "39") (term "1,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "39") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0"))
                                       (rule "replace_known_left" (formula "39") (term "0,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "39"))
                                       (rule "polySimp_addComm1" (formula "39") (term "0"))
                                       (rule "applyEqRigid" (formula "77") (term "0,1,1") (ifseqformula "12"))
                                       (rule "applyEqRigid" (formula "41") (term "0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "41") (term "1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "41") (term "1,1,0"))
                                       (rule "mul_literals" (formula "41") (term "1,1,1,0"))
                                       (rule "add_zero_right" (formula "41") (term "1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "41") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0"))
                                       (rule "replace_known_left" (formula "41") (term "0,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "applyEqRigid" (formula "40") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "40") (term "0,0,0,0,1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "40") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "40") (term "1,1,0,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "1,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,1,0"))
                                       (rule "replace_known_left" (formula "40") (term "0,0,0,0,0,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "applyEqRigid" (formula "56") (term "0,2,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "56") (term "2,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "56") (term "1,2,0"))
                                       (rule "mul_literals" (formula "56") (term "1,1,2,0"))
                                       (rule "add_zero_right" (formula "56") (term "1,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "56") (term "0,2,0"))
                                       (rule "add_zero_right" (formula "56") (term "0,0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,2,0"))
                                       (rule "replace_known_left" (formula "56") (term "0,2,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "56"))
                                       (rule "applyEqRigid" (formula "59") (term "0,1,1,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "59") (term "1,1,1,1,0"))
                                       (rule "mul_literals" (formula "59") (term "1,1,1,1,1,0"))
                                       (rule "add_zero_right" (formula "59") (term "1,1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,1,0"))
                                       (rule "add_zero_right" (formula "59") (term "0,0,1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,1,0"))
                                       (rule "replace_known_left" (formula "59") (term "0,1,1,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "59"))
                                       (rule "applyEqRigid" (formula "37") (term "0,0,1,0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,1,0"))
                                       (rule "times_zero_2" (formula "37") (term "1,1,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "37") (term "1,0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0,1,0"))
                                       (rule "replace_known_left" (formula "37") (term "0,0,1,0,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "applyEq" (formula "55") (term "0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "55") (term "1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "55") (term "1,1,0"))
                                       (rule "mul_literals" (formula "55") (term "1,1,1,0"))
                                       (rule "add_zero_right" (formula "55") (term "1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "55") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0"))
                                       (rule "replace_known_left" (formula "55") (term "0,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "55"))
                                       (rule "applyEqRigid" (formula "60") (term "0,1,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "60") (term "1,1,1,0"))
                                       (rule "mul_literals" (formula "60") (term "1,1,1,1,0"))
                                       (rule "add_zero_right" (formula "60") (term "1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,0"))
                                       (rule "add_zero_right" (formula "60") (term "0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,0"))
                                       (rule "replace_known_left" (formula "60") (term "0,1,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "60"))
                                       (rule "applyEqRigid" (formula "42") (term "0,1,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "42") (term "1,1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "42") (term "1,1,1,0"))
                                       (rule "mul_literals" (formula "42") (term "1,1,1,1,0"))
                                       (rule "add_zero_right" (formula "42") (term "1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1,1,0"))
                                       (rule "add_zero_right" (formula "42") (term "0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,1,0"))
                                       (rule "replace_known_left" (formula "42") (term "0,1,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "applyEqRigid" (formula "32") (term "0,0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "32") (term "0,1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "32") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "32") (term "1,1,0,1,0"))
                                       (rule "add_zero_right" (formula "32") (term "1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0"))
                                       (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "33") (term "0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "33") (term "1,0"))
                                       (rule "mul_literals" (formula "33") (term "1,1,0"))
                                       (rule "add_zero_right" (formula "33") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0"))
                                       (rule "add_zero_right" (formula "33") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                       (rule "applyEqRigid" (formula "57") (term "0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "57") (term "1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "57") (term "1,1,0"))
                                       (rule "mul_literals" (formula "57") (term "1,1,1,0"))
                                       (rule "add_zero_right" (formula "57") (term "1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "57") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0"))
                                       (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "58") (term "1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "58") (term "1,1,0"))
                                       (rule "mul_literals" (formula "58") (term "1,1,1,0"))
                                       (rule "add_zero_right" (formula "58") (term "1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "58") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0"))
                                       (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "35") (term "1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "35") (term "1,1,0"))
                                       (rule "mul_literals" (formula "35") (term "1,1,1,0"))
                                       (rule "add_zero_right" (formula "35") (term "1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "35") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0"))
                                       (rule "applyEq" (formula "59") (term "0,1,1,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "59") (term "1,1,1,1,0"))
                                       (rule "mul_literals" (formula "59") (term "1,1,1,1,1,0"))
                                       (rule "add_zero_right" (formula "59") (term "1,1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,1,0"))
                                       (rule "add_zero_right" (formula "59") (term "0,0,1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,1,0"))
                                       (rule "applyEq" (formula "32") (term "0,0,1,0,0,0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "32") (term "0,1,0,0,0,1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "32") (term "1,0,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "32") (term "1,1,0,1,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "32") (term "1,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0,0,0,1,0"))
                                       (rule "applyEqRigid" (formula "57") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "57") (term "0,1,0,0,1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "57") (term "1,0,1,0,0,1,0"))
                                       (rule "times_zero_2" (formula "57") (term "1,1,0,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "57") (term "1,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "57") (term "0,0,0,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0,0,1,0"))
                                       (rule "applyEqRigid" (formula "55") (term "0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "55") (term "1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "55") (term "1,1,0"))
                                       (rule "mul_literals" (formula "55") (term "1,1,1,0"))
                                       (rule "add_zero_right" (formula "55") (term "1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "55") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0"))
                                       (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "42") (term "1,1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "42") (term "1,1,1,0"))
                                       (rule "mul_literals" (formula "42") (term "1,1,1,1,0"))
                                       (rule "add_zero_right" (formula "42") (term "1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1,1,0"))
                                       (rule "add_zero_right" (formula "42") (term "0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,1,0"))
                                       (rule "applyEq" (formula "37") (term "0,1,0,0,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "37") (term "1,0,0,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "37") (term "1,1,0,0,0"))
                                       (rule "times_zero_2" (formula "37") (term "1,1,1,0,0,0"))
                                       (rule "add_zero_right" (formula "37") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0"))
                                       (rule "applyEq" (formula "33") (term "0,0,1,0,0,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "33") (term "0,1,0,0,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "33") (term "1,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "33") (term "1,1,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "33") (term "1,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "33") (term "0,0,0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,1,0,0,0"))
                                       (rule "applyEq" (formula "57") (term "0,1,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "57") (term "1,1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "57") (term "1,1,1,0"))
                                       (rule "mul_literals" (formula "57") (term "1,1,1,1,0"))
                                       (rule "add_zero_right" (formula "57") (term "1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,1,0"))
                                       (rule "add_zero_right" (formula "57") (term "0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,1,0"))
                                       (rule "applyEqRigid" (formula "32") (term "0,1,0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "32") (term "1,0,1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "32") (term "1,1,0,1,0"))
                                       (rule "mul_literals" (formula "32") (term "1,1,1,0,1,0"))
                                       (rule "add_zero_right" (formula "32") (term "1,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,1,0"))
                                       (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "33") (term "1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "33") (term "1,1,0"))
                                       (rule "times_zero_2" (formula "33") (term "1,1,1,0"))
                                       (rule "add_zero_right" (formula "33") (term "1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "33") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "33") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0"))
                                       (rule "applyEqRigid" (formula "58") (term "0,1,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "58") (term "1,1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "58") (term "1,1,1,0"))
                                       (rule "mul_literals" (formula "58") (term "1,1,1,1,0"))
                                       (rule "add_zero_right" (formula "58") (term "1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,1,0"))
                                       (rule "add_zero_right" (formula "58") (term "0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,1,0"))
                                       (rule "applyEqRigid" (formula "39") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "39") (term "1,1,0,1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "39") (term "1,1,1,0,1,0"))
                                       (rule "mul_literals" (formula "39") (term "1,1,1,1,0,1,0"))
                                       (rule "add_zero_right" (formula "39") (term "1,1,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,1,0,1,0"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,1,0,1,0"))
                                       (rule "applyEq" (formula "36") (term "0,1,0,1") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "36") (term "1,0,1") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "36") (term "1,1,0,1"))
                                       (rule "mul_literals" (formula "36") (term "1,1,1,0,1"))
                                       (rule "add_zero_right" (formula "36") (term "1,1,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,1"))
                                       (rule "add_zero_right" (formula "36") (term "0,0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,1"))
                                       (rule "applyEq" (formula "59") (term "0,0,0,0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "59") (term "0,0,0,1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "59") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "59") (term "1,1,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "59") (term "1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "59") (term "0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                       (rule "applyEqRigid" (formula "40") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "40") (term "1,1,0,1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "40") (term "1,1,1,0,1,0"))
                                       (rule "mul_literals" (formula "40") (term "1,1,1,1,0,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "1,1,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,1,0,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,1,0,1,0"))
                                       (rule "applyEq" (formula "56") (term "0,1,2,0,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "56") (term "1,2,0,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "56") (term "1,1,2,0,0"))
                                       (rule "mul_literals" (formula "56") (term "1,1,1,2,0,0"))
                                       (rule "add_zero_right" (formula "56") (term "1,1,2,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,2,0,0"))
                                       (rule "add_zero_right" (formula "56") (term "0,0,1,2,0,0"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,2,0,0"))
                                       (rule "applyEqRigid" (formula "40") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "40") (term "0,0,0,0,1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "40") (term "1,0,0,0,0,1,0"))
                                       (rule "times_zero_2" (formula "40") (term "1,1,0,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "1,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,1,0"))
                                       (rule "applyEqRigid" (formula "38") (term "0,1,2,0,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "38") (term "1,2,0,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "38") (term "1,1,2,0,0"))
                                       (rule "times_zero_2" (formula "38") (term "1,1,1,2,0,0"))
                                       (rule "add_zero_right" (formula "38") (term "1,1,2,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,2,0,0"))
                                       (rule "add_zero_right" (formula "38") (term "0,0,1,2,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,2,0,0"))
                                       (rule "applyEq" (formula "56") (term "0,2,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "56") (term "2,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "56") (term "1,2,0"))
                                       (rule "times_zero_2" (formula "56") (term "1,1,2,0"))
                                       (rule "add_zero_right" (formula "56") (term "1,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "56") (term "0,2,0"))
                                       (rule "add_zero_right" (formula "56") (term "0,0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,2,0"))
                                       (rule "applyEq" (formula "60") (term "0,1,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "60") (term "1,1,1,0"))
                                       (rule "mul_literals" (formula "60") (term "1,1,1,1,0"))
                                       (rule "add_zero_right" (formula "60") (term "1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,0"))
                                       (rule "add_zero_right" (formula "60") (term "0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,0"))
                                       (rule "applyEqRigid" (formula "37") (term "0,2,0,1,1") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "37") (term "2,0,1,1") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "37") (term "1,2,0,1,1"))
                                       (rule "mul_literals" (formula "37") (term "1,1,2,0,1,1"))
                                       (rule "add_zero_right" (formula "37") (term "1,2,0,1,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "37") (term "0,2,0,1,1"))
                                       (rule "add_zero_right" (formula "37") (term "0,0,2,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,2,0,1,1"))
                                       (rule "applyEqRigid" (formula "39") (term "0,1,0,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "39") (term "1,0,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "39") (term "1,1,1,0,0"))
                                       (rule "add_zero_right" (formula "39") (term "1,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "39") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "39") (term "0"))
                                       (rule "applyEq" (formula "38") (term "0,2,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "38") (term "2,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "38") (term "1,2,0"))
                                       (rule "mul_literals" (formula "38") (term "1,1,2,0"))
                                       (rule "add_zero_right" (formula "38") (term "1,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "38") (term "0,2,0"))
                                       (rule "add_zero_right" (formula "38") (term "0,0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,2,0"))
                                       (rule "applyEqRigid" (formula "41") (term "0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "41") (term "1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "41") (term "1,1,0"))
                                       (rule "mul_literals" (formula "41") (term "1,1,1,0"))
                                       (rule "add_zero_right" (formula "41") (term "1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "41") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0"))
                                       (rule "applyEqRigid" (formula "40") (term "0,1,0,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "40") (term "1,0,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "40") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "40") (term "1,1,1,0,0"))
                                       (rule "add_zero_right" (formula "40") (term "1,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0"))
                                       (rule "replace_known_left" (formula "40") (term "0,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "applyEq" (formula "36") (term "0,0,0,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "36") (term "0,0,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "36") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "36") (term "1,1,0,0,0"))
                                       (rule "add_zero_right" (formula "36") (term "1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0"))
                                       (rule "add_zero_right" (formula "36") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                                       (rule "replace_known_left" (formula "36") (term "0,0,0,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "applyEqRigid" (formula "58") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "58") (term "0,1,0,0,1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "58") (term "1,0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "58") (term "1,1,0,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "58") (term "1,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "58") (term "0,0,0,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0,0,1,0"))
                                       (rule "replace_known_left" (formula "58") (term "0,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "58"))
                                       (rule "applyEq" (formula "37") (term "0,0,1,0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "37") (term "1,1,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "37") (term "1,0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0,1,0"))
                                       (rule "replace_known_left" (formula "37") (term "0,0,1,0,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "applyEqRigid" (formula "35") (term "0,1,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "35") (term "1,1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "35") (term "1,1,1,0"))
                                       (rule "mul_literals" (formula "35") (term "1,1,1,1,0"))
                                       (rule "add_zero_right" (formula "35") (term "1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,1,0"))
                                       (rule "add_zero_right" (formula "35") (term "0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,1,0"))
                                       (rule "replace_known_left" (formula "35") (term "0,1,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "applyEq" (formula "37") (term "0,0,1,0,0,1,0,1,0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,0,1,0,1,0,1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0,1,0,1,0,1,0"))
                                       (rule "times_zero_2" (formula "37") (term "1,1,0,1,0,0,1,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "37") (term "1,0,1,0,0,1,0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0,1,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0,1,0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0,0,1,0,1,0,1,0"))
                                       (rule "replace_known_left" (formula "37") (term "0,1,0,1,0,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "applyEqRigid" (formula "36") (term "0,0,1,0,0,1,0,0,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,0,1,0,0,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "36") (term "1,1,0,1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,0,1,0,0,0"))
                                       (rule "replace_known_left" (formula "36") (term "0,0,1,0,0,1,0,0,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "32")))
                                       (rule "applyEq" (formula "40") (term "0,0,1,0,0,1,1,0,1,0,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "40") (term "0,1,0,0,1,1,0,1,0,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "40") (term "1,0,1,0,0,1,1,0,1,0,0"))
                                       (rule "times_zero_2" (formula "40") (term "1,1,0,1,0,0,1,1,0,1,0,0"))
                                       (rule "add_zero_right" (formula "40") (term "1,0,1,0,0,1,1,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0,0,1,1,0,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,0,1,0,0,1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,0,0,1,1,0,1,0"))
                                       (rule "replace_known_left" (formula "40") (term "0,0,1,0,0,1,1,0,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "32")))
                                       (rule "polySimp_addComm1" (formula "40") (term "0"))
                                       (rule "applyEqRigid" (formula "41") (term "0,1,0,1,0,0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "41") (term "1,0,1,0,0,1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "41") (term "1,1,0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "41") (term "1,1,1,0,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "41") (term "1,1,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "41") (term "0,0,1,0,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,1,0,0,1,0"))
                                       (rule "applyEq" (formula "38") (term "0,1,1,2,0,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "38") (term "1,1,2,0,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "38") (term "1,1,1,2,0,0"))
                                       (rule "mul_literals" (formula "38") (term "1,1,1,1,2,0,0"))
                                       (rule "add_zero_right" (formula "38") (term "1,1,1,2,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,1,2,0,0"))
                                       (rule "add_zero_right" (formula "38") (term "0,0,1,1,2,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,1,2,0,0"))
                                       (rule "applyEqRigid" (formula "32") (term "0,1,0,1,0,0,0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "32") (term "1,0,1,0,0,0,1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "32") (term "1,1,0,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "32") (term "1,1,1,0,1,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "32") (term "1,1,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,0,1,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0,1,0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,1,0,0,0,1,0"))
                                       (rule "applyEq" (formula "35") (term "0,0,1,0,0,1,1,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "35") (term "0,1,0,0,1,1,1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "35") (term "1,0,1,0,0,1,1,1,0"))
                                       (rule "times_zero_2" (formula "35") (term "1,1,0,1,0,0,1,1,1,0"))
                                       (rule "add_zero_right" (formula "35") (term "1,0,1,0,0,1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,1,0,0,1,1,1,0"))
                                       (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,0,1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0,0,1,1,1,0"))
                                       (rule "applyEqRigid" (formula "41") (term "0,1,1,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "41") (term "1,1,1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "41") (term "1,1,1,1,0"))
                                       (rule "times_zero_2" (formula "41") (term "1,1,1,1,1,0"))
                                       (rule "add_zero_right" (formula "41") (term "1,1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,1,1,0"))
                                       (rule "add_zero_right" (formula "41") (term "0,0,1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,1,1,0"))
                                       (rule "applyEqRigid" (formula "39") (term "0,0,1,0,0,1,1,0,1,0") (ifseqformula "4"))
                                       (rule "polySimp_addComm1" (formula "39") (term "0"))
                                       (rule "lenOfSeqSubEQ" (formula "39") (term "0,1,0,0,1,1,0,1,0,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "39") (term "1,0,1,0,0,1,1,0,1,0,0"))
                                       (rule "mul_literals" (formula "39") (term "1,1,0,1,0,0,1,1,0,1,0,0"))
                                       (rule "add_zero_right" (formula "39") (term "1,0,1,0,0,1,1,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "39") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0,0,1,1,0,1,0"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,0,0,1,1,0,1,0"))
                                       (rule "applyEq" (formula "38") (term "0,1,0,1,0,0,2,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "38") (term "1,0,1,0,0,2,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "38") (term "1,1,0,1,0,0,2,0"))
                                       (rule "mul_literals" (formula "38") (term "1,1,1,0,1,0,0,2,0"))
                                       (rule "add_zero_right" (formula "38") (term "1,1,0,1,0,0,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,0,1,0,0,2,0"))
                                       (rule "add_zero_right" (formula "38") (term "0,0,1,0,1,0,0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,1,0,0,2,0"))
                                       (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "32") (term "0,1,0,0,1,0,1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "32") (term "1,0,1,0,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "32") (term "1,1,0,1,0,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "32") (term "1,0,1,0,0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0,0,1,0,1,0"))
                                       (rule "applyEqRigid" (formula "56") (term "0,0,1,0,0,2,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "56") (term "0,1,0,0,2,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "56") (term "1,0,1,0,0,2,0"))
                                       (rule "mul_literals" (formula "56") (term "1,1,0,1,0,0,2,0"))
                                       (rule "add_zero_right" (formula "56") (term "1,0,1,0,0,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,1,0,0,2,0"))
                                       (rule "add_zero_right" (formula "56") (term "0,0,0,1,0,0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0,0,2,0"))
                                       (rule "applyEq" (formula "60") (term "0,1,0,1,0,0,1,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "60") (term "1,0,1,0,0,1,1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "60") (term "1,1,0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "60") (term "1,1,1,0,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "60") (term "1,1,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,0,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "60") (term "0,0,1,0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,1,0,0,1,1,0"))
                                       (rule "applyEqRigid" (formula "38") (term "0,0,1,0,0,1,2,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "38") (term "0,1,0,0,1,2,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "38") (term "1,0,1,0,0,1,2,0"))
                                       (rule "mul_literals" (formula "38") (term "1,1,0,1,0,0,1,2,0"))
                                       (rule "add_zero_right" (formula "38") (term "1,0,1,0,0,1,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,1,0,0,1,2,0"))
                                       (rule "add_zero_right" (formula "38") (term "0,0,0,1,0,0,1,2,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,0,0,1,2,0"))
                                       (rule "applyEq" (formula "38") (term "0,1,1,2,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "38") (term "1,1,2,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "38") (term "1,1,1,2,0"))
                                       (rule "mul_literals" (formula "38") (term "1,1,1,1,2,0"))
                                       (rule "add_zero_right" (formula "38") (term "1,1,1,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,1,2,0"))
                                       (rule "add_zero_right" (formula "38") (term "0,0,1,1,2,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,1,2,0"))
                                       (rule "applyEqRigid" (formula "60") (term "0,1,1,1,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,1,1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "60") (term "1,1,1,1,1,0"))
                                       (rule "mul_literals" (formula "60") (term "1,1,1,1,1,1,0"))
                                       (rule "add_zero_right" (formula "60") (term "1,1,1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,1,1,0"))
                                       (rule "add_zero_right" (formula "60") (term "0,0,1,1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,1,1,0"))
                                       (rule "applyEq" (formula "42") (term "0,1,1,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "42") (term "1,1,1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "42") (term "1,1,1,1,0"))
                                       (rule "mul_literals" (formula "42") (term "1,1,1,1,1,0"))
                                       (rule "add_zero_right" (formula "42") (term "1,1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1,1,1,0"))
                                       (rule "add_zero_right" (formula "42") (term "0,0,1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,1,1,0"))
                                       (rule "applyEq" (formula "57") (term "0,1,1,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "57") (term "1,1,1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "57") (term "1,1,1,1,0"))
                                       (rule "times_zero_2" (formula "57") (term "1,1,1,1,1,0"))
                                       (rule "add_zero_right" (formula "57") (term "1,1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,1,1,0"))
                                       (rule "add_zero_right" (formula "57") (term "0,0,1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,1,1,0"))
                                       (rule "applyEqRigid" (formula "41") (term "0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "41") (term "0,1,0,0,1,1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "41") (term "1,0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "41") (term "1,1,0,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "41") (term "1,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "41") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,0,0,1,1,0"))
                                       (rule "applyEqRigid" (formula "60") (term "0,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "60") (term "0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "60") (term "1,0,1,0,0,0,1,0,0,1,1,0"))
                                       (rule "times_zero_2" (formula "60") (term "1,1,0,1,0,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "60") (term "1,0,1,0,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,1,0,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "60") (term "0,0,0,1,0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1,0,0,0,1,0,0,1,1,0"))
                                       (rule "applyEq" (formula "57") (term "0,0,1,0,0,0,1,0,0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "57") (term "0,1,0,0,0,1,0,0,1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "57") (term "1,0,1,0,0,0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "57") (term "1,1,0,1,0,0,0,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "57") (term "1,0,1,0,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,1,0,0,0,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "57") (term "0,0,0,1,0,0,0,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                       (rule "applyEqRigid" (formula "32") (term "0,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "32") (term "0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "32") (term "1,0,1,0,0,0,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "32") (term "1,1,0,1,0,0,0,1,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "32") (term "1,0,1,0,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0,0,0,1,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0,0,0,1,0,0,0,1,0"))
                                       (rule "applyEqRigid" (formula "42") (term "0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "42") (term "0,1,0,0,1,1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "42") (term "1,0,1,0,0,1,1,0"))
                                       (rule "times_zero_2" (formula "42") (term "1,1,0,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "42") (term "1,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "42") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,1,0,0,1,1,0"))
                                       (rule "applyEq" (formula "59") (term "0,1,1,1,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,1,1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "59") (term "1,1,1,1,1,0"))
                                       (rule "mul_literals" (formula "59") (term "1,1,1,1,1,1,0"))
                                       (rule "add_zero_right" (formula "59") (term "1,1,1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,1,1,0"))
                                       (rule "add_zero_right" (formula "59") (term "0,0,1,1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,1,1,0"))
                                       (rule "applyEqRigid" (formula "57") (term "0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "57") (term "0,1,0,0,1,1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "57") (term "1,0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "57") (term "1,1,0,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "57") (term "1,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "57") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0,0,1,1,0"))
                                       (rule "applyEq" (formula "56") (term "0,1,2,0") (ifseqformula "4"))
                                       (rule "lenOfSeqSubEQ" (formula "56") (term "1,2,0") (ifseqformula "38"))
                                       (rule "ifthenelse_split" (formula "56") (term "0,1,0,0,0,1,1,2,0"))
                                       (branch " 1 + de.polyas.core3.open.cred.CredTool.polyasVals.seq@heapAtPre_B«anonHeapFunction».length * -1 ≤ 0 TRUE"
                                          (rule "replace_known_left" (formula "60") (term "0,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,1,1,1,1,0") (ifseqformula "56"))
                                           (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")))
                                          (rule "replace_known_left" (formula "38") (term "0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,2,0") (ifseqformula "56"))
                                           (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")))
                                          (rule "replace_known_left" (formula "32") (term "0,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "56"))
                                           (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")))
                                          (rule "true_left" (formula "32"))
                                          (rule "replace_known_left" (formula "41") (term "0,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,1,1,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")))
                                          (rule "replace_known_left" (formula "56") (term "0,1,1,0,1,0,0,0,1,0,0,0,1,0,0,1,0,1,1,2,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")))
                                          (rule "replace_known_left" (formula "40") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")))
                                          (rule "replace_known_left" (formula "60") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")))
                                          (rule "replace_known_left" (formula "57") (term "0,1,1,0,1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,1,1,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")))
                                          (rule "replace_known_left" (formula "58") (term "0,1,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "replace_known_left" (formula "39") (term "0,1,1,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")))
                                          (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")))
                                          (rule "replace_known_left" (formula "38") (term "0,1,0,1,0,0,1,1,0,1,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")))
                                          (rule "replace_known_left" (formula "32") (term "0,0,1,0,0,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "55")) (ifInst ""  (formula "55")))
                                          (rule "replace_known_left" (formula "54") (term "0,1,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "replace_known_left" (formula "35") (term "0,1,0,1") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "55")) (ifInst ""  (formula "55")))
                                          (rule "replace_known_left" (formula "36") (term "0,0,1,0,0,0,1,0,1,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,2,0"))
                                          (rule "times_zero_2" (formula "56") (term "1,1,2,0"))
                                          (rule "add_zero_right" (formula "56") (term "1,2,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "56") (term "0,2,0"))
                                          (rule "add_zero_right" (formula "56") (term "0,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,2,0"))
                                          (rule "replace_known_left" (formula "56") (term "0,2,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "applyEq" (formula "36") (term "0,0,1,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,1,0"))
                                          (rule "times_zero_2" (formula "36") (term "1,1,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "36") (term "1,0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,1,0"))
                                          (rule "replace_known_left" (formula "36") (term "0,0,1,0,1,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "applyEqRigid" (formula "35") (term "0,1,0,1") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "35") (term "1,0,1") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "35") (term "1,1,0,1"))
                                          (rule "mul_literals" (formula "35") (term "1,1,1,0,1"))
                                          (rule "add_zero_right" (formula "35") (term "1,1,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0,1"))
                                          (rule "add_zero_right" (formula "35") (term "0,0,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,1"))
                                          (rule "replace_known_left" (formula "35") (term "0,1,0,1") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "35"))
                                          (rule "applyEq" (formula "60") (term "0,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "60") (term "1,1,1,0"))
                                          (rule "mul_literals" (formula "60") (term "1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "60") (term "1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,0"))
                                          (rule "add_zero_right" (formula "60") (term "0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,0"))
                                          (rule "replace_known_left" (formula "60") (term "0,1,1,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "applyEqRigid" (formula "59") (term "0,1,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "59") (term "1,1,1,1,0"))
                                          (rule "mul_literals" (formula "59") (term "1,1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "1,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,1,0"))
                                          (rule "replace_known_left" (formula "59") (term "0,1,1,1,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "applyEq" (formula "38") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "38") (term "0,0,0,0,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "38") (term "1,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "38") (term "1,1,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "38") (term "1,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,1,0"))
                                          (rule "replace_known_left" (formula "38") (term "0,0,0,0,0,1,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "applyEqRigid" (formula "37") (term "0,2,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "37") (term "2,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "37") (term "1,2,0"))
                                          (rule "mul_literals" (formula "37") (term "1,1,2,0"))
                                          (rule "add_zero_right" (formula "37") (term "1,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "37") (term "0,2,0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,2,0"))
                                          (rule "replace_known_left" (formula "37") (term "0,2,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "applyEqRigid" (formula "57") (term "0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "57") (term "1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "57") (term "1,1,0"))
                                          (rule "mul_literals" (formula "57") (term "1,1,1,0"))
                                          (rule "add_zero_right" (formula "57") (term "1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "57") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0"))
                                          (rule "replace_known_left" (formula "57") (term "0,1,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "applyEq" (formula "54") (term "0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "54") (term "1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "54") (term "1,1,0"))
                                          (rule "mul_literals" (formula "54") (term "1,1,1,0"))
                                          (rule "add_zero_right" (formula "54") (term "1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "54") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "54") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0"))
                                          (rule "replace_known_left" (formula "54") (term "0,1,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "applyEqRigid" (formula "55") (term "0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "55") (term "0,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "55") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "55") (term "1,1,0,1,0"))
                                          (rule "add_zero_right" (formula "55") (term "1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,1,0"))
                                          (rule "add_zero_right" (formula "55") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0"))
                                          (rule "applyEqRigid" (formula "32") (term "0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "32") (term "0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "32") (term "1,0"))
                                          (rule "mul_literals" (formula "32") (term "1,1,0"))
                                          (rule "add_zero_right" (formula "32") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                          (rule "applyEqRigid" (formula "34") (term "0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "34") (term "1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "34") (term "1,1,0"))
                                          (rule "mul_literals" (formula "34") (term "1,1,1,0"))
                                          (rule "add_zero_right" (formula "34") (term "1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                                          (rule "applyEq" (formula "40") (term "0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "40") (term "1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "40") (term "1,1,0"))
                                          (rule "mul_literals" (formula "40") (term "1,1,1,0"))
                                          (rule "add_zero_right" (formula "40") (term "1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "40") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0"))
                                          (rule "applyEq" (formula "39") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "39") (term "0,0,0,0,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "39") (term "1,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "39") (term "1,1,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "1,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,1,0"))
                                          (rule "applyEqRigid" (formula "41") (term "0,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "41") (term "1,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "41") (term "1,1,1,0"))
                                          (rule "times_zero_2" (formula "41") (term "1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,1,0"))
                                          (rule "applyEq" (formula "39") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "39") (term "1,1,0,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "39") (term "1,1,1,0,1,0"))
                                          (rule "mul_literals" (formula "39") (term "1,1,1,1,0,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "1,1,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,1,0,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,1,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,1,0,1,0"))
                                          (rule "applyEq" (formula "39") (term "0,1,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "39") (term "1,0,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "39") (term "1,1,1,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0"))
                                          (rule "applyEq" (formula "56") (term "0,1,2,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "56") (term "1,2,0,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,1,2,0,0"))
                                          (rule "mul_literals" (formula "56") (term "1,1,1,2,0,0"))
                                          (rule "add_zero_right" (formula "56") (term "1,1,2,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,2,0,0"))
                                          (rule "add_zero_right" (formula "56") (term "0,0,1,2,0,0"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,2,0,0"))
                                          (rule "applyEq" (formula "56") (term "0,2,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "56") (term "2,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,2,0"))
                                          (rule "mul_literals" (formula "56") (term "1,1,2,0"))
                                          (rule "add_zero_right" (formula "56") (term "1,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "56") (term "0,2,0"))
                                          (rule "add_zero_right" (formula "56") (term "0,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,2,0"))
                                          (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "58") (term "1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "58") (term "1,1,0"))
                                          (rule "times_zero_2" (formula "58") (term "1,1,1,0"))
                                          (rule "add_zero_right" (formula "58") (term "1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "58") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0"))
                                          (rule "applyEq" (formula "58") (term "0,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "58") (term "1,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "58") (term "1,1,1,0"))
                                          (rule "mul_literals" (formula "58") (term "1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "58") (term "1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,1,0"))
                                          (rule "add_zero_right" (formula "58") (term "0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,1,0"))
                                          (rule "applyEqRigid" (formula "56") (term "0,0,1,0,0,2,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "56") (term "0,1,0,0,2,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,0,1,0,0,2,0"))
                                          (rule "mul_literals" (formula "56") (term "1,1,0,1,0,0,2,0"))
                                          (rule "add_zero_right" (formula "56") (term "1,0,1,0,0,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,1,0,0,2,0"))
                                          (rule "add_zero_right" (formula "56") (term "0,0,0,1,0,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0,0,2,0"))
                                          (rule "replace_known_left" (formula "56") (term "0,2,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "applyEqRigid" (formula "40") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "40") (term "0,1,0,0,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "40") (term "1,0,1,0,0,1,0"))
                                          (rule "times_zero_2" (formula "40") (term "1,1,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "40") (term "1,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "40") (term "0,0,0,1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,0,0,1,0"))
                                          (rule "replace_known_left" (formula "40") (term "0,1,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "applyEqRigid" (formula "59") (term "0,0,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "59") (term "0,0,0,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "59") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "59") (term "1,1,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                          (rule "applyEqRigid" (formula "55") (term "0,0,1,0,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "55") (term "0,1,0,0,0,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "55") (term "1,0,1,0,0,0,1,0"))
                                          (rule "times_zero_2" (formula "55") (term "1,1,0,1,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "55") (term "1,0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,1,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "55") (term "0,0,0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0,0,0,1,0"))
                                          (rule "applyEq" (formula "32") (term "0,0,1,0,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "32") (term "0,1,0,0,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "32") (term "1,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "32") (term "1,1,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "32") (term "1,0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0,0,0"))
                                          (rule "applyEqRigid" (formula "58") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "58") (term "0,1,0,0,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "58") (term "1,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "58") (term "1,1,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "58") (term "1,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "58") (term "0,0,0,1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0,0,1,0"))
                                          (rule "applyEqRigid" (formula "36") (term "0,2,0,1,1") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "36") (term "2,0,1,1") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "36") (term "1,2,0,1,1"))
                                          (rule "mul_literals" (formula "36") (term "1,1,2,0,1,1"))
                                          (rule "add_zero_right" (formula "36") (term "1,2,0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "0,2,0,1,1"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,2,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,2,0,1,1"))
                                          (rule "applyEqRigid" (formula "39") (term "0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "39") (term "0,1,0,0,0,0,0,0,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "39") (term "1,0,1,0,0,0,0,0,0,1,0"))
                                          (rule "times_zero_2" (formula "39") (term "1,1,0,1,0,0,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "1,0,1,0,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0,0,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,0,0,0,0,0,0,1,0"))
                                          (rule "applyEq" (formula "39") (term "0,1,1,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "39") (term "1,1,0,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "39") (term "1,1,1,0,0"))
                                          (rule "times_zero_2" (formula "39") (term "1,1,1,1,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "1,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0"))
                                          (rule "applyEq" (formula "55") (term "0,1,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "55") (term "1,0,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "55") (term "1,1,0,1,0"))
                                          (rule "mul_literals" (formula "55") (term "1,1,1,0,1,0"))
                                          (rule "add_zero_right" (formula "55") (term "1,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "55") (term "0,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,1,0"))
                                          (rule "applyEq" (formula "34") (term "0,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "34") (term "1,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "34") (term "1,1,1,0"))
                                          (rule "mul_literals" (formula "34") (term "1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "34") (term "1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,1,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,1,0"))
                                          (rule "applyEqRigid" (formula "34") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "34") (term "0,1,0,0,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "34") (term "1,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "34") (term "1,1,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "34") (term "1,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,0,1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0,0,1,0"))
                                          (rule "applyEqRigid" (formula "41") (term "0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "41") (term "0,1,0,0,1,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "41") (term "1,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "41") (term "1,1,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "1,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "applyEqRigid" (formula "38") (term "0,1,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "38") (term "1,0,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "38") (term "1,1,0,0"))
                                          (rule "times_zero_2" (formula "38") (term "1,1,1,0,0"))
                                          (rule "add_zero_right" (formula "38") (term "1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "38") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "38") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                                          (rule "applyEqRigid" (formula "35") (term "0,0,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "35") (term "0,0,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "35") (term "1,0,0,0"))
                                          (rule "times_zero_2" (formula "35") (term "1,1,0,0,0"))
                                          (rule "add_zero_right" (formula "35") (term "1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0"))
                                          (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "36") (term "0,1,0,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "36") (term "1,0,0,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "36") (term "1,1,0,0,0"))
                                          (rule "times_zero_2" (formula "36") (term "1,1,1,0,0,0"))
                                          (rule "add_zero_right" (formula "36") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0"))
                                          (rule "applyEq" (formula "35") (term "0,1,0,1") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "35") (term "1,0,1") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "35") (term "1,1,0,1"))
                                          (rule "mul_literals" (formula "35") (term "1,1,1,0,1"))
                                          (rule "add_zero_right" (formula "35") (term "1,1,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0,1"))
                                          (rule "add_zero_right" (formula "35") (term "0,0,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,1"))
                                          (rule "applyEq" (formula "37") (term "0,1,2,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "37") (term "1,2,0,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "37") (term "1,1,2,0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,1,1,2,0,0"))
                                          (rule "add_zero_right" (formula "37") (term "1,1,2,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,2,0,0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,1,2,0,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,2,0,0"))
                                          (rule "applyEqRigid" (formula "32") (term "0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "32") (term "1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "32") (term "1,1,0"))
                                          (rule "times_zero_2" (formula "32") (term "1,1,1,0"))
                                          (rule "add_zero_right" (formula "32") (term "1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0"))
                                          (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "57") (term "1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "57") (term "1,1,0"))
                                          (rule "mul_literals" (formula "57") (term "1,1,1,0"))
                                          (rule "add_zero_right" (formula "57") (term "1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "57") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0"))
                                          (rule "applyEqRigid" (formula "60") (term "0,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "60") (term "1,1,1,0"))
                                          (rule "mul_literals" (formula "60") (term "1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "60") (term "1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,0"))
                                          (rule "add_zero_right" (formula "60") (term "0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,0"))
                                          (rule "applyEq" (formula "37") (term "0,2,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "37") (term "2,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "37") (term "1,2,0"))
                                          (rule "times_zero_2" (formula "37") (term "1,1,2,0"))
                                          (rule "add_zero_right" (formula "37") (term "1,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "37") (term "0,2,0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,2,0"))
                                          (rule "applyEq" (formula "59") (term "0,1,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "59") (term "1,1,1,1,0"))
                                          (rule "mul_literals" (formula "59") (term "1,1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "1,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,1,0"))
                                          (rule "applyEq" (formula "36") (term "0,0,1,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "36") (term "1,1,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "36") (term "1,0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,1,0"))
                                          (rule "applyEqRigid" (formula "54") (term "0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "54") (term "1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "54") (term "1,1,0"))
                                          (rule "times_zero_2" (formula "54") (term "1,1,1,0"))
                                          (rule "add_zero_right" (formula "54") (term "1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "54") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "54") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0"))
                                          (rule "applyEq" (formula "41") (term "0,1,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "41") (term "1,1,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "41") (term "1,1,1,1,0"))
                                          (rule "mul_literals" (formula "41") (term "1,1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "1,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,1,1,0"))
                                          (rule "applyEq" (formula "41") (term "0,1,1,1,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "41") (term "1,1,1,1,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "41") (term "1,1,1,1,1,1,0"))
                                          (rule "mul_literals" (formula "41") (term "1,1,1,1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "1,1,1,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,1,1,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,1,1,1,1,0"))
                                          (rule "applyEqRigid" (formula "36") (term "0,0,1,0,0,1,0,1,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,0,1,0,1,0,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,1,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "36") (term "1,1,0,1,0,0,1,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,1,0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,1,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,1,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,0,1,0,1,0,1,0"))
                                          (rule "applyEq" (formula "60") (term "0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "60") (term "0,1,0,0,1,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "60") (term "1,0,1,0,0,1,1,0"))
                                          (rule "times_zero_2" (formula "60") (term "1,1,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "60") (term "1,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "60") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "replace_known_left" (formula "60") (term "0,1,1,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "applyEq" (formula "39") (term "0,1,0,0,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "39") (term "1,0,0,0,0,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "39") (term "1,1,1,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "1,1,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0,0,1,0"))
                                          (rule "applyEq" (formula "37") (term "0,1,2,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "37") (term "1,2,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "37") (term "1,1,2,0"))
                                          (rule "mul_literals" (formula "37") (term "1,1,1,2,0"))
                                          (rule "add_zero_right" (formula "37") (term "1,1,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,2,0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,1,2,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,2,0"))
                                          (rule "applyEqRigid" (formula "36") (term "0,1,1,0,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "36") (term "1,1,0,0,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "36") (term "1,1,1,0,0,0"))
                                          (rule "mul_literals" (formula "36") (term "1,1,1,1,0,0,0"))
                                          (rule "add_zero_right" (formula "36") (term "1,1,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,1,0,0,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,1,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,1,0,0,0"))
                                          (rule "applyEq" (formula "58") (term "0,1,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "58") (term "1,1,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "58") (term "1,1,1,1,0"))
                                          (rule "mul_literals" (formula "58") (term "1,1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "58") (term "1,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,1,1,0"))
                                          (rule "add_zero_right" (formula "58") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,1,1,0"))
                                          (rule "applyEq" (formula "35") (term "0,0,1,0,0,1,0,1") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "35") (term "0,1,0,0,1,0,1") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "35") (term "1,0,1,0,0,1,0,1"))
                                          (rule "times_zero_2" (formula "35") (term "1,1,0,1,0,0,1,0,1"))
                                          (rule "add_zero_right" (formula "35") (term "1,0,1,0,0,1,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,1,0,0,1,0,1"))
                                          (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,0,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0,0,1,0,1"))
                                          (rule "applyEq" (formula "38") (term "0,0,0,0,0,1,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "38") (term "0,0,0,0,1,0,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "38") (term "1,0,0,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "38") (term "1,1,0,0,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "38") (term "1,0,0,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "38") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,1,0"))
                                          (rule "applyEq" (formula "39") (term "0,1,1,1,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "39") (term "1,1,1,0,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "39") (term "1,1,1,1,0,1,0"))
                                          (rule "mul_literals" (formula "39") (term "1,1,1,1,1,0,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "1,1,1,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,1,1,0,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,1,1,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,1,1,0,1,0"))
                                          (rule "applyEq" (formula "55") (term "0,1,0,1,0,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "55") (term "1,0,1,0,0,0,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "55") (term "1,1,0,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "55") (term "1,1,1,0,1,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "55") (term "1,1,0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0,1,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "55") (term "0,0,1,0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,1,0,0,0,1,0"))
                                          (rule "applyEq" (formula "40") (term "0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "40") (term "1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "40") (term "1,1,0"))
                                          (rule "mul_literals" (formula "40") (term "1,1,1,0"))
                                          (rule "add_zero_right" (formula "40") (term "1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "40") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0"))
                                          (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "32") (term "0,1,0,0,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "32") (term "1,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "32") (term "1,1,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "32") (term "1,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0,0,1,0"))
                                          (rule "applyEqRigid" (formula "36") (term "0,1,2,0,1,1") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "36") (term "1,2,0,1,1") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "36") (term "1,1,2,0,1,1"))
                                          (rule "mul_literals" (formula "36") (term "1,1,1,2,0,1,1"))
                                          (rule "add_zero_right" (formula "36") (term "1,1,2,0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,2,0,1,1"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,1,2,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,2,0,1,1"))
                                          (rule "applyEqRigid" (formula "34") (term "0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "34") (term "0,1,0,0,1,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "34") (term "1,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "34") (term "1,1,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "34") (term "1,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "applyEqRigid" (formula "41") (term "0,0,1,0,0,1,1,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "41") (term "0,1,0,0,1,1,1,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "41") (term "1,0,1,0,0,1,1,1,1,0"))
                                          (rule "times_zero_2" (formula "41") (term "1,1,0,1,0,0,1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "1,0,1,0,0,1,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,1,0,0,1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,0,1,0,0,1,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,0,0,1,1,1,1,0"))
                                          (rule "applyEqRigid" (formula "59") (term "0,1,0,1,0,0,1,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "59") (term "1,0,1,0,0,1,1,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "59") (term "1,1,0,1,0,0,1,1,1,0"))
                                          (rule "mul_literals" (formula "59") (term "1,1,1,0,1,0,0,1,1,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "1,1,0,1,0,0,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,0,1,0,0,1,1,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "0,0,1,0,1,0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,1,0,0,1,1,1,0"))
                                          (rule "applyEq" (formula "35") (term "0,1,1,0,1") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "35") (term "1,1,0,1") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "35") (term "1,1,1,0,1"))
                                          (rule "mul_literals" (formula "35") (term "1,1,1,1,0,1"))
                                          (rule "add_zero_right" (formula "35") (term "1,1,1,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,1,0,1"))
                                          (rule "add_zero_right" (formula "35") (term "0,0,1,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,1,0,1"))
                                          (rule "applyEqRigid" (formula "58") (term "0,0,1,0,0,0,1,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "58") (term "0,1,0,0,0,1,0,0,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "58") (term "1,0,1,0,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "58") (term "1,1,0,1,0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "58") (term "1,0,1,0,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,1,0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "58") (term "0,0,0,1,0,0,0,1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                          (rule "applyEq" (formula "57") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "57") (term "0,1,0,0,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "57") (term "1,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "57") (term "1,1,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "57") (term "1,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "57") (term "0,0,0,1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0,0,1,0"))
                                          (rule "applyEq" (formula "55") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "55") (term "1,1,0,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "55") (term "1,1,1,0,1,0"))
                                          (rule "mul_literals" (formula "55") (term "1,1,1,1,0,1,0"))
                                          (rule "add_zero_right" (formula "55") (term "1,1,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,1,0,1,0"))
                                          (rule "add_zero_right" (formula "55") (term "0,0,1,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,1,0,1,0"))
                                          (rule "applyEqRigid" (formula "32") (term "0,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "32") (term "1,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "32") (term "1,1,1,0"))
                                          (rule "mul_literals" (formula "32") (term "1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "32") (term "1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,1,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,1,0"))
                                          (rule "applyEqRigid" (formula "37") (term "0,0,1,0,0,2,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,0,2,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0,2,0"))
                                          (rule "times_zero_2" (formula "37") (term "1,1,0,1,0,0,2,0"))
                                          (rule "add_zero_right" (formula "37") (term "1,0,1,0,0,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0,2,0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0,0,2,0"))
                                          (rule "applyEq" (formula "36") (term "0,0,1,0,0,2,0,1,1") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,0,2,0,1,1") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,2,0,1,1"))
                                          (rule "mul_literals" (formula "36") (term "1,1,0,1,0,0,2,0,1,1"))
                                          (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,2,0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,2,0,1,1"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,2,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,0,2,0,1,1"))
                                          (rule "applyEqRigid" (formula "39") (term "0,0,1,0,0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "39") (term "0,1,0,0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "39") (term "1,0,1,0,0,0,1,0,0,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "39") (term "1,1,0,1,0,0,0,1,0,0,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "1,0,1,0,0,0,1,0,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0,0,0,1,0,0,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0"))
                                          (rule "applyEq" (formula "37") (term "0,0,1,0,0,1,2,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,0,1,2,0,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0,1,2,0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,1,0,1,0,0,1,2,0,0"))
                                          (rule "add_zero_right" (formula "37") (term "1,0,1,0,0,1,2,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0,1,2,0,0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0,1,2,0,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0,0,1,2,0,0"))
                                          (rule "applyEq" (formula "41") (term "0,1,0,1,0,0,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "41") (term "1,0,1,0,0,1,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "41") (term "1,1,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "41") (term "1,1,1,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "1,1,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,1,0,0,1,1,0"))
                                          (rule "applyEq" (formula "58") (term "0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "58") (term "0,1,0,0,1,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "58") (term "1,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "58") (term "1,1,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "58") (term "1,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "58") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "applyEq" (formula "54") (term "0,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "54") (term "1,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "54") (term "1,1,1,0"))
                                          (rule "mul_literals" (formula "54") (term "1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "54") (term "1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "54") (term "0,1,1,0"))
                                          (rule "add_zero_right" (formula "54") (term "0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,1,0"))
                                          (rule "applyEqRigid" (formula "59") (term "0,0,1,0,0,1,1,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "59") (term "0,1,0,0,1,1,1,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0,0,1,1,1,1,0"))
                                          (rule "mul_literals" (formula "59") (term "1,1,0,1,0,0,1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,1,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,1,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0,0,1,1,1,1,0"))
                                          (rule "applyEqRigid" (formula "32") (term "0,1,0,1,0,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "32") (term "1,0,1,0,0,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "32") (term "1,1,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "32") (term "1,1,1,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "32") (term "1,1,0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0,1,0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,1,0,0,0"))
                                          (rule "applyEq" (formula "35") (term "0,0,1,0,0,0,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "35") (term "0,1,0,0,0,0,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "35") (term "1,0,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "35") (term "1,1,0,1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "35") (term "1,0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0,0,0,0,0"))
                                          (rule "applyEqRigid" (formula "41") (term "0,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "41") (term "0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "41") (term "1,0,1,0,0,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "41") (term "1,1,0,1,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "1,0,1,0,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,1,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,0,1,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,0,0,0,1,0,0,1,1,0"))
                                          (rule "applyEq" (formula "39") (term "0,0,1,0,0,1,1,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "39") (term "0,1,0,0,1,1,0,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "39") (term "1,0,1,0,0,1,1,0,0"))
                                          (rule "mul_literals" (formula "39") (term "1,1,0,1,0,0,1,1,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "1,0,1,0,0,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0"))
                                          (rule "applyEq" (formula "59") (term "0,0,1,0,0,0,1,0,0,1,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "59") (term "0,1,0,0,0,1,0,0,1,1,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                          (rule "times_zero_2" (formula "59") (term "1,1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,0,1,0,0,1,1,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,0,1,0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0,0,0,1,0,0,1,1,1,0"))
                                          (rule "applyEq" (formula "36") (term "0,1,0,1,0,0,0,1,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "36") (term "1,0,1,0,0,0,1,0,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "36") (term "1,1,0,1,0,0,0,1,0,1,0"))
                                          (rule "times_zero_2" (formula "36") (term "1,1,1,0,1,0,0,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "36") (term "1,1,0,1,0,0,0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,1,0,0,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,1,0,1,0,0,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,1,0,0,0,1,0,1,0"))
                                          (rule "applyEq" (formula "37") (term "0,1,1,2,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "37") (term "1,1,2,0,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "37") (term "1,1,1,2,0,0"))
                                          (rule "times_zero_2" (formula "37") (term "1,1,1,1,2,0,0"))
                                          (rule "add_zero_right" (formula "37") (term "1,1,1,2,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,1,2,0,0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,1,1,2,0,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,1,2,0,0"))
                                          (rule "applyEqRigid" (formula "34") (term "0,1,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "34") (term "1,1,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "34") (term "1,1,1,1,0"))
                                          (rule "mul_literals" (formula "34") (term "1,1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "34") (term "1,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,1,1,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,1,1,0"))
                                          (rule "applyEq" (formula "35") (term "0,1,0,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "35") (term "1,0,0,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "35") (term "1,1,0,0,0"))
                                          (rule "times_zero_2" (formula "35") (term "1,1,1,0,0,0"))
                                          (rule "add_zero_right" (formula "35") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "35") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0"))
                                          (rule "applyEqRigid" (formula "55") (term "0,0,1,0,0,1,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "55") (term "0,1,0,0,1,0,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "55") (term "1,0,1,0,0,1,0,1,0"))
                                          (rule "times_zero_2" (formula "55") (term "1,1,0,1,0,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "55") (term "1,0,1,0,0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,1,0,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "55") (term "0,0,0,1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0,0,1,0,1,0"))
                                          (rule "applyEq" (formula "36") (term "0,0,1,0,0,1,0,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,0,1,0,0,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "36") (term "1,1,0,1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,0,1,0,0,0"))
                                          (rule "applyEqRigid" (formula "34") (term "0,1,0,1,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "34") (term "1,0,1,0,0,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "34") (term "1,1,0,1,0,0,1,0"))
                                          (rule "times_zero_2" (formula "34") (term "1,1,1,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "34") (term "1,1,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,1,0,1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,1,0,0,1,0"))
                                          (rule "applyEqRigid" (formula "59") (term "0,1,0,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "59") (term "1,0,0,0,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "59") (term "1,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "59") (term "1,1,1,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "0,0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,0,1,0"))
                                          (rule "applyEq" (formula "58") (term "0,1,0,1,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "58") (term "1,0,1,0,0,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "58") (term "1,1,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "58") (term "1,1,1,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "58") (term "1,1,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "58") (term "0,0,1,0,1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,1,0,0,1,0"))
                                          (rule "applyEqRigid" (formula "41") (term "0,0,1,0,0,0,1,0,0,1,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "41") (term "0,1,0,0,0,1,0,0,1,1,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "41") (term "1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                          (rule "mul_literals" (formula "41") (term "1,1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,1,0,0,0,1,0,0,1,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,0,1,0,0,0,1,0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,0,0,0,1,0,0,1,1,1,0"))
                                          (rule "applyEqRigid" (formula "41") (term "0,1,0,1,0,0,1,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "41") (term "1,0,1,0,0,1,1,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "41") (term "1,1,0,1,0,0,1,1,1,0"))
                                          (rule "mul_literals" (formula "41") (term "1,1,1,0,1,0,0,1,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "1,1,0,1,0,0,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0,1,0,0,1,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,1,0,1,0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,1,0,0,1,1,1,0"))
                                          (rule "applyEqRigid" (formula "56") (term "0,1,1,2,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "56") (term "1,1,2,0,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,1,1,2,0,0"))
                                          (rule "times_zero_2" (formula "56") (term "1,1,1,1,2,0,0"))
                                          (rule "add_zero_right" (formula "56") (term "1,1,1,2,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,1,2,0,0"))
                                          (rule "add_zero_right" (formula "56") (term "0,0,1,1,2,0,0"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,1,2,0,0"))
                                          (rule "applyEqRigid" (formula "32") (term "0,0,1,0,0,0,1,0,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "32") (term "0,1,0,0,0,1,0,0,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "32") (term "1,0,1,0,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "32") (term "1,1,0,1,0,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "32") (term "1,0,1,0,0,0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,0,0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0,0,0,1,0,0,0"))
                                          (rule "applyEq" (formula "59") (term "0,1,1,1,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,1,1,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "59") (term "1,1,1,1,1,1,0"))
                                          (rule "mul_literals" (formula "59") (term "1,1,1,1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "1,1,1,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "0,0,1,1,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,1,1,1,0"))
                                          (rule "applyEq" (formula "36") (term "0,1,1,0,1,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "36") (term "1,1,0,1,0,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "36") (term "1,1,1,0,1,0,1,0"))
                                          (rule "times_zero_2" (formula "36") (term "1,1,1,1,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "36") (term "1,1,1,0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,1,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,1,1,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,1,0,1,0,1,0"))
                                          (rule "applyEq" (formula "34") (term "0,0,1,0,0,0,1,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "34") (term "0,1,0,0,0,1,0,0,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "34") (term "1,0,1,0,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "34") (term "1,1,0,1,0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "34") (term "1,0,1,0,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,0,1,0,0,0,1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                          (rule "applyEqRigid" (formula "54") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "54") (term "0,1,0,0,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "54") (term "1,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "54") (term "1,1,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "54") (term "1,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "54") (term "0,0,0,1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,1,0,0,1,0"))
                                          (rule "applyEqRigid" (formula "36") (term "0,0,1,0,0,0,1,0,0,0,1,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,0,0,1,0,0,0,1,0,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,0,1,0,0,0,1,0,1,0"))
                                          (rule "times_zero_2" (formula "36") (term "1,1,0,1,0,0,0,1,0,0,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,0,1,0,0,0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,0,1,0,0,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,0,1,0,0,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0"))
                                          (rule "applyEq" (formula "57") (term "0,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "57") (term "1,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "57") (term "1,1,1,0"))
                                          (rule "times_zero_2" (formula "57") (term "1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "57") (term "1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,1,0"))
                                          (rule "add_zero_right" (formula "57") (term "0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,1,0"))
                                          (rule "applyEqRigid" (formula "55") (term "0,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "55") (term "0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "55") (term "1,0,1,0,0,0,1,0,0,0,1,0"))
                                          (rule "times_zero_2" (formula "55") (term "1,1,0,1,0,0,0,1,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "55") (term "1,0,1,0,0,0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,1,0,0,0,1,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "55") (term "0,0,0,1,0,0,0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0,0,0,1,0,0,0,1,0"))
                                          (rule "applyEqRigid" (formula "56") (term "0,0,1,0,0,1,2,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "56") (term "0,1,0,0,1,2,0,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,0,1,0,0,1,2,0,0"))
                                          (rule "times_zero_2" (formula "56") (term "1,1,0,1,0,0,1,2,0,0"))
                                          (rule "add_zero_right" (formula "56") (term "1,0,1,0,0,1,2,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,1,0,0,1,2,0,0"))
                                          (rule "add_zero_right" (formula "56") (term "0,0,0,1,0,0,1,2,0,0"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0,0,1,2,0,0"))
                                          (rule "applyEqRigid" (formula "59") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "59") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "59") (term "1,1,0,1,0,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0,0,0,0,0,1,0"))
                                          (rule "applyEqRigid" (formula "56") (term "0,2,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "56") (term "2,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,2,0"))
                                          (rule "times_zero_2" (formula "56") (term "1,1,2,0"))
                                          (rule "add_zero_right" (formula "56") (term "1,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "56") (term "0,2,0"))
                                          (rule "add_zero_right" (formula "56") (term "0,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,2,0"))
                                          (rule "applyEq" (formula "56") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,2,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "56") (term "0,1,0,0,0,1,0,0,0,1,0,0,2,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,0,1,0,0,0,1,0,0,0,1,0,0,2,0"))
                                          (rule "times_zero_2" (formula "56") (term "1,1,0,1,0,0,0,1,0,0,0,1,0,0,2,0"))
                                          (rule "add_zero_right" (formula "56") (term "1,0,1,0,0,0,1,0,0,0,1,0,0,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,2,0"))
                                          (rule "add_zero_right" (formula "56") (term "0,0,0,1,0,0,0,1,0,0,0,1,0,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,2,0"))
                                          (rule "applyEq" (formula "56") (term "0,1,1,0,1,0,0,2,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "56") (term "1,1,0,1,0,0,2,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,1,1,0,1,0,0,2,0"))
                                          (rule "mul_literals" (formula "56") (term "1,1,1,1,0,1,0,0,2,0"))
                                          (rule "add_zero_right" (formula "56") (term "1,1,1,0,1,0,0,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,1,0,1,0,0,2,0"))
                                          (rule "add_zero_right" (formula "56") (term "0,0,1,1,0,1,0,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,1,0,1,0,0,2,0"))
                                          (rule "applyEq" (formula "56") (term "0,1,0,1,0,0,0,1,0,0,2,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "56") (term "1,0,1,0,0,0,1,0,0,2,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,1,0,1,0,0,0,1,0,0,2,0"))
                                          (rule "times_zero_2" (formula "56") (term "1,1,1,0,1,0,0,0,1,0,0,2,0"))
                                          (rule "add_zero_right" (formula "56") (term "1,1,0,1,0,0,0,1,0,0,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,0,1,0,0,0,1,0,0,2,0"))
                                          (rule "add_zero_right" (formula "56") (term "0,0,1,0,1,0,0,0,1,0,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,1,0,0,0,1,0,0,2,0"))
                                          (rule "applyEqRigid" (formula "56") (term "0,1,0,1,0,0,1,2,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "56") (term "1,0,1,0,0,1,2,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,1,0,1,0,0,1,2,0"))
                                          (rule "times_zero_2" (formula "56") (term "1,1,1,0,1,0,0,1,2,0"))
                                          (rule "add_zero_right" (formula "56") (term "1,1,0,1,0,0,1,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,0,1,0,0,1,2,0"))
                                          (rule "add_zero_right" (formula "56") (term "0,0,1,0,1,0,0,1,2,0"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,1,0,0,1,2,0"))
                                          (rule "applyEq" (formula "59") (term "0,1,0,1,0,0,0,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "59") (term "1,0,1,0,0,0,0,0,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "59") (term "1,1,0,1,0,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "59") (term "1,1,1,0,1,0,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "1,1,0,1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,0,1,0,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "0,0,1,0,1,0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,1,0,0,0,0,0,1,0"))
                                          (rule "applyEqRigid" (formula "55") (term "0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "55") (term "0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "55") (term "1,0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "55") (term "1,1,0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "55") (term "1,0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "55") (term "0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
                                          (rule "applyEqRigid" (formula "55") (term "0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "55") (term "0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "55") (term "1,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "55") (term "1,1,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "55") (term "1,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "55") (term "0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0"))
                                          (rule "applyEq" (formula "39") (term "0,1,0,1,0,0,1,0,1,0,0,1,1,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "39") (term "1,0,1,0,0,1,0,1,0,0,1,1,0,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "39") (term "1,1,0,1,0,0,1,0,1,0,0,1,1,0,0"))
                                          (rule "mul_literals" (formula "39") (term "1,1,1,0,1,0,0,1,0,1,0,0,1,1,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "1,1,0,1,0,0,1,0,1,0,0,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0,1,0,0,1,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,1,0,1,0,0,1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,1,0,0,1,0,1,0,0,1,1,0"))
                                          (rule "applyEqRigid" (formula "59") (term "0,1,0,1,0,0,1,1,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "59") (term "1,0,1,0,0,1,1,1,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "59") (term "1,1,0,1,0,0,1,1,1,1,0"))
                                          (rule "times_zero_2" (formula "59") (term "1,1,1,0,1,0,0,1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "1,1,0,1,0,0,1,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,0,1,0,0,1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "0,0,1,0,1,0,0,1,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,1,0,0,1,1,1,1,0"))
                                          (rule "applyEq" (formula "41") (term "0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "41") (term "0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "41") (term "1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0"))
                                          (rule "times_zero_2" (formula "41") (term "1,1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0"))
                                          (rule "applyEqRigid" (formula "56") (term "0,0,1,0,0,1,1,0,1,0,0,1,2,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "56") (term "0,1,0,0,1,1,0,1,0,0,1,2,0,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,0,1,0,0,1,1,0,1,0,0,1,2,0,0"))
                                          (rule "mul_literals" (formula "56") (term "1,1,0,1,0,0,1,1,0,1,0,0,1,2,0,0"))
                                          (rule "add_zero_right" (formula "56") (term "1,0,1,0,0,1,1,0,1,0,0,1,2,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,1,0,0,1,1,0,1,0,0,1,2,0,0"))
                                          (rule "add_zero_right" (formula "56") (term "0,0,0,1,0,0,1,1,0,1,0,0,1,2,0,0"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0,0,1,1,0,1,0,0,1,2,0,0"))
                                          (rule "applyEqRigid" (formula "38") (term "0,0,1,0,0,1,0,0,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "38") (term "0,1,0,0,1,0,0,0,0,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "38") (term "1,0,1,0,0,1,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "38") (term "1,1,0,1,0,0,1,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "38") (term "1,0,1,0,0,1,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,1,0,0,1,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "38") (term "0,0,0,1,0,0,1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,0,0,1,0,0,0,0,1,0"))
                                          (rule "applyEqRigid" (formula "56") (term "0,0,1,0,0,0,1,0,0,1,2,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "56") (term "0,1,0,0,0,1,0,0,1,2,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,0,1,0,0,0,1,0,0,1,2,0"))
                                          (rule "mul_literals" (formula "56") (term "1,1,0,1,0,0,0,1,0,0,1,2,0"))
                                          (rule "add_zero_right" (formula "56") (term "1,0,1,0,0,0,1,0,0,1,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,1,0,0,0,1,0,0,1,2,0"))
                                          (rule "add_zero_right" (formula "56") (term "0,0,0,1,0,0,0,1,0,0,1,2,0"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0,0,0,1,0,0,1,2,0"))
                                          (rule "applyEqRigid" (formula "55") (term "0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "55") (term "0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "55") (term "1,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "55") (term "1,1,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "55") (term "1,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "55") (term "0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0"))
                                          (rule "applyEq" (formula "41") (term "0,1,0,1,0,0,0,1,0,0,1,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "41") (term "1,0,1,0,0,0,1,0,0,1,1,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "41") (term "1,1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                          (rule "mul_literals" (formula "41") (term "1,1,1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "1,1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                          (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,1,1,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "34") (term "0,1,0,0,1,1,1,1,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "34") (term "1,0,1,0,0,1,1,1,1,1,0"))
                                          (rule "mul_literals" (formula "34") (term "1,1,0,1,0,0,1,1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "34") (term "1,0,1,0,0,1,1,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,0,0,1,1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,0,1,0,0,1,1,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0,0,1,1,1,1,1,0"))
                                          (rule "applyEq" (formula "56") (term "0,1,1,1,0,1,0,0,1,2,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "56") (term "1,1,1,0,1,0,0,1,2,0,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,1,1,1,0,1,0,0,1,2,0,0"))
                                          (rule "mul_literals" (formula "56") (term "1,1,1,1,1,0,1,0,0,1,2,0,0"))
                                          (rule "add_zero_right" (formula "56") (term "1,1,1,1,0,1,0,0,1,2,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,1,1,0,1,0,0,1,2,0,0"))
                                          (rule "add_zero_right" (formula "56") (term "0,0,1,1,1,0,1,0,0,1,2,0,0"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,1,1,0,1,0,0,1,2,0,0"))
                                          (rule "applyEqRigid" (formula "38") (term "0,0,1,0,0,1,1,0,0,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "38") (term "0,1,0,0,1,1,0,0,0,0,1,0") (ifseqformula "37"))
                                          (rule "polySimp_elimSub" (formula "38") (term "1,0,1,0,0,1,1,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "38") (term "1,1,0,1,0,0,1,1,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "38") (term "1,0,1,0,0,1,1,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,1,0,0,1,1,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "38") (term "0,0,0,1,0,0,1,1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,0,0,1,1,0,0,0,0,1,0"))
                                          (rule "applyEq" (formula "54") (term "0,1,0,1,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "54") (term "1,0,1,0,0,1,0") (ifseqformula "56"))
                                          (rule "polySimp_elimSub" (formula "54") (term "1,1,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "54") (term "1,1,1,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "54") (term "1,1,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "54") (term "0,1,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "54") (term "0,0,1,0,1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,1,0,0,1,0"))
                                          (rule "ifthenelse_split" (formula "54") (term "0,1,0,0,1,0"))
                                          (branch " 1 + de.polyas.core3.open.cred.CredTool.polyasVals.seq@heapAtPre_B«anonHeapFunction».length * -1 ≤ 0 TRUE"
                                             (rule "replace_known_left" (formula "55") (term "0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")))
                                             (rule "replace_known_left" (formula "57") (term "0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,2,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")))
                                             (rule "replace_known_left" (formula "39") (term "0,1,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")))
                                             (rule "replace_known_left" (formula "38") (term "0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")))
                                             (rule "replace_known_left" (formula "56") (term "0,0,1,0,0,1,1,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")))
                                             (rule "true_left" (formula "56"))
                                             (rule "replace_known_left" (formula "32") (term "0,0,1,0,0,0,1,0,0,1,0,1,0,0,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")))
                                             (rule "replace_known_left" (formula "41") (term "0,1,1,0,1,0,0,1,1,1,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")))
                                             (rule "replace_known_left" (formula "34") (term "0,0,1,0,0,1,1,0,1,0,0,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")))
                                             (rule "replace_known_left" (formula "59") (term "0,1,0,1,0,0,1,0,1,0,0,1,1,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")))
                                             (rule "replace_known_left" (formula "58") (term "0,1,1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")))
                                             (rule "replace_known_left" (formula "37") (term "0,0,1,0,0,2,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")))
                                             (rule "replace_known_left" (formula "57") (term "0,0,1,0,0,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "54")) (ifInst ""  (formula "54")))
                                             (rule "replace_known_left" (formula "40") (term "0,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "replace_known_left" (formula "35") (term "0,1,1,0,1,0,0,1,0,1") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")))
                                             (rule "replace_known_left" (formula "36") (term "0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")))
                                             (rule "polySimp_addComm1" (formula "39") (term "0"))
                                             (rule "applyEqRigid" (formula "35") (term "0,1,0,1") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "35") (term "1,0,1") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "35") (term "1,1,0,1"))
                                             (rule "mul_literals" (formula "35") (term "1,1,1,0,1"))
                                             (rule "add_zero_right" (formula "35") (term "1,1,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0,1"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,1,0,1"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,1"))
                                             (rule "replace_known_left" (formula "35") (term "0,1,0,1") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "applyEq" (formula "40") (term "0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "40") (term "1,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "40") (term "1,1,0"))
                                             (rule "mul_literals" (formula "40") (term "1,1,1,0"))
                                             (rule "add_zero_right" (formula "40") (term "1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                                             (rule "add_zero_right" (formula "40") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0"))
                                             (rule "replace_known_left" (formula "40") (term "0,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "applyEq" (formula "37") (term "0,1,2,0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "37") (term "1,2,0,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "37") (term "1,1,2,0,0"))
                                             (rule "times_zero_2" (formula "37") (term "1,1,1,2,0,0"))
                                             (rule "add_zero_right" (formula "37") (term "1,1,2,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,2,0,0"))
                                             (rule "add_zero_right" (formula "37") (term "0,0,1,2,0,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,2,0,0"))
                                             (rule "replace_known_left" (formula "37") (term "0,1,2,0,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "applyEq" (formula "38") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "38") (term "0,0,0,0,1,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "38") (term "1,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "38") (term "1,1,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "38") (term "1,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,1,0"))
                                             (rule "replace_known_left" (formula "38") (term "0,0,0,0,0,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEqRigid" (formula "59") (term "0,1,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,1,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "59") (term "1,1,1,1,0"))
                                             (rule "mul_literals" (formula "59") (term "1,1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "1,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,1,0"))
                                             (rule "replace_known_left" (formula "59") (term "0,1,1,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "applyEq" (formula "56") (term "0,1,2,0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "56") (term "1,2,0,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "56") (term "1,1,2,0,0"))
                                             (rule "times_zero_2" (formula "56") (term "1,1,1,2,0,0"))
                                             (rule "add_zero_right" (formula "56") (term "1,1,2,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,2,0,0"))
                                             (rule "add_zero_right" (formula "56") (term "0,0,1,2,0,0"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,2,0,0"))
                                             (rule "replace_known_left" (formula "56") (term "0,1,2,0,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "56"))
                                             (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "57") (term "1,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "57") (term "1,1,0"))
                                             (rule "mul_literals" (formula "57") (term "1,1,1,0"))
                                             (rule "add_zero_right" (formula "57") (term "1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,0"))
                                             (rule "add_zero_right" (formula "57") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0"))
                                             (rule "replace_known_left" (formula "57") (term "0,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "57"))
                                             (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "58") (term "1,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "58") (term "1,1,0"))
                                             (rule "mul_literals" (formula "58") (term "1,1,1,0"))
                                             (rule "add_zero_right" (formula "58") (term "1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,0"))
                                             (rule "add_zero_right" (formula "58") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0"))
                                             (rule "replace_known_left" (formula "58") (term "0,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "58"))
                                             (rule "applyEq" (formula "55") (term "0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "55") (term "1,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "55") (term "1,1,0"))
                                             (rule "mul_literals" (formula "55") (term "1,1,1,0"))
                                             (rule "add_zero_right" (formula "55") (term "1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0"))
                                             (rule "add_zero_right" (formula "55") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0"))
                                             (rule "replace_known_left" (formula "55") (term "0,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "55"))
                                             (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "32") (term "0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "32") (term "1,0"))
                                             (rule "mul_literals" (formula "32") (term "1,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                             (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "34") (term "1,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "34") (term "1,1,0"))
                                             (rule "mul_literals" (formula "34") (term "1,1,1,0"))
                                             (rule "add_zero_right" (formula "34") (term "1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0"))
                                             (rule "add_zero_right" (formula "34") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                                             (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "applyEq" (formula "41") (term "0,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "41") (term "1,1,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "41") (term "1,1,1,0"))
                                             (rule "mul_literals" (formula "41") (term "1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "41") (term "1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,1,0"))
                                             (rule "add_zero_right" (formula "41") (term "0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,1,0"))
                                             (rule "replace_known_left" (formula "41") (term "0,1,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "applyEq" (formula "36") (term "0,0,1,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,1,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,1,0"))
                                             (rule "times_zero_2" (formula "36") (term "1,1,0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "36") (term "1,0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,1,0"))
                                             (rule "replace_known_left" (formula "36") (term "0,0,1,0,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "applyEqRigid" (formula "54") (term "0,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "54") (term "0,1,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "54") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "54") (term "1,1,0,1,0"))
                                             (rule "add_zero_right" (formula "54") (term "1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,1,0"))
                                             (rule "add_zero_right" (formula "54") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,1,0"))
                                             (rule "applyEq" (formula "60") (term "0,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "60") (term "1,1,1,0"))
                                             (rule "mul_literals" (formula "60") (term "1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,0"))
                                             (rule "applyEqRigid" (formula "39") (term "0,1,0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "39") (term "1,0,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0"))
                                             (rule "times_zero_2" (formula "39") (term "1,1,1,0,0"))
                                             (rule "add_zero_right" (formula "39") (term "1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "39") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0"))
                                             (rule "add_zero_right" (formula "39") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0"))
                                             (rule "applyEq" (formula "60") (term "0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "60") (term "0,1,0,0,1,1,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "60") (term "1,0,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "60") (term "1,1,0,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "1,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "0,0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1,0,0,1,1,0"))
                                             (rule "replace_known_left" (formula "60") (term "0,1,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "applyEq" (formula "36") (term "0,1,0,0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "36") (term "1,0,0,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "36") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "36") (term "1,1,1,0,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0"))
                                             (rule "applyEq" (formula "36") (term "0,0,1,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,1,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "36") (term "1,1,0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "36") (term "1,0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,1,0"))
                                             (rule "applyEq" (formula "56") (term "0,2,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "56") (term "2,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "56") (term "1,2,0"))
                                             (rule "mul_literals" (formula "56") (term "1,1,2,0"))
                                             (rule "add_zero_right" (formula "56") (term "1,2,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "56") (term "0,2,0"))
                                             (rule "add_zero_right" (formula "56") (term "0,0,2,0"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,2,0"))
                                             (rule "applyEq" (formula "38") (term "0,1,0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "38") (term "1,0,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "38") (term "1,1,0,0"))
                                             (rule "times_zero_2" (formula "38") (term "1,1,1,0,0"))
                                             (rule "add_zero_right" (formula "38") (term "1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "38") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,0"))
                                             (rule "add_zero_right" (formula "38") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                                             (rule "replace_known_left" (formula "38") (term "0,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEqRigid" (formula "34") (term "0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "34") (term "1,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "34") (term "1,1,0"))
                                             (rule "mul_literals" (formula "34") (term "1,1,1,0"))
                                             (rule "add_zero_right" (formula "34") (term "1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0"))
                                             (rule "add_zero_right" (formula "34") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                                             (rule "applyEq" (formula "59") (term "0,1,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,1,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "59") (term "1,1,1,1,0"))
                                             (rule "times_zero_2" (formula "59") (term "1,1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "1,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,1,0"))
                                             (rule "applyEqRigid" (formula "55") (term "0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "55") (term "1,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "55") (term "1,1,0"))
                                             (rule "mul_literals" (formula "55") (term "1,1,1,0"))
                                             (rule "add_zero_right" (formula "55") (term "1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0"))
                                             (rule "add_zero_right" (formula "55") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0"))
                                             (rule "replace_known_left" (formula "55") (term "0,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "55"))
                                             (rule "applyEqRigid" (formula "39") (term "0,0,0,0,0,1,0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "39") (term "0,0,0,0,1,0,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "39") (term "1,0,0,0,0,1,0,0"))
                                             (rule "times_zero_2" (formula "39") (term "1,1,0,0,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "39") (term "1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "39") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,1,0"))
                                             (rule "applyEqRigid" (formula "41") (term "0,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "41") (term "1,1,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "41") (term "1,1,1,0"))
                                             (rule "times_zero_2" (formula "41") (term "1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "41") (term "1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,1,0"))
                                             (rule "add_zero_right" (formula "41") (term "0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,1,0"))
                                             (rule "applyEq" (formula "36") (term "0,2,0,1,1") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "36") (term "2,0,1,1") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "36") (term "1,2,0,1,1"))
                                             (rule "mul_literals" (formula "36") (term "1,1,2,0,1,1"))
                                             (rule "add_zero_right" (formula "36") (term "1,2,0,1,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "0,2,0,1,1"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,2,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,2,0,1,1"))
                                             (rule "applyEqRigid" (formula "58") (term "0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "58") (term "1,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "58") (term "1,1,0"))
                                             (rule "mul_literals" (formula "58") (term "1,1,1,0"))
                                             (rule "add_zero_right" (formula "58") (term "1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,0"))
                                             (rule "add_zero_right" (formula "58") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0"))
                                             (rule "applyEq" (formula "54") (term "0,0,1,0,0,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "54") (term "0,1,0,0,0,1,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "54") (term "1,0,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "54") (term "1,1,0,1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "54") (term "1,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "54") (term "0,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,1,0,0,0,1,0"))
                                             (rule "applyEqRigid" (formula "56") (term "0,1,2,0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "56") (term "1,2,0,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "56") (term "1,1,2,0,0"))
                                             (rule "times_zero_2" (formula "56") (term "1,1,1,2,0,0"))
                                             (rule "add_zero_right" (formula "56") (term "1,1,2,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,2,0,0"))
                                             (rule "add_zero_right" (formula "56") (term "0,0,1,2,0,0"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,2,0,0"))
                                             (rule "applyEq" (formula "54") (term "0,1,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "54") (term "1,0,1,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "54") (term "1,1,0,1,0"))
                                             (rule "mul_literals" (formula "54") (term "1,1,1,0,1,0"))
                                             (rule "add_zero_right" (formula "54") (term "1,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "54") (term "0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "54") (term "0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,1,0"))
                                             (rule "applyEq" (formula "37") (term "0,2,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "37") (term "2,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "37") (term "1,2,0"))
                                             (rule "mul_literals" (formula "37") (term "1,1,2,0"))
                                             (rule "add_zero_right" (formula "37") (term "1,2,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "37") (term "0,2,0"))
                                             (rule "add_zero_right" (formula "37") (term "0,0,2,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,2,0"))
                                             (rule "applyEq" (formula "35") (term "0,1,0,1") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "35") (term "1,0,1") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "35") (term "1,1,0,1"))
                                             (rule "mul_literals" (formula "35") (term "1,1,1,0,1"))
                                             (rule "add_zero_right" (formula "35") (term "1,1,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0,1"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,1,0,1"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,1"))
                                             (rule "applyEqRigid" (formula "59") (term "0,0,0,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "59") (term "0,0,0,1,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "59") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "59") (term "1,1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                             (rule "applyEqRigid" (formula "32") (term "0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "32") (term "0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "32") (term "1,0"))
                                             (rule "mul_literals" (formula "32") (term "1,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                             (rule "applyEqRigid" (formula "40") (term "0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "40") (term "1,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "40") (term "1,1,0"))
                                             (rule "mul_literals" (formula "40") (term "1,1,1,0"))
                                             (rule "add_zero_right" (formula "40") (term "1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                                             (rule "add_zero_right" (formula "40") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0"))
                                             (rule "applyEq" (formula "35") (term "0,0,0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "35") (term "0,0,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "35") (term "1,0,0,0"))
                                             (rule "times_zero_2" (formula "35") (term "1,1,0,0,0"))
                                             (rule "add_zero_right" (formula "35") (term "1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                             (rule "applyEqRigid" (formula "57") (term "0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "57") (term "1,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "57") (term "1,1,0"))
                                             (rule "mul_literals" (formula "57") (term "1,1,1,0"))
                                             (rule "add_zero_right" (formula "57") (term "1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,0"))
                                             (rule "add_zero_right" (formula "57") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0"))
                                             (rule "applyEqRigid" (formula "37") (term "0,1,2,0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "37") (term "1,2,0,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "37") (term "1,1,2,0,0"))
                                             (rule "mul_literals" (formula "37") (term "1,1,1,2,0,0"))
                                             (rule "add_zero_right" (formula "37") (term "1,1,2,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,2,0,0"))
                                             (rule "add_zero_right" (formula "37") (term "0,0,1,2,0,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,2,0,0"))
                                             (rule "equalityToSeqGetAndSeqLenRight" (formula "77") (inst "iv=iv"))
                                             (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,1"))
                                             (rule "applyEq" (formula "40") (term "0,0,1,0,0,1,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "40") (term "0,1,0,0,1,1,1,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "40") (term "1,0,1,0,0,1,1,1,0"))
                                             (rule "mul_literals" (formula "40") (term "1,1,0,1,0,0,1,1,1,0"))
                                             (rule "add_zero_right" (formula "40") (term "1,0,1,0,0,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0,0,1,1,1,0"))
                                             (rule "add_zero_right" (formula "40") (term "0,0,0,1,0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,0,0,1,1,1,0"))
                                             (rule "applyEq" (formula "58") (term "0,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "58") (term "1,1,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "58") (term "1,1,1,0"))
                                             (rule "mul_literals" (formula "58") (term "1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "58") (term "1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,1,0"))
                                             (rule "add_zero_right" (formula "58") (term "0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,1,0"))
                                             (rule "applyEqRigid" (formula "59") (term "0,0,1,0,0,0,1,0,0,1,0,0,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "59") (term "0,1,0,0,0,1,0,0,1,0,0,0,1,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0,0,0,1,0,0,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "59") (term "1,1,0,1,0,0,0,1,0,0,1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,0,1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,0,1,0,0,1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0"))
                                             (rule "applyEq" (formula "54") (term "0,1,0,1,0,0,1,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "54") (term "1,0,1,0,0,1,0,1,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "54") (term "1,1,0,1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "54") (term "1,1,1,0,1,0,0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "54") (term "1,1,0,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "54") (term "0,1,0,1,0,0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "54") (term "0,0,1,0,1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,1,0,0,1,0,1,0"))
                                             (rule "applyEq" (formula "36") (term "0,0,1,0,0,2,0,1,1") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,0,2,0,1,1") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,2,0,1,1"))
                                             (rule "times_zero_2" (formula "36") (term "1,1,0,1,0,0,2,0,1,1"))
                                             (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,2,0,1,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,2,0,1,1"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,2,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,0,2,0,1,1"))
                                             (rule "applyEq" (formula "35") (term "0,0,1,0,0,1,1,0,1") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "35") (term "0,1,0,0,1,1,0,1") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "35") (term "1,0,1,0,0,1,1,0,1"))
                                             (rule "mul_literals" (formula "35") (term "1,1,0,1,0,0,1,1,0,1"))
                                             (rule "add_zero_right" (formula "35") (term "1,0,1,0,0,1,1,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,1,0,0,1,1,0,1"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,0,1,1,0,1"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0,0,1,1,0,1"))
                                             (rule "applyEqRigid" (formula "36") (term "0,0,1,0,0,0,1,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,0,0,1,0,1,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,0,1,0,1,0"))
                                             (rule "times_zero_2" (formula "36") (term "1,1,0,1,0,0,0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,0,0,1,0,1,0"))
                                             (rule "applyEqRigid" (formula "32") (term "0,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "32") (term "1,1,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "32") (term "1,1,1,0"))
                                             (rule "times_zero_2" (formula "32") (term "1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,1,0"))
                                             (rule "applyEq" (formula "54") (term "0,1,1,1,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "54") (term "1,1,1,0,1,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "54") (term "1,1,1,1,0,1,0"))
                                             (rule "mul_literals" (formula "54") (term "1,1,1,1,1,0,1,0"))
                                             (rule "add_zero_right" (formula "54") (term "1,1,1,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "54") (term "0,1,1,1,0,1,0"))
                                             (rule "add_zero_right" (formula "54") (term "0,0,1,1,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,1,1,0,1,0"))
                                             (rule "applyEqRigid" (formula "40") (term "0,1,0,1,0,0,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "40") (term "1,0,1,0,0,1,1,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "40") (term "1,1,0,1,0,0,1,1,0"))
                                             (rule "times_zero_2" (formula "40") (term "1,1,1,0,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "40") (term "1,1,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "40") (term "0,0,1,0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,1,0,0,1,1,0"))
                                             (rule "applyEq" (formula "59") (term "0,1,1,0,1,0,0,0,0,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,0,1,0,0,0,0,0,1,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "59") (term "1,1,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "times_zero_2" (formula "59") (term "1,1,1,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "1,1,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "0,0,1,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "applyEqRigid" (formula "59") (term "0,1,0,1,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "59") (term "1,0,1,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "59") (term "1,1,0,1,0,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "59") (term "1,1,1,0,1,0,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "1,1,0,1,0,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,0,1,0,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "applyEq" (formula "59") (term "0,1,0,1,0,0,1,0,0,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "59") (term "1,0,1,0,0,1,0,0,0,1,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "59") (term "1,1,0,1,0,0,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "59") (term "1,1,1,0,1,0,0,1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "1,1,0,1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,0,1,0,0,1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "0,0,1,0,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,1,0,0,1,0,0,0,1,0"))
                                             (rule "applyEq" (formula "35") (term "0,1,1,1,0,1") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "35") (term "1,1,1,0,1") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "35") (term "1,1,1,1,0,1"))
                                             (rule "times_zero_2" (formula "35") (term "1,1,1,1,1,0,1"))
                                             (rule "add_zero_right" (formula "35") (term "1,1,1,1,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,1,1,0,1"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,1,1,1,0,1"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,1,1,0,1"))
                                             (rule "applyEq" (formula "59") (term "0,0,1,0,0,1,1,0,0,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "59") (term "0,1,0,0,1,1,0,0,0,1,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0,0,1,1,0,0,0,1,0"))
                                             (rule "times_zero_2" (formula "59") (term "1,1,0,1,0,0,1,1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,1,1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,1,1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0,0,1,1,0,0,0,1,0"))
                                             (rule "applyEq" (formula "35") (term "0,0,1,0,0,0,1,0,0,1,0,1") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "35") (term "0,1,0,0,0,1,0,0,1,0,1") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "35") (term "1,0,1,0,0,0,1,0,0,1,0,1"))
                                             (rule "times_zero_2" (formula "35") (term "1,1,0,1,0,0,0,1,0,0,1,0,1"))
                                             (rule "add_zero_right" (formula "35") (term "1,0,1,0,0,0,1,0,0,1,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,1,0,0,0,1,0,0,1,0,1"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,0,0,1,0,0,1,0,1"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0,0,0,1,0,0,1,0,1"))
                                             (rule "applyEqRigid" (formula "56") (term "0,1,1,2,0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "56") (term "1,1,2,0,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "56") (term "1,1,1,2,0,0"))
                                             (rule "times_zero_2" (formula "56") (term "1,1,1,1,2,0,0"))
                                             (rule "add_zero_right" (formula "56") (term "1,1,1,2,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,1,2,0,0"))
                                             (rule "add_zero_right" (formula "56") (term "0,0,1,1,2,0,0"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,1,2,0,0"))
                                             (rule "applyEqRigid" (formula "39") (term "0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "39") (term "0,1,0,0,0,0,0,0,1,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "39") (term "1,0,1,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "39") (term "1,1,0,1,0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "39") (term "1,0,1,0,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,0,0,0,0,0,0,1,0"))
                                             (rule "applyEqRigid" (formula "56") (term "0,1,2,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "56") (term "1,2,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "56") (term "1,1,2,0"))
                                             (rule "mul_literals" (formula "56") (term "1,1,1,2,0"))
                                             (rule "add_zero_right" (formula "56") (term "1,1,2,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,2,0"))
                                             (rule "add_zero_right" (formula "56") (term "0,0,1,2,0"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,2,0"))
                                             (rule "applyEqRigid" (formula "59") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "59") (term "0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "59") (term "1,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "applyEqRigid" (formula "37") (term "0,0,1,0,0,1,2,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,0,1,2,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0,1,2,0"))
                                             (rule "mul_literals" (formula "37") (term "1,1,0,1,0,0,1,2,0"))
                                             (rule "add_zero_right" (formula "37") (term "1,0,1,0,0,1,2,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0,1,2,0"))
                                             (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0,1,2,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0,0,1,2,0"))
                                             (rule "applyEqRigid" (formula "32") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "32") (term "0,1,0,0,1,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "32") (term "1,0,1,0,0,1,0"))
                                             (rule "times_zero_2" (formula "32") (term "1,1,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "1,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0,0,1,0"))
                                             (rule "applyEqRigid" (formula "58") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "58") (term "0,1,0,0,1,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "58") (term "1,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "58") (term "1,1,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "58") (term "1,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "58") (term "0,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0,0,1,0"))
                                             (rule "applyEqRigid" (formula "37") (term "0,0,1,0,0,0,1,0,0,2,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,0,0,1,0,0,2,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0,0,1,0,0,2,0"))
                                             (rule "mul_literals" (formula "37") (term "1,1,0,1,0,0,0,1,0,0,2,0"))
                                             (rule "add_zero_right" (formula "37") (term "1,0,1,0,0,0,1,0,0,2,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0,0,1,0,0,2,0"))
                                             (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0,0,1,0,0,2,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0,0,0,1,0,0,2,0"))
                                             (rule "applyEqRigid" (formula "59") (term "0,1,1,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,1,1,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "59") (term "1,1,1,1,1,0"))
                                             (rule "mul_literals" (formula "59") (term "1,1,1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "1,1,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "0,0,1,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,1,1,0"))
                                             (rule "applyEq" (formula "38") (term "0,0,0,0,0,1,0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "38") (term "0,0,0,0,1,0,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "38") (term "1,0,0,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "38") (term "1,1,0,0,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "38") (term "1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "38") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,1,0"))
                                             (rule "applyEqRigid" (formula "41") (term "0,1,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "41") (term "1,1,1,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "41") (term "1,1,1,1,0"))
                                             (rule "mul_literals" (formula "41") (term "1,1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "41") (term "1,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,1,1,0"))
                                             (rule "add_zero_right" (formula "41") (term "0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,1,1,0"))
                                             (rule "applyEq" (formula "56") (term "0,0,1,0,0,2,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "56") (term "0,1,0,0,2,0") (ifseqformula "37"))
                                             (rule "polySimp_elimSub" (formula "56") (term "1,0,1,0,0,2,0"))
                                             (rule "times_zero_2" (formula "56") (term "1,1,0,1,0,0,2,0"))
                                             (rule "add_zero_right" (formula "56") (term "1,0,1,0,0,2,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,1,0,0,2,0"))
                                             (rule "add_zero_right" (formula "56") (term "0,0,0,1,0,0,2,0"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0,0,2,0"))
                                             (rule "applyEqRigid" (formula "34") (term "0,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "34") (term "1,1,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "34") (term "1,1,1,0"))
                                             (rule "mul_literals" (formula "34") (term "1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "34") (term "1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,1,0"))
                                             (rule "add_zero_right" (formula "34") (term "0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,1,0"))
                                             (rule "applyEq" (formula "36") (term "0,1,0,1,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "36") (term "1,0,1,0,1,0") (ifseqformula "56"))
                                             (rule "polySimp_elimSub" (formula "36") (term "1,1,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "36") (term "1,1,1,0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "36") (term "1,1,0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,1,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,1,0,1,0"))
                                             (rule "ifthenelse_split" (formula "36") (term "1,1,1,1,1,0,1,0,1,0"))
                                             (branch " 1 + de.polyas.core3.open.cred.CredTool.polyasVals.seq@heapAtPre_B«anonHeapFunction».length * -1 ≤ 0 TRUE"
                                                (rule "replace_known_left" (formula "57") (term "0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,2,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")))
                                                (rule "replace_known_left" (formula "40") (term "0,1,1,0,1,0,0,0,0,0,0,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")))
                                                (rule "replace_known_left" (formula "34") (term "0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")))
                                                (rule "replace_known_left" (formula "39") (term "0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")))
                                                (rule "replace_known_left" (formula "60") (term "0,1,0,1,0,0,0,1,0,0,1,0,0,0,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")))
                                                (rule "replace_known_left" (formula "32") (term "0,1,1,1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")))
                                                (rule "replace_known_left" (formula "59") (term "0,0,1,0,0,0,1,0,0,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")))
                                                (rule "replace_known_left" (formula "41") (term "0,1,1,1,0,1,0,0,1,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")))
                                                (rule "replace_known_left" (formula "38") (term "0,1,1,1,0,1,0,0,0,1,0,0,1,2,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")))
                                                (rule "replace_known_left" (formula "42") (term "0,1,0,1,0,0,1,1,0,1,0,0,1,1,1,1,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")))
                                                (rule "replace_known_left" (formula "58") (term "0,0,1,0,0,1,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")))
                                                (rule "replace_known_left" (formula "55") (term "0,1,1,1,1,0,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")))
                                                (rule "true_left" (formula "55"))
                                                (rule "replace_known_left" (formula "55") (term "0,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "replace_known_left" (formula "35") (term "0,1,0,1,0,0,0,1,0,0,1,1,0,1") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")))
                                                (rule "replace_known_left" (formula "37") (term "0,0,1,0,0,1,1,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")))
                                                (rule "applyEqRigid" (formula "60") (term "0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "60") (term "1,1,1,0"))
                                                (rule "mul_literals" (formula "60") (term "1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "60") (term "1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,0"))
                                                (rule "add_zero_right" (formula "60") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,0"))
                                                (rule "replace_known_left" (formula "60") (term "0,1,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "60"))
                                                (rule "applyEqRigid" (formula "37") (term "0,2,0,1,1") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "37") (term "2,0,1,1") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "37") (term "1,2,0,1,1"))
                                                (rule "mul_literals" (formula "37") (term "1,1,2,0,1,1"))
                                                (rule "add_zero_right" (formula "37") (term "1,2,0,1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "37") (term "0,2,0,1,1"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,2,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,2,0,1,1"))
                                                (rule "replace_known_left" (formula "37") (term "0,2,0,1,1") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "applyEq" (formula "55") (term "0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "55") (term "1,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "55") (term "1,1,0"))
                                                (rule "times_zero_2" (formula "55") (term "1,1,1,0"))
                                                (rule "add_zero_right" (formula "55") (term "1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "55") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0"))
                                                (rule "replace_known_left" (formula "55") (term "0,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "applyEqRigid" (formula "59") (term "0,1,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,1,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "59") (term "1,1,1,1,0"))
                                                (rule "times_zero_2" (formula "59") (term "1,1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "59") (term "1,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,1,0"))
                                                (rule "add_zero_right" (formula "59") (term "0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,1,0"))
                                                (rule "replace_known_left" (formula "59") (term "0,1,1,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "applyEqRigid" (formula "58") (term "0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "58") (term "1,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "58") (term "1,1,0"))
                                                (rule "times_zero_2" (formula "58") (term "1,1,1,0"))
                                                (rule "add_zero_right" (formula "58") (term "1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "58") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0"))
                                                (rule "replace_known_left" (formula "58") (term "0,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "applyEqRigid" (formula "39") (term "0,1,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "39") (term "1,0,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0"))
                                                (rule "times_zero_2" (formula "39") (term "1,1,1,0,0"))
                                                (rule "add_zero_right" (formula "39") (term "1,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "39") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0"))
                                                (rule "replace_known_left" (formula "39") (term "0,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                (rule "applyEqRigid" (formula "32") (term "0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "32") (term "0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "32") (term "1,0"))
                                                (rule "times_zero_2" (formula "32") (term "1,1,0"))
                                                (rule "add_zero_right" (formula "32") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0"))
                                                (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                                (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "applyEq" (formula "35") (term "0,0,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "35") (term "0,0,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "35") (term "1,0,0,0"))
                                                (rule "times_zero_2" (formula "35") (term "1,1,0,0,0"))
                                                (rule "add_zero_right" (formula "35") (term "1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0"))
                                                (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                                (rule "replace_known_left" (formula "35") (term "0,0,0,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "57") (term "1,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "57") (term "1,1,0"))
                                                (rule "mul_literals" (formula "57") (term "1,1,1,0"))
                                                (rule "add_zero_right" (formula "57") (term "1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "57") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0"))
                                                (rule "replace_known_left" (formula "57") (term "0,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "applyEqRigid" (formula "38") (term "0,1,2,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "38") (term "1,2,0,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "38") (term "1,1,2,0,0"))
                                                (rule "mul_literals" (formula "38") (term "1,1,1,2,0,0"))
                                                (rule "add_zero_right" (formula "38") (term "1,1,2,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,2,0,0"))
                                                (rule "add_zero_right" (formula "38") (term "0,0,1,2,0,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,2,0,0"))
                                                (rule "replace_known_left" (formula "38") (term "0,1,2,0,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "applyEq" (formula "40") (term "0,1,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "40") (term "1,0,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "40") (term "1,1,0,0"))
                                                (rule "times_zero_2" (formula "40") (term "1,1,1,0,0"))
                                                (rule "add_zero_right" (formula "40") (term "1,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "40") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0"))
                                                (rule "replace_known_left" (formula "40") (term "0,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "34") (term "1,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "34") (term "1,1,0"))
                                                (rule "times_zero_2" (formula "34") (term "1,1,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                                                (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "applyEq" (formula "60") (term "0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "60") (term "1,1,1,0"))
                                                (rule "mul_literals" (formula "60") (term "1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "60") (term "1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,0"))
                                                (rule "add_zero_right" (formula "60") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,0"))
                                                (rule "replace_known_left" (formula "60") (term "0,1,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "60"))
                                                (rule "applyEq" (formula "56") (term "0,1,2,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "56") (term "1,2,0,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "56") (term "1,1,2,0,0"))
                                                (rule "mul_literals" (formula "56") (term "1,1,1,2,0,0"))
                                                (rule "add_zero_right" (formula "56") (term "1,1,2,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,2,0,0"))
                                                (rule "add_zero_right" (formula "56") (term "0,0,1,2,0,0"))
                                                (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,2,0,0"))
                                                (rule "replace_known_left" (formula "56") (term "0,1,2,0,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "applyEqRigid" (formula "41") (term "0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "41") (term "1,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "41") (term "1,1,0"))
                                                (rule "mul_literals" (formula "41") (term "1,1,1,0"))
                                                (rule "add_zero_right" (formula "41") (term "1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "41") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0"))
                                                (rule "replace_known_left" (formula "41") (term "0,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "41"))
                                                (rule "applyEqRigid" (formula "42") (term "0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "42") (term "1,1,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "42") (term "1,1,1,0"))
                                                (rule "mul_literals" (formula "42") (term "1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "42") (term "1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1,1,0"))
                                                (rule "add_zero_right" (formula "42") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,1,0"))
                                                (rule "replace_known_left" (formula "42") (term "0,1,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "applyEqRigid" (formula "36") (term "0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "36") (term "1,1,0,1,0"))
                                                (rule "add_zero_right" (formula "36") (term "1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0"))
                                                (rule "add_zero_right" (formula "36") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0"))
                                                (rule "applyEqRigid" (formula "36") (term "0,1,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "36") (term "1,0,1,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "36") (term "1,1,0,1,0"))
                                                (rule "mul_literals" (formula "36") (term "1,1,1,0,1,0"))
                                                (rule "add_zero_right" (formula "36") (term "1,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,1,0"))
                                                (rule "add_zero_right" (formula "36") (term "0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,1,0"))
                                                (rule "applyEqRigid" (formula "36") (term "0,0,1,0,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,0,0,1,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,0,1,0"))
                                                (rule "times_zero_2" (formula "36") (term "1,1,0,1,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,0,0,1,0"))
                                                (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "58") (term "1,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "58") (term "1,1,0"))
                                                (rule "mul_literals" (formula "58") (term "1,1,1,0"))
                                                (rule "add_zero_right" (formula "58") (term "1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "58") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0"))
                                                (rule "applyEqRigid" (formula "40") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "40") (term "0,0,0,0,1,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "40") (term "1,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "40") (term "1,1,0,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "40") (term "1,0,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "40") (term "0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,1,0"))
                                                (rule "applyEq" (formula "40") (term "0,1,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "40") (term "1,0,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "40") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "40") (term "1,1,1,0,0"))
                                                (rule "add_zero_right" (formula "40") (term "1,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "40") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                (rule "applyEqRigid" (formula "35") (term "0,0,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "35") (term "0,0,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "35") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "35") (term "1,1,0,0,0"))
                                                (rule "add_zero_right" (formula "35") (term "1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0"))
                                                (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                                (rule "applyEq" (formula "42") (term "0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "42") (term "1,1,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "42") (term "1,1,1,0"))
                                                (rule "mul_literals" (formula "42") (term "1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "42") (term "1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1,1,0"))
                                                (rule "add_zero_right" (formula "42") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,1,0"))
                                                (rule "applyEqRigid" (formula "55") (term "0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "55") (term "1,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "55") (term "1,1,0"))
                                                (rule "mul_literals" (formula "55") (term "1,1,1,0"))
                                                (rule "add_zero_right" (formula "55") (term "1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "55") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0"))
                                                (rule "applyEqRigid" (formula "59") (term "0,0,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "59") (term "0,0,0,1,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "59") (term "1,0,0,0,1,0"))
                                                (rule "times_zero_2" (formula "59") (term "1,1,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "59") (term "1,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "59") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                (rule "applyEq" (formula "37") (term "0,2,0,1,1") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "37") (term "2,0,1,1") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "37") (term "1,2,0,1,1"))
                                                (rule "times_zero_2" (formula "37") (term "1,1,2,0,1,1"))
                                                (rule "add_zero_right" (formula "37") (term "1,2,0,1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "37") (term "0,2,0,1,1"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,2,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,2,0,1,1"))
                                                (rule "applyEqRigid" (formula "57") (term "0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "57") (term "1,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "57") (term "1,1,0"))
                                                (rule "mul_literals" (formula "57") (term "1,1,1,0"))
                                                (rule "add_zero_right" (formula "57") (term "1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "57") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0"))
                                                (rule "applyEqRigid" (formula "39") (term "0,1,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "39") (term "1,0,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0"))
                                                (rule "times_zero_2" (formula "39") (term "1,1,1,0,0"))
                                                (rule "add_zero_right" (formula "39") (term "1,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "39") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0"))
                                                (rule "applyEqRigid" (formula "34") (term "0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "34") (term "1,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "34") (term "1,1,0"))
                                                (rule "mul_literals" (formula "34") (term "1,1,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                                                (rule "applyEq" (formula "37") (term "0,1,0,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "37") (term "1,0,0,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "37") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "37") (term "1,1,1,0,0,0"))
                                                (rule "add_zero_right" (formula "37") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0"))
                                                (rule "applyEqRigid" (formula "56") (term "0,1,2,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "56") (term "1,2,0,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "56") (term "1,1,2,0,0"))
                                                (rule "mul_literals" (formula "56") (term "1,1,1,2,0,0"))
                                                (rule "add_zero_right" (formula "56") (term "1,1,2,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,2,0,0"))
                                                (rule "add_zero_right" (formula "56") (term "0,0,1,2,0,0"))
                                                (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,2,0,0"))
                                                (rule "applyEq" (formula "37") (term "0,0,1,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,1,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,1,0"))
                                                (rule "times_zero_2" (formula "37") (term "1,1,0,1,0,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "1,0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0,1,0"))
                                                (rule "applyEq" (formula "41") (term "0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "41") (term "1,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "41") (term "1,1,0"))
                                                (rule "times_zero_2" (formula "41") (term "1,1,1,0"))
                                                (rule "add_zero_right" (formula "41") (term "1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "41") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0"))
                                                (rule "applyEqRigid" (formula "60") (term "0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "60") (term "1,1,1,0"))
                                                (rule "times_zero_2" (formula "60") (term "1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "60") (term "1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,0"))
                                                (rule "add_zero_right" (formula "60") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,0"))
                                                (rule "applyEqRigid" (formula "56") (term "0,2,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "56") (term "2,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "56") (term "1,2,0"))
                                                (rule "times_zero_2" (formula "56") (term "1,1,2,0"))
                                                (rule "add_zero_right" (formula "56") (term "1,2,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "56") (term "0,2,0"))
                                                (rule "add_zero_right" (formula "56") (term "0,0,2,0"))
                                                (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,2,0"))
                                                (rule "applyEqRigid" (formula "38") (term "0,2,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "38") (term "2,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "38") (term "1,2,0"))
                                                (rule "times_zero_2" (formula "38") (term "1,1,2,0"))
                                                (rule "add_zero_right" (formula "38") (term "1,2,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "38") (term "0,2,0"))
                                                (rule "add_zero_right" (formula "38") (term "0,0,2,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,2,0"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "32") (term "0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "32") (term "1,0"))
                                                (rule "times_zero_2" (formula "32") (term "1,1,0"))
                                                (rule "add_zero_right" (formula "32") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0"))
                                                (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                                (rule "applyEq" (formula "35") (term "0,1,0,1") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "35") (term "1,0,1") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "35") (term "1,1,0,1"))
                                                (rule "mul_literals" (formula "35") (term "1,1,1,0,1"))
                                                (rule "add_zero_right" (formula "35") (term "1,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0,1"))
                                                (rule "add_zero_right" (formula "35") (term "0,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,1"))
                                                (rule "applyEqRigid" (formula "59") (term "0,1,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,1,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "59") (term "1,1,1,1,0"))
                                                (rule "mul_literals" (formula "59") (term "1,1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "59") (term "1,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,1,0"))
                                                (rule "add_zero_right" (formula "59") (term "0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,1,0"))
                                                (rule "replace_known_left" (formula "59") (term "0,1,1,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "applyEq" (formula "38") (term "0,1,2,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "38") (term "1,2,0,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "38") (term "1,1,2,0,0"))
                                                (rule "mul_literals" (formula "38") (term "1,1,1,2,0,0"))
                                                (rule "add_zero_right" (formula "38") (term "1,1,2,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,2,0,0"))
                                                (rule "add_zero_right" (formula "38") (term "0,0,1,2,0,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,2,0,0"))
                                                (rule "applyEq" (formula "38") (term "0,1,1,1,2,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "38") (term "1,1,1,2,0,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "38") (term "1,1,1,1,2,0,0"))
                                                (rule "times_zero_2" (formula "38") (term "1,1,1,1,1,2,0,0"))
                                                (rule "add_zero_right" (formula "38") (term "1,1,1,1,2,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,1,1,2,0,0"))
                                                (rule "add_zero_right" (formula "38") (term "0,0,1,1,1,2,0,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,1,1,2,0,0"))
                                                (rule "applyEq" (formula "59") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "59") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0,0,0,0,0,1,0"))
                                                (rule "times_zero_2" (formula "59") (term "1,1,0,1,0,0,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0,0,0,0,0,1,0"))
                                                (rule "replace_known_left" (formula "59") (term "0,0,0,0,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "applyEqRigid" (formula "57") (term "0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "57") (term "1,1,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "57") (term "1,1,1,0"))
                                                (rule "mul_literals" (formula "57") (term "1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "57") (term "1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,1,0"))
                                                (rule "add_zero_right" (formula "57") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,1,0"))
                                                (rule "applyEq" (formula "38") (term "0,1,0,1,0,0,1,2,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "38") (term "1,0,1,0,0,1,2,0,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "38") (term "1,1,0,1,0,0,1,2,0,0"))
                                                (rule "mul_literals" (formula "38") (term "1,1,1,0,1,0,0,1,2,0,0"))
                                                (rule "add_zero_right" (formula "38") (term "1,1,0,1,0,0,1,2,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,0,1,0,0,1,2,0,0"))
                                                (rule "add_zero_right" (formula "38") (term "0,0,1,0,1,0,0,1,2,0,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,1,0,0,1,2,0,0"))
                                                (rule "applyEqRigid" (formula "38") (term "0,0,1,0,0,0,1,0,0,1,2,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "38") (term "0,1,0,0,0,1,0,0,1,2,0,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "38") (term "1,0,1,0,0,0,1,0,0,1,2,0,0"))
                                                (rule "mul_literals" (formula "38") (term "1,1,0,1,0,0,0,1,0,0,1,2,0,0"))
                                                (rule "add_zero_right" (formula "38") (term "1,0,1,0,0,0,1,0,0,1,2,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,1,0,0,0,1,0,0,1,2,0,0"))
                                                (rule "add_zero_right" (formula "38") (term "0,0,0,1,0,0,0,1,0,0,1,2,0,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,0,0,0,1,0,0,1,2,0,0"))
                                                (rule "replace_known_left" (formula "38") (term "0,0,1,0,0,1,2,0,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "36")))
                                                (rule "applyEq" (formula "39") (term "0,1,1,0,1,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "39") (term "1,1,0,1,0,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "39") (term "1,1,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "39") (term "1,1,1,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "39") (term "1,1,1,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,1,0,1,0"))
                                                (rule "add_zero_right" (formula "39") (term "0,0,1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,1,0,1,0"))
                                                (rule "applyEqRigid" (formula "56") (term "0,1,2,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "56") (term "1,2,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "56") (term "1,1,2,0"))
                                                (rule "mul_literals" (formula "56") (term "1,1,1,2,0"))
                                                (rule "add_zero_right" (formula "56") (term "1,1,2,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,2,0"))
                                                (rule "add_zero_right" (formula "56") (term "0,0,1,2,0"))
                                                (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,2,0"))
                                                (rule "replace_known_left" (formula "56") (term "0,1,2,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "applyEq" (formula "60") (term "0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "60") (term "0,1,0,0,1,1,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "60") (term "1,0,1,0,0,1,1,0"))
                                                (rule "times_zero_2" (formula "60") (term "1,1,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "60") (term "1,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "60") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "replace_known_left" (formula "60") (term "0,0,1,0,0,1,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "36")))
                                                (rule "applyEqRigid" (formula "32") (term "0,1,0,1,0,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "32") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "32") (term "1,1,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "32") (term "1,1,1,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "32") (term "1,1,0,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "32") (term "0,0,1,0,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,1,0,0,0"))
                                                (rule "replace_known_left" (formula "32") (term "0,1,0,1,0,0,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "applyEq" (formula "37") (term "0,0,1,0,0,2,0,1,1") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,0,2,0,1,1") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0,2,0,1,1"))
                                                (rule "mul_literals" (formula "37") (term "1,1,0,1,0,0,2,0,1,1"))
                                                (rule "add_zero_right" (formula "37") (term "1,0,1,0,0,2,0,1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0,2,0,1,1"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0,2,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0,0,2,0,1,1"))
                                                (rule "applyEqRigid" (formula "55") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "55") (term "0,1,0,0,1,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "55") (term "1,0,1,0,0,1,0"))
                                                (rule "times_zero_2" (formula "55") (term "1,1,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "55") (term "1,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "55") (term "0,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0,0,1,0"))
                                                (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "34") (term "0,1,0,0,1,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "34") (term "1,0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "34") (term "1,1,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "1,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "0,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0,0,1,0"))
                                                (rule "applyEqRigid" (formula "41") (term "0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "41") (term "1,1,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "41") (term "1,1,1,0"))
                                                (rule "mul_literals" (formula "41") (term "1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "41") (term "1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,1,0"))
                                                (rule "add_zero_right" (formula "41") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,1,0"))
                                                (rule "applyEqRigid" (formula "37") (term "0,1,2,0,1,1") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "37") (term "1,2,0,1,1") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "37") (term "1,1,2,0,1,1"))
                                                (rule "mul_literals" (formula "37") (term "1,1,1,2,0,1,1"))
                                                (rule "add_zero_right" (formula "37") (term "1,1,2,0,1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,2,0,1,1"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,1,2,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,2,0,1,1"))
                                                (rule "replace_known_left" (formula "37") (term "0,1,2,0,1,1") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "applyEqRigid" (formula "35") (term "0,0,1,0,0,0,1,0,0,1,0,1") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "35") (term "0,1,0,0,0,1,0,0,1,0,1") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "35") (term "1,0,1,0,0,0,1,0,0,1,0,1"))
                                                (rule "mul_literals" (formula "35") (term "1,1,0,1,0,0,0,1,0,0,1,0,1"))
                                                (rule "add_zero_right" (formula "35") (term "1,0,1,0,0,0,1,0,0,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,1,0,0,0,1,0,0,1,0,1"))
                                                (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,0,0,1,0,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0,0,0,1,0,0,1,0,1"))
                                                (rule "applyEqRigid" (formula "35") (term "0,1,1,1,0,1") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "35") (term "1,1,1,0,1") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "35") (term "1,1,1,1,0,1"))
                                                (rule "mul_literals" (formula "35") (term "1,1,1,1,1,0,1"))
                                                (rule "add_zero_right" (formula "35") (term "1,1,1,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,1,1,0,1"))
                                                (rule "add_zero_right" (formula "35") (term "0,0,1,1,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,1,1,0,1"))
                                                (rule "replace_known_left" (formula "35") (term "0,1,1,1,0,1") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "applyEqRigid" (formula "57") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "57") (term "0,1,0,0,1,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "57") (term "1,0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "57") (term "1,1,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "57") (term "1,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "57") (term "0,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0,0,1,0"))
                                                (rule "applyEq" (formula "58") (term "0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "58") (term "1,1,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "58") (term "1,1,1,0"))
                                                (rule "times_zero_2" (formula "58") (term "1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "58") (term "1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,1,0"))
                                                (rule "add_zero_right" (formula "58") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,1,0"))
                                                (rule "replace_known_left" (formula "58") (term "0,1,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "applyEqRigid" (formula "34") (term "0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "34") (term "1,1,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "34") (term "1,1,1,0"))
                                                (rule "mul_literals" (formula "34") (term "1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,1,0"))
                                                (rule "applyEqRigid" (formula "41") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "41") (term "0,1,0,0,1,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "41") (term "1,0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "41") (term "1,1,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "41") (term "1,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "41") (term "0,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,0,0,1,0"))
                                                (rule "replace_known_left" (formula "41") (term "0,0,1,0,0,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "36")))
                                                (rule "applyEq" (formula "40") (term "0,1,0,0,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "40") (term "1,0,0,0,0,1,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "40") (term "1,1,0,0,0,0,1,0"))
                                                (rule "times_zero_2" (formula "40") (term "1,1,1,0,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "40") (term "1,1,0,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "40") (term "0,0,1,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,0,1,0"))
                                                (rule "replace_known_left" (formula "40") (term "0,1,0,0,0,0,1,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "applyEqRigid" (formula "42") (term "0,1,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "42") (term "1,1,1,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "42") (term "1,1,1,1,0"))
                                                (rule "times_zero_2" (formula "42") (term "1,1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "42") (term "1,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1,1,1,0"))
                                                (rule "add_zero_right" (formula "42") (term "0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,1,1,0"))
                                                (rule "applyEqRigid" (formula "36") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "36") (term "1,1,0,1,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "36") (term "1,1,1,0,1,0"))
                                                (rule "mul_literals" (formula "36") (term "1,1,1,1,0,1,0"))
                                                (rule "add_zero_right" (formula "36") (term "1,1,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,1,0,1,0"))
                                                (rule "add_zero_right" (formula "36") (term "0,0,1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,1,0,1,0"))
                                                (rule "applyEq" (formula "36") (term "0,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,0,1,0,0,0,1,0"))
                                                (rule "times_zero_2" (formula "36") (term "1,1,0,1,0,0,0,1,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,0,1,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,0,1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,0,0,1,0,0,0,1,0"))
                                                (rule "applyEq" (formula "36") (term "0,1,0,1,0,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "36") (term "1,0,1,0,0,0,1,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "36") (term "1,1,0,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "36") (term "1,1,1,0,1,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "36") (term "1,1,0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,1,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "36") (term "0,0,1,0,1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,1,0,0,0,1,0"))
                                                (rule "applyEqRigid" (formula "36") (term "0,0,1,0,0,1,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,0,1,0,1,0") (ifseqformula "38"))
                                                (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "36") (term "1,1,0,1,0,0,1,0,1,0"))
                                                (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,1,0,1,0"))
                                                (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,0,1,0,1,0"))
                                                (rule "applyEqRigid" (formula "55") (term "0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "55") (term "1,1,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "55") (term "1,1,1,0"))
                                                (rule "times_zero_2" (formula "55") (term "1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "55") (term "1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,1,0"))
                                                (rule "add_zero_right" (formula "55") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,1,0"))
                                                (rule "applyEqRigid" (formula "42") (term "0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "42") (term "0,1,0,0,1,1,0") (ifseqformula "56"))
                                                (rule "polySimp_elimSub" (formula "42") (term "1,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "42") (term "1,1,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "42") (term "1,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "42") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "64"))
                                                (rule "closeTrue" (formula "64"))
                                             )
                                             (branch " 1 + de.polyas.core3.open.cred.CredTool.polyasVals.seq@heapAtPre_B«anonHeapFunction».length * -1 ≤ 0 FALSE"
                                                 (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                                (rule "mul_literals" (formula "36") (term "1,0,1,0"))
                                                (rule "add_zero_right" (formula "36") (term "0,0,0"))
                                                (rule "mul_literals" (formula "36") (term "1,0,0,2,0,1,1"))
                                                (rule "add_zero_right" (formula "36") (term "0,1,0"))
                                                (rule "qeq_literals" (formula "36") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "add_zero_right" (formula "36") (term "0,0,2,0,1,1"))
                                                (rule "leq_literals" (formula "36") (term "0,2,0,1,1"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "eqSymm" (formula "36") (term "1,1"))
                                                (rule "replace_known_right" (formula "56") (term "0,1,2,0,0") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                                (rule "eqSymm" (formula "56"))
                                                (rule "replace_known_right" (formula "59") (term "0,1,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                                (rule "mul_literals" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "59") (term "1,1,0"))
                                                (rule "mul_literals" (formula "59") (term "1,0,0,1,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "59") (term "1,0,0,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "59") (term "0,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "59") (term "0,0,1,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "59") (term "0,0,1,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "59") (term "0,0,0,0,1,0"))
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "mul_literals" (formula "59") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "59") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "replace_known_right" (formula "38") (term "0,1,0,1,0,0,1,0,1,0,0,0,1,0,0,1,1,0,0,0,0,1,0") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                                (rule "mul_literals" (formula "38") (term "1,0,0,0,1,0,0,1,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "38") (term "0,0"))
                                                (rule "mul_literals" (formula "38") (term "1,0,0,1,0,1,0,0,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "38") (term "1,0,0,1,1,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "38") (term "1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "38") (term "0,0,0,1,0,0,1,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "38") (term "0,0,1,0,1,0,0,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "38") (term "0,0,1,1,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "38") (term "0,0,1,0,0,1,0,0,0,0,1,0"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "leq_literals" (formula "38") (term "0,0,1,0,0,0,1,0,0,0,0,0,0,1,0"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "leq_literals" (formula "38") (term "0,1,1,0,0,0,0,1,0"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "mul_literals" (formula "38") (term "0,0,0,1,0"))
                                                (rule "leq_literals" (formula "38") (term "0,0,1,0"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "replace_known_right" (formula "40") (term "0,1,0,1,0,0,1,0,1,0,0,1,1,0") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                                (rule "mul_literals" (formula "40") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "40") (term "1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "40") (term "1,0,0,1,1,1,0"))
                                                (rule "add_literals" (formula "40") (term "0,0,1,0"))
                                                (rule "add_zero_right" (formula "40") (term "0,0,1,1,0"))
                                                (rule "add_literals" (formula "40") (term "0,0,1,1,1,0"))
                                                (rule "leq_literals" (formula "40") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "replace_known_right" (formula "34") (term "0,1,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                                (rule "add_zero_right" (formula "34") (term "0"))
                                                (rule "replace_known_right" (formula "58") (term "0,1,0,1,0,0,1,1,0") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                                (rule "add_zero_right" (formula "58") (term "0"))
                                                (rule "replace_known_right" (formula "41") (term "0,1,1,1,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,0") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                                (rule "add_literals" (formula "41") (term "1,0"))
                                                (rule "replace_known_right" (formula "54") (term "0,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                                (rule "times_zero_2" (formula "54") (term "1,0"))
                                                (rule "add_zero_right" (formula "54") (term "0"))
                                                (rule "leq_literals" (formula "54"))
                                                (rule "closeFalse" (formula "54"))
                                             )
                                          )
                                          (branch " 1 + de.polyas.core3.open.cred.CredTool.polyasVals.seq@heapAtPre_B«anonHeapFunction».length * -1 ≤ 0 FALSE"
                                             (rule "mul_literals" (formula "54") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "54") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "54") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                             (rule "add_zero_right" (formula "54") (term "0"))
                                             (rule "replace_known_right" (formula "58") (term "0,1,1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                             (rule "add_zero_right" (formula "58") (term "0"))
                                             (rule "replace_known_right" (formula "59") (term "0,0,1,0,0,1,1,0,1,0,0,0,0,0,1,0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                             (rule "add_literals" (formula "59") (term "1,1,0"))
                                             (rule "mul_literals" (formula "59") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "59") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "replace_known_right" (formula "55") (term "0,1,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                             (rule "times_zero_2" (formula "55") (term "1,0"))
                                             (rule "add_literals" (formula "55") (term "0"))
                                             (rule "leq_literals" (formula "55"))
                                             (rule "closeFalse" (formula "55"))
                                          )
                                       )
                                       (branch " 1 + de.polyas.core3.open.cred.CredTool.polyasVals.seq@heapAtPre_B«anonHeapFunction».length * -1 ≤ 0 FALSE"
                                          (rule "mul_literals" (formula "56") (term "1,0,0,0,1,1,2,0"))
                                          (rule "add_literals" (formula "56") (term "0,0,0,1,1,2,0"))
                                          (rule "leq_literals" (formula "56") (term "0,0,1,1,2,0"))
                                           (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                          (rule "add_literals" (formula "56") (term "2,0,0"))
                                          (rule "mul_literals" (formula "56") (term "1,0,0,0,1,0,0,0,1,0,0,1,1,0,1,2,0"))
                                          (rule "mul_literals" (formula "56") (term "1,0,0,1,1,1,1,0,1,2,0"))
                                          (rule "sub_literals" (formula "56") (term "1,1,2,0"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "eqSymm" (formula "56"))
                                          (rule "replace_known_right" (formula "41") (term "0,1,1,0,1,0,0,1,0,1,0,0,1,1,1,1,0,1,0,0,1,1,0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                          (rule "replace_known_right" (formula "60") (term "0,1,0,1,0,0,0,1,0,0,1,1,1,1,1,0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                          (rule "add_literals" (formula "60") (term "1,0"))
                                          (rule "replace_known_right" (formula "32") (term "0,1,1,0,1,0,0,1,1,1,1,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                          (rule "mul_literals" (formula "32") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "32") (term "1,0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "32") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "32") (term "0,0,1,0,1,0"))
                                          (rule "leq_literals" (formula "32") (term "0,0,1,0"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "times_zero_2" (formula "32") (term "1,0"))
                                          (rule "add_literals" (formula "32") (term "0"))
                                          (rule "leq_literals" (formula "32"))
                                          (rule "closeFalse" (formula "32"))
                                       )
                                    )
                                    (branch " 1 + de.polyas.core3.open.cred.CredTool.polyasVals.seq@heapAtPre_B«anonHeapFunction».length * -1 ≤ 0 FALSE"
                                        (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")))
                                       (rule "less_literals" (formula "32") (term "0,0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "times_zero_2" (formula "32") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0,0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,0,1,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,1,1,0"))
                                       (rule "leq_literals" (formula "32") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "qeq_literals" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "replace_known_right" (formula "61") (term "0,0,1,0,0,1,0,1,0,0,0,1,0,0,1,1,1,1,0") (ifseqformula "66"))
                                        (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")))
                                       (rule "mul_literals" (formula "61") (term "1,0,0,1,0,1,0,0,1,1,1,0"))
                                       (rule "mul_literals" (formula "61") (term "1,0,0,0,1,0,0,0,1,0,0,1,1,1,0"))
                                       (rule "mul_literals" (formula "61") (term "1,0,0,0,1,0,0,1,1,1,1,0"))
                                       (rule "mul_literals" (formula "61") (term "1,0,0,1,1,1,1,1,0"))
                                       (rule "mul_literals" (formula "61") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "61") (term "0,0,1,0,1,0,0,1,1,1,0"))
                                       (rule "add_literals" (formula "61") (term "0,0,0,1,0,0,0,1,0,0,1,1,1,0"))
                                       (rule "add_zero_right" (formula "61") (term "0,0,0,1,0,0,1,1,1,1,0"))
                                       (rule "add_literals" (formula "61") (term "0,0,1,1,1,1,1,0"))
                                       (rule "leq_literals" (formula "61") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "61"))
                                       (rule "leq_literals" (formula "61") (term "0,1,1,1,1,0"))
                                        (builtin "One Step Simplification" (formula "61"))
                                       (rule "add_literals" (formula "61") (term "1,0"))
                                       (rule "replace_known_right" (formula "60") (term "0,0,1,0,0,1,1,1,0") (ifseqformula "66"))
                                        (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")))
                                       (rule "add_zero_right" (formula "60") (term "0"))
                                       (rule "replace_known_right" (formula "54") (term "0,1,1,0,1,0,0,1,1,1,0,1,0,0,1,0,1,0,0,1,0") (ifseqformula "66"))
                                        (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")))
                                       (rule "mul_literals" (formula "54") (term "1,0,0,0,1,0,0,0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "54") (term "1,0,0,0,1,0,0,1,1,1,0"))
                                       (rule "mul_literals" (formula "54") (term "1,0,0,1,0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "54") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "54") (term "1,0,0,1,1,1,1,0"))
                                       (rule "add_literals" (formula "54") (term "0,0,0,1,0,0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "54") (term "0,0,0,1,0,0,1,1,1,0"))
                                       (rule "add_zero_right" (formula "54") (term "0,0,1,0,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "54") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "54") (term "0,0,1,1,1,1,0"))
                                       (rule "leq_literals" (formula "54") (term "0,0,1,0,0,0,1,0,0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "54"))
                                       (rule "leq_literals" (formula "54") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "54"))
                                       (rule "add_zero_right" (formula "54") (term "0"))
                                       (rule "replace_known_right" (formula "56") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,1,2,0,0") (ifseqformula "66"))
                                        (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")))
                                       (rule "replace_known_right" (formula "41") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,0") (ifseqformula "66"))
                                        (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")))
                                       (rule "mul_literals" (formula "41") (term "1,0,0,0,1,0,0,0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "41") (term "1,0,0,1,0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "41") (term "1,0,0,0,1,0,0,1,1,1,0"))
                                       (rule "mul_literals" (formula "41") (term "1,0,0,1,1,1,1,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,1,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,1,1,1,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,1,1,1,1,0"))
                                       (rule "leq_literals" (formula "41") (term "0,0,1,0,0,0,1,0,0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "leq_literals" (formula "41") (term "0,0,1,0,0,1,1,1,0"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "mul_literals" (formula "41") (term "1,0,0,0,1,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "41") (term "0,1,1,1,1,0"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "add_literals" (formula "41") (term "1,0"))
                                       (rule "replace_known_right" (formula "38") (term "0,0,1,0,0,1,0,1,0,0,0,1,0,0,1,1,1,1,0,0,0,0,1,0") (ifseqformula "66"))
                                        (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")))
                                       (rule "add_literals" (formula "38") (term "0,0"))
                                       (rule "mul_literals" (formula "38") (term "1,0,0,1,1,0,1,0"))
                                       (rule "mul_literals" (formula "38") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "38") (term "0,0,1,1,0,1,0"))
                                       (rule "leq_literals" (formula "38") (term "0,0,1,0"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "leq_literals" (formula "38") (term "0,1,0,1,0"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "add_literals" (formula "38") (term "0,1,0"))
                                       (rule "mul_literals" (formula "38") (term "1,0"))
                                       (rule "add_literals" (formula "38") (term "0"))
                                       (rule "leq_literals" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                       (rule "replace_known_right" (formula "61") (term "0,0,1,0,0,0,1,0,0,1,0,1,0,0,1,1,0") (ifseqformula "65"))
                                        (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")))
                                       (rule "add_literals" (formula "61") (term "1,0"))
                                       (rule "replace_known_right" (formula "56") (term "0,1,0,1,0,0,0,1,0,0,1,0,1,0,0,1,0") (ifseqformula "65"))
                                        (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")))
                                       (rule "mul_literals" (formula "56") (term "1,0,0,1,0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "56") (term "0,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "56") (term "1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "56") (term "0,0,1,0,1,0,0,1,0"))
                                       (rule "leq_literals" (formula "56") (term "0,0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "56"))
                                       (rule "add_zero_right" (formula "56") (term "0,0,0,1,0,0,0,1,0,0,1,0"))
                                       (rule "leq_literals" (formula "56") (term "0,1,0,1,0,0,1,0"))
                                        (builtin "One Step Simplification" (formula "56"))
                                       (rule "mul_literals" (formula "56") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "56") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "56") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "56"))
                                       (rule "add_zero_right" (formula "56") (term "0"))
                                       (rule "replace_known_right" (formula "39") (term "0,1,0,1,0,0,0,1,0,0,1,0,1,0,0,1,0") (ifseqformula "65"))
                                        (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")))
                                       (rule "mul_literals" (formula "39") (term "1,0,0,1,0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "39") (term "1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,1,0,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,0,1,0,0,1,0"))
                                       (rule "leq_literals" (formula "39") (term "0,1,0,1,0,0,1,0"))
                                        (builtin "One Step Simplification" (formula "39"))
                                       (rule "mul_literals" (formula "39") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "39") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "39"))
                                       (rule "replace_known_right" (formula "57") (term "0,1,0,0,0,0,1,0,0") (ifseqformula "65"))
                                        (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")))
                                       (rule "times_zero_2" (formula "57") (term "0,0,0,1,0,0"))
                                       (rule "add_literals" (formula "57") (term "1,0,1,0,0"))
                                       (rule "leq_literals" (formula "57") (term "0,0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "57"))
                                       (rule "mul_literals" (formula "57") (term "1,0,0"))
                                       (rule "add_literals" (formula "57") (term "0,0"))
                                       (rule "add_zero_right" (formula "57") (term "0"))
                                        (builtin "One Step Simplification" (formula "57"))
                                       (rule "true_left" (formula "57"))
                                       (rule "replace_known_right" (formula "37") (term "0,1,2,0,0") (ifseqformula "64"))
                                        (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                       (rule "add_literals" (formula "37") (term "2,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,0,0,2,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,2,0"))
                                       (rule "leq_literals" (formula "37") (term "0,2,0"))
                                        (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "55")))
                                       (rule "true_left" (formula "37"))
                                       (rule "replace_known_right" (formula "33") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,1,0") (ifseqformula "63"))
                                        (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")))
                                       (rule "add_zero_right" (formula "33") (term "0"))
                                       (rule "replace_known_right" (formula "56") (term "0,1,0,1,0,0,0,0,0") (ifseqformula "63"))
                                        (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")))
                                       (rule "qeq_literals" (formula "56") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "56"))
                                       (rule "replace_known_right" (formula "37") (term "0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0") (ifseqformula "63"))
                                        (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")))
                                       (rule "times_zero_2" (formula "37") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "37") (term "1,0,1,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                       (rule "leq_literals" (formula "37") (term "0,0,1,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "leq_literals" (formula "37") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "add_literals" (formula "37") (term "0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,0"))
                                       (rule "add_literals" (formula "37") (term "0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "true_left" (formula "37"))
                                       (rule "replace_known_right" (formula "34") (term "0,1,1,0,1,0,0,1,1,1,0,1") (ifseqformula "62"))
                                        (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")))
                                       (rule "mul_literals" (formula "34") (term "0,0"))
                                       (rule "add_literals" (formula "34") (term "0,1"))
                                       (rule "leq_literals" (formula "34") (term "0"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "true_left" (formula "34"))
                                       (rule "replace_known_right" (formula "51") (term "0,1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0") (ifseqformula "61"))
                                        (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")))
                                       (rule "mul_literals" (formula "51") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "51") (term "0,1"))
                                       (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "51") (term "0,0,0,0,0"))
                                       (rule "equal_literals" (formula "51") (term "1"))
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "leq_literals" (formula "51") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "times_zero_2" (formula "51") (term "0"))
                                       (rule "leq_literals" (formula "51"))
                                       (rule "true_left" (formula "51"))
                                       (rule "eqSymm" (formula "51"))
                                       (rule "replace_known_right" (formula "34") (term "0,1,1,0,1,0,0,1,0,1,0,0,2,0,1,1") (ifseqformula "60"))
                                        (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")))
                                       (rule "mul_literals" (formula "34") (term "1,0,0,0,1,0,0,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "34") (term "1,0,0,0,1,0,0,0,1,0,0,2,0,1,1"))
                                       (rule "mul_literals" (formula "34") (term "1,0,0,0,1,0,0,0,1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "34") (term "1,0,0,1,0,1,0,0,2,0,1,1"))
                                       (rule "mul_literals" (formula "34") (term "1,0,0,1,0,1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "34") (term "1,0,0,1,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "34") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "34") (term "0,0,0,1,0,0,1,1,0,0,0"))
                                       (rule "add_zero_right" (formula "34") (term "0,0,0,1,0,0,0,1,0,0,2,0,1,1"))
                                       (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0,1,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "34") (term "0,0,1,0,1,0,0,2,0,1,1"))
                                       (rule "add_literals" (formula "34") (term "0,0,1,0,1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "34") (term "0,0,1,1,1,0,0,0"))
                                       (rule "add_zero_right" (formula "34") (term "0,1,0"))
                                       (rule "leq_literals" (formula "34") (term "0,0,1,0,0,1,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "leq_literals" (formula "34") (term "0,0,1,0,0,0,1,0,0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "leq_literals" (formula "34") (term "0,1,0,1,0,0,2,0,1,1"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "mul_literals" (formula "34") (term "1,0,0,1,1,0,0,0"))
                                       (rule "leq_literals" (formula "34") (term "0,1,1,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "times_zero_2" (formula "34") (term "1,0,0,2,0,1,1"))
                                       (rule "add_literals" (formula "34") (term "0,0,0"))
                                       (rule "add_literals" (formula "34") (term "0,0,2,0,1,1"))
                                       (rule "qeq_literals" (formula "34") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "leq_literals" (formula "34") (term "0,2,0,1,1"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "eqSymm" (formula "34") (term "1,1"))
                                       (rule "replace_known_right" (formula "35") (term "0,0,1,1,1") (ifseqformula "60"))
                                        (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")))
                                       (rule "true_left" (formula "35"))
                                       (rule "polySimp_addComm1" (formula "54") (term "0"))
                                       (rule "add_literals" (formula "54") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0"))
                                       (rule "inEqSimp_leqRight" (formula "58"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "applyEqRigid" (formula "44") (term "1") (ifseqformula "27"))
                                       (rule "polySimp_rightDist" (formula "52") (term "1,0"))
                                       (rule "mul_literals" (formula "52") (term "0,1,0"))
                                       (rule "eqSeqEmpty" (formula "51"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "eqSeqEmpty" (formula "35") (term "1,1"))
                                       (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                       (rule "add_literals" (formula "52") (term "0,0"))
                                       (rule "add_zero_left" (formula "52") (term "0"))
                                       (rule "applyEq" (formula "72") (term "0,1,1") (ifseqformula "13"))
                                       (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "52") (term "0,0,0") (ifseqformula "5"))
                                       (rule "applyEqRigid" (formula "1") (term "0,0") (ifseqformula "51"))
                                       (rule "mul_literals" (formula "1") (term "0"))
                                       (rule "qeq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "applyEqRigid" (formula "51") (term "0,0") (ifseqformula "50"))
                                       (rule "times_zero_2" (formula "51") (term "0"))
                                       (rule "leq_literals" (formula "51"))
                                       (rule "true_left" (formula "51"))
                                       (rule "polySimp_sepNegMonomial" (formula "49"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                       (rule "polySimp_elimOne" (formula "49") (term "0"))
                                       (rule "applyEqRigid" (formula "52") (term "0,1,0") (ifseqformula "49"))
                                       (rule "mul_literals" (formula "52") (term "1,0"))
                                       (rule "add_literals" (formula "52") (term "0"))
                                       (rule "leq_literals" (formula "52"))
                                       (rule "true_left" (formula "52"))
                                       (rule "polySimp_sepNegMonomial" (formula "33"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "0"))
                                       (rule "applyEqRigid" (formula "34") (term "1,0,0") (ifseqformula "33"))
                                       (rule "add_literals" (formula "34") (term "0,0"))
                                       (rule "qeq_literals" (formula "34") (term "0"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "andLeft" (formula "34"))
                                       (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "33"))
                                       (rule "qeq_literals" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "33"))
                                       (rule "eqSymm" (formula "43"))
                                       (rule "applyEq" (formula "4") (term "1") (ifseqformula "33"))
                                       (rule "applyEqRigid" (formula "50") (term "0,0") (ifseqformula "33"))
                                       (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "33"))
                                       (rule "eqSymm" (formula "37") (term "1,0"))
                                       (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "43"))
                                       (rule "applyEq" (formula "26") (term "1") (ifseqformula "43"))
                                       (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "43"))
                                       (rule "pullOutSelect" (formula "68") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "replaceKnownSelect_taclet000000_13" (formula "1") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000000_14" (formula "1") (term "2,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "69") (term "1,0") (ifseqformula "1"))
                                       (rule "replaceKnownSelect_taclet00000000_18" (formula "69") (term "0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00000000_19" (formula "69") (term "0"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "68"))
                                       (rule "applyEq" (formula "68") (term "0,1,1") (ifseqformula "6"))
                                       (rule "applyEq" (formula "68") (term "0,1") (ifseqformula "26"))
                                       (rule "equalityToSeqGetAndSeqLenRight" (formula "68") (inst "iv=iv"))
                                       (rule "lenOfSeqConcat" (formula "68") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "68"))
                                       (rule "polySimp_addComm0" (formula "68") (term "1,0"))
                                       (rule "lenOfSeqConcat" (formula "68") (term "1,1,0"))
                                        (builtin "One Step Simplification" (formula "68"))
                                       (rule "polySimp_addComm0" (formula "68") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "68") (term "1,0"))
                                       (rule "add_literals" (formula "68") (term "0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "68") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,0,1"))
                                       (rule "applyEq" (formula "68") (term "1,1,0") (ifseqformula "34"))
                                       (rule "add_literals" (formula "68") (term "1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "68") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "68") (term "1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "68") (term "1,1,1,0,0,1"))
                                       (rule "mul_literals" (formula "68") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "68") (term "1,1,1,0,0,1"))
                                       (rule "getOfSeqConcat" (formula "68") (term "1,1,0,1"))
                                       (rule "eqSymm" (formula "68") (term "1,0,1"))
                                       (rule "polySimp_elimSub" (formula "68") (term "1,2,0,1,0,1"))
                                       (rule "polySimp_addComm0" (formula "68") (term "1,2,0,1,0,1"))
                                       (rule "lenOfSeqConcat" (formula "68") (term "1,0,0,1,0,1"))
                                        (builtin "One Step Simplification" (formula "68"))
                                       (rule "polySimp_addComm0" (formula "68") (term "1,0,0,1,0,1"))
                                       (rule "lenOfSeqConcat" (formula "68") (term "0,0,1,2,0,1,0,1"))
                                        (builtin "One Step Simplification" (formula "68"))
                                       (rule "polySimp_mulComm0" (formula "68") (term "0,1,2,0,1,0,1"))
                                       (rule "polySimp_addComm0" (formula "68") (term "1,0,1,2,0,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "68") (term "0,1,2,0,1,0,1"))
                                       (rule "mul_literals" (formula "68") (term "0,0,1,2,0,1,0,1"))
                                       (rule "getOfSeqSingleton" (formula "68") (term "2,0,1,0,1"))
                                       (rule "castDel" (formula "68") (term "2,2,0,1,0,1"))
                                       (rule "castDel" (formula "68") (term "1,2,0,1,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,1,0,1"))
                                       (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,1,0,1"))
                                       (rule "add_literals" (formula "68") (term "0,0,0,0,0,1,0,1"))
                                       (rule "add_zero_left" (formula "68") (term "0,0,0,0,1,0,1"))
                                       (rule "applyEqRigid" (formula "68") (term "0,1,0,0,0,2,0,1,0,1") (ifseqformula "34"))
                                       (rule "mul_literals" (formula "68") (term "1,0,0,0,2,0,1,0,1"))
                                       (rule "add_literals" (formula "68") (term "0,0,0,2,0,1,0,1"))
                                       (rule "applyEqRigid" (formula "68") (term "0,0,0,0,0,1,0,1") (ifseqformula "34"))
                                       (rule "mul_literals" (formula "68") (term "0,0,0,0,1,0,1"))
                                       (rule "add_zero_left" (formula "68") (term "0,0,0,1,0,1"))
                                       (rule "polySimp_sepPosMonomial" (formula "68") (term "0,2,0,1,0,1"))
                                       (rule "mul_literals" (formula "68") (term "1,0,2,0,1,0,1"))
                                       (rule "getOfSeqConcat" (formula "68") (term "1,0,1,0,1"))
                                       (rule "polySimp_elimSub" (formula "68") (term "1,2,1,0,1,0,1"))
                                       (rule "polySimp_addComm0" (formula "68") (term "1,2,1,0,1,0,1"))
                                       (rule "getOfSeqSingleton" (formula "68") (term "2,1,0,1,0,1"))
                                       (rule "castDel" (formula "68") (term "1,2,1,0,1,0,1"))
                                       (rule "castDel" (formula "68") (term "2,2,1,0,1,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "68") (term "0,1,0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,1,0,1,0,1"))
                                       (rule "applyEqRigid" (formula "68") (term "0,1,0,0,0,1,0,1,0,1") (ifseqformula "34"))
                                       (rule "times_zero_2" (formula "68") (term "1,0,0,0,1,0,1,0,1"))
                                       (rule "add_literals" (formula "68") (term "0,0,0,1,0,1,0,1"))
                                       (rule "applyEq" (formula "68") (term "0,0,0,0,2,1,0,1,0,1") (ifseqformula "34"))
                                       (rule "times_zero_2" (formula "68") (term "0,0,0,2,1,0,1,0,1"))
                                       (rule "add_zero_left" (formula "68") (term "0,0,2,1,0,1,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,1,0,1,0,1"))
                                       (rule "mul_literals" (formula "68") (term "1,0,1,0,1,0,1"))
                                       (rule "eqSeqConcat" (formula "43"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "andLeft" (formula "43"))
                                       (rule "andLeft" (formula "43"))
                                       (rule "polySimp_addComm0" (formula "43") (term "1"))
                                       (rule "eqSeqSingleton" (formula "45"))
                                       (rule "andLeft" (formula "45"))
                                       (rule "lenOfSeqSub" (formula "45") (term "0"))
                                       (rule "polySimp_elimSub" (formula "45") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "45") (term "1,0"))
                                       (rule "ifEqualsInteger" (formula "45"))
                                       (rule "equal_literals" (formula "45") (term "1,1"))
                                        (builtin "One Step Simplification" (formula "45"))
                                       (rule "andLeft" (formula "45"))
                                       (rule "polySimp_homoEq" (formula "46"))
                                       (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                       (rule "polySimp_mulAssoc" (formula "46") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "46") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "46") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "45"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "45") (term "0"))
                                       (rule "applyEq" (formula "47") (term "2,0,0") (ifseqformula "43"))
                                       (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "44") (term "2,0") (ifseqformula "34"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "lenOfSeqEmptyEQ" (formula "34") (term "0") (ifseqformula "44"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "true_left" (formula "34"))
                                       (rule "lenOfSeqEmptyEQ" (formula "42") (term "1,1") (ifseqformula "43"))
                                       (rule "lenOfSeqEmptyEQ" (formula "45") (term "1,0,0") (ifseqformula "43"))
                                       (rule "lenOfSeqEmptyEQ" (formula "44") (term "1,0,0") (ifseqformula "43"))
                                       (rule "lenOfSeqEmptyEQ" (formula "46") (term "1,2,0,0") (ifseqformula "43"))
                                       (rule "add_literals" (formula "42") (term "1"))
                                       (rule "add_zero_right" (formula "45") (term "0,0"))
                                       (rule "add_zero_right" (formula "44") (term "0,0"))
                                       (rule "add_literals" (formula "46") (term "2,0,0"))
                                       (rule "eqSymm" (formula "43"))
                                       (rule "eqSeqEmpty" (formula "43"))
                                       (rule "applyEqRigid" (formula "44") (term "0,1,0") (ifseqformula "42"))
                                       (rule "mul_literals" (formula "44") (term "1,0"))
                                       (rule "add_literals" (formula "44") (term "0"))
                                       (rule "leq_literals" (formula "44"))
                                       (rule "true_left" (formula "44"))
                                       (rule "applyEqRigid" (formula "44") (term "0,1,0") (ifseqformula "42"))
                                       (rule "mul_literals" (formula "44") (term "1,0"))
                                       (rule "add_literals" (formula "44") (term "0"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "true_left" (formula "44"))
                                       (rule "eqSeqConcat" (formula "36") (term "1"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "polySimp_addComm0" (formula "36") (term "1,0,0,1"))
                                       (rule "eqSeqSingleton" (formula "36") (term "1,1"))
                                       (rule "lenOfSeqSub" (formula "36") (term "0,0,1,1"))
                                       (rule "polySimp_elimSub" (formula "36") (term "1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "36") (term "1,0,0,1,1"))
                                       (rule "ifEqualsInteger" (formula "36") (term "0,1,1"))
                                       (rule "equal_literals" (formula "36") (term "1,1,0,1,1"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "polySimp_homoEq" (formula "36") (term "1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0,1,1"))
                                       (rule "polySimp_mulAssoc" (formula "36") (term "0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,1,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "36") (term "0,1,0,1,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,1,0,1,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,1"))
                                       (rule "applyEq" (formula "36") (term "2,0,0,1,1,1") (ifseqformula "32"))
                                       (rule "applyEq" (formula "36") (term "0,0,0,1") (ifseqformula "32"))
                                       (rule "polySimp_homoEq" (formula "36") (term "0,0,1"))
                                       (rule "mul_literals" (formula "36") (term "1,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "36") (term "0,0,0,0,1"))
                                       (rule "applyEq" (formula "36") (term "0,1,0,0,0,1,1") (ifseqformula "32"))
                                       (rule "mul_literals" (formula "36") (term "1,0,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,1"))
                                       (rule "add_literals" (formula "36") (term "0,0,0,0,1,1"))
                                       (rule "applyEqRigid" (formula "36") (term "0,1,0,1,0,1,1") (ifseqformula "32"))
                                       (rule "mul_literals" (formula "36") (term "1,0,1,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0,1,0,1,1"))
                                       (rule "add_literals" (formula "36") (term "0,0,1,0,1,1"))
                                       (rule "applyEq" (formula "36") (term "2,0,1,0,1") (ifseqformula "43"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "eqSymm" (formula "36") (term "1,0,1"))
                                       (rule "eqSeqEmpty" (formula "36") (term "1,0,1"))
                                       (rule "replace_known_left" (formula "36") (term "1,0,1") (ifseqformula "43"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "applyEqRigid" (formula "36") (term "1,0,0,0,1,1") (ifseqformula "43"))
                                       (rule "add_zero_right" (formula "36") (term "0,0,0,1,1"))
                                       (rule "leq_literals" (formula "36") (term "0,0,1,1"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "applyEqRigid" (formula "36") (term "1,0,0,1,1") (ifseqformula "43"))
                                       (rule "add_literals" (formula "36") (term "0,0,1,1"))
                                       (rule "equal_literals" (formula "36") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "notLeft" (formula "36"))
                                       (rule "eqSeqConcat" (formula "26"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "polySimp_addComm0" (formula "26") (term "1"))
                                       (rule "eqSeqSingleton" (formula "28"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "lenOfSeqSub" (formula "28") (term "0"))
                                       (rule "polySimp_elimSub" (formula "28") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "28") (term "1,0"))
                                       (rule "ifEqualsInteger" (formula "28"))
                                       (rule "equal_literals" (formula "28") (term "1,1"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "polySimp_homoEq" (formula "29"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                       (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0"))
                                       (rule "applyEqRigid" (formula "30") (term "2,0,0") (ifseqformula "26"))
                                       (rule "applyEq" (formula "27") (term "2,0") (ifseqformula "46"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "lenOfSeqEmptyEQ" (formula "46") (term "0") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "46"))
                                       (rule "true_left" (formula "46"))
                                       (rule "lenOfSeqEmptyEQ" (formula "26") (term "1,1") (ifseqformula "27"))
                                       (rule "lenOfSeqEmptyEQ" (formula "29") (term "1,0,0") (ifseqformula "27"))
                                       (rule "lenOfSeqEmptyEQ" (formula "30") (term "1,0,0") (ifseqformula "27"))
                                       (rule "lenOfSeqEmptyEQ" (formula "28") (term "1,0,0") (ifseqformula "27"))
                                       (rule "lenOfSeqEmptyEQ" (formula "30") (term "1,2,0,0") (ifseqformula "27"))
                                       (rule "add_zero_right" (formula "26") (term "1"))
                                       (rule "add_literals" (formula "29") (term "0,0"))
                                       (rule "add_zero_right" (formula "28") (term "0,0"))
                                       (rule "add_zero_right" (formula "30") (term "2,0,0"))
                                       (rule "eqSymm" (formula "27"))
                                       (rule "eqSeqEmpty" (formula "27"))
                                       (rule "applyEqRigid" (formula "29") (term "0,1,0") (ifseqformula "26"))
                                       (rule "mul_literals" (formula "29") (term "1,0"))
                                       (rule "add_literals" (formula "29") (term "0"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "applyEqRigid" (formula "28") (term "0,1,0") (ifseqformula "26"))
                                       (rule "mul_literals" (formula "28") (term "1,0"))
                                       (rule "add_literals" (formula "28") (term "0"))
                                       (rule "leq_literals" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "getOfSeqSub" (formula "44") (term "0"))
                                       (rule "castDel" (formula "44") (term "2,0"))
                                       (rule "add_literals" (formula "44") (term "1,1,0"))
                                       (rule "sub_literals" (formula "44") (term "1,1,0,0"))
                                       (rule "leq_literals" (formula "44") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "less_literals" (formula "44") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "pullOutSelect" (formula "70") (term "1,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_3"))
                                       (rule "applyEq" (formula "71") (term "1,0,1,1,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "71") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "replaceKnownSelect_taclet00_3" (formula "1") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_4" (formula "1") (term "2,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "71") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                                       (rule "replaceKnownSelect_taclet0000_8" (formula "71") (term "0,1,1,1,0,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "71") (term "0,1,1,1,0,0,1"))
                                       (rule "applyEqReverse" (formula "71") (term "1,0,0,0") (ifseqformula "1"))
                                       (rule "replaceKnownSelect_taclet0000_8" (formula "71") (term "0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "71") (term "0,0,0"))
                                       (rule "applyEqReverse" (formula "71") (term "1,0,1,1,0,1") (ifseqformula "1"))
                                       (rule "replaceKnownSelect_taclet0000_8" (formula "71") (term "0,1,1,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "71") (term "0,1,1,0,1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "replace_known_left" (formula "70") (term "0") (ifseqformula "34"))
                                        (builtin "One Step Simplification" (formula "70"))
                                       (rule "allRight" (formula "70") (inst "sk=iv_0"))
                                       (rule "impRight" (formula "70"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "applyEqRigid" (formula "2") (term "1,0") (ifseqformula "36"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "72") (term "0,1,0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "72") (term "0,0,1,0"))
                                        (builtin "One Step Simplification" (formula "72"))
                                       (rule "getOfSeqSub" (formula "30") (term "0"))
                                       (rule "castDel" (formula "30") (term "2,0"))
                                       (rule "sub_literals" (formula "30") (term "1,1,0,0"))
                                       (rule "leq_literals" (formula "30") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "add_literals" (formula "30") (term "1,1,0"))
                                       (rule "less_literals" (formula "30") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "59"))
                                       (rule "closeTrue" (formula "59"))
                                    )
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "67"))
                                    (rule "replaceKnownSelect_taclet000000_11" (formula "45") (term "0"))
                                    (rule "replaceKnownSelect_taclet00_1" (formula "45") (term "1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000000_12" (formula "45") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "45") (term "1"))
                                    (rule "impRight" (formula "79"))
                                    (rule "notRight" (formula "64"))
                                    (rule "close" (formula "73") (ifseqformula "1"))
                                 )
                              )
                           )
                           (branch "pre add_857115291_13 (information flow)"
                              (rule "andRight" (formula "63"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "67"))
                                 (rule "replaceKnownSelect_taclet000000_11" (formula "45") (term "0"))
                                 (rule "replaceKnownSelect_taclet00_1" (formula "45") (term "1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_12" (formula "45") (term "0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "45") (term "1"))
                                 (rule "impRight" (formula "79"))
                                 (rule "notRight" (formula "68"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "eqSymm" (formula "84"))
                                 (rule "eqSymm" (formula "6"))
                                 (rule "eqSymm" (formula "5"))
                                 (rule "eqSymm" (formula "4"))
                                 (rule "close" (formula "69") (ifseqformula "4"))
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "67"))
                                 (rule "replaceKnownSelect_taclet000000_11" (formula "45") (term "0"))
                                 (rule "replaceKnownSelect_taclet00_1" (formula "45") (term "1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_12" (formula "45") (term "0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "45") (term "1"))
                                 (rule "impRight" (formula "79"))
                                 (rule "notRight" (formula "68"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "eqSymm" (formula "84"))
                                 (rule "eqSymm" (formula "6"))
                                 (rule "eqSymm" (formula "4"))
                                 (rule "eqSymm" (formula "5"))
                                 (rule "close" (formula "69") (ifseqformula "5"))
                              )
                           )
                           (branch "post add_857115291_13 (information flow)"
                              (rule "Use_information_flow_contract_for_add_857115291_14" (formula "46") (ifseqformula "21"))
                              (rule "doubleImpLeft" (formula "46"))
                              (branch "pre_A & pre_B add_857115291_14 (information flow)"
                                 (rule "andRight" (formula "63"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "63"))
                                    (branch "Case 1"
                                        (builtin "One Step Simplification" (formula "67"))
                                       (rule "replaceKnownSelect_taclet000000_11" (formula "45") (term "0"))
                                       (rule "replaceKnownSelect_taclet00_1" (formula "45") (term "1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000000_12" (formula "45") (term "0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "45") (term "1"))
                                       (rule "impRight" (formula "79"))
                                       (rule "notRight" (formula "68"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "eqSymm" (formula "84"))
                                       (rule "eqSymm" (formula "6"))
                                       (rule "eqSymm" (formula "5"))
                                       (rule "eqSymm" (formula "4"))
                                       (rule "eqSymm" (formula "2"))
                                       (rule "polySimp_homoEq" (formula "35") (term "1"))
                                       (rule "mul_literals" (formula "35") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "35") (term "0,1"))
                                       (rule "polySimp_homoEq" (formula "61"))
                                       (rule "polySimp_homoEq" (formula "58") (term "1"))
                                       (rule "mul_literals" (formula "58") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "58") (term "0,1"))
                                       (rule "polySimp_homoEq" (formula "57"))
                                       (rule "polySimp_homoEq" (formula "40"))
                                       (rule "polySimp_homoEq" (formula "34"))
                                       (rule "polySimp_homoEq" (formula "64"))
                                       (rule "polySimp_mulComm0" (formula "61") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "57") (term "0"))
                                       (rule "polySimp_addComm1" (formula "34") (term "0"))
                                       (rule "polySimp_rightDist" (formula "61") (term "1,0"))
                                       (rule "polySimp_mulAssoc" (formula "61") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "61") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "61") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "61") (term "0,1,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                       (rule "polySimp_mulAssoc" (formula "40") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "40") (term "0,1,0"))
                                       (rule "polySimp_rightDist" (formula "64") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "64") (term "1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "0,1,0"))
                                       (rule "eqSeqConcat4" (formula "51"))
                                       (rule "andLeft" (formula "51"))
                                       (rule "inEqSimp_ltToLeq" (formula "39"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "39") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "61") (term "0,1,1,0,0"))
                                       (rule "add_zero_right" (formula "61") (term "0,0,1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,1,0,0"))
                                       (rule "mul_literals" (formula "61") (term "0,1,0,0,1,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "59"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "59") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0"))
                                       (rule "add_zero_right" (formula "64") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "64") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "37") (term "0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "62"))
                                       (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "35") (term "0"))
                                       (rule "add_zero_right" (formula "35") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "57") (term "0"))
                                       (rule "add_zero_right" (formula "57") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "42"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,1,0,0"))
                                       (rule "add_zero_right" (formula "41") (term "0,0,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "60") (term "0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "57") (term "1,0,0"))
                                       (rule "mul_literals" (formula "57") (term "0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,1,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "63") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,1,0,0"))
                                       (rule "add_literals" (formula "61") (term "0,0,0,1,1,0,0"))
                                       (rule "add_zero_left" (formula "61") (term "0,0,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "41") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor2" (formula "41") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "41") (term "1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "41") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "41") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "polySimp_addAssoc" (formula "64") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "61") (term "0,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "61") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor2" (formula "61") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "61") (term "1,0,0,0,1,0"))
                                       (rule "times_zero_1" (formula "61") (term "0,0,0,1,0"))
                                       (rule "leq_literals" (formula "61") (term "0,0,1,0"))
                                        (builtin "One Step Simplification" (formula "61"))
                                       (rule "polySimp_addAssoc" (formula "62") (term "0"))
                                       (rule "polySimp_addComm1" (formula "62") (term "0,0"))
                                       (rule "add_literals" (formula "62") (term "0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                       (rule "add_literals" (formula "35") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "35") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                       (rule "add_literals" (formula "57") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "57") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                                       (rule "add_literals" (formula "42") (term "0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0"))
                                       (rule "add_zero_right" (formula "59") (term "0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "59") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,1,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,1,1,0,0"))
                                       (rule "add_zero_left" (formula "41") (term "0,0,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "64") (term "0,0,0,0,0"))
                                       (rule "replace_known_left" (formula "64") (term "0,0") (ifseqformula "62"))
                                        (builtin "One Step Simplification" (formula "64"))
                                       (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "36") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "36") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "36") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,1,0"))
                                       (rule "add_zero_right" (formula "60") (term "0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "60") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "39") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "63") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "63") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "63") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                       (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                       (rule "add_literals" (formula "42") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "42") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2" (formula "42") (term "0"))
                                       (rule "add_literals" (formula "42") (term "1,0"))
                                       (rule "times_zero_1" (formula "42") (term "0"))
                                       (rule "leq_literals" (formula "42"))
                                       (rule "true_left" (formula "42"))
                                       (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "58") (term "0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "58") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0"))
                                       (rule "add_zero_right" (formula "60") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "60") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "60") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "60") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "59") (term "0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "59") (term "0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "40") (term "0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "62") (term "0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "62") (term "0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                       (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "41") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "60") (term "0,0,0"))
                                       (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "60"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                       (rule "replace_known_left" (formula "41") (term "0,0") (ifseqformula "39"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "36") (term "0,0,1,0"))
                                       (rule "applyEq" (formula "60") (term "1") (ifseqformula "5"))
                                       (rule "applyEq" (formula "63") (term "0,1,1,0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "82") (term "0,1,1") (ifseqformula "12"))
                                       (rule "applyEqRigid" (formula "55") (term "0,1,0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "56") (term "0,1,0,1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "56") (term "0,0,0,0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "56") (term "0,2,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "65") (term "1,0,0") (ifseqformula "6"))
                                       (rule "applyEqRigid" (formula "60") (term "0,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "57") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "56") (term "1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "61") (term "0,0,0,0,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "58") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "59") (term "0,1,1,0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "58") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "81") (term "0,1") (ifseqformula "12"))
                                       (rule "applyEqRigid" (formula "59") (term "0,0,0,0") (ifseqformula "4"))
                                       (rule "replace_known_left" (formula "59") (term "0,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "59"))
                                       (rule "applyEqRigid" (formula "81") (term "0,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "44") (term "5") (ifseqformula "31"))
                                       (rule "applyEq" (formula "49") (term "0,1,0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "56") (term "0,1,2,0,0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "61") (term "0,1,1,1,0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "57") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "58") (term "0,1,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "27") (term "5") (ifseqformula "25"))
                                       (rule "applyEq" (formula "62") (term "1") (ifseqformula "6"))
                                       (rule "applyEq" (formula "43") (term "0,1,0") (ifseqformula "26"))
                                       (rule "eqSymm" (formula "43") (term "1,0"))
                                       (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "80") (term "0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "69") (term "0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "57") (term "0,1,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "67") (term "0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "10"))
                                       (rule "applyEq" (formula "66") (term "0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "60") (term "1") (ifseqformula "6"))
                                       (rule "applyEq" (formula "63") (term "1,0,1") (ifseqformula "6"))
                                       (rule "applyEq" (formula "50") (term "1") (ifseqformula "5"))
                                       (rule "applyEq" (formula "43") (term "0,1") (ifseqformula "26"))
                                       (rule "eqSymm" (formula "43") (term "1"))
                                       (rule "applyEq" (formula "73") (term "0") (ifseqformula "10"))
                                       (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "10"))
                                       (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "49") (term "0") (ifseqformula "26"))
                                       (rule "eqSymm" (formula "49"))
                                       (rule "polySimp_sepPosMonomial" (formula "35") (term "1"))
                                       (rule "mul_literals" (formula "35") (term "1,1"))
                                       (rule "polySimp_sepPosMonomial" (formula "34"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                       (rule "mul_literals" (formula "34") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                       (rule "applyEq" (formula "37") (term "0,1") (ifseqformula "34"))
                                       (rule "applyEqRigid" (formula "39") (term "0,0,0,0,1,0") (ifseqformula "34"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "0,0,0,1,0"))
                                       (rule "mul_literals" (formula "39") (term "0,0,0,0,1,0"))
                                       (rule "applyEqRigid" (formula "38") (term "1,2,0,0") (ifseqformula "34"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "2,0,0"))
                                       (rule "add_literals" (formula "38") (term "0,2,0,0"))
                                       (rule "applyEqRigid" (formula "36") (term "1,0,0,0") (ifseqformula "34"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                       (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "34"))
                                       (rule "applyEqRigid" (formula "35") (term "0,1") (ifseqformula "34"))
                                       (rule "polySimp_homoEq" (formula "35") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0,1"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,1"))
                                       (rule "add_literals" (formula "35") (term "0,0,1"))
                                       (rule "applyEq" (formula "36") (term "0,1,0,1,0") (ifseqformula "34"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,1,0"))
                                       (rule "add_literals" (formula "36") (term "1,1,0,1,0"))
                                       (rule "times_zero_1" (formula "36") (term "1,0,1,0"))
                                       (rule "add_literals" (formula "36") (term "0,1,0"))
                                       (rule "qeq_literals" (formula "36") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "applyEq" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                       (rule "mul_literals" (formula "35") (term "0,0,0"))
                                       (rule "applyEqRigid" (formula "40") (term "0,0,0,0,1,0") (ifseqformula "34"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "0,0,0,1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,0,0,0,1,0"))
                                       (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "34"))
                                       (rule "polySimp_addComm1" (formula "55") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "55") (term "0,0"))
                                       (rule "add_literals" (formula "55") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "55") (term "0,0"))
                                       (rule "applyEqRigid" (formula "40") (term "1,1,0,1,0") (ifseqformula "34"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "1,0,1,0"))
                                       (rule "add_literals" (formula "40") (term "0,1,0,1,0"))
                                       (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "34"))
                                       (rule "polySimp_addComm1" (formula "58") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "58") (term "0,0"))
                                       (rule "add_literals" (formula "58") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "58") (term "0,0"))
                                       (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "34"))
                                       (rule "polySimp_addAssoc" (formula "42") (term "1,0"))
                                       (rule "add_literals" (formula "42") (term "0,1,0"))
                                       (rule "applyEq" (formula "39") (term "1,1,0,1,0") (ifseqformula "34"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "1,0,1,0"))
                                       (rule "add_literals" (formula "39") (term "0,1,0,1,0"))
                                       (rule "applyEqRigid" (formula "41") (term "1,0") (ifseqformula "34"))
                                       (rule "applyEqRigid" (formula "59") (term "0,0,0,1,0") (ifseqformula "34"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "59") (term "0,0,1,0"))
                                       (rule "mul_literals" (formula "59") (term "0,0,0,1,0"))
                                       (rule "applyEqRigid" (formula "56") (term "2,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "38") (term "2,0") (ifseqformula "34"))
                                       (rule "lenOfSeqSubEQ" (formula "40") (term "1,0,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "40") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "40") (term "1,1,1,0,0"))
                                       (rule "add_zero_right" (formula "40") (term "1,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0"))
                                       (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0"))
                                       (rule "times_zero_2" (formula "37") (term "1,1,0,1,0,0"))
                                       (rule "add_zero_right" (formula "37") (term "1,0,1,0,0"))
                                       (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "59") (term "1,1,1,1,0"))
                                       (rule "mul_literals" (formula "59") (term "1,1,1,1,1,0"))
                                       (rule "add_zero_right" (formula "59") (term "1,1,1,1,0"))
                                       (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "60") (term "1,1,1,0"))
                                       (rule "mul_literals" (formula "60") (term "1,1,1,1,0"))
                                       (rule "add_zero_right" (formula "60") (term "1,1,1,0"))
                                       (rule "lenOfSeqSubEQ" (formula "56") (term "1,2,0,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "56") (term "1,1,2,0,0"))
                                       (rule "mul_literals" (formula "56") (term "1,1,1,2,0,0"))
                                       (rule "add_zero_right" (formula "56") (term "1,1,2,0,0"))
                                       (rule "lenOfSeqSubEQ" (formula "36") (term "2,0,1,1") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "36") (term "1,2,0,1,1"))
                                       (rule "mul_literals" (formula "36") (term "1,1,2,0,1,1"))
                                       (rule "add_zero_right" (formula "36") (term "1,2,0,1,1"))
                                       (rule "lenOfSeqSubEQ" (formula "39") (term "1,0,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "39") (term "1,1,1,0,0"))
                                       (rule "add_zero_right" (formula "39") (term "1,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "39") (term "0"))
                                       (rule "lenOfSeqSubEQ" (formula "34") (term "0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "34") (term "1,0"))
                                       (rule "times_zero_2" (formula "34") (term "1,1,0"))
                                       (rule "add_zero_right" (formula "34") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "polySimp_homoEq" (formula "34") (term "1"))
                                       (rule "mul_literals" (formula "34") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "34") (term "0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,1,0"))
                                       (rule "add_zero_right" (formula "59") (term "0,0,1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,1,1,0"))
                                       (rule "mul_literals" (formula "59") (term "0,1,0,0,1,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,0"))
                                       (rule "add_zero_right" (formula "60") (term "0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "60") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,2,0,0"))
                                       (rule "add_zero_right" (formula "56") (term "0,0,1,2,0,0"))
                                       (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,2,0,0"))
                                       (rule "mul_literals" (formula "56") (term "0,1,0,0,1,2,0,0"))
                                       (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,1,1,0"))
                                       (rule "add_literals" (formula "59") (term "0,0,0,1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "36") (term "0,2,0,1,1"))
                                       (rule "add_zero_right" (formula "36") (term "0,0,2,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,0,2,0,1,1"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,0,2,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "60") (term "0,0,1,1,0"))
                                       (rule "add_literals" (formula "60") (term "0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "39") (term "0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "39") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,2,0,0"))
                                       (rule "add_literals" (formula "56") (term "0,0,0,1,2,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "34") (term "0"))
                                       (rule "add_zero_right" (formula "34") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0,2,0,1,1"))
                                       (rule "add_literals" (formula "36") (term "0,0,0,2,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                       (rule "add_literals" (formula "34") (term "0,0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "37") (term "1"))
                                       (rule "mul_literals" (formula "37") (term "1,1"))
                                       (rule "polySimp_sepNegMonomial" (formula "35") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "35") (term "0,1"))
                                       (rule "polySimp_sepNegMonomial" (formula "55"))
                                       (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                       (rule "polySimp_elimOne" (formula "55") (term "0"))
                                       (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "55"))
                                       (rule "polySimp_pullOutFactor1" (formula "58") (term "0"))
                                       (rule "add_literals" (formula "58") (term "1,0"))
                                       (rule "times_zero_1" (formula "58") (term "0"))
                                       (rule "leq_literals" (formula "58"))
                                       (rule "true_left" (formula "58"))
                                       (rule "applyEqRigid" (formula "58") (term "0,1,0,0") (ifseqformula "55"))
                                       (rule "polySimp_sepPosMonomial" (formula "34") (term "1"))
                                       (rule "mul_literals" (formula "34") (term "1,1"))
                                       (rule "polySimp_sepPosMonomial" (formula "40"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                       (rule "mul_literals" (formula "40") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                       (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "40"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                       (rule "polySimp_addComm1" (formula "39") (term "0,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "39") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2" (formula "39") (term "0"))
                                       (rule "add_literals" (formula "39") (term "1,0"))
                                       (rule "times_zero_1" (formula "39") (term "0"))
                                       (rule "leq_literals" (formula "39"))
                                       (rule "true_left" (formula "39"))
                                       (rule "applyEq" (formula "37") (term "0,1,0,0") (ifseqformula "39"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0"))
                                       (rule "applyEq" (formula "55") (term "1,2,0,0") (ifseqformula "39"))
                                       (rule "polySimp_addAssoc" (formula "55") (term "2,0,0"))
                                       (rule "add_literals" (formula "55") (term "0,2,0,0"))
                                       (rule "add_zero_left" (formula "55") (term "2,0,0"))
                                       (rule "applyEqRigid" (formula "36") (term "2,0,1,1") (ifseqformula "39"))
                                       (rule "applyEqRigid" (formula "58") (term "1,1,0") (ifseqformula "39"))
                                       (rule "polySimp_addAssoc" (formula "58") (term "1,0"))
                                       (rule "add_literals" (formula "58") (term "0,1,0"))
                                       (rule "add_zero_left" (formula "58") (term "1,0"))
                                       (rule "applyEqRigid" (formula "57") (term "1,1,1,0") (ifseqformula "39"))
                                       (rule "polySimp_addAssoc" (formula "57") (term "1,1,0"))
                                       (rule "add_literals" (formula "57") (term "0,1,1,0"))
                                       (rule "add_zero_left" (formula "57") (term "1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                       (rule "mul_literals" (formula "32") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0"))
                                       (rule "mul_literals" (formula "36") (term "1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "35") (term "0,0"))
                                       (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "56") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "56") (term "0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "56") (term "0,0,1,0"))
                                       (rule "replace_known_left" (formula "56") (term "0,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "56"))
                                       (rule "polySimp_sepPosMonomial" (formula "56"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "1"))
                                       (rule "polySimp_rightDist" (formula "56") (term "1"))
                                       (rule "mul_literals" (formula "56") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "56") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "56") (term "1,1"))
                                        (builtin "One Step Simplification" (formula "56"))
                                       (rule "polySimp_homoEq" (formula "56") (term "1"))
                                       (rule "mul_literals" (formula "56") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "56") (term "0,1"))
                                       (rule "polySimp_sepPosMonomial" (formula "56") (term "1"))
                                       (rule "mul_literals" (formula "56") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0"))
                                       (rule "polySimp_homoEq" (formula "38"))
                                       (rule "polySimp_elimOne" (formula "38") (term "0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "38") (term "0"))
                                       (rule "polySimp_sepPosMonomial" (formula "38"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                       (rule "mul_literals" (formula "38") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                       (rule "applyEq" (formula "54") (term "2,0,0") (ifseqformula "38"))
                                       (rule "applyEqRigid" (formula "36") (term "0,1,0,0") (ifseqformula "38"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,0"))
                                       (rule "applyEqRigid" (formula "35") (term "1,2,0,1,1") (ifseqformula "38"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "2,0,1,1"))
                                       (rule "add_literals" (formula "35") (term "0,2,0,1,1"))
                                       (rule "add_zero_left" (formula "35") (term "2,0,1,1"))
                                       (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "38"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "56") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "56") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "56") (term "0,0"))
                                       (rule "replace_known_left" (formula "56") (term "0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "56"))
                                       (rule "true_left" (formula "56"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "0,0,0"))
                                       (rule "replace_known_left" (formula "38") (term "0,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "polySimp_homoEq" (formula "38"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "38") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                       (rule "add_literals" (formula "38") (term "0,0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "38"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                       (rule "mul_literals" (formula "38") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "polySimp_homoEq" (formula "38") (term "1"))
                                       (rule "mul_literals" (formula "38") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "38") (term "0,1"))
                                       (rule "polySimp_sepPosMonomial" (formula "38") (term "1"))
                                       (rule "mul_literals" (formula "38") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "0,0"))
                                       (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "32"))
                                       (rule "leq_literals" (formula "33") (term "0"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "true_left" (formula "33"))
                                       (rule "inEqSimp_subsumption1" (formula "34") (term "0") (ifseqformula "32"))
                                       (rule "leq_literals" (formula "34") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "andLeft" (formula "34"))
                                       (rule "applyEq" (formula "37") (term "1") (ifseqformula "34"))
                                       (rule "applyEqRigid" (formula "26") (term "0,0") (ifseqformula "34"))
                                       (rule "eqSymm" (formula "26"))
                                       (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "34"))
                                       (rule "applyEq" (formula "40") (term "0,1,0") (ifseqformula "34"))
                                       (rule "eqSymm" (formula "40") (term "1,0"))
                                       (rule "applyEqRigid" (formula "53") (term "1") (ifseqformula "34"))
                                       (rule "applyEq" (formula "40") (term "0,1,0") (ifseqformula "26"))
                                       (rule "applyEq" (formula "46") (term "1") (ifseqformula "26"))
                                       (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "26"))
                                       (rule "equalityToSeqGetAndSeqLenRight" (formula "72") (inst "iv=iv"))
                                       (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "72") (term "0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "72") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "72") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "72") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0,0,1"))
                                       (rule "eqSeqConcat" (formula "26"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "polySimp_addComm0" (formula "26") (term "1"))
                                       (rule "eqSeqSingleton" (formula "28"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "lenOfSeqSubEQ" (formula "27") (term "2,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "27") (term "1,2,0"))
                                       (rule "mul_literals" (formula "27") (term "1,1,2,0"))
                                       (rule "add_zero_right" (formula "27") (term "1,2,0"))
                                       (rule "lenOfSeqSubEQ" (formula "26") (term "1,1") (ifseqformula "38"))
                                       (rule "polySimp_homoEq" (formula "26"))
                                       (rule "polySimp_elimSub" (formula "26") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "26") (term "1,1,1,0,0"))
                                       (rule "add_zero_right" (formula "26") (term "1,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0"))
                                       (rule "lenOfSeqSub" (formula "28") (term "0"))
                                       (rule "polySimp_elimSub" (formula "28") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "28") (term "1,0"))
                                       (rule "lenOfSeqSubEQ" (formula "29") (term "1,0,0") (ifseqformula "27"))
                                       (rule "polySimp_elimSub" (formula "29") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "29") (term "1,1,1,0,0"))
                                       (rule "add_zero_right" (formula "29") (term "1,1,0,0"))
                                       (rule "ifEqualsInteger" (formula "28"))
                                       (rule "equal_literals" (formula "28") (term "1,1"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "polySimp_homoEq" (formula "29"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                       (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "27") (term "0,2,0"))
                                       (rule "add_zero_right" (formula "27") (term "0,0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,2,0"))
                                       (rule "lenOfSeqSubEQ" (formula "28") (term "0") (ifseqformula "39"))
                                       (rule "polySimp_elimSub" (formula "28") (term "1,0"))
                                       (rule "times_zero_2" (formula "28") (term "1,1,0"))
                                       (rule "add_zero_right" (formula "28") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0"))
                                       (rule "lenOfSeqSubEQ" (formula "29") (term "1,0,0") (ifseqformula "27"))
                                       (rule "polySimp_elimSub" (formula "29") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "29") (term "1,1,1,0,0"))
                                       (rule "add_zero_right" (formula "29") (term "1,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,0,0"))
                                       (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,1,0,0"))
                                       (rule "add_zero_right" (formula "30") (term "0,0,1,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0"))
                                       (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "29") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "30") (term "0,0,0,1,0,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1"))
                                       (rule "mul_literals" (formula "26") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                       (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "26"))
                                       (rule "applyEqRigid" (formula "30") (term "0,1,0,0,1,0,0") (ifseqformula "26"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                       (rule "applyEqRigid" (formula "28") (term "1,0") (ifseqformula "26"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "28") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2" (formula "28") (term "0"))
                                       (rule "add_literals" (formula "28") (term "1,0"))
                                       (rule "times_zero_1" (formula "28") (term "0"))
                                       (rule "leq_literals" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "applyEqRigid" (formula "29") (term "1,1,0,0") (ifseqformula "26"))
                                       (rule "applyEq" (formula "28") (term "0,1,0,0,1,0") (ifseqformula "26"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0,1,0"))
                                       (rule "applyEqRigid" (formula "27") (term "2,0") (ifseqformula "26"))
                                       (rule "polySimp_sepPosMonomial" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                       (rule "mul_literals" (formula "28") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "polySimp_homoEq" (formula "28") (term "1"))
                                       (rule "mul_literals" (formula "28") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "28") (term "0,1"))
                                       (rule "polySimp_sepPosMonomial" (formula "28") (term "1"))
                                       (rule "mul_literals" (formula "28") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0,0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "0,0"))
                                       (rule "eqSeqConcat" (formula "49"))
                                        (builtin "One Step Simplification" (formula "49"))
                                       (rule "andLeft" (formula "49"))
                                       (rule "andLeft" (formula "49"))
                                       (rule "polySimp_addComm0" (formula "49") (term "1"))
                                       (rule "eqSeqSingleton" (formula "51"))
                                       (rule "andLeft" (formula "51"))
                                       (rule "lenOfSeqSub" (formula "51") (term "0"))
                                       (rule "polySimp_elimSub" (formula "51") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "51") (term "1,0"))
                                       (rule "lenOfSeqSubEQ" (formula "49") (term "1,1") (ifseqformula "40"))
                                       (rule "polySimp_elimSub" (formula "49") (term "1,1,1"))
                                       (rule "mul_literals" (formula "49") (term "1,1,1,1"))
                                       (rule "add_zero_right" (formula "49") (term "1,1,1"))
                                       (rule "polySimp_homoEq" (formula "49"))
                                       (rule "polySimp_addComm1" (formula "49") (term "0"))
                                       (rule "lenOfSeqSubEQ" (formula "52") (term "1,0,0") (ifseqformula "40"))
                                       (rule "polySimp_elimSub" (formula "52") (term "1,1,0,0"))
                                       (rule "times_zero_2" (formula "52") (term "1,1,1,0,0"))
                                       (rule "add_zero_right" (formula "52") (term "1,1,0,0"))
                                       (rule "lenOfSeqSubEQ" (formula "50") (term "2,0") (ifseqformula "27"))
                                       (rule "polySimp_elimSub" (formula "50") (term "1,2,0"))
                                       (rule "times_zero_2" (formula "50") (term "1,1,2,0"))
                                       (rule "add_zero_right" (formula "50") (term "1,2,0"))
                                       (rule "ifEqualsInteger" (formula "51"))
                                       (rule "equal_literals" (formula "51") (term "1,1"))
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "andLeft" (formula "51"))
                                       (rule "polySimp_homoEq" (formula "52"))
                                       (rule "polySimp_mulComm0" (formula "52") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "52") (term "1,0"))
                                       (rule "polySimp_mulAssoc" (formula "52") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "52") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "52") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "49") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "49") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "49") (term "0,0,0,1,0"))
                                       (rule "lenOfSeqSubEQ" (formula "52") (term "1,0,0") (ifseqformula "27"))
                                       (rule "polySimp_elimSub" (formula "52") (term "1,1,0,0"))
                                       (rule "times_zero_2" (formula "52") (term "1,1,1,0,0"))
                                       (rule "add_zero_right" (formula "52") (term "1,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "52") (term "0"))
                                       (rule "lenOfSeqSubEQ" (formula "51") (term "0") (ifseqformula "50"))
                                       (rule "polySimp_elimSub" (formula "51") (term "1,0"))
                                       (rule "mul_literals" (formula "51") (term "1,1,0"))
                                       (rule "add_zero_right" (formula "51") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "53") (term "0,1,0,0"))
                                       (rule "add_zero_right" (formula "53") (term "0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "50") (term "0,2,0"))
                                       (rule "add_zero_right" (formula "50") (term "0,0,2,0"))
                                       (rule "polySimp_rightDist" (formula "50") (term "1,0,0,2,0"))
                                       (rule "mul_literals" (formula "50") (term "0,1,0,0,2,0"))
                                       (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "53") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "50") (term "0,0,2,0"))
                                       (rule "add_literals" (formula "50") (term "0,0,0,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "52") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "52") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "52") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0"))
                                       (rule "add_zero_right" (formula "51") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "51") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "51") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "51") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "51") (term "0,0,0,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "51") (term "0,1,0,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "51") (term "0,0,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "51"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "49"))
                                       (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                       (rule "polySimp_rightDist" (formula "49") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                                       (rule "mul_literals" (formula "49") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                                       (rule "applyEqRigid" (formula "53") (term "1,0,0") (ifseqformula "49"))
                                       (rule "polySimp_sepPosMonomial" (formula "52"))
                                       (rule "polySimp_mulComm0" (formula "52") (term "1"))
                                       (rule "polySimp_rightDist" (formula "52") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "52") (term "1,1"))
                                       (rule "mul_literals" (formula "52") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "52") (term "1,1"))
                                       (rule "applyEqRigid" (formula "51") (term "1,1,0") (ifseqformula "52"))
                                       (rule "applyEq" (formula "51") (term "0,1,0,0,1,0") (ifseqformula "52"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "51") (term "0,0,0,1,0"))
                                       (rule "applyEqRigid" (formula "50") (term "2,0") (ifseqformula "52"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "49") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "49") (term "0,0,0"))
                                       (rule "applyEqRigid" (formula "26") (term "1,0") (ifseqformula "49"))
                                       (rule "applyEqRigid" (formula "38") (term "2,0") (ifseqformula "49"))
                                       (rule "applyEqRigid" (formula "62") (term "1,1,0") (ifseqformula "49"))
                                       (rule "polySimp_addAssoc" (formula "62") (term "1,0"))
                                       (rule "add_literals" (formula "62") (term "0,1,0"))
                                       (rule "add_zero_left" (formula "62") (term "1,0"))
                                       (rule "applyEqRigid" (formula "39") (term "0,0") (ifseqformula "49"))
                                       (rule "inEqSimp_homoInEq1" (formula "39") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,0"))
                                       (rule "applyEqRigid" (formula "60") (term "1,2,0,0") (ifseqformula "49"))
                                       (rule "polySimp_addAssoc" (formula "60") (term "2,0,0"))
                                       (rule "add_literals" (formula "60") (term "0,2,0,0"))
                                       (rule "add_zero_left" (formula "60") (term "2,0,0"))
                                       (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "49"))
                                       (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                       (rule "applyEqRigid" (formula "51") (term "1,0") (ifseqformula "26"))
                                       (rule "polySimp_addComm1" (formula "51") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                                       (rule "add_literals" (formula "51") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "51") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "52") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "52") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "52") (term "0,0,0"))
                                       (rule "applyEqRigid" (formula "29") (term "1,0,0") (ifseqformula "52"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "51"))
                                       (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                       (rule "polySimp_elimOne" (formula "51") (term "0"))
                                       (rule "eqSeqConcat" (formula "43") (term "1"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "polySimp_addComm0" (formula "43") (term "1,0,0,1"))
                                       (rule "eqSeqSingleton" (formula "43") (term "1,1"))
                                       (rule "lenOfSeqSubEQ" (formula "43") (term "2,0,1,0,1") (ifseqformula "50"))
                                       (rule "polySimp_elimSub" (formula "43") (term "1,2,0,1,0,1"))
                                       (rule "mul_literals" (formula "43") (term "1,1,2,0,1,0,1"))
                                       (rule "add_zero_right" (formula "43") (term "1,2,0,1,0,1"))
                                       (rule "lenOfSeqSub" (formula "43") (term "0,0,1,1"))
                                       (rule "polySimp_elimSub" (formula "43") (term "1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "43") (term "1,0,0,1,1"))
                                       (rule "lenOfSeqSubEQ" (formula "43") (term "1,1,0,0,1") (ifseqformula "27"))
                                       (rule "polySimp_homoEq" (formula "43") (term "0,0,1"))
                                       (rule "polySimp_elimSub" (formula "43") (term "1,1,0,0,0,0,1"))
                                       (rule "times_zero_2" (formula "43") (term "1,1,1,0,0,0,0,1"))
                                       (rule "add_zero_right" (formula "43") (term "1,1,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1"))
                                       (rule "lenOfSeqSubEQ" (formula "43") (term "1,0,0,1,1,1") (ifseqformula "50"))
                                       (rule "polySimp_elimSub" (formula "43") (term "1,1,0,0,1,1,1"))
                                       (rule "mul_literals" (formula "43") (term "1,1,1,0,0,1,1,1"))
                                       (rule "add_zero_right" (formula "43") (term "1,1,0,0,1,1,1"))
                                       (rule "ifEqualsInteger" (formula "43") (term "0,1,1"))
                                       (rule "equal_literals" (formula "43") (term "1,1,0,1,1"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "polySimp_homoEq" (formula "43") (term "1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0,1,1"))
                                       (rule "polySimp_mulAssoc" (formula "43") (term "0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "0,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,1,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "43") (term "0,1,0,1,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,1,0,1,1"))
                                       (rule "lenOfSeqSubEQ" (formula "43") (term "0,0,0,1,1") (ifseqformula "27"))
                                       (rule "polySimp_elimSub" (formula "43") (term "1,0,0,0,1,1"))
                                       (rule "times_zero_2" (formula "43") (term "1,1,0,0,0,1,1"))
                                       (rule "add_zero_right" (formula "43") (term "1,0,0,0,1,1"))
                                       (rule "lenOfSeqSubEQ" (formula "43") (term "1,0,0,1,0,1,1") (ifseqformula "50"))
                                       (rule "polySimp_elimSub" (formula "43") (term "1,1,0,0,1,0,1,1"))
                                       (rule "mul_literals" (formula "43") (term "1,1,1,0,0,1,0,1,1"))
                                       (rule "add_zero_right" (formula "43") (term "1,1,0,0,1,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "43") (term "0,1,0,1,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "0,1,0,0,0,1"))
                                       (rule "add_zero_right" (formula "43") (term "0,0,1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0,1"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0,1"))
                                       (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "0,1,0,0,1,1,1"))
                                       (rule "add_zero_right" (formula "43") (term "0,0,1,0,0,1,1,1"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,1,1,1"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,1,1,1"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,1,1,1"))
                                       (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,1,1,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "0,2,0,1,0,1"))
                                       (rule "add_zero_right" (formula "43") (term "0,0,2,0,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,2,0,1,0,1"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,2,0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0,2,0,1,0,1"))
                                       (rule "add_literals" (formula "43") (term "0,0,0,2,0,1,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,1,1"))
                                       (rule "add_zero_right" (formula "43") (term "0,0,0,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0,1,1"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,1,1"))
                                       (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,1,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "0,1,0,1,0,1,1"))
                                       (rule "add_zero_right" (formula "43") (term "0,0,1,0,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,1,0,1,1"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,1,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,1,0,1,1"))
                                       (rule "add_literals" (formula "43") (term "0,0,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,1,1"))
                                       (rule "polySimp_sepPosMonomial" (formula "43") (term "0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,1"))
                                       (rule "polySimp_sepPosMonomial" (formula "43") (term "1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,1,0,1,1"))
                                       (rule "mul_literals" (formula "43") (term "0,1,1,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,1,0,0,1,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "0,0,1,0,0,1,1,1"))
                                       (rule "polySimp_elimOne" (formula "43") (term "0,0,1,0,0,1,1,1"))
                                       (rule "applyEqRigid" (formula "43") (term "1,0,0,1,1,1") (ifseqformula "26"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,2,0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "0,0,2,0,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "43") (term "0,0,2,0,1,0,1"))
                                       (rule "applyEq" (formula "43") (term "2,0,1,0,1") (ifseqformula "26"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,1,0,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "0,0,1,0,0,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "43") (term "0,0,1,0,0,0,1,1"))
                                       (rule "applyEq" (formula "43") (term "1,0,0,0,1,1") (ifseqformula "52"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0,1,1"))
                                       (rule "add_literals" (formula "43") (term "0,0,0,0,0,1,1"))
                                       (rule "add_zero_left" (formula "43") (term "0,0,0,0,1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "43") (term "0,0,0,0,0,1"))
                                       (rule "applyEq" (formula "43") (term "0,0,0,1") (ifseqformula "52"))
                                       (rule "polySimp_homoEq" (formula "43") (term "0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,1"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0,1"))
                                       (rule "add_literals" (formula "43") (term "0,0,0,0,0,1"))
                                       (rule "add_zero_left" (formula "43") (term "0,0,0,0,1"))
                                       (rule "polySimp_sepNegMonomial" (formula "43") (term "0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "43") (term "0,0,0,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,0,1,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,1,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "43") (term "0,0,0,1,0,1,1"))
                                       (rule "applyEqRigid" (formula "43") (term "0,1,0,1,1") (ifseqformula "26"))
                                       (rule "polySimp_homoEq" (formula "43") (term "1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0,1,1"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,1,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "43") (term "0,1,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,1,1"))
                                       (rule "add_literals" (formula "43") (term "0,0,0,1,0,1,1"))
                                       (rule "add_zero_left" (formula "43") (term "0,0,1,0,1,1"))
                                       (rule "polySimp_sepPosMonomial" (formula "43") (term "1,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,0,1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,0,0,1,1"))
                                       (rule "pullOutSelect" (formula "79") (term "1,0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                                       (rule "applyEq" (formula "80") (term "1,0,1,1,0,1") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "replaceKnownSelect_taclet00_3" (formula "1") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_4" (formula "1") (term "2,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "80") (term "1,0,1,1,0,1") (ifseqformula "1"))
                                       (rule "replaceKnownSelect_taclet0000_8" (formula "80") (term "0,1,1,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "80") (term "0,1,1,0,1"))
                                       (rule "applyEqReverse" (formula "80") (term "1,0,1,0") (ifseqformula "1"))
                                       (rule "replaceKnownSelect_taclet0000_8" (formula "80") (term "0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "80") (term "0,1,0"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "79") (term "1,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_3"))
                                       (rule "applyEq" (formula "80") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "80") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "replaceKnownSelect_taclet000000_13" (formula "1") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000000_14" (formula "1") (term "2,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "80") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                       (rule "replaceKnownSelect_taclet00000000_18" (formula "80") (term "0,0,1,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00000000_19" (formula "80") (term "0,0,1,0,1"))
                                       (rule "applyEqReverse" (formula "80") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                                       (rule "replaceKnownSelect_taclet00000000_18" (formula "80") (term "0,1,1,1,0,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00000000_19" (formula "80") (term "0,1,1,1,0,0,1"))
                                       (rule "applyEqReverse" (formula "80") (term "1,0,0,0") (ifseqformula "1"))
                                       (rule "replaceKnownSelect_taclet00000000_18" (formula "80") (term "0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00000000_19" (formula "80") (term "0,0,0"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "lenOfSeqConcat" (formula "79") (term "1,1,1,0,0,1"))
                                        (builtin "One Step Simplification" (formula "79"))
                                       (rule "polySimp_addComm0" (formula "79") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "79") (term "1,1,0,0,1"))
                                       (rule "add_literals" (formula "79") (term "0,1,1,0,0,1"))
                                       (rule "add_zero_left" (formula "79") (term "1,1,0,0,1"))
                                       (rule "lenOfSeqConcat" (formula "79") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "79"))
                                       (rule "polySimp_homoEq" (formula "79") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                       (rule "polySimp_addComm0" (formula "79") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "79") (term "1,0,0"))
                                       (rule "mul_literals" (formula "79") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "79") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "79") (term "0,0,0"))
                                       (rule "applyEq" (formula "79") (term "0,1,0,0,1,0,1") (ifseqformula "6"))
                                       (rule "polySimp_sepNegMonomial" (formula "79") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "79") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "79") (term "0,0"))
                                       (rule "getOfSeqSub" (formula "53") (term "0"))
                                       (rule "castDel" (formula "53") (term "2,0"))
                                       (rule "leq_literals" (formula "53") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "add_zero_left" (formula "53") (term "1,1,0"))
                                       (rule "polySimp_elimSub" (formula "53") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "53") (term "0,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "53") (term "1,0,0"))
                                       (rule "polySimp_addComm0" (formula "53") (term "0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "53") (term "1,0,0"))
                                       (rule "add_literals" (formula "53") (term "1,1,1,0,0"))
                                       (rule "times_zero_1" (formula "53") (term "1,1,0,0"))
                                       (rule "add_literals" (formula "53") (term "1,0,0"))
                                       (rule "less_literals" (formula "53") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "getOfSeqSub" (formula "29") (term "0"))
                                       (rule "castDel" (formula "29") (term "2,0"))
                                       (rule "add_zero_left" (formula "29") (term "1,1,0"))
                                       (rule "leq_literals" (formula "29") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "polySimp_elimSub" (formula "29") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "1,0,0"))
                                       (rule "polySimp_addComm0" (formula "29") (term "0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0"))
                                       (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "29") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,0,0"))
                                       (rule "getOfSeqSub" (formula "43") (term "0,1,1,1"))
                                       (rule "castDel" (formula "43") (term "2,0,1,1,1"))
                                       (rule "add_zero_left" (formula "43") (term "1,1,0,1,1,1"))
                                       (rule "leq_literals" (formula "43") (term "0,0,0,1,1,1"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "polySimp_elimSub" (formula "43") (term "1,0,0,1,1,1"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,1,1,1"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,1,1,1"))
                                       (rule "mul_literals" (formula "43") (term "0,1,1,0,0,1,1,1"))
                                       (rule "polySimp_addComm0" (formula "43") (term "1,0,0,1,1,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,1,1,1"))
                                       (rule "add_zero_right" (formula "43") (term "0,0,0,1,1,1"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,1,1,1"))
                                       (rule "polySimp_rightDist" (formula "43") (term "0,1,0,0,0,1,1,1"))
                                       (rule "mul_literals" (formula "43") (term "0,0,1,0,0,0,1,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0,0,0,1,1,1"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,0,1,0,0,0,1,1,1"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1,1,1"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,1,1,1"))
                                       (rule "add_literals" (formula "43") (term "0,0,0,0,0,1,1,1"))
                                       (rule "add_zero_left" (formula "43") (term "0,0,0,0,1,1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,0,1,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,1,1,1"))
                                       (rule "polySimp_elimOne" (formula "43") (term "0,0,0,1,1,1"))
                                       (rule "getOfSeqConcat" (formula "79") (term "0,1,0,1"))
                                       (rule "polySimp_elimSub" (formula "79") (term "1,2,0,1,0,1"))
                                       (rule "polySimp_addComm0" (formula "79") (term "1,2,0,1,0,1"))
                                       (rule "getOfSeqSingleton" (formula "79") (term "2,0,1,0,1"))
                                       (rule "castDel" (formula "79") (term "1,2,0,1,0,1"))
                                       (rule "castDel" (formula "79") (term "2,2,0,1,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "79") (term "0,0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,1,0,1"))
                                       (rule "polySimp_sepPosMonomial" (formula "79") (term "0,2,0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "79") (term "1,0,2,0,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "79") (term "1,0,2,0,1,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "79") (term "1,0,0,1,0,1"))
                                       (rule "mul_literals" (formula "79") (term "0,1,0,0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0,1,0,1"))
                                       (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "66"))
                                       (rule "closeTrue" (formula "66"))
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "67"))
                                       (rule "replaceKnownSelect_taclet000000_11" (formula "45") (term "0"))
                                       (rule "replaceKnownSelect_taclet00_1" (formula "45") (term "1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000000_12" (formula "45") (term "0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "45") (term "1"))
                                       (rule "impRight" (formula "79"))
                                       (rule "notRight" (formula "64"))
                                       (rule "close" (formula "66") (ifseqformula "1"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "63"))
                                    (branch "Case 1"
                                        (builtin "One Step Simplification" (formula "67"))
                                       (rule "replaceKnownSelect_taclet000000_11" (formula "45") (term "0"))
                                       (rule "replaceKnownSelect_taclet00_1" (formula "45") (term "1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000000_12" (formula "45") (term "0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "45") (term "1"))
                                       (rule "impRight" (formula "79"))
                                       (rule "notRight" (formula "68"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "eqSymm" (formula "84"))
                                       (rule "eqSymm" (formula "6"))
                                       (rule "eqSymm" (formula "5"))
                                       (rule "eqSymm" (formula "4"))
                                       (rule "eqSymm" (formula "2"))
                                       (rule "polySimp_homoEq" (formula "35") (term "1"))
                                       (rule "mul_literals" (formula "35") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "35") (term "0,1"))
                                       (rule "polySimp_homoEq" (formula "61"))
                                       (rule "polySimp_homoEq" (formula "58") (term "1"))
                                       (rule "mul_literals" (formula "58") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "58") (term "0,1"))
                                       (rule "polySimp_homoEq" (formula "57"))
                                       (rule "polySimp_homoEq" (formula "40"))
                                       (rule "polySimp_homoEq" (formula "34"))
                                       (rule "polySimp_homoEq" (formula "64"))
                                       (rule "polySimp_mulComm0" (formula "61") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "57") (term "0"))
                                       (rule "polySimp_addComm1" (formula "34") (term "0"))
                                       (rule "polySimp_rightDist" (formula "61") (term "1,0"))
                                       (rule "polySimp_mulAssoc" (formula "61") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "61") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "61") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "61") (term "0,1,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                       (rule "polySimp_mulAssoc" (formula "40") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "40") (term "0,1,0"))
                                       (rule "polySimp_rightDist" (formula "64") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "64") (term "1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "0,1,0"))
                                       (rule "eqSeqConcat4" (formula "51"))
                                       (rule "andLeft" (formula "51"))
                                       (rule "inEqSimp_ltToLeq" (formula "39"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "39") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "61") (term "0,1,1,0,0"))
                                       (rule "add_zero_right" (formula "61") (term "0,0,1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,1,0,0"))
                                       (rule "mul_literals" (formula "61") (term "0,1,0,0,1,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0"))
                                       (rule "add_zero_right" (formula "64") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "64") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "42"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,1,0,0"))
                                       (rule "add_zero_right" (formula "41") (term "0,0,1,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "62"))
                                       (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "35") (term "0"))
                                       (rule "add_zero_right" (formula "35") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "57") (term "0"))
                                       (rule "add_zero_right" (formula "57") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1"))
                                       (rule "add_zero_right" (formula "59") (term "0,0,1"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,1,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,1,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "37") (term "0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "57") (term "1,0,0"))
                                       (rule "mul_literals" (formula "57") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "60") (term "0"))
                                       (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "59") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "63") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,1,0,0"))
                                       (rule "add_literals" (formula "61") (term "0,0,0,1,1,0,0"))
                                       (rule "add_zero_left" (formula "61") (term "0,0,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "64") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "61") (term "0,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "61") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor2" (formula "61") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "61") (term "1,0,0,0,1,0"))
                                       (rule "times_zero_1" (formula "61") (term "0,0,0,1,0"))
                                       (rule "leq_literals" (formula "61") (term "0,0,1,0"))
                                        (builtin "One Step Simplification" (formula "61"))
                                       (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                                       (rule "add_literals" (formula "42") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "62") (term "0"))
                                       (rule "polySimp_addComm1" (formula "62") (term "0,0"))
                                       (rule "add_literals" (formula "62") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,1,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,1,1,0,0"))
                                       (rule "add_zero_left" (formula "41") (term "0,0,1,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                       (rule "add_literals" (formula "35") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "35") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                       (rule "add_literals" (formula "57") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "57") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "59") (term "0,0,1"))
                                       (rule "add_literals" (formula "59") (term "0,0,0,1"))
                                       (rule "add_zero_left" (formula "59") (term "0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "41") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor2" (formula "41") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "41") (term "1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "41") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "41") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "64") (term "0,0,0,0,0"))
                                       (rule "replace_known_left" (formula "64") (term "0,0") (ifseqformula "62"))
                                        (builtin "One Step Simplification" (formula "64"))
                                       (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                       (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                       (rule "add_literals" (formula "42") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "42") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2" (formula "42") (term "0"))
                                       (rule "add_literals" (formula "42") (term "1,0"))
                                       (rule "times_zero_1" (formula "42") (term "0"))
                                       (rule "leq_literals" (formula "42"))
                                       (rule "true_left" (formula "42"))
                                       (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "36") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "36") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "39") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0"))
                                       (rule "add_zero_right" (formula "59") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "62") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "62") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "59") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0"))
                                       (rule "add_zero_right" (formula "60") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "60") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "60") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "60") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "58"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "58") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "36") (term "0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                       (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "41") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "59") (term "0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "59") (term "0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "40") (term "0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "62") (term "0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "62") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "60") (term "0,0,0"))
                                       (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "60"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                       (rule "replace_known_left" (formula "41") (term "0,0") (ifseqformula "39"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "applyEqRigid" (formula "57") (term "0,1,2,0,0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "57") (term "1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "57") (term "0,2,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "62") (term "0,1,1,1,0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "58") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "78") (term "0") (ifseqformula "10"))
                                       (rule "applyEq" (formula "43") (term "0,1") (ifseqformula "26"))
                                       (rule "eqSymm" (formula "43") (term "1"))
                                       (rule "applyEqRigid" (formula "59") (term "0,1,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "82") (term "0,1,1") (ifseqformula "12"))
                                       (rule "applyEq" (formula "59") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "44") (term "5") (ifseqformula "31"))
                                       (rule "applyEqRigid" (formula "49") (term "0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "82") (term "0,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "59") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "58") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "81") (term "0,1") (ifseqformula "12"))
                                       (rule "applyEq" (formula "62") (term "0,1,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "63") (term "1") (ifseqformula "6"))
                                       (rule "applyEqRigid" (formula "56") (term "0,1,0,1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "55") (term "0,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "81") (term "0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "65") (term "1,0,0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "65") (term "1,0,1") (ifseqformula "6"))
                                       (rule "applyEqRigid" (formula "56") (term "0,0,0,0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "59") (term "0,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "57") (term "0,1,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "67") (term "0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "27") (term "5") (ifseqformula "25"))
                                       (rule "applyEq" (formula "66") (term "0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "59") (term "0,0,0,0,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "10"))
                                       (rule "applyEq" (formula "57") (term "0,1,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "57") (term "0,0,0,0") (ifseqformula "4"))
                                       (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "57"))
                                       (rule "applyEq" (formula "66") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "10"))
                                       (rule "applyEq" (formula "49") (term "0,1,0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "50") (term "1") (ifseqformula "5"))
                                       (rule "applyEq" (formula "60") (term "1") (ifseqformula "6"))
                                       (rule "applyEq" (formula "43") (term "0,1,0") (ifseqformula "26"))
                                       (rule "eqSymm" (formula "43") (term "1,0"))
                                       (rule "applyEq" (formula "26") (term "0") (ifseqformula "49"))
                                       (rule "applyEq" (formula "57") (term "1") (ifseqformula "5"))
                                       (rule "applyEqRigid" (formula "49") (term "1") (ifseqformula "26"))
                                       (rule "polySimp_sepPosMonomial" (formula "35") (term "1"))
                                       (rule "mul_literals" (formula "35") (term "1,1"))
                                       (rule "polySimp_sepPosMonomial" (formula "34"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                       (rule "mul_literals" (formula "34") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                       (rule "applyEqRigid" (formula "37") (term "0,1,0,0") (ifseqformula "34"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0"))
                                       (rule "applyEq" (formula "36") (term "1,0,0,0") (ifseqformula "34"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                       (rule "applyEq" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                       (rule "mul_literals" (formula "35") (term "0,0,0"))
                                       (rule "applyEqRigid" (formula "58") (term "1,0") (ifseqformula "34"))
                                       (rule "polySimp_addComm1" (formula "58") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "58") (term "0,0"))
                                       (rule "add_literals" (formula "58") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "58") (term "0,0"))
                                       (rule "applyEqRigid" (formula "57") (term "1,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "39") (term "0,0,0,0,1,0") (ifseqformula "34"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "0,0,0,1,0"))
                                       (rule "mul_literals" (formula "39") (term "0,0,0,0,1,0"))
                                       (rule "applyEq" (formula "38") (term "1,2,0,0") (ifseqformula "34"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "2,0,0"))
                                       (rule "add_literals" (formula "38") (term "0,2,0,0"))
                                       (rule "applyEqRigid" (formula "35") (term "0,1") (ifseqformula "34"))
                                       (rule "polySimp_homoEq" (formula "35") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0,1"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,1"))
                                       (rule "add_literals" (formula "35") (term "0,0,1"))
                                       (rule "applyEq" (formula "59") (term "1,1,1,0") (ifseqformula "34"))
                                       (rule "polySimp_addAssoc" (formula "59") (term "1,1,0"))
                                       (rule "add_literals" (formula "59") (term "0,1,1,0"))
                                       (rule "applyEq" (formula "37") (term "0,1") (ifseqformula "34"))
                                       (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "34"))
                                       (rule "polySimp_addAssoc" (formula "42") (term "1,0"))
                                       (rule "add_literals" (formula "42") (term "0,1,0"))
                                       (rule "applyEqRigid" (formula "56") (term "1,2,0,0") (ifseqformula "34"))
                                       (rule "polySimp_addAssoc" (formula "56") (term "2,0,0"))
                                       (rule "add_literals" (formula "56") (term "0,2,0,0"))
                                       (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "34"))
                                       (rule "applyEqRigid" (formula "60") (term "1,1,0") (ifseqformula "34"))
                                       (rule "polySimp_addAssoc" (formula "60") (term "1,0"))
                                       (rule "add_literals" (formula "60") (term "0,1,0"))
                                       (rule "applyEqRigid" (formula "56") (term "2,0") (ifseqformula "34"))
                                       (rule "lenOfSeqSubEQ" (formula "41") (term "1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "41") (term "1,1,0"))
                                       (rule "mul_literals" (formula "41") (term "1,1,1,0"))
                                       (rule "add_zero_right" (formula "41") (term "1,1,0"))
                                       (rule "lenOfSeqSubEQ" (formula "40") (term "1,0,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "40") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "40") (term "1,1,1,0,0"))
                                       (rule "add_zero_right" (formula "40") (term "1,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0"))
                                       (rule "lenOfSeqSubEQ" (formula "38") (term "2,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "38") (term "1,2,0"))
                                       (rule "times_zero_2" (formula "38") (term "1,1,2,0"))
                                       (rule "add_zero_right" (formula "38") (term "1,2,0"))
                                       (rule "lenOfSeqSubEQ" (formula "55") (term "1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "55") (term "1,1,0"))
                                       (rule "mul_literals" (formula "55") (term "1,1,1,0"))
                                       (rule "add_zero_right" (formula "55") (term "1,1,0"))
                                       (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "36") (term "1,1,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "36") (term "1,0,1,0,1,0"))
                                       (rule "lenOfSeqSubEQ" (formula "39") (term "1,1,0,1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "39") (term "1,1,1,0,1,0"))
                                       (rule "times_zero_2" (formula "39") (term "1,1,1,1,0,1,0"))
                                       (rule "add_zero_right" (formula "39") (term "1,1,1,0,1,0"))
                                       (rule "lenOfSeqSubEQ" (formula "36") (term "2,0,1,1") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "36") (term "1,2,0,1,1"))
                                       (rule "times_zero_2" (formula "36") (term "1,1,2,0,1,1"))
                                       (rule "add_zero_right" (formula "36") (term "1,2,0,1,1"))
                                       (rule "lenOfSeqSubEQ" (formula "59") (term "0,0,0,1,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "59") (term "1,0,0,0,1,0"))
                                       (rule "times_zero_2" (formula "59") (term "1,1,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "59") (term "1,0,0,0,1,0"))
                                       (rule "lenOfSeqSubEQ" (formula "39") (term "1,0,0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "39") (term "1,1,1,0,0"))
                                       (rule "add_zero_right" (formula "39") (term "1,1,0,0"))
                                       (rule "lenOfSeqSubEQ" (formula "34") (term "0") (ifseqformula "56"))
                                       (rule "polySimp_elimSub" (formula "34") (term "1,0"))
                                       (rule "times_zero_2" (formula "34") (term "1,1,0"))
                                       (rule "add_zero_right" (formula "34") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "polySimp_homoEq" (formula "34") (term "1"))
                                       (rule "mul_literals" (formula "34") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "34") (term "0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "41") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "38") (term "0,2,0"))
                                       (rule "add_zero_right" (formula "38") (term "0,0,2,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,2,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,0,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "55") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,0,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,1,0,1,0"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,1,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "39") (term "0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,1,0,1,0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,1,1,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "36") (term "0,2,0,1,1"))
                                       (rule "add_zero_right" (formula "36") (term "0,0,2,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,0,2,0,1,1"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,0,2,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "0,0,2,0"))
                                       (rule "add_literals" (formula "38") (term "0,0,0,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "59") (term "0,0,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "55") (term "0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,0,1,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,0,0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "34") (term "0"))
                                       (rule "add_zero_right" (formula "34") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,1,0,1,0,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,0,1,1,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0,2,0,1,1"))
                                       (rule "add_literals" (formula "36") (term "0,0,0,2,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "59") (term "0,0,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                       (rule "add_literals" (formula "34") (term "0,0,0"))
                                       (rule "lenOfSeqSubEQ" (formula "39") (term "0,0,0,0,1,0") (ifseqformula "37"))
                                       (rule "polySimp_elimSub" (formula "39") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "39") (term "1,1,0,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "39") (term "1,0,0,0,0,1,0"))
                                       (rule "lenOfSeqSubEQ" (formula "39") (term "1,1,0,1,0") (ifseqformula "37"))
                                       (rule "polySimp_elimSub" (formula "39") (term "1,1,1,0,1,0"))
                                       (rule "mul_literals" (formula "39") (term "1,1,1,1,0,1,0"))
                                       (rule "add_zero_right" (formula "39") (term "1,1,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "38") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "38") (term "0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,1,0,1,0"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,1,0,1,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "34") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "34") (term "0,1"))
                                       (rule "polySimp_sepPosMonomial" (formula "36") (term "1"))
                                       (rule "mul_literals" (formula "36") (term "1,1"))
                                       (rule "polySimp_sepPosMonomial" (formula "54"))
                                       (rule "polySimp_mulComm0" (formula "54") (term "1"))
                                       (rule "polySimp_rightDist" (formula "54") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "54") (term "1,1"))
                                       (rule "mul_literals" (formula "54") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "54") (term "1,1"))
                                       (rule "applyEq" (formula "35") (term "0,1,0,1,0") (ifseqformula "54"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "35") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "35") (term "0,0,0,1,0"))
                                       (rule "applyEq" (formula "35") (term "2,0,1,1") (ifseqformula "54"))
                                       (rule "applyEqRigid" (formula "39") (term "0,1,0,0,0,0,0,0,1,0") (ifseqformula "54"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,0,1,0"))
                                       (rule "applyEqRigid" (formula "39") (term "1,1,1,0,1,0") (ifseqformula "54"))
                                       (rule "applyEqRigid" (formula "37") (term "2,0") (ifseqformula "54"))
                                       (rule "applyEqRigid" (formula "40") (term "1,0") (ifseqformula "54"))
                                       (rule "applyEq" (formula "39") (term "0,1,0,0,1,1,0,1,0") (ifseqformula "54"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,1,0,1,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,1,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,1,0,1,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,0,1,1,0,1,0"))
                                       (rule "applyEq" (formula "58") (term "0,0,0,1,0") (ifseqformula "54"))
                                       (rule "polySimp_mulComm0" (formula "58") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "58") (term "0,0,1,0"))
                                       (rule "mul_literals" (formula "58") (term "0,0,0,1,0"))
                                       (rule "applyEq" (formula "38") (term "1,1,0,1,0") (ifseqformula "54"))
                                       (rule "polySimp_addComm1" (formula "38") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "1,0,1,0,0"))
                                       (rule "add_literals" (formula "38") (term "0,1,0,1,0,0"))
                                       (rule "applyEqRigid" (formula "39") (term "1,0,0,0,0,1,0") (ifseqformula "54"))
                                       (rule "applyEqRigid" (formula "39") (term "1,0,0") (ifseqformula "54"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,0"))
                                       (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "54"))
                                       (rule "polySimp_addComm1" (formula "38") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                       (rule "add_literals" (formula "38") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0"))
                                       (rule "mul_literals" (formula "35") (term "1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "57"))
                                       (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                       (rule "polySimp_elimOne" (formula "57") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                       (rule "mul_literals" (formula "32") (term "1"))
                                       (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "true_left" (formula "34"))
                                       (rule "polySimp_sepPosMonomial" (formula "57"))
                                       (rule "polySimp_mulComm0" (formula "57") (term "1"))
                                       (rule "polySimp_rightDist" (formula "57") (term "1"))
                                       (rule "mul_literals" (formula "57") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "57") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "57") (term "1,1"))
                                       (rule "polySimp_sepNegMonomial" (formula "38"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "53") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "53") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "53") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "34") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "0,0,0,1,0"))
                                       (rule "replace_known_left" (formula "37") (term "0,0,1,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "polySimp_pullOutFactor1" (formula "37") (term "0"))
                                       (rule "add_literals" (formula "37") (term "1,0"))
                                       (rule "times_zero_1" (formula "37") (term "0"))
                                       (rule "leq_literals" (formula "37"))
                                       (rule "true_left" (formula "37"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "56") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "56") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "56") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "0,0,1,1,0"))
                                       (rule "inEqSimp_invertInEq0" (formula "37") (term "0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "0,0,0"))
                                       (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "32"))
                                       (rule "leq_literals" (formula "33") (term "0"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "true_left" (formula "33"))
                                       (rule "inEqSimp_subsumption1" (formula "33") (term "0,0") (ifseqformula "32"))
                                       (rule "leq_literals" (formula "33") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "equalityToSeqGetAndSeqLenRight" (formula "73") (inst "iv=iv"))
                                       (rule "inEqSimp_ltToLeq" (formula "73") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "73") (term "0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "73") (term "1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,0,1"))
                                       (rule "mul_literals" (formula "73") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,0,1"))
                                       (rule "pullOutSelect" (formula "73") (term "1,0,1,1,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                                       (rule "applyEq" (formula "74") (term "1,0,1,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "replaceKnownSelect_taclet00_3" (formula "1") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_4" (formula "1") (term "2,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "74") (term "1,0,1,1,0,1") (ifseqformula "1"))
                                       (rule "replaceKnownSelect_taclet0000_8" (formula "74") (term "0,1,1,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "74") (term "0,1,1,0,1"))
                                       (rule "applyEqReverse" (formula "74") (term "1,0,1,0") (ifseqformula "1"))
                                       (rule "replaceKnownSelect_taclet0000_8" (formula "74") (term "0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "74") (term "0,1,0"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "73") (term "1,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_3"))
                                       (rule "applyEq" (formula "74") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "74") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "replaceKnownSelect_taclet000000_13" (formula "1") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000000_14" (formula "1") (term "2,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "74") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                                       (rule "replaceKnownSelect_taclet00000000_18" (formula "74") (term "0,1,1,1,0,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00000000_19" (formula "74") (term "0,1,1,1,0,0,1"))
                                       (rule "applyEqReverse" (formula "74") (term "1,0,0,0") (ifseqformula "1"))
                                       (rule "replaceKnownSelect_taclet00000000_18" (formula "74") (term "0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00000000_19" (formula "74") (term "0,0,0"))
                                       (rule "applyEqReverse" (formula "74") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                       (rule "replaceKnownSelect_taclet00000000_18" (formula "74") (term "0,0,1,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00000000_19" (formula "74") (term "0,0,1,0,1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "lenOfSeqConcat" (formula "73") (term "1,1,1,0,0,1"))
                                        (builtin "One Step Simplification" (formula "73"))
                                       (rule "polySimp_addComm0" (formula "73") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "73") (term "1,1,0,0,1"))
                                       (rule "add_literals" (formula "73") (term "0,1,1,0,0,1"))
                                       (rule "add_zero_left" (formula "73") (term "1,1,0,0,1"))
                                       (rule "lenOfSeqConcat" (formula "73") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "73"))
                                       (rule "polySimp_homoEq" (formula "73") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                       (rule "polySimp_addComm0" (formula "73") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "73") (term "1,0,0"))
                                       (rule "mul_literals" (formula "73") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "73") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "73") (term "0,0,0"))
                                       (rule "applyEqRigid" (formula "73") (term "0,1,1,0,0,1") (ifseqformula "26"))
                                       (rule "lenOfSeqConcatEQ" (formula "73") (term "1,1,0,0,1") (ifseqformula "45"))
                                        (builtin "One Step Simplification" (formula "73"))
                                       (rule "polySimp_addComm0" (formula "73") (term "1,1,0,0,1"))
                                       (rule "lenOfSeqSubEQ" (formula "73") (term "1,1,1,0,0,1") (ifseqformula "52"))
                                       (rule "polySimp_elimSub" (formula "73") (term "1,1,1,1,0,0,1"))
                                       (rule "mul_literals" (formula "73") (term "1,1,1,1,1,0,0,1"))
                                       (rule "add_zero_right" (formula "73") (term "1,1,1,1,0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "73") (term "0,1,1,1,0,0,1"))
                                       (rule "add_zero_right" (formula "73") (term "0,0,1,1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "73") (term "1,0,0,1,1,1,0,0,1"))
                                       (rule "mul_literals" (formula "73") (term "0,1,0,0,1,1,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "73") (term "0,0,1,1,1,0,0,1"))
                                       (rule "add_literals" (formula "73") (term "0,0,0,1,1,1,0,0,1"))
                                       (rule "applyEqRigid" (formula "73") (term "0,0,0,1,0,1") (ifseqformula "26"))
                                       (rule "eqSymm" (formula "73") (term "1,0,1"))
                                       (rule "applyEqRigid" (formula "73") (term "0,0,1,0,0") (ifseqformula "26"))
                                       (rule "polySimp_addComm1" (formula "73") (term "0,0"))
                                       (rule "lenOfSeqConcatEQ" (formula "73") (term "0,1,0,0,0") (ifseqformula "45"))
                                        (builtin "One Step Simplification" (formula "73"))
                                       (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "73") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "73") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "73") (term "0,0,0"))
                                       (rule "add_literals" (formula "73") (term "0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "73") (term "0,0"))
                                       (rule "lenOfSeqSubEQ" (formula "73") (term "0,1,0,0") (ifseqformula "35"))
                                       (rule "polySimp_elimSub" (formula "73") (term "1,0,1,0,0"))
                                       (rule "mul_literals" (formula "73") (term "1,1,0,1,0,0"))
                                       (rule "add_zero_right" (formula "73") (term "1,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "73") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "73") (term "0,1,0,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,1,0,0"))
                                       (rule "add_literals" (formula "73") (term "0,0,0,0,1,0,0"))
                                       (rule "applyEq" (formula "73") (term "0,1,0,1,1,0,1") (ifseqformula "6"))
                                       (rule "polySimp_sepNegMonomial" (formula "73") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "73") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "73") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "73") (term "0,1,1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "73") (term "0,0,1,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "73") (term "0,0,1,1,1,0,0,1"))
                                       (rule "applyEq" (formula "73") (term "1,1,1,0,0,1") (ifseqformula "51"))
                                       (rule "polySimp_addAssoc" (formula "73") (term "1,1,0,0,1"))
                                       (rule "add_literals" (formula "73") (term "0,1,1,0,0,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "73") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "73") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "73") (term "0,0,0,0"))
                                       (rule "getOfSeqConcat" (formula "73") (term "1,1,0,1"))
                                       (rule "eqSymm" (formula "73") (term "1,0,1"))
                                       (rule "polySimp_elimSub" (formula "73") (term "1,2,0,1,0,1"))
                                       (rule "polySimp_addComm0" (formula "73") (term "1,2,0,1,0,1"))
                                       (rule "getOfSeqSingleton" (formula "73") (term "2,0,1,0,1"))
                                       (rule "castDel" (formula "73") (term "1,2,0,1,0,1"))
                                       (rule "castDel" (formula "73") (term "2,2,0,1,0,1"))
                                       (rule "lenOfSeqConcatEQ" (formula "73") (term "1,0,0,1,0,1") (ifseqformula "45"))
                                        (builtin "One Step Simplification" (formula "73"))
                                       (rule "polySimp_addComm0" (formula "73") (term "1,0,0,1,0,1"))
                                       (rule "lenOfSeqSubEQ" (formula "73") (term "1,1,0,0,1,0,1") (ifseqformula "52"))
                                       (rule "polySimp_elimSub" (formula "73") (term "1,1,1,0,0,1,0,1"))
                                       (rule "mul_literals" (formula "73") (term "1,1,1,1,0,0,1,0,1"))
                                       (rule "add_zero_right" (formula "73") (term "1,1,1,0,0,1,0,1"))
                                       (rule "lenOfSeqConcatEQ" (formula "73") (term "0,0,0,0,2,0,1,0,1") (ifseqformula "45"))
                                        (builtin "One Step Simplification" (formula "73"))
                                       (rule "polySimp_mulComm0" (formula "73") (term "0,0,0,2,0,1,0,1"))
                                       (rule "polySimp_addComm0" (formula "73") (term "1,0,0,0,2,0,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "73") (term "0,0,0,2,0,1,0,1"))
                                       (rule "mul_literals" (formula "73") (term "0,0,0,0,2,0,1,0,1"))
                                       (rule "lenOfSeqSubEQ" (formula "73") (term "0,1,0,0,0,2,0,1,0,1") (ifseqformula "35"))
                                       (rule "polySimp_elimSub" (formula "73") (term "1,0,1,0,0,0,2,0,1,0,1"))
                                       (rule "mul_literals" (formula "73") (term "1,1,0,1,0,0,0,2,0,1,0,1"))
                                       (rule "add_zero_right" (formula "73") (term "1,0,1,0,0,0,2,0,1,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,1,0,1"))
                                       (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,1,0,1"))
                                       (rule "add_literals" (formula "73") (term "0,0,0,0,0,1,0,1"))
                                       (rule "add_zero_left" (formula "73") (term "0,0,0,0,1,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,1,0,0,0,2,0,1,0,1"))
                                       (rule "add_zero_right" (formula "73") (term "0,0,0,1,0,0,0,2,0,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,1,0,0,0,2,0,1,0,1"))
                                       (rule "mul_literals" (formula "73") (term "0,1,0,0,0,1,0,0,0,2,0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,1,0,0,0,2,0,1,0,1"))
                                       (rule "add_literals" (formula "73") (term "0,0,0,0,1,0,0,0,2,0,1,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,0,0,0,0,1,0,1"))
                                       (rule "add_zero_right" (formula "73") (term "0,0,0,0,0,0,0,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0,0,0,0,0,1,0,1"))
                                       (rule "mul_literals" (formula "73") (term "0,1,0,0,0,0,0,0,0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "73") (term "0,0,0,0,0,0,0,1,0,1"))
                                       (rule "add_literals" (formula "73") (term "0,0,0,0,0,0,0,0,1,0,1"))
                                       (rule "polySimp_sepPosMonomial" (formula "73") (term "0,2,0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "73") (term "1,0,2,0,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "73") (term "1,0,2,0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,2,0,1,0,1"))
                                       (rule "mul_literals" (formula "73") (term "0,1,0,2,0,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "73") (term "1,1,0,2,0,1,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "73") (term "1,0,0,1,0,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "73") (term "0,1,1,0,2,0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "73") (term "0,0,1,1,0,2,0,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "73") (term "0,0,1,1,0,2,0,1,0,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "73") (term "0,1,0,0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "73") (term "0,0,1,0,0,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "73") (term "0,0,1,0,0,1,0,1"))
                                       (rule "applyEq" (formula "73") (term "1,0,0,1,0,1") (ifseqformula "51"))
                                       (rule "eqSeqConcatEQ" (formula "26") (ifseqformula "45"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "polySimp_homoEq" (formula "26"))
                                       (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0"))
                                       (rule "eqSeqSingleton" (formula "28"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "lenOfSeqSub" (formula "28") (term "0"))
                                       (rule "polySimp_elimSub" (formula "28") (term "1,0"))
                                       (rule "lenOfSeqSubEQ" (formula "27") (term "2,0") (ifseqformula "55"))
                                       (rule "polySimp_elimSub" (formula "27") (term "1,2,0"))
                                       (rule "mul_literals" (formula "27") (term "1,1,2,0"))
                                       (rule "add_zero_right" (formula "27") (term "1,2,0"))
                                       (rule "lenOfSeqSubEQ" (formula "26") (term "1,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "26") (term "1,1,0"))
                                       (rule "mul_literals" (formula "26") (term "1,1,1,0"))
                                       (rule "add_zero_right" (formula "26") (term "1,1,0"))
                                       (rule "lenOfSeqSubEQ" (formula "29") (term "1,0,0") (ifseqformula "38"))
                                       (rule "polySimp_elimSub" (formula "29") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "29") (term "1,1,1,0,0"))
                                       (rule "add_zero_right" (formula "29") (term "1,1,0,0"))
                                       (rule "ifEqualsInteger" (formula "28"))
                                       (rule "equal_literals" (formula "28") (term "1,1"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "polySimp_homoEq" (formula "29"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "27") (term "0,2,0"))
                                       (rule "add_zero_right" (formula "27") (term "0,0,2,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,0,0,2,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,0,0,2,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0,0,2,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,0,2,0"))
                                       (rule "lenOfSeqSubEQ" (formula "28") (term "0") (ifseqformula "39"))
                                       (rule "polySimp_elimSub" (formula "28") (term "1,0"))
                                       (rule "times_zero_2" (formula "28") (term "1,1,0"))
                                       (rule "add_zero_right" (formula "28") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,0,0"))
                                       (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                       (rule "lenOfSeqSubEQ" (formula "29") (term "1,0") (ifseqformula "39"))
                                       (rule "polySimp_elimSub" (formula "29") (term "1,1,0"))
                                       (rule "mul_literals" (formula "29") (term "1,1,1,0"))
                                       (rule "add_zero_right" (formula "29") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0"))
                                       (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0"))
                                       (rule "add_zero_right" (formula "29") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                       (rule "mul_literals" (formula "26") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                       (rule "applyEqRigid" (formula "28") (term "1,0") (ifseqformula "26"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "28") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2" (formula "28") (term "0"))
                                       (rule "add_literals" (formula "28") (term "1,0"))
                                       (rule "times_zero_1" (formula "28") (term "0"))
                                       (rule "leq_literals" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "applyEqRigid" (formula "28") (term "1,0,0") (ifseqformula "26"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "0,0,2,0"))
                                       (rule "polySimp_elimOne" (formula "27") (term "0,0,2,0"))
                                       (rule "applyEq" (formula "27") (term "2,0") (ifseqformula "53"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "0,0,0"))
                                       (rule "applyEqRigid" (formula "75") (term "0,0") (ifseqformula "26"))
                                       (rule "polySimp_homoEq" (formula "75") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "75") (term "1,0,0"))
                                       (rule "mul_literals" (formula "75") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "75") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "75") (term "0,0,0"))
                                       (rule "add_literals" (formula "75") (term "0,0,0,0"))
                                       (rule "applyEq" (formula "38") (term "0,0,0") (ifseqformula "26"))
                                       (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "26"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "1,0"))
                                       (rule "add_literals" (formula "38") (term "0,1,0"))
                                       (rule "add_zero_left" (formula "38") (term "1,0"))
                                       (rule "applyEq" (formula "75") (term "1,1,0,2,0,1,0,1") (ifseqformula "26"))
                                       (rule "polySimp_addAssoc" (formula "75") (term "1,0,2,0,1,0,1"))
                                       (rule "add_literals" (formula "75") (term "0,1,0,2,0,1,0,1"))
                                       (rule "add_zero_left" (formula "75") (term "1,0,2,0,1,0,1"))
                                       (rule "polySimp_sepNegMonomial" (formula "75") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "75") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "75") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0"))
                                       (rule "mul_literals" (formula "38") (term "1,0,0"))
                                       (rule "eqSeqConcatEQ" (formula "41") (term "1,0") (ifseqformula "47"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "eqSymm" (formula "41") (term "1,1,0"))
                                       (rule "polySimp_homoEq" (formula "41") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "41") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "41") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "41") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,1,0"))
                                       (rule "equal_literals" (formula "41") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "true_left" (formula "41"))
                                       (rule "getOfSeqSub" (formula "28") (term "0"))
                                       (rule "castDel" (formula "28") (term "2,0"))
                                       (rule "leq_literals" (formula "28") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "add_zero_left" (formula "28") (term "1,1,0"))
                                       (rule "polySimp_elimSub" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_addComm0" (formula "28") (term "0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "28") (term "1,0,0"))
                                       (rule "add_literals" (formula "28") (term "1,1,1,0,0"))
                                       (rule "times_zero_1" (formula "28") (term "1,1,0,0"))
                                       (rule "add_zero_right" (formula "28") (term "1,0,0"))
                                       (rule "less_literals" (formula "28") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "getOfSeqConcatEQ" (formula "74") (term "1,0,1,0,1") (ifseqformula "46"))
                                       (rule "polySimp_elimSub" (formula "74") (term "1,2,1,0,1,0,1"))
                                       (rule "polySimp_addComm0" (formula "74") (term "1,2,1,0,1,0,1"))
                                       (rule "getOfSeqSingleton" (formula "74") (term "2,1,0,1,0,1"))
                                       (rule "castDel" (formula "74") (term "2,2,1,0,1,0,1"))
                                       (rule "castDel" (formula "74") (term "1,2,1,0,1,0,1"))
                                       (rule "lenOfSeqSubEQ" (formula "74") (term "1,0,1,0,1,0,1") (ifseqformula "27"))
                                       (rule "polySimp_elimSub" (formula "74") (term "1,1,0,1,0,1,0,1"))
                                       (rule "mul_literals" (formula "74") (term "1,1,1,0,1,0,1,0,1"))
                                       (rule "add_zero_right" (formula "74") (term "1,1,0,1,0,1,0,1"))
                                       (rule "lenOfSeqSubEQ" (formula "74") (term "0,0,0,0,2,1,0,1,0,1") (ifseqformula "37"))
                                       (rule "polySimp_elimSub" (formula "74") (term "1,0,0,0,0,2,1,0,1,0,1"))
                                       (rule "mul_literals" (formula "74") (term "1,1,0,0,0,0,2,1,0,1,0,1"))
                                       (rule "add_zero_right" (formula "74") (term "1,0,0,0,0,2,1,0,1,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "74") (term "0,1,0,1,0,1,0,1"))
                                       (rule "add_zero_right" (formula "74") (term "0,0,1,0,1,0,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "74") (term "1,0,0,1,0,1,0,1,0,1"))
                                       (rule "mul_literals" (formula "74") (term "0,1,0,0,1,0,1,0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "74") (term "0,0,1,0,1,0,1,0,1"))
                                       (rule "add_literals" (formula "74") (term "0,0,0,1,0,1,0,1,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0,0,0,2,1,0,1,0,1"))
                                       (rule "add_zero_right" (formula "74") (term "0,0,0,0,0,0,2,1,0,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,0,0,0,2,1,0,1,0,1"))
                                       (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0,0,2,1,0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "74") (term "0,0,0,0,0,0,2,1,0,1,0,1"))
                                       (rule "add_literals" (formula "74") (term "0,0,0,0,0,0,0,2,1,0,1,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "74") (term "0,1,0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,1,0,1,0,1"))
                                       (rule "polySimp_sepPosMonomial" (formula "74") (term "0,2,1,0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "74") (term "1,0,2,1,0,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "74") (term "1,0,2,1,0,1,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,1,0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "74") (term "1,0,1,0,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "74") (term "1,0,1,0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,1,0,1,0,1"))
                                       (rule "mul_literals" (formula "74") (term "0,1,0,1,0,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "74") (term "1,1,0,1,0,1,0,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "74") (term "0,1,0,2,1,0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "74") (term "0,0,1,0,2,1,0,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "74") (term "0,0,1,0,2,1,0,1,0,1"))
                                       (rule "applyEq" (formula "74") (term "1,0,2,1,0,1,0,1") (ifseqformula "26"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "74") (term "0,1,1,0,1,0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "74") (term "0,0,1,1,0,1,0,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "74") (term "0,0,1,1,0,1,0,1,0,1"))
                                       (rule "applyEqRigid" (formula "74") (term "1,1,0,1,0,1,0,1") (ifseqformula "26"))
                                       (rule "polySimp_addAssoc" (formula "74") (term "1,0,1,0,1,0,1"))
                                       (rule "add_literals" (formula "74") (term "0,1,0,1,0,1,0,1"))
                                       (rule "getOfSeqSubEQ" (formula "74") (term "1,1,0,1,0,1") (ifseqformula "27"))
                                       (rule "castDel" (formula "74") (term "2,1,1,0,1,0,1"))
                                       (rule "add_zero_right" (formula "74") (term "1,1,1,1,0,1,0,1"))
                                       (rule "polySimp_elimSub" (formula "74") (term "1,1,0,1,1,0,1,0,1"))
                                       (rule "mul_literals" (formula "74") (term "1,1,1,0,1,1,0,1,0,1"))
                                       (rule "add_zero_right" (formula "74") (term "1,1,0,1,1,0,1,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,1,1,0,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "74") (term "1,0,0,1,0,1,1,0,1,0,1"))
                                       (rule "mul_literals" (formula "74") (term "0,1,0,0,1,0,1,1,0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "74") (term "0,0,1,0,1,1,0,1,0,1"))
                                       (rule "add_literals" (formula "74") (term "0,0,0,1,0,1,1,0,1,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "74") (term "0,0,1,1,0,1,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,1,1,0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "74") (term "1,1,0,1,1,0,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "74") (term "1,1,0,1,1,0,1,0,1"))
                                       (rule "mul_literals" (formula "74") (term "0,1,1,0,1,1,0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "74") (term "1,1,1,0,1,1,0,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "74") (term "1,1,1,0,1,1,0,1,0,1"))
                                       (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "61"))
                                       (rule "closeTrue" (formula "61"))
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "67"))
                                       (rule "replaceKnownSelect_taclet000000_11" (formula "45") (term "0"))
                                       (rule "replaceKnownSelect_taclet00_1" (formula "45") (term "1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000000_12" (formula "45") (term "0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "45") (term "1"))
                                       (rule "impRight" (formula "79"))
                                       (rule "notRight" (formula "64"))
                                       (rule "close" (formula "73") (ifseqformula "1"))
                                    )
                                 )
                              )
                              (branch "pre add_857115291_14 (information flow)"
                                 (rule "andRight" (formula "63"))
                                 (branch "Case 1"
                                     (builtin "One Step Simplification" (formula "67"))
                                    (rule "replaceKnownSelect_taclet000000_11" (formula "45") (term "0"))
                                    (rule "replaceKnownSelect_taclet00_1" (formula "45") (term "1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000000_12" (formula "45") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "45") (term "1"))
                                    (rule "impRight" (formula "79"))
                                    (rule "notRight" (formula "68"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "eqSymm" (formula "84"))
                                    (rule "eqSymm" (formula "6"))
                                    (rule "eqSymm" (formula "5"))
                                    (rule "eqSymm" (formula "4"))
                                    (rule "close" (formula "69") (ifseqformula "4"))
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "67"))
                                    (rule "replaceKnownSelect_taclet000000_11" (formula "45") (term "0"))
                                    (rule "replaceKnownSelect_taclet00_1" (formula "45") (term "1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000000_12" (formula "45") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "45") (term "1"))
                                    (rule "impRight" (formula "79"))
                                    (rule "notRight" (formula "68"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "eqSymm" (formula "84"))
                                    (rule "eqSymm" (formula "6"))
                                    (rule "eqSymm" (formula "4"))
                                    (rule "eqSymm" (formula "5"))
                                    (rule "close" (formula "69") (ifseqformula "5"))
                                 )
                              )
                              (branch "post add_857115291_14 (information flow)"
                                 (rule "Use_information_flow_contract_for_add_857115291_15" (formula "46") (ifseqformula "21"))
                                 (rule "doubleImpLeft" (formula "46"))
                                 (branch "pre_A & pre_B add_857115291_15 (information flow)"
                                    (rule "andRight" (formula "63"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "63"))
                                       (branch "Case 1"
                                           (builtin "One Step Simplification" (formula "67"))
                                          (rule "replaceKnownSelect_taclet000000_11" (formula "45") (term "0"))
                                          (rule "replaceKnownSelect_taclet00_1" (formula "45") (term "1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000000_12" (formula "45") (term "0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "45") (term "1"))
                                          (rule "impRight" (formula "79"))
                                          (rule "notRight" (formula "68"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "eqSymm" (formula "84"))
                                          (rule "eqSymm" (formula "6"))
                                          (rule "eqSymm" (formula "5"))
                                          (rule "eqSymm" (formula "4"))
                                          (rule "eqSymm" (formula "2"))
                                          (rule "polySimp_homoEq" (formula "35") (term "1"))
                                          (rule "mul_literals" (formula "35") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "35") (term "0,1"))
                                          (rule "polySimp_homoEq" (formula "61"))
                                          (rule "polySimp_homoEq" (formula "58") (term "1"))
                                          (rule "mul_literals" (formula "58") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "58") (term "0,1"))
                                          (rule "polySimp_homoEq" (formula "57"))
                                          (rule "polySimp_homoEq" (formula "34"))
                                          (rule "polySimp_homoEq" (formula "64"))
                                          (rule "polySimp_homoEq" (formula "40"))
                                          (rule "polySimp_mulComm0" (formula "61") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "64") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "57") (term "0"))
                                          (rule "polySimp_addComm1" (formula "34") (term "0"))
                                          (rule "polySimp_rightDist" (formula "61") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "61") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "61") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "61") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "61") (term "0,1,0"))
                                          (rule "polySimp_rightDist" (formula "64") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0"))
                                          (rule "polySimp_elimOne" (formula "64") (term "1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "64") (term "0,1,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "40") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "0,1,0"))
                                          (rule "eqSeqConcat4" (formula "51"))
                                          (rule "andLeft" (formula "51"))
                                          (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "61") (term "0,1,1,0,0"))
                                          (rule "add_zero_right" (formula "61") (term "0,0,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,1,0,0"))
                                          (rule "mul_literals" (formula "61") (term "0,1,0,0,1,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1"))
                                          (rule "add_zero_right" (formula "59") (term "0,0,1"))
                                          (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "59") (term "0,1,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "35") (term "0"))
                                          (rule "add_zero_right" (formula "35") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "62"))
                                          (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "41") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0"))
                                          (rule "add_zero_right" (formula "64") (term "0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "42"))
                                          (rule "inEqSimp_ltToLeq" (formula "57") (term "0"))
                                          (rule "add_zero_right" (formula "57") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "37") (term "0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "60") (term "0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "41") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                                          (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "63") (term "0"))
                                          (rule "polySimp_rightDist" (formula "57") (term "1,0,0"))
                                          (rule "mul_literals" (formula "57") (term "0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "64") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "61") (term "0,0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "61") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor2" (formula "61") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "61") (term "1,0,0,0,1,0"))
                                          (rule "times_zero_1" (formula "61") (term "0,0,0,1,0"))
                                          (rule "leq_literals" (formula "61") (term "0,0,1,0"))
                                           (builtin "One Step Simplification" (formula "61"))
                                          (rule "polySimp_addAssoc" (formula "59") (term "0,0,1"))
                                          (rule "add_literals" (formula "59") (term "0,0,0,1"))
                                          (rule "add_zero_left" (formula "59") (term "0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                          (rule "add_literals" (formula "35") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "35") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "62") (term "0"))
                                          (rule "polySimp_addComm1" (formula "62") (term "0,0"))
                                          (rule "add_literals" (formula "62") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "41") (term "0,0") (ifseqformula "39"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                                          (rule "add_literals" (formula "42") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                          (rule "add_literals" (formula "57") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "57") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "64") (term "0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,1,0,0"))
                                          (rule "add_literals" (formula "61") (term "0,0,0,1,1,0,0"))
                                          (rule "add_zero_left" (formula "61") (term "0,0,1,1,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "36") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "36") (term "1,0,0,0,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "41") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "41") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor2" (formula "41") (term "0,0,0"))
                                          (rule "add_literals" (formula "41") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "41") (term "0,0,0"))
                                          (rule "leq_literals" (formula "41") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,1,0"))
                                          (rule "add_zero_right" (formula "60") (term "0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "60") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                          (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                          (rule "add_literals" (formula "42") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "42") (term "0,0"))
                                          (rule "polySimp_pullOutFactor2" (formula "42") (term "0"))
                                          (rule "add_literals" (formula "42") (term "1,0"))
                                          (rule "times_zero_1" (formula "42") (term "0"))
                                          (rule "leq_literals" (formula "42"))
                                          (rule "true_left" (formula "42"))
                                          (rule "inEqSimp_ltToLeq" (formula "62") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "62") (term "0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "63") (term "0,0,0,0,0"))
                                          (rule "replace_known_left" (formula "63") (term "0,0") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "39") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0"))
                                          (rule "add_zero_right" (formula "40") (term "0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "58"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "58") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "59") (term "0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "59") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0"))
                                          (rule "add_zero_right" (formula "60") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "60") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "60") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "60") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "60") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "62") (term "0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "62") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "40") (term "0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "40") (term "0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "60") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "36") (term "0,0,1,0"))
                                          (rule "applyEq" (formula "63") (term "0,1,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "64") (term "1") (ifseqformula "6"))
                                          (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "82") (term "0,1,1") (ifseqformula "12"))
                                          (rule "applyEq" (formula "66") (term "1,0,0") (ifseqformula "6"))
                                          (rule "applyEqRigid" (formula "62") (term "0,0,0,0,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "60") (term "0,0,0,0") (ifseqformula "4"))
                                          (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "32"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "applyEq" (formula "59") (term "0,1,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "59") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "58") (term "0,1,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "55") (term "0,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "49") (term "0,1,0") (ifseqformula "5"))
                                          (rule "applyEqRigid" (formula "57") (term "1") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "36") (term "2,0,1,1") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "36") (term "1,2,0,1,1"))
                                          (rule "mul_literals" (formula "36") (term "1,1,2,0,1,1"))
                                          (rule "add_zero_right" (formula "36") (term "1,2,0,1,1"))
                                          (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,0,1,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "59") (term "1,1,1,0,1,0"))
                                          (rule "mul_literals" (formula "59") (term "1,1,1,1,0,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "1,1,1,0,1,0"))
                                          (rule "lenOfSeqSubEQ" (formula "32") (term "0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "32") (term "1,0"))
                                          (rule "mul_literals" (formula "32") (term "1,1,0"))
                                          (rule "add_zero_right" (formula "32") (term "1,0"))
                                          (rule "lenOfSeqSubEQ" (formula "40") (term "0,0,0,0,1,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "40") (term "1,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "40") (term "1,1,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "40") (term "1,0,0,0,0,1,0"))
                                          (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,1,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "36") (term "1,1,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "36") (term "1,0,1,0,1,0"))
                                          (rule "lenOfSeqSubEQ" (formula "34") (term "1,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "34") (term "1,1,0"))
                                          (rule "mul_literals" (formula "34") (term "1,1,1,0"))
                                          (rule "add_zero_right" (formula "34") (term "1,1,0"))
                                          (rule "lenOfSeqSubEQ" (formula "38") (term "1,2,0,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "38") (term "1,1,2,0,0"))
                                          (rule "times_zero_2" (formula "38") (term "1,1,1,2,0,0"))
                                          (rule "add_zero_right" (formula "38") (term "1,1,2,0,0"))
                                          (rule "lenOfSeqSubEQ" (formula "41") (term "1,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "41") (term "1,1,0"))
                                          (rule "mul_literals" (formula "41") (term "1,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "1,1,0"))
                                          (rule "lenOfSeqSubEQ" (formula "39") (term "1,0,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "39") (term "1,1,1,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0"))
                                          (rule "lenOfSeqSubEQ" (formula "40") (term "1,1,0,1,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "40") (term "1,1,1,0,1,0"))
                                          (rule "mul_literals" (formula "40") (term "1,1,1,1,0,1,0"))
                                          (rule "add_zero_right" (formula "40") (term "1,1,1,0,1,0"))
                                          (rule "lenOfSeqSubEQ" (formula "63") (term "1,1,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "63") (term "1,1,1,0"))
                                          (rule "mul_literals" (formula "63") (term "1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "63") (term "1,1,1,0"))
                                          (rule "lenOfSeqSubEQ" (formula "35") (term "0,0,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "35") (term "1,0,0,0"))
                                          (rule "times_zero_2" (formula "35") (term "1,1,0,0,0"))
                                          (rule "add_zero_right" (formula "35") (term "1,0,0,0"))
                                          (rule "lenOfSeqSubEQ" (formula "42") (term "1,1,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "42") (term "1,1,1,0"))
                                          (rule "mul_literals" (formula "42") (term "1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "42") (term "1,1,1,0"))
                                          (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "37") (term "1,0,1,0,0"))
                                          (rule "lenOfSeqSubEQ" (formula "58") (term "1,0,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "58") (term "1,1,0,0"))
                                          (rule "times_zero_2" (formula "58") (term "1,1,1,0,0"))
                                          (rule "add_zero_right" (formula "58") (term "1,1,0,0"))
                                          (rule "lenOfSeqSubEQ" (formula "38") (term "2,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "38") (term "1,2,0"))
                                          (rule "mul_literals" (formula "38") (term "1,1,2,0"))
                                          (rule "add_zero_right" (formula "38") (term "1,2,0"))
                                          (rule "lenOfSeqSubEQ" (formula "35") (term "1,0,1") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "35") (term "1,1,0,1"))
                                          (rule "times_zero_2" (formula "35") (term "1,1,1,0,1"))
                                          (rule "add_zero_right" (formula "35") (term "1,1,0,1"))
                                          (rule "lenOfSeqSubEQ" (formula "59") (term "1,0,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "59") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "59") (term "1,1,1,0,0"))
                                          (rule "add_zero_right" (formula "59") (term "1,1,0,0"))
                                          (rule "lenOfSeqSubEQ" (formula "36") (term "1,0,0,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "36") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "36") (term "1,1,1,0,0,0"))
                                          (rule "add_zero_right" (formula "36") (term "1,1,0,0,0"))
                                          (rule "lenOfSeqSubEQ" (formula "55") (term "1,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "55") (term "1,1,0"))
                                          (rule "mul_literals" (formula "55") (term "1,1,1,0"))
                                          (rule "add_zero_right" (formula "55") (term "1,1,0"))
                                          (rule "lenOfSeqSubEQ" (formula "40") (term "1,0,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "40") (term "1,1,0,0"))
                                          (rule "times_zero_2" (formula "40") (term "1,1,1,0,0"))
                                          (rule "add_zero_right" (formula "40") (term "1,1,0,0"))
                                          (rule "lenOfSeqSubEQ" (formula "37") (term "0,1") (ifseqformula "57"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "polySimp_elimSub" (formula "37") (term "0,1,1"))
                                          (rule "mul_literals" (formula "37") (term "1,0,1,1"))
                                          (rule "add_zero_right" (formula "37") (term "0,1,1"))
                                          (rule "lenOfSeqSubEQ" (formula "62") (term "0,0,0,1,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "62") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "62") (term "1,1,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "62") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "58") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "0,2,0,1,1"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,2,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,2,0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,0,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "0,0,1,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "40") (term "0,0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "59") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,2,0,0"))
                                          (rule "add_zero_right" (formula "38") (term "0,0,1,2,0,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,2,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,1,0,1,0"))
                                          (rule "add_zero_right" (formula "40") (term "0,0,1,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "63") (term "0,1,1,0"))
                                          (rule "add_zero_right" (formula "63") (term "0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "40") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0"))
                                          (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1,1,0"))
                                          (rule "add_zero_right" (formula "42") (term "0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "38") (term "0,2,0"))
                                          (rule "add_zero_right" (formula "38") (term "0,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0,1"))
                                          (rule "add_zero_right" (formula "35") (term "0,0,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "55") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1"))
                                          (rule "lenOfSeqSubEQ" (formula "39") (term "0,0,0,0,1,0,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "39") (term "1,0,0,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "39") (term "1,1,0,0,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "1,0,0,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "62") (term "0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "58") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "59") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "40") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "40") (term "0"))
                                          (rule "lenOfSeqSubEQ" (formula "39") (term "1,1,0,1,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "39") (term "1,1,1,0,1,0"))
                                          (rule "mul_literals" (formula "39") (term "1,1,1,1,0,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "1,1,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,1,0,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,1,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,1,0,1,0"))
                                          (rule "applyEq" (formula "70") (term "0") (ifseqformula "6"))
                                          (rule "applyEq" (formula "70") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "61") (term "0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "61") (term "1,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "61") (term "1,1,0"))
                                          (rule "mul_literals" (formula "61") (term "1,1,1,0"))
                                          (rule "add_zero_right" (formula "61") (term "1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "61") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "61") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0"))
                                          (rule "applyEq" (formula "63") (term "1") (ifseqformula "6"))
                                          (rule "applyEq" (formula "69") (term "0") (ifseqformula "5"))
                                          (rule "applyEqRigid" (formula "80") (term "0,1") (ifseqformula "12"))
                                          (rule "applyEq" (formula "80") (term "0,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "80") (term "0,1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "56") (term "0,0,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "56") (term "0,0,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "56") (term "1,1,0,0,0"))
                                          (rule "add_zero_right" (formula "56") (term "1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,0"))
                                          (rule "add_zero_right" (formula "56") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "76") (term "0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "56") (term "0,1,0,1") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "56") (term "1,0,1") (ifseqformula "38"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,1,0,1"))
                                          (rule "mul_literals" (formula "56") (term "1,1,1,0,1"))
                                          (rule "add_zero_right" (formula "56") (term "1,1,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,0,1"))
                                          (rule "add_zero_right" (formula "56") (term "0,0,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,1"))
                                          (rule "applyEq" (formula "66") (term "1,0,1") (ifseqformula "6"))
                                          (rule "applyEqRigid" (formula "62") (term "0,1,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "62") (term "1,1,1,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "62") (term "1,1,1,1,0"))
                                          (rule "times_zero_2" (formula "62") (term "1,1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "62") (term "1,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "62") (term "0,1,1,1,0"))
                                          (rule "add_zero_right" (formula "62") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,1,1,0"))
                                          (rule "applyEq" (formula "50") (term "1") (ifseqformula "5"))
                                          (rule "applyEq" (formula "27") (term "5") (ifseqformula "25"))
                                          (rule "applyEq" (formula "43") (term "0,1") (ifseqformula "26"))
                                          (rule "eqSymm" (formula "43") (term "1"))
                                          (rule "applyEqRigid" (formula "49") (term "0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "57") (term "0,2,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "57") (term "2,0") (ifseqformula "38"))
                                          (rule "polySimp_elimSub" (formula "57") (term "1,2,0"))
                                          (rule "mul_literals" (formula "57") (term "1,1,2,0"))
                                          (rule "add_zero_right" (formula "57") (term "1,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "57") (term "0,2,0"))
                                          (rule "add_zero_right" (formula "57") (term "0,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,2,0"))
                                          (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "57") (term "0,1,2,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "57") (term "1,2,0,0") (ifseqformula "38"))
                                          (rule "polySimp_elimSub" (formula "57") (term "1,1,2,0,0"))
                                          (rule "mul_literals" (formula "57") (term "1,1,1,2,0,0"))
                                          (rule "add_zero_right" (formula "57") (term "1,1,2,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,2,0,0"))
                                          (rule "add_zero_right" (formula "57") (term "0,0,1,2,0,0"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,2,0,0"))
                                          (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "44") (term "5") (ifseqformula "31"))
                                          (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "43") (term "0,1,0") (ifseqformula "26"))
                                          (rule "eqSymm" (formula "43") (term "1,0"))
                                          (rule "applyEqRigid" (formula "57") (term "0,0,1,0,0,0,1,0,0,1,2,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "57") (term "0,1,0,0,0,1,0,0,1,2,0,0") (ifseqformula "38"))
                                          (rule "polySimp_elimSub" (formula "57") (term "1,0,1,0,0,0,1,0,0,1,2,0,0"))
                                          (rule "mul_literals" (formula "57") (term "1,1,0,1,0,0,0,1,0,0,1,2,0,0"))
                                          (rule "add_zero_right" (formula "57") (term "1,0,1,0,0,0,1,0,0,1,2,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,1,0,0,0,1,0,0,1,2,0,0"))
                                          (rule "add_zero_right" (formula "57") (term "0,0,0,1,0,0,0,1,0,0,1,2,0,0"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0,0,0,1,0,0,1,2,0,0"))
                                          (rule "applyEqRigid" (formula "57") (term "0,1,1,1,2,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "57") (term "1,1,1,2,0,0") (ifseqformula "38"))
                                          (rule "polySimp_elimSub" (formula "57") (term "1,1,1,1,2,0,0"))
                                          (rule "mul_literals" (formula "57") (term "1,1,1,1,1,2,0,0"))
                                          (rule "add_zero_right" (formula "57") (term "1,1,1,1,2,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,1,1,2,0,0"))
                                          (rule "add_zero_right" (formula "57") (term "0,0,1,1,1,2,0,0"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,1,1,2,0,0"))
                                          (rule "applyEq" (formula "59") (term "0,1,1,1,0,1,0") (ifseqformula "4"))
                                          (rule "polySimp_addComm1" (formula "59") (term "0"))
                                          (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,1,0,1,0,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "59") (term "1,1,1,1,0,1,0,0"))
                                          (rule "mul_literals" (formula "59") (term "1,1,1,1,1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "59") (term "1,1,1,1,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "59") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,1,0,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "0,0,1,1,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,1,0,1,0"))
                                          (rule "applyEqRigid" (formula "39") (term "0,1,1,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "39") (term "1,1,0,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "39") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "39") (term "1,1,1,1,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "1,1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,1,0"))
                                          (rule "applyEq" (formula "55") (term "0,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "55") (term "1,1,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "55") (term "1,1,1,0"))
                                          (rule "mul_literals" (formula "55") (term "1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "55") (term "1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,1,0"))
                                          (rule "add_zero_right" (formula "55") (term "0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,1,0"))
                                          (rule "applyEqRigid" (formula "36") (term "0,0,1,0,0,2,0,1,1") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,0,2,0,1,1") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,2,0,1,1"))
                                          (rule "times_zero_2" (formula "36") (term "1,1,0,1,0,0,2,0,1,1"))
                                          (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,2,0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,2,0,1,1"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,2,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,0,2,0,1,1"))
                                          (rule "applyEq" (formula "57") (term "0,0,1,0,0,0,1,0,0,2,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "57") (term "0,1,0,0,0,1,0,0,2,0") (ifseqformula "38"))
                                          (rule "polySimp_elimSub" (formula "57") (term "1,0,1,0,0,0,1,0,0,2,0"))
                                          (rule "mul_literals" (formula "57") (term "1,1,0,1,0,0,0,1,0,0,2,0"))
                                          (rule "add_zero_right" (formula "57") (term "1,0,1,0,0,0,1,0,0,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,1,0,0,0,1,0,0,2,0"))
                                          (rule "add_zero_right" (formula "57") (term "0,0,0,1,0,0,0,1,0,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0,0,0,1,0,0,2,0"))
                                          (rule "applyEq" (formula "36") (term "0,0,1,0,0,0,1,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,0,0,1,0,1,0") (ifseqformula "38"))
                                          (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "36") (term "1,1,0,1,0,0,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,0,0,1,0,1,0"))
                                          (rule "applyEqRigid" (formula "40") (term "0,0,1,0,0,1,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "40") (term "0,1,0,0,1,0,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "40") (term "1,0,1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "40") (term "1,1,0,1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "40") (term "1,0,1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "40") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "40") (term "0,0,0,1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,0,0,1,0"))
                                          (rule "applyEq" (formula "38") (term "0,0,1,0,0,2,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "38") (term "0,1,0,0,2,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "38") (term "1,0,1,0,0,2,0"))
                                          (rule "times_zero_2" (formula "38") (term "1,1,0,1,0,0,2,0"))
                                          (rule "add_zero_right" (formula "38") (term "1,0,1,0,0,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,1,0,0,2,0"))
                                          (rule "add_zero_right" (formula "38") (term "0,0,0,1,0,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,0,0,2,0"))
                                          (rule "applyEqRigid" (formula "63") (term "0,1,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "63") (term "1,1,1,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "63") (term "1,1,1,1,0"))
                                          (rule "mul_literals" (formula "63") (term "1,1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "63") (term "1,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "63") (term "0,1,1,1,0"))
                                          (rule "add_zero_right" (formula "63") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,1,1,0"))
                                          (rule "applyEqRigid" (formula "37") (term "0,0,1,0,0,0,1") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,0,0,1") (ifseqformula "38"))
                                          (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "37") (term "1,1,0,1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "37") (term "1,0,1,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0,0,0,1"))
                                          (rule "applyEq" (formula "42") (term "0,1,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "42") (term "1,1,1,0") (ifseqformula "38"))
                                          (rule "polySimp_elimSub" (formula "42") (term "1,1,1,1,0"))
                                          (rule "mul_literals" (formula "42") (term "1,1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "42") (term "1,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1,1,1,0"))
                                          (rule "add_zero_right" (formula "42") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,1,1,0"))
                                          (rule "applyEq" (formula "57") (term "0,1,0,1,0,0,2,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "57") (term "1,0,1,0,0,2,0") (ifseqformula "38"))
                                          (rule "polySimp_elimSub" (formula "57") (term "1,1,0,1,0,0,2,0"))
                                          (rule "mul_literals" (formula "57") (term "1,1,1,0,1,0,0,2,0"))
                                          (rule "add_zero_right" (formula "57") (term "1,1,0,1,0,0,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,0,1,0,0,2,0"))
                                          (rule "add_zero_right" (formula "57") (term "0,0,1,0,1,0,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,1,0,0,2,0"))
                                          (rule "applyEq" (formula "56") (term "0,0,1,0,0,0,1,0,0,1,0,1") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "56") (term "0,1,0,0,0,1,0,0,1,0,1") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,0,1,0,0,0,1,0,0,1,0,1"))
                                          (rule "mul_literals" (formula "56") (term "1,1,0,1,0,0,0,1,0,0,1,0,1"))
                                          (rule "add_zero_right" (formula "56") (term "1,0,1,0,0,0,1,0,0,1,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,1,0,0,0,1,0,0,1,0,1"))
                                          (rule "add_zero_right" (formula "56") (term "0,0,0,1,0,0,0,1,0,0,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0,0,0,1,0,0,1,0,1"))
                                          (rule "applyEq" (formula "41") (term "0,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "41") (term "1,1,0") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "41") (term "1,1,1,0"))
                                          (rule "times_zero_2" (formula "41") (term "1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,1,0"))
                                          (rule "applyEqRigid" (formula "37") (term "0,0,1,0,0,0,1,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,0,0,1,0,0") (ifseqformula "38"))
                                          (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0,0,1,0,0"))
                                          (rule "times_zero_2" (formula "37") (term "1,1,0,1,0,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "37") (term "1,0,1,0,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0,0,0,1,0,0"))
                                          (rule "applyEqRigid" (formula "37") (term "0,0,1,1") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,1") (ifseqformula "57"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "polySimp_elimSub" (formula "37") (term "0,1,1,1"))
                                          (rule "times_zero_2" (formula "37") (term "1,0,1,1,1"))
                                          (rule "add_zero_right" (formula "37") (term "0,1,1,1"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,1"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,1"))
                                          (rule "applyEqRigid" (formula "36") (term "0,1,0,1,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "36") (term "1,0,1,0,1,0") (ifseqformula "38"))
                                          (rule "polySimp_elimSub" (formula "36") (term "1,1,0,1,0,1,0"))
                                          (rule "times_zero_2" (formula "36") (term "1,1,1,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "36") (term "1,1,0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,1,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,1,0,1,0"))
                                          (rule "applyEq" (formula "57") (term "0,0,1,0,0,1,2,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "57") (term "0,1,0,0,1,2,0") (ifseqformula "38"))
                                          (rule "polySimp_elimSub" (formula "57") (term "1,0,1,0,0,1,2,0"))
                                          (rule "mul_literals" (formula "57") (term "1,1,0,1,0,0,1,2,0"))
                                          (rule "add_zero_right" (formula "57") (term "1,0,1,0,0,1,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,1,0,0,1,2,0"))
                                          (rule "add_zero_right" (formula "57") (term "0,0,0,1,0,0,1,2,0"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0,0,1,2,0"))
                                          (rule "applyEq" (formula "56") (term "0,0,1,0,0,0,0,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "56") (term "0,1,0,0,0,0,0") (ifseqformula "38"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,0,1,0,0,0,0,0"))
                                          (rule "times_zero_2" (formula "56") (term "1,1,0,1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "56") (term "1,0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "56") (term "0,0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0,0,0,0,0"))
                                          (rule "applyEq" (formula "57") (term "0,1,1,2,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "57") (term "1,1,2,0") (ifseqformula "38"))
                                          (rule "polySimp_elimSub" (formula "57") (term "1,1,1,2,0"))
                                          (rule "times_zero_2" (formula "57") (term "1,1,1,1,2,0"))
                                          (rule "add_zero_right" (formula "57") (term "1,1,1,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,1,2,0"))
                                          (rule "add_zero_right" (formula "57") (term "0,0,1,1,2,0"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,1,2,0"))
                                          (rule "applyEq" (formula "56") (term "0,1,1,1,0,1") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "56") (term "1,1,1,0,1") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,1,1,1,0,1"))
                                          (rule "mul_literals" (formula "56") (term "1,1,1,1,1,0,1"))
                                          (rule "add_zero_right" (formula "56") (term "1,1,1,1,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,1,1,0,1"))
                                          (rule "add_zero_right" (formula "56") (term "0,0,1,1,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,1,1,0,1"))
                                          (rule "applyEq" (formula "61") (term "0,1,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "61") (term "1,1,0") (ifseqformula "38"))
                                          (rule "polySimp_elimSub" (formula "61") (term "1,1,1,0"))
                                          (rule "mul_literals" (formula "61") (term "1,1,1,1,0"))
                                          (rule "add_zero_right" (formula "61") (term "1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "61") (term "0,1,1,0"))
                                          (rule "add_zero_right" (formula "61") (term "0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,1,0"))
                                          (rule "applyEq" (formula "56") (term "0,0,1,0,0,1,1,0,1") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "56") (term "0,1,0,0,1,1,0,1") (ifseqformula "57"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,0,1,0,0,1,1,0,1"))
                                          (rule "mul_literals" (formula "56") (term "1,1,0,1,0,0,1,1,0,1"))
                                          (rule "add_zero_right" (formula "56") (term "1,0,1,0,0,1,1,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,1,0,0,1,1,0,1"))
                                          (rule "add_zero_right" (formula "56") (term "0,0,0,1,0,0,1,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0,0,1,1,0,1"))
                                          (rule "applyEq" (formula "62") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "4"))
                                          (rule "lenOfSeqSubEQ" (formula "62") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "57"))
                                          (rule "ifthenelse_split" (formula "62") (term "1,1,0,1,0,0,1,1,1,0,1,0,1,0,0,0,0,0,1,0"))
                                          (branch " 1 + de.polyas.core3.open.cred.CredTool.polyasVals.seq@heapAtPre_B«anonHeapFunction».length * -1 ≤ 0 TRUE"
                                             (rule "replace_known_left" (formula "41") (term "0,1,0,1,0,0,0,1,0,0,1,0,1,0,0,1,1,0,1,0,0,1,1,1,0") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")))
                                             (rule "replace_known_left" (formula "63") (term "0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,1,0,0,0,0,0,1,0") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")))
                                             (rule "replace_known_left" (formula "57") (term "0,1,0,1,0,0,0,1,0,0,2,0") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")))
                                             (rule "replace_known_left" (formula "59") (term "0,0,1,0,0,1,1,1,1,0,1,0") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")))
                                             (rule "replace_known_left" (formula "58") (term "0,1,0") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "58"))
                                             (rule "replace_known_left" (formula "64") (term "0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,0") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")))
                                             (rule "replace_known_left" (formula "42") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,1,1,1,1,0") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")))
                                             (rule "replace_known_left" (formula "39") (term "0,1,0,1,0,0,1,1,0") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "58")))
                                             (rule "true_left" (formula "39"))
                                             (rule "replace_known_left" (formula "38") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,2,0") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")))
                                             (rule "replace_known_left" (formula "39") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")))
                                             (rule "replace_known_left" (formula "54") (term "0,1,0") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")))
                                             (rule "replace_known_left" (formula "60") (term "0,1,1,0,1,0,0,1,1,1,0") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")))
                                             (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "replace_known_left" (formula "55") (term "0,1,1,0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0,1") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")))
                                             (rule "replace_known_left" (formula "35") (term "0,0,0,0") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "61")) (ifInst ""  (formula "55")))
                                             (rule "true_left" (formula "35"))
                                             (rule "replace_known_left" (formula "35") (term "0,0,1,0,0,1,0,1,0,0,2,0,1,1") (ifseqformula "60"))
                                              (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")))
                                             (rule "replace_known_left" (formula "36") (term "0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0") (ifseqformula "60"))
                                              (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")))
                                             (rule "true_left" (formula "36"))
                                             (rule "polySimp_elimSub" (formula "60") (term "1,0,1,0,0,0,0,0,1,0"))
                                             (rule "times_zero_2" (formula "60") (term "1,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "1,0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "55") (term "0"))
                                             (rule "polySimp_addComm1" (formula "37") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "replace_known_left" (formula "59") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "58")))
                                             (rule "applyEq" (formula "56") (term "0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "56") (term "1,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "56") (term "1,1,0"))
                                             (rule "mul_literals" (formula "56") (term "1,1,1,0"))
                                             (rule "add_zero_right" (formula "56") (term "1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,0"))
                                             (rule "add_zero_right" (formula "56") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0"))
                                             (rule "replace_known_left" (formula "56") (term "0,1,0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "56"))
                                             (rule "applyEq" (formula "45") (term "0") (ifseqformula "26"))
                                             (rule "eqSymm" (formula "45"))
                                             (rule "applyEqRigid" (formula "59") (term "0,0,0,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "59") (term "0,0,0,1,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "59") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "59") (term "1,1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                             (rule "replace_known_left" (formula "59") (term "0,0,0,0,1,0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "applyEqRigid" (formula "52") (term "0,0,0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "52") (term "0,0,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "52") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "52") (term "1,1,0,0,0"))
                                             (rule "add_zero_right" (formula "52") (term "1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0,0"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                             (rule "replace_known_left" (formula "52") (term "0,0,0,0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEq" (formula "58") (term "0,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "58") (term "0,1,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "58") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "58") (term "1,1,0,1,0"))
                                             (rule "add_zero_right" (formula "58") (term "1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,1,0"))
                                             (rule "add_zero_right" (formula "58") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0"))
                                             (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "34") (term "1,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "34") (term "1,1,0"))
                                             (rule "mul_literals" (formula "34") (term "1,1,1,0"))
                                             (rule "add_zero_right" (formula "34") (term "1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0"))
                                             (rule "add_zero_right" (formula "34") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                                             (rule "applyEqRigid" (formula "36") (term "0,1,2,0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "36") (term "1,2,0,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "36") (term "1,1,2,0,0"))
                                             (rule "times_zero_2" (formula "36") (term "1,1,1,2,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "1,1,2,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,2,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,1,2,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,2,0,0"))
                                             (rule "applyEq" (formula "54") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "54") (term "0,0,0,0,1,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "54") (term "1,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "54") (term "1,1,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "54") (term "1,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "54") (term "0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0,0,1,0"))
                                             (rule "applyEqRigid" (formula "53") (term "0,1,2,0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "53") (term "1,2,0,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "53") (term "1,1,2,0,0"))
                                             (rule "mul_literals" (formula "53") (term "1,1,1,2,0,0"))
                                             (rule "add_zero_right" (formula "53") (term "1,1,2,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "53") (term "0,1,2,0,0"))
                                             (rule "add_zero_right" (formula "53") (term "0,0,1,2,0,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,2,0,0"))
                                             (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "37") (term "1,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "37") (term "1,1,0"))
                                             (rule "times_zero_2" (formula "37") (term "1,1,1,0"))
                                             (rule "add_zero_right" (formula "37") (term "1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0"))
                                             (rule "add_zero_right" (formula "37") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0"))
                                             (rule "applyEqRigid" (formula "35") (term "0,1,0,0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "35") (term "1,0,0,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "35") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "35") (term "1,1,1,0,0,0"))
                                             (rule "add_zero_right" (formula "35") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0"))
                                             (rule "applyEqRigid" (formula "60") (term "0,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "60") (term "1,1,1,0"))
                                             (rule "times_zero_2" (formula "60") (term "1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,0"))
                                             (rule "applyEq" (formula "35") (term "0,0,1,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "35") (term "0,1,0,1,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "35") (term "1,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "1,1,0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "1,0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0,1,0"))
                                             (rule "applyEqRigid" (formula "35") (term "0,2,0,1,1") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "35") (term "2,0,1,1") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "35") (term "1,2,0,1,1"))
                                             (rule "mul_literals" (formula "35") (term "1,1,2,0,1,1"))
                                             (rule "add_zero_right" (formula "35") (term "1,2,0,1,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "35") (term "0,2,0,1,1"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,2,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,2,0,1,1"))
                                             (rule "applyEqRigid" (formula "54") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "54") (term "1,1,0,1,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "54") (term "1,1,1,0,1,0"))
                                             (rule "mul_literals" (formula "54") (term "1,1,1,1,0,1,0"))
                                             (rule "add_zero_right" (formula "54") (term "1,1,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "54") (term "0,1,1,0,1,0"))
                                             (rule "add_zero_right" (formula "54") (term "0,0,1,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,1,0,1,0"))
                                             (rule "applyEqRigid" (formula "56") (term "0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "56") (term "1,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "56") (term "1,1,0"))
                                             (rule "times_zero_2" (formula "56") (term "1,1,1,0"))
                                             (rule "add_zero_right" (formula "56") (term "1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,0"))
                                             (rule "add_zero_right" (formula "56") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0"))
                                             (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "57") (term "1,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "57") (term "1,1,0"))
                                             (rule "mul_literals" (formula "57") (term "1,1,1,0"))
                                             (rule "add_zero_right" (formula "57") (term "1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,0"))
                                             (rule "add_zero_right" (formula "57") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0"))
                                             (rule "applyEq" (formula "38") (term "0,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "38") (term "1,1,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "38") (term "1,1,1,0"))
                                             (rule "mul_literals" (formula "38") (term "1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "38") (term "1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,1,0"))
                                             (rule "add_zero_right" (formula "38") (term "0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,1,0"))
                                             (rule "applyEq" (formula "36") (term "0,2,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "36") (term "2,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "36") (term "1,2,0"))
                                             (rule "times_zero_2" (formula "36") (term "1,1,2,0"))
                                             (rule "add_zero_right" (formula "36") (term "1,2,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "0,2,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,2,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,2,0"))
                                             (rule "applyEqRigid" (formula "54") (term "0,1,0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "54") (term "1,0,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "54") (term "1,1,0,0"))
                                             (rule "times_zero_2" (formula "54") (term "1,1,1,0,0"))
                                             (rule "add_zero_right" (formula "54") (term "1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "54") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "54") (term "0,1,0"))
                                             (rule "add_zero_right" (formula "54") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "54") (term "0"))
                                             (rule "applyEqRigid" (formula "32") (term "0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "32") (term "0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "32") (term "1,0"))
                                             (rule "mul_literals" (formula "32") (term "1,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                             (rule "applyEq" (formula "55") (term "0,1,0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "55") (term "1,0,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "55") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "55") (term "1,1,1,0,0"))
                                             (rule "add_zero_right" (formula "55") (term "1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "55") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0"))
                                             (rule "add_zero_right" (formula "55") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0"))
                                             (rule "replace_known_left" (formula "55") (term "0,1,0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "55"))
                                             (rule "applyEq" (formula "56") (term "1") (ifseqformula "5"))
                                             (rule "applyEq" (formula "51") (term "0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "51") (term "1,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "51") (term "1,1,0"))
                                             (rule "mul_literals" (formula "51") (term "1,1,1,0"))
                                             (rule "add_zero_right" (formula "51") (term "1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "51") (term "0,1,0"))
                                             (rule "add_zero_right" (formula "51") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0"))
                                             (rule "applyEq" (formula "53") (term "0,2,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "53") (term "2,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "53") (term "1,2,0"))
                                             (rule "mul_literals" (formula "53") (term "1,1,2,0"))
                                             (rule "add_zero_right" (formula "53") (term "1,2,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "53") (term "0,2,0"))
                                             (rule "add_zero_right" (formula "53") (term "0,0,2,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,2,0"))
                                             (rule "replace_known_left" (formula "53") (term "0,2,0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "applyEq" (formula "51") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "51") (term "0,1,0,0,1,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "51") (term "1,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "51") (term "1,1,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "51") (term "1,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "51") (term "0,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,1,0,0,1,0"))
                                             (rule "replace_known_left" (formula "51") (term "0,0,1,0,0,1,0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "58")))
                                             (rule "applyEq" (formula "55") (term "0,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "55") (term "1,1,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "55") (term "1,1,1,0"))
                                             (rule "times_zero_2" (formula "55") (term "1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "55") (term "1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,1,0"))
                                             (rule "add_zero_right" (formula "55") (term "0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,1,0"))
                                             (rule "replace_known_left" (formula "55") (term "0,1,1,0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "55"))
                                             (rule "applyEq" (formula "54") (term "0,1,1,0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "54") (term "1,1,0,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "54") (term "1,1,1,0,0"))
                                             (rule "times_zero_2" (formula "54") (term "1,1,1,1,0,0"))
                                             (rule "add_zero_right" (formula "54") (term "1,1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "54") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "54") (term "0,1,1,0"))
                                             (rule "add_zero_right" (formula "54") (term "0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,1,0"))
                                             (rule "replace_known_left" (formula "54") (term "0,1,1,0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "54"))
                                             (rule "polySimp_addComm1" (formula "54") (term "0"))
                                             (rule "applyEqRigid" (formula "56") (term "0,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "56") (term "1,1,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "56") (term "1,1,1,0"))
                                             (rule "times_zero_2" (formula "56") (term "1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "56") (term "1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,1,0"))
                                             (rule "add_zero_right" (formula "56") (term "0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,1,0"))
                                             (rule "replace_known_left" (formula "56") (term "0,1,1,0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "56"))
                                             (rule "applyEq" (formula "52") (term "0,1,0,1") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "52") (term "1,0,1") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "52") (term "1,1,0,1"))
                                             (rule "times_zero_2" (formula "52") (term "1,1,1,0,1"))
                                             (rule "add_zero_right" (formula "52") (term "1,1,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "52") (term "0,1,0,1"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,1,0,1"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,1"))
                                             (rule "replace_known_left" (formula "52") (term "0,1,0,1") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEq" (formula "59") (term "0,0,0,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "59") (term "0,0,0,1,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "59") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "59") (term "1,1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                             (rule "replace_known_left" (formula "59") (term "0,0,0,0,1,0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "applyEq" (formula "57") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "57") (term "0,1,0,0,1,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "57") (term "1,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "57") (term "1,1,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "57") (term "1,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "57") (term "0,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0,0,1,0"))
                                             (rule "replace_known_left" (formula "57") (term "0,0,1,0,0,1,0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "58")))
                                             (rule "applyEq" (formula "35") (term "0,0,1,0,0,1,0,0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "35") (term "0,1,0,0,1,0,0,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "35") (term "1,0,1,0,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "35") (term "1,1,0,1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "35") (term "1,0,1,0,0,1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,0,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0,0,1,0,0,0"))
                                             (rule "replace_known_left" (formula "35") (term "0,0,1,0,0,1,0,0,0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "58")))
                                             (rule "applyEq" (formula "38") (term "0,1,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "38") (term "1,1,1,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "38") (term "1,1,1,1,0"))
                                             (rule "times_zero_2" (formula "38") (term "1,1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "38") (term "1,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,1,1,0"))
                                             (rule "add_zero_right" (formula "38") (term "0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,1,1,0"))
                                             (rule "replace_known_left" (formula "38") (term "0,1,1,1,0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEq" (formula "53") (term "0,1,2,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "53") (term "1,2,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "53") (term "1,1,2,0"))
                                             (rule "mul_literals" (formula "53") (term "1,1,1,2,0"))
                                             (rule "add_zero_right" (formula "53") (term "1,1,2,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "53") (term "0,1,2,0"))
                                             (rule "add_zero_right" (formula "53") (term "0,0,1,2,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,2,0"))
                                             (rule "replace_known_left" (formula "53") (term "0,1,2,0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "applyEqRigid" (formula "37") (term "0,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "37") (term "1,1,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "37") (term "1,1,1,0"))
                                             (rule "mul_literals" (formula "37") (term "1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "37") (term "1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,1,0"))
                                             (rule "add_zero_right" (formula "37") (term "0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,1,0"))
                                             (rule "applyEqRigid" (formula "58") (term "0,0,1,0,0,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "58") (term "0,1,0,0,0,1,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "58") (term "1,0,1,0,0,0,1,0"))
                                             (rule "times_zero_2" (formula "58") (term "1,1,0,1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "58") (term "1,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "58") (term "0,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0,0,0,1,0"))
                                             (rule "applyEq" (formula "32") (term "0,0,1,0,0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "32") (term "0,1,0,0,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "32") (term "1,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "32") (term "1,1,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "32") (term "1,0,1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0,0,0"))
                                             (rule "applyEqRigid" (formula "32") (term "0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "32") (term "1,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "32") (term "1,1,0"))
                                             (rule "times_zero_2" (formula "32") (term "1,1,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0"))
                                             (rule "applyEq" (formula "37") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,0,1,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "37") (term "1,1,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "37") (term "1,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0,0,1,0"))
                                             (rule "applyEqRigid" (formula "34") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "34") (term "0,1,0,0,1,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "34") (term "1,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "34") (term "1,1,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "34") (term "1,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "34") (term "0,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0,0,1,0"))
                                             (rule "applyEqRigid" (formula "36") (term "0,1,2,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "36") (term "1,2,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "36") (term "1,1,2,0"))
                                             (rule "mul_literals" (formula "36") (term "1,1,1,2,0"))
                                             (rule "add_zero_right" (formula "36") (term "1,1,2,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,2,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,1,2,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,2,0"))
                                             (rule "applyEqRigid" (formula "36") (term "0,0,1,0,0,1,2,0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,0,1,2,0,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,1,2,0,0"))
                                             (rule "mul_literals" (formula "36") (term "1,1,0,1,0,0,1,2,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,1,2,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,1,2,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,1,2,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,0,1,2,0,0"))
                                             (rule "applyEqRigid" (formula "34") (term "0,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "34") (term "1,1,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "34") (term "1,1,1,0"))
                                             (rule "mul_literals" (formula "34") (term "1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "34") (term "1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,1,0"))
                                             (rule "add_zero_right" (formula "34") (term "0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,1,0"))
                                             (rule "applyEqRigid" (formula "60") (term "0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "60") (term "0,1,0,0,1,1,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "60") (term "1,0,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "60") (term "1,1,0,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "1,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "0,0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1,0,0,1,1,0"))
                                             (rule "applyEq" (formula "36") (term "0,1,1,2,0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "36") (term "1,1,2,0,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "36") (term "1,1,1,2,0,0"))
                                             (rule "times_zero_2" (formula "36") (term "1,1,1,1,2,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "1,1,1,2,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,1,2,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,1,1,2,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,1,2,0,0"))
                                             (rule "applyEq" (formula "58") (term "0,1,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "58") (term "1,0,1,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "58") (term "1,1,0,1,0"))
                                             (rule "mul_literals" (formula "58") (term "1,1,1,0,1,0"))
                                             (rule "add_zero_right" (formula "58") (term "1,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "58") (term "0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,1,0"))
                                             (rule "applyEq" (formula "36") (term "0,0,1,0,0,2,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,0,2,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,2,0"))
                                             (rule "mul_literals" (formula "36") (term "1,1,0,1,0,0,2,0"))
                                             (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,2,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,2,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,2,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,0,2,0"))
                                             (rule "applyEqRigid" (formula "60") (term "0,1,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,1,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "60") (term "1,1,1,1,0"))
                                             (rule "mul_literals" (formula "60") (term "1,1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "1,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,1,0"))
                                             (rule "applyEq" (formula "60") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "60") (term "0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,1,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "60") (term "1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,1,0"))
                                             (rule "times_zero_2" (formula "60") (term "1,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,1,0"))
                                             (rule "applyEqRigid" (formula "60") (term "0,0,1,0,0,1,1,0,1,0,0,1,1,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "60") (term "0,1,0,0,1,1,0,1,0,0,1,1,1,1,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "60") (term "1,0,1,0,0,1,1,0,1,0,0,1,1,1,1,0"))
                                             (rule "mul_literals" (formula "60") (term "1,1,0,1,0,0,1,1,0,1,0,0,1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "1,0,1,0,0,1,1,0,1,0,0,1,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,1,0,0,1,1,0,1,0,0,1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "0,0,0,1,0,0,1,1,0,1,0,0,1,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,1,1,0"))
                                             (rule "applyEq" (formula "60") (term "0,1,1,1,1,1,1,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,1,1,1,1,1,1,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "60") (term "1,1,1,1,1,1,1,1,1,0"))
                                             (rule "mul_literals" (formula "60") (term "1,1,1,1,1,1,1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "1,1,1,1,1,1,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,1,1,1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "0,0,1,1,1,1,1,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,1,1,1,1,1,1,0"))
                                             (rule "applyEq" (formula "36") (term "0,0,1,0,0,1,1,0,1,0,0,1,2,0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,0,1,1,0,1,0,0,1,2,0,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,1,1,0,1,0,0,1,2,0,0"))
                                             (rule "times_zero_2" (formula "36") (term "1,1,0,1,0,0,1,1,0,1,0,0,1,2,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,1,1,0,1,0,0,1,2,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,1,1,0,1,0,0,1,2,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,1,1,0,1,0,0,1,2,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,0,1,1,0,1,0,0,1,2,0,0"))
                                             (rule "applyEqRigid" (formula "36") (term "0,0,1,0,0,1,0,1,0,0,1,2,0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,0,1,0,1,0,0,1,2,0,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,1,0,1,0,0,1,2,0,0"))
                                             (rule "mul_literals" (formula "36") (term "1,1,0,1,0,0,1,0,1,0,0,1,2,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,1,0,1,0,0,1,2,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,1,0,1,0,0,1,2,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,1,0,1,0,0,1,2,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,0,1,0,1,0,0,1,2,0,0"))
                                             (rule "applyEqRigid" (formula "53") (term "0,0,1,0,0,2,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "53") (term "0,1,0,0,2,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "53") (term "1,0,1,0,0,2,0"))
                                             (rule "mul_literals" (formula "53") (term "1,1,0,1,0,0,2,0"))
                                             (rule "add_zero_right" (formula "53") (term "1,0,1,0,0,2,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,1,0,0,2,0"))
                                             (rule "add_zero_right" (formula "53") (term "0,0,0,1,0,0,2,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,0,0,2,0"))
                                             (rule "applyEq" (formula "55") (term "0,1,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "55") (term "1,1,1,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "55") (term "1,1,1,1,0"))
                                             (rule "times_zero_2" (formula "55") (term "1,1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "55") (term "1,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,1,1,0"))
                                             (rule "add_zero_right" (formula "55") (term "0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,1,1,0"))
                                             (rule "applyEq" (formula "55") (term "0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "55") (term "0,1,0,0,1,1,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "55") (term "1,0,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "55") (term "1,1,0,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "55") (term "1,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "55") (term "0,0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0,0,1,1,0"))
                                             (rule "applyEqRigid" (formula "34") (term "0,0,1,0,0,1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "34") (term "0,1,0,0,1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "34") (term "1,0,1,0,0,1,0,1,0,0,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "34") (term "1,1,0,1,0,0,1,0,1,0,0,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "34") (term "1,0,1,0,0,1,0,1,0,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,0,0,1,0,1,0,0,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "34") (term "0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,1,0"))
                                             (rule "applyEqRigid" (formula "32") (term "0,1,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "32") (term "1,1,1,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "32") (term "1,1,1,1,0"))
                                             (rule "times_zero_2" (formula "32") (term "1,1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "1,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,1,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,1,1,0"))
                                             (rule "applyEqRigid" (formula "56") (term "0,1,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "56") (term "1,1,1,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "56") (term "1,1,1,1,0"))
                                             (rule "mul_literals" (formula "56") (term "1,1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "56") (term "1,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,1,1,0"))
                                             (rule "add_zero_right" (formula "56") (term "0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,1,1,0"))
                                             (rule "applyEqRigid" (formula "51") (term "0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "51") (term "1,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "51") (term "1,1,0"))
                                             (rule "mul_literals" (formula "51") (term "1,1,1,0"))
                                             (rule "add_zero_right" (formula "51") (term "1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "51") (term "0,1,0"))
                                             (rule "add_zero_right" (formula "51") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0"))
                                             (rule "applyEq" (formula "36") (term "0,0,1,0,0,0,1,0,0,1,1,2,0,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,0,0,1,0,0,1,1,2,0,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,0,1,0,0,1,1,2,0,0"))
                                             (rule "times_zero_2" (formula "36") (term "1,1,0,1,0,0,0,1,0,0,1,1,2,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,0,1,0,0,1,1,2,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,0,1,0,0,1,1,2,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,0,1,0,0,1,1,2,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,0,0,1,0,0,1,1,2,0,0"))
                                             (rule "applyEq" (formula "60") (term "0,0,1,0,0,1,0,1,0,0,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "60") (term "0,1,0,0,1,0,1,0,0,1,1,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "60") (term "1,0,1,0,0,1,0,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "60") (term "1,1,0,1,0,0,1,0,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "1,0,1,0,0,1,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,1,0,0,1,0,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "0,0,0,1,0,0,1,0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1,0,0,1,0,1,0,0,1,1,0"))
                                             (rule "applyEqRigid" (formula "34") (term "0,0,1,0,0,1,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "34") (term "0,1,0,0,1,1,1,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "34") (term "1,0,1,0,0,1,1,1,0"))
                                             (rule "mul_literals" (formula "34") (term "1,1,0,1,0,0,1,1,1,0"))
                                             (rule "add_zero_right" (formula "34") (term "1,0,1,0,0,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,0,0,1,1,1,0"))
                                             (rule "add_zero_right" (formula "34") (term "0,0,0,1,0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0,0,1,1,1,0"))
                                             (rule "applyEqRigid" (formula "60") (term "0,1,1,1,0,1,0,0,1,1,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,1,0,1,0,0,1,1,1,1,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "60") (term "1,1,1,1,0,1,0,0,1,1,1,1,0"))
                                             (rule "times_zero_2" (formula "60") (term "1,1,1,1,1,0,1,0,0,1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "1,1,1,1,0,1,0,0,1,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,1,0,1,0,0,1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "0,0,1,1,1,0,1,0,0,1,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,1,0,1,0,0,1,1,1,1,0"))
                                             (rule "applyEqRigid" (formula "60") (term "0,0,1,0,0,1,0,1,0,0,1,1,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "60") (term "0,1,0,0,1,0,1,0,0,1,1,1,1,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "60") (term "1,0,1,0,0,1,0,1,0,0,1,1,1,1,0"))
                                             (rule "mul_literals" (formula "60") (term "1,1,0,1,0,0,1,0,1,0,0,1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "1,0,1,0,0,1,0,1,0,0,1,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,1,0,0,1,0,1,0,0,1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "0,0,0,1,0,0,1,0,1,0,0,1,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1,0,0,1,0,1,0,0,1,1,1,1,0"))
                                             (rule "applyEq" (formula "59") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "59") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "36"))
                                             (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0,0,0,0,0,1,0"))
                                             (rule "times_zero_2" (formula "59") (term "1,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "applyEq" (formula "59") (term "0,1,1,1,0") (ifseqformula "4"))
                                             (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,1,0") (ifseqformula "53"))
                                             (rule "polySimp_elimSub" (formula "59") (term "1,1,1,1,0"))
                                             (rule "mul_literals" (formula "59") (term "1,1,1,1,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "1,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,1,0"))
                                             (rule "add_zero_right" (formula "59") (term "0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,1,0"))
                                             (rule "ifthenelse_split" (formula "59") (term "1,1,1,1,1,0"))
                                             (branch " 1 + de.polyas.core3.open.cred.CredTool.polyasVals.seq@heapAtPre_B«anonHeapFunction».length * -1 ≤ 0 TRUE"
                                                (rule "replace_known_left" (formula "56") (term "0,1,1,1,0,1,0,0,1,1,1,0") (ifseqformula "59"))
                                                 (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")))
                                                (rule "replace_known_left" (formula "60") (term "0,1,1,1,0,1,0,0,0,0,0,1,0") (ifseqformula "59"))
                                                 (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")))
                                                (rule "replace_known_left" (formula "61") (term "0,0,1,0,0,1,0,1,0,0,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,1,1,1,0") (ifseqformula "59"))
                                                 (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")))
                                                (rule "replace_known_left" (formula "34") (term "0,1,1,1,0,1,0,0,1,0,1,0,0,1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "59"))
                                                 (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")))
                                                (rule "replace_known_left" (formula "55") (term "0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,0") (ifseqformula "59"))
                                                 (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")))
                                                (rule "replace_known_left" (formula "32") (term "0,1,1,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,0") (ifseqformula "59"))
                                                 (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")))
                                                (rule "replace_known_left" (formula "53") (term "0,1,1,0,1,0,0,1,0,1,0,0,2,0") (ifseqformula "59"))
                                                 (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")))
                                                (rule "replace_known_left" (formula "58") (term "0,1,1,0,1,0") (ifseqformula "59"))
                                                 (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")) (ifInst ""  (formula "59")))
                                                (rule "true_left" (formula "58"))
                                                (rule "replace_known_left" (formula "36") (term "0,1,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,1,2,0,0") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")))
                                                (rule "replace_known_left" (formula "37") (term "0,0,1,0,0,0,1,0,0,1,0") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")))
                                                (rule "replace_known_left" (formula "51") (term "0,1,1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")))
                                                (rule "replace_known_left" (formula "38") (term "0,1,1,1,0") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "58")))
                                                (rule "replace_known_left" (formula "54") (term "0,1,1,0,0") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")))
                                                (rule "replace_known_left" (formula "52") (term "0,1,0,1") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "replace_known_left" (formula "35") (term "0,2,0,1,1") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "58")))
                                                (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "57") (term "1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "57") (term "1,1,0"))
                                                (rule "mul_literals" (formula "57") (term "1,1,1,0"))
                                                (rule "add_zero_right" (formula "57") (term "1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "57") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0"))
                                                (rule "replace_known_left" (formula "57") (term "0,1,0") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "applyEqRigid" (formula "55") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "55") (term "0,0,0,0,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "55") (term "1,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "55") (term "1,1,0,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "55") (term "1,0,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "55") (term "0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,0,1,0"))
                                                (rule "replace_known_left" (formula "55") (term "0,0,0,0,0,1,0") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "applyEqRigid" (formula "35") (term "0,1,0,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "35") (term "1,0,0,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "35") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "35") (term "1,1,1,0,0,0"))
                                                (rule "add_zero_right" (formula "35") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "35") (term "0,0,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0"))
                                                (rule "replace_known_left" (formula "35") (term "0,1,0,0,0") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "applyEq" (formula "36") (term "0,1,2,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "36") (term "1,2,0,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "36") (term "1,1,2,0,0"))
                                                (rule "times_zero_2" (formula "36") (term "1,1,1,2,0,0"))
                                                (rule "add_zero_right" (formula "36") (term "1,1,2,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,2,0,0"))
                                                (rule "add_zero_right" (formula "36") (term "0,0,1,2,0,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,2,0,0"))
                                                (rule "replace_known_left" (formula "36") (term "0,1,2,0,0") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "applyEqRigid" (formula "53") (term "0,1,2,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "53") (term "1,2,0,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "53") (term "1,1,2,0,0"))
                                                (rule "times_zero_2" (formula "53") (term "1,1,1,2,0,0"))
                                                (rule "add_zero_right" (formula "53") (term "1,1,2,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "53") (term "0,1,2,0,0"))
                                                (rule "add_zero_right" (formula "53") (term "0,0,1,2,0,0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,2,0,0"))
                                                (rule "replace_known_left" (formula "53") (term "0,1,2,0,0") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "applyEq" (formula "51") (term "0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "51") (term "1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "51") (term "1,1,0"))
                                                (rule "mul_literals" (formula "51") (term "1,1,1,0"))
                                                (rule "add_zero_right" (formula "51") (term "1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "51") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "51") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0"))
                                                (rule "replace_known_left" (formula "51") (term "0,1,0") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "applyEqRigid" (formula "54") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "54") (term "0,0,0,0,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "54") (term "1,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "54") (term "1,1,0,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "54") (term "1,0,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "54") (term "0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0,0,1,0"))
                                                (rule "replace_known_left" (formula "54") (term "0,0,0,0,0,1,0") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "applyEq" (formula "38") (term "0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "38") (term "1,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "38") (term "1,1,1,0"))
                                                (rule "mul_literals" (formula "38") (term "1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "38") (term "1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,1,0"))
                                                (rule "add_zero_right" (formula "38") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,1,0"))
                                                (rule "replace_known_left" (formula "38") (term "0,1,1,0") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "applyEq" (formula "52") (term "0,1,0,1") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "52") (term "1,0,1") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "52") (term "1,1,0,1"))
                                                (rule "mul_literals" (formula "52") (term "1,1,1,0,1"))
                                                (rule "add_zero_right" (formula "52") (term "1,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "52") (term "0,1,0,1"))
                                                (rule "add_zero_right" (formula "52") (term "0,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,1"))
                                                (rule "replace_known_left" (formula "52") (term "0,1,0,1") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "applyEqRigid" (formula "58") (term "0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "58") (term "0,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "58") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "58") (term "1,1,0,1,0"))
                                                (rule "add_zero_right" (formula "58") (term "1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,1,0"))
                                                (rule "add_zero_right" (formula "58") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0"))
                                                (rule "applyEqRigid" (formula "32") (term "0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "32") (term "0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "32") (term "1,0"))
                                                (rule "mul_literals" (formula "32") (term "1,1,0"))
                                                (rule "add_zero_right" (formula "32") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0"))
                                                (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                                (rule "applyEq" (formula "60") (term "0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "60") (term "1,1,1,0"))
                                                (rule "mul_literals" (formula "60") (term "1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "60") (term "1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,0"))
                                                (rule "add_zero_right" (formula "60") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,0"))
                                                (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "34") (term "1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "34") (term "1,1,0"))
                                                (rule "mul_literals" (formula "34") (term "1,1,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                                                (rule "applyEq" (formula "59") (term "0,1,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "59") (term "1,1,1,1,0"))
                                                (rule "mul_literals" (formula "59") (term "1,1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "59") (term "1,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,1,0"))
                                                (rule "add_zero_right" (formula "59") (term "0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,1,0"))
                                                (rule "applyEqRigid" (formula "57") (term "0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "57") (term "1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "57") (term "1,1,0"))
                                                (rule "times_zero_2" (formula "57") (term "1,1,1,0"))
                                                (rule "add_zero_right" (formula "57") (term "1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "57") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0"))
                                                (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "37") (term "1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "37") (term "1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "1,1,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0"))
                                                (rule "applyEqRigid" (formula "59") (term "0,0,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "59") (term "0,0,0,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "59") (term "1,0,0,0,1,0"))
                                                (rule "times_zero_2" (formula "59") (term "1,1,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "59") (term "1,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "59") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                (rule "applyEq" (formula "56") (term "0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "56") (term "1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "56") (term "1,1,0"))
                                                (rule "mul_literals" (formula "56") (term "1,1,1,0"))
                                                (rule "add_zero_right" (formula "56") (term "1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "56") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0"))
                                                (rule "applyEqRigid" (formula "56") (term "0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "56") (term "1,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "56") (term "1,1,1,0"))
                                                (rule "mul_literals" (formula "56") (term "1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "56") (term "1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,1,0"))
                                                (rule "add_zero_right" (formula "56") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,1,0"))
                                                (rule "applyEq" (formula "59") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "59") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "59") (term "1,1,0,1,0,0,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0,0,0,0,0,1,0"))
                                                (rule "replace_known_left" (formula "59") (term "0,0,0,0,1,0") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "applyEqRigid" (formula "57") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "57") (term "0,1,0,0,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "57") (term "1,0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "57") (term "1,1,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "57") (term "1,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "57") (term "0,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0,0,1,0"))
                                                (rule "replace_known_left" (formula "57") (term "0,1,0") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "applyEqRigid" (formula "54") (term "0,1,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "54") (term "1,0,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "54") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "54") (term "1,1,1,0,0"))
                                                (rule "add_zero_right" (formula "54") (term "1,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "54") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "54") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0"))
                                                (rule "applyEq" (formula "35") (term "0,0,1,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "35") (term "0,1,0,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "35") (term "1,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "35") (term "1,1,0,1,0,1,0"))
                                                (rule "add_zero_right" (formula "35") (term "1,0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,1,0,1,0"))
                                                (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0,1,0"))
                                                (rule "applyEqRigid" (formula "58") (term "0,0,1,0,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "58") (term "0,1,0,0,0,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "58") (term "1,0,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "58") (term "1,1,0,1,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "58") (term "1,0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,1,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "58") (term "0,0,0,1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0,0,0,1,0"))
                                                (rule "applyEqRigid" (formula "36") (term "0,1,2,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "36") (term "1,2,0,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "36") (term "1,1,2,0,0"))
                                                (rule "times_zero_2" (formula "36") (term "1,1,1,2,0,0"))
                                                (rule "add_zero_right" (formula "36") (term "1,1,2,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,2,0,0"))
                                                (rule "add_zero_right" (formula "36") (term "0,0,1,2,0,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,2,0,0"))
                                                (rule "applyEq" (formula "36") (term "0,2,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "36") (term "2,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "36") (term "1,2,0"))
                                                (rule "mul_literals" (formula "36") (term "1,1,2,0"))
                                                (rule "add_zero_right" (formula "36") (term "1,2,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "36") (term "0,2,0"))
                                                (rule "add_zero_right" (formula "36") (term "0,0,2,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,2,0"))
                                                (rule "applyEqRigid" (formula "56") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "56") (term "0,1,0,0,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "56") (term "1,0,1,0,0,1,0"))
                                                (rule "times_zero_2" (formula "56") (term "1,1,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "56") (term "1,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "56") (term "0,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0,0,1,0"))
                                                (rule "applyEqRigid" (formula "34") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "34") (term "0,1,0,0,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "34") (term "1,0,1,0,0,1,0"))
                                                (rule "times_zero_2" (formula "34") (term "1,1,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "1,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "0,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0,0,1,0"))
                                                (rule "applyEq" (formula "35") (term "0,1,0,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "35") (term "1,0,0,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "35") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "35") (term "1,1,1,0,0,0"))
                                                (rule "add_zero_right" (formula "35") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "35") (term "0,0,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0"))
                                                (rule "applyEq" (formula "60") (term "0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "60") (term "0,1,0,0,1,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "60") (term "1,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "60") (term "1,1,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "60") (term "1,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "60") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "applyEq" (formula "55") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "55") (term "0,0,0,0,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "55") (term "1,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "55") (term "1,1,0,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "55") (term "1,0,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "55") (term "0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,0,1,0"))
                                                (rule "applyEqRigid" (formula "55") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "55") (term "1,1,0,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "55") (term "1,1,1,0,1,0"))
                                                (rule "times_zero_2" (formula "55") (term "1,1,1,1,0,1,0"))
                                                (rule "add_zero_right" (formula "55") (term "1,1,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,1,0,1,0"))
                                                (rule "add_zero_right" (formula "55") (term "0,0,1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,1,0,1,0"))
                                                (rule "applyEqRigid" (formula "60") (term "0,1,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "60") (term "1,1,1,1,0"))
                                                (rule "mul_literals" (formula "60") (term "1,1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "60") (term "1,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,1,0"))
                                                (rule "add_zero_right" (formula "60") (term "0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,1,0"))
                                                (rule "applyEq" (formula "55") (term "0,1,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "55") (term "1,0,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "55") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "55") (term "1,1,1,0,0"))
                                                (rule "add_zero_right" (formula "55") (term "1,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "55") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                (rule "applyEq" (formula "53") (term "0,2,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "53") (term "2,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "53") (term "1,2,0"))
                                                (rule "mul_literals" (formula "53") (term "1,1,2,0"))
                                                (rule "add_zero_right" (formula "53") (term "1,2,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "53") (term "0,2,0"))
                                                (rule "add_zero_right" (formula "53") (term "0,0,2,0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,2,0"))
                                                (rule "applyEqRigid" (formula "38") (term "0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "38") (term "1,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "38") (term "1,1,1,0"))
                                                (rule "times_zero_2" (formula "38") (term "1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "38") (term "1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,1,0"))
                                                (rule "add_zero_right" (formula "38") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,1,0"))
                                                (rule "applyEqRigid" (formula "52") (term "0,1,0,1") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "52") (term "1,0,1") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "52") (term "1,1,0,1"))
                                                (rule "times_zero_2" (formula "52") (term "1,1,1,0,1"))
                                                (rule "add_zero_right" (formula "52") (term "1,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "52") (term "0,1,0,1"))
                                                (rule "add_zero_right" (formula "52") (term "0,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,1"))
                                                (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "32") (term "1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "32") (term "1,1,0"))
                                                (rule "mul_literals" (formula "32") (term "1,1,1,0"))
                                                (rule "add_zero_right" (formula "32") (term "1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "32") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0"))
                                                (rule "applyEq" (formula "34") (term "0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "34") (term "1,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "34") (term "1,1,1,0"))
                                                (rule "mul_literals" (formula "34") (term "1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,1,0"))
                                                (rule "applyEq" (formula "37") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,0,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "37") (term "1,1,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "1,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0,0,1,0"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "32") (term "0,1,0,0,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "32") (term "1,0,1,0,0,0"))
                                                (rule "times_zero_2" (formula "32") (term "1,1,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "32") (term "1,0,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0,0,0"))
                                                (rule "applyEq" (formula "52") (term "0,0,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "52") (term "0,0,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "52") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "52") (term "1,1,0,0,0"))
                                                (rule "add_zero_right" (formula "52") (term "1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,0,0"))
                                                (rule "add_zero_right" (formula "52") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                                (rule "applyEqRigid" (formula "35") (term "0,2,0,1,1") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "35") (term "2,0,1,1") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "35") (term "1,2,0,1,1"))
                                                (rule "mul_literals" (formula "35") (term "1,1,2,0,1,1"))
                                                (rule "add_zero_right" (formula "35") (term "1,2,0,1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "35") (term "0,2,0,1,1"))
                                                (rule "add_zero_right" (formula "35") (term "0,0,2,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,2,0,1,1"))
                                                (rule "applyEq" (formula "53") (term "0,1,2,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "53") (term "1,2,0,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "53") (term "1,1,2,0,0"))
                                                (rule "mul_literals" (formula "53") (term "1,1,1,2,0,0"))
                                                (rule "add_zero_right" (formula "53") (term "1,1,2,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "53") (term "0,1,2,0,0"))
                                                (rule "add_zero_right" (formula "53") (term "0,0,1,2,0,0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,2,0,0"))
                                                (rule "applyEq" (formula "58") (term "0,1,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "58") (term "1,0,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "58") (term "1,1,0,1,0"))
                                                (rule "mul_literals" (formula "58") (term "1,1,1,0,1,0"))
                                                (rule "add_zero_right" (formula "58") (term "1,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,0,1,0"))
                                                (rule "add_zero_right" (formula "58") (term "0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,1,0"))
                                                (rule "applyEqRigid" (formula "37") (term "0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "37") (term "1,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "37") (term "1,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,1,0"))
                                                (rule "applyEqRigid" (formula "51") (term "0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "51") (term "1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "51") (term "1,1,0"))
                                                (rule "mul_literals" (formula "51") (term "1,1,1,0"))
                                                (rule "add_zero_right" (formula "51") (term "1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "51") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "51") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0"))
                                                (rule "applyEq" (formula "51") (term "0,0,1,0,0,1,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "51") (term "0,1,0,0,1,1,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "51") (term "1,0,1,0,0,1,1,1,0"))
                                                (rule "mul_literals" (formula "51") (term "1,1,0,1,0,0,1,1,1,0"))
                                                (rule "add_zero_right" (formula "51") (term "1,0,1,0,0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,1,0,0,1,1,1,0"))
                                                (rule "add_zero_right" (formula "51") (term "0,0,0,1,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,1,0,0,1,1,1,0"))
                                                (rule "applyEqRigid" (formula "37") (term "0,1,0,1,0,0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "37") (term "1,0,1,0,0,1,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "37") (term "1,1,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "1,1,1,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "1,1,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,1,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,1,0,0,1,1,0"))
                                                (rule "applyEqRigid" (formula "37") (term "0,1,1,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "37") (term "1,1,1,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "37") (term "1,1,1,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "1,1,1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "1,1,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,1,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,1,1,1,0"))
                                                (rule "applyEqRigid" (formula "52") (term "0,0,1,0,0,1,0,1,0,0,0,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "52") (term "0,1,0,0,1,0,1,0,0,0,0,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "52") (term "1,0,1,0,0,1,0,1,0,0,0,0,0"))
                                                (rule "times_zero_2" (formula "52") (term "1,1,0,1,0,0,1,0,1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "52") (term "1,0,1,0,0,1,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,1,0,0,1,0,1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "52") (term "0,0,0,1,0,0,1,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,0,0,1,0,1,0,0,0,0,0"))
                                                (rule "applyEq" (formula "34") (term "0,1,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "34") (term "1,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "34") (term "1,1,0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "times_zero_2" (formula "34") (term "1,1,1,0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "1,1,0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "applyEqRigid" (formula "56") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "56") (term "0,1,0,0,0,1,0,0,0,1,0,0,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "56") (term "1,0,1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "56") (term "1,1,0,1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "56") (term "1,0,1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "56") (term "0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "applyEqRigid" (formula "58") (term "0,0,1,0,0,0,1,0,0,1,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "58") (term "0,1,0,0,0,1,0,0,1,0,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "58") (term "1,0,1,0,0,0,1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "58") (term "1,1,0,1,0,0,0,1,0,0,1,0,1,0"))
                                                (rule "add_zero_right" (formula "58") (term "1,0,1,0,0,0,1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,1,0,0,0,1,0,0,1,0,1,0"))
                                                (rule "add_zero_right" (formula "58") (term "0,0,0,1,0,0,0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0,0,0,1,0,0,1,0,1,0"))
                                                (rule "applyEq" (formula "35") (term "0,1,1,0,1,0,0,2,0,1,1") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "35") (term "1,1,0,1,0,0,2,0,1,1") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "35") (term "1,1,1,0,1,0,0,2,0,1,1"))
                                                (rule "mul_literals" (formula "35") (term "1,1,1,1,0,1,0,0,2,0,1,1"))
                                                (rule "add_zero_right" (formula "35") (term "1,1,1,0,1,0,0,2,0,1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,1,0,1,0,0,2,0,1,1"))
                                                (rule "add_zero_right" (formula "35") (term "0,0,1,1,0,1,0,0,2,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,1,0,1,0,0,2,0,1,1"))
                                                (rule "applyEqRigid" (formula "34") (term "0,1,1,1,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "34") (term "1,1,1,1,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "34") (term "1,1,1,1,1,1,0"))
                                                (rule "mul_literals" (formula "34") (term "1,1,1,1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "1,1,1,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "0,0,1,1,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,1,1,1,1,0"))
                                                (rule "applyEqRigid" (formula "34") (term "0,0,1,0,0,1,1,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "34") (term "0,1,0,0,1,1,1,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "34") (term "1,0,1,0,0,1,1,1,1,0"))
                                                (rule "mul_literals" (formula "34") (term "1,1,0,1,0,0,1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "1,0,1,0,0,1,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,0,0,1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "0,0,0,1,0,0,1,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0,0,1,1,1,1,0"))
                                                (rule "applyEq" (formula "38") (term "0,0,1,0,0,1,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "38") (term "0,1,0,0,1,1,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "38") (term "1,0,1,0,0,1,1,1,0"))
                                                (rule "mul_literals" (formula "38") (term "1,1,0,1,0,0,1,1,1,0"))
                                                (rule "add_zero_right" (formula "38") (term "1,0,1,0,0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,1,0,0,1,1,1,0"))
                                                (rule "add_zero_right" (formula "38") (term "0,0,0,1,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,0,0,1,1,1,0"))
                                                (rule "applyEqRigid" (formula "57") (term "0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "57") (term "1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "57") (term "1,1,0"))
                                                (rule "mul_literals" (formula "57") (term "1,1,1,0"))
                                                (rule "add_zero_right" (formula "57") (term "1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,0"))
                                                (rule "add_zero_right" (formula "57") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0"))
                                                (rule "applyEq" (formula "55") (term "0,1,0,1,0,0,1,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "55") (term "1,0,1,0,0,1,0,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "55") (term "1,1,0,1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "55") (term "1,1,1,0,1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "55") (term "1,1,0,1,0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "55") (term "0,0,1,0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,1,0,0,1,0"))
                                                (rule "applyEq" (formula "52") (term "0,1,0,1,0,0,1,0,1") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "52") (term "1,0,1,0,0,1,0,1") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "52") (term "1,1,0,1,0,0,1,0,1"))
                                                (rule "mul_literals" (formula "52") (term "1,1,1,0,1,0,0,1,0,1"))
                                                (rule "add_zero_right" (formula "52") (term "1,1,0,1,0,0,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "52") (term "0,1,0,1,0,0,1,0,1"))
                                                (rule "add_zero_right" (formula "52") (term "0,0,1,0,1,0,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,1,0,0,1,0,1"))
                                                (rule "applyEqRigid" (formula "58") (term "0,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "58") (term "0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "58") (term "1,0,1,0,0,0,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "58") (term "1,1,0,1,0,0,0,1,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "58") (term "1,0,1,0,0,0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,1,0,0,0,1,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "58") (term "0,0,0,1,0,0,0,1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0,0,0,1,0,0,0,1,0"))
                                                (rule "applyEqRigid" (formula "58") (term "0,1,0,1,0,0,1,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "58") (term "1,0,1,0,0,1,0,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "58") (term "1,1,0,1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "58") (term "1,1,1,0,1,0,0,1,0,1,0"))
                                                (rule "add_zero_right" (formula "58") (term "1,1,0,1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,0,1,0,0,1,0,1,0"))
                                                (rule "add_zero_right" (formula "58") (term "0,0,1,0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,1,0,0,1,0,1,0"))
                                                (rule "applyEqRigid" (formula "36") (term "0,1,2,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "36") (term "1,2,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "36") (term "1,1,2,0"))
                                                (rule "mul_literals" (formula "36") (term "1,1,1,2,0"))
                                                (rule "add_zero_right" (formula "36") (term "1,1,2,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,2,0"))
                                                (rule "add_zero_right" (formula "36") (term "0,0,1,2,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,2,0"))
                                                (rule "applyEq" (formula "56") (term "0,1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "56") (term "1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "56") (term "1,1,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "times_zero_2" (formula "56") (term "1,1,1,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "56") (term "1,1,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "56") (term "0,0,1,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "applyEqRigid" (formula "53") (term "0,1,0,1,0,0,1,2,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "53") (term "1,0,1,0,0,1,2,0,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "53") (term "1,1,0,1,0,0,1,2,0,0"))
                                                (rule "mul_literals" (formula "53") (term "1,1,1,0,1,0,0,1,2,0,0"))
                                                (rule "add_zero_right" (formula "53") (term "1,1,0,1,0,0,1,2,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "53") (term "0,1,0,1,0,0,1,2,0,0"))
                                                (rule "add_zero_right" (formula "53") (term "0,0,1,0,1,0,0,1,2,0,0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,1,0,0,1,2,0,0"))
                                                (rule "applyEqRigid" (formula "34") (term "0,0,1,0,0,1,0,1,0,0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "34") (term "0,1,0,0,1,0,1,0,0,1,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "34") (term "1,0,1,0,0,1,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "34") (term "1,1,0,1,0,0,1,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "1,0,1,0,0,1,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,0,0,1,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "0,0,0,1,0,0,1,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0,0,1,0,1,0,0,1,1,0"))
                                                (rule "applyEqRigid" (formula "51") (term "0,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "51") (term "0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "51") (term "1,0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "51") (term "1,1,0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "51") (term "1,0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "51") (term "0,0,0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "applyEq" (formula "51") (term "0,1,0,1,0,0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "51") (term "1,0,1,0,0,1,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "51") (term "1,1,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "51") (term "1,1,1,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "51") (term "1,1,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "51") (term "0,1,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "51") (term "0,0,1,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,1,0,0,1,1,0"))
                                                (rule "applyEq" (formula "37") (term "0,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "1,1,0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "1,0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "applyEq" (formula "37") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "times_zero_2" (formula "37") (term "1,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "applyEq" (formula "36") (term "0,0,1,0,0,1,2,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,0,1,2,0,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,1,2,0,0"))
                                                (rule "mul_literals" (formula "36") (term "1,1,0,1,0,0,1,2,0,0"))
                                                (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,1,2,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,1,2,0,0"))
                                                (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,1,2,0,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,0,1,2,0,0"))
                                                (rule "applyEqRigid" (formula "52") (term "0,1,1,1,0,1") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "52") (term "1,1,1,0,1") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "52") (term "1,1,1,1,0,1"))
                                                (rule "mul_literals" (formula "52") (term "1,1,1,1,1,0,1"))
                                                (rule "add_zero_right" (formula "52") (term "1,1,1,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "52") (term "0,1,1,1,0,1"))
                                                (rule "add_zero_right" (formula "52") (term "0,0,1,1,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,1,1,0,1"))
                                                (rule "applyEq" (formula "56") (term "0,1,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "56") (term "1,1,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "56") (term "1,1,1,1,0"))
                                                (rule "mul_literals" (formula "56") (term "1,1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "56") (term "1,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,1,1,0"))
                                                (rule "add_zero_right" (formula "56") (term "0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,1,1,0"))
                                                (rule "applyEqRigid" (formula "58") (term "0,1,1,1,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "58") (term "1,1,1,0,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "58") (term "1,1,1,1,0,1,0"))
                                                (rule "mul_literals" (formula "58") (term "1,1,1,1,1,0,1,0"))
                                                (rule "add_zero_right" (formula "58") (term "1,1,1,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,1,1,0,1,0"))
                                                (rule "add_zero_right" (formula "58") (term "0,0,1,1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,1,1,0,1,0"))
                                                (rule "applyEqRigid" (formula "53") (term "0,0,1,0,0,0,1,0,0,1,2,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "53") (term "0,1,0,0,0,1,0,0,1,2,0,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "53") (term "1,0,1,0,0,0,1,0,0,1,2,0,0"))
                                                (rule "mul_literals" (formula "53") (term "1,1,0,1,0,0,0,1,0,0,1,2,0,0"))
                                                (rule "add_zero_right" (formula "53") (term "1,0,1,0,0,0,1,0,0,1,2,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,1,0,0,0,1,0,0,1,2,0,0"))
                                                (rule "add_zero_right" (formula "53") (term "0,0,0,1,0,0,0,1,0,0,1,2,0,0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,0,0,0,1,0,0,1,2,0,0"))
                                                (rule "applyEqRigid" (formula "52") (term "0,1,1,1,0,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "52") (term "1,1,1,0,0,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "52") (term "1,1,1,1,0,0,0"))
                                                (rule "times_zero_2" (formula "52") (term "1,1,1,1,1,0,0,0"))
                                                (rule "add_zero_right" (formula "52") (term "1,1,1,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "52") (term "0,1,1,1,0,0,0"))
                                                (rule "add_zero_right" (formula "52") (term "0,0,1,1,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,1,1,0,0,0"))
                                                (rule "applyEqRigid" (formula "32") (term "0,0,1,0,0,1,0,1,0,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "32") (term "0,1,0,0,1,0,1,0,0,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "32") (term "1,0,1,0,0,1,0,1,0,0,0"))
                                                (rule "times_zero_2" (formula "32") (term "1,1,0,1,0,0,1,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "32") (term "1,0,1,0,0,1,0,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0,0,1,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,0,1,0,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0,0,1,0,1,0,0,0"))
                                                (rule "applyEqRigid" (formula "35") (term "0,1,0,1,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "35") (term "1,0,1,0,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "35") (term "1,1,0,1,0,1,0"))
                                                (rule "times_zero_2" (formula "35") (term "1,1,1,0,1,0,1,0"))
                                                (rule "add_zero_right" (formula "35") (term "1,1,0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0,1,0,1,0"))
                                                (rule "add_zero_right" (formula "35") (term "0,0,1,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,1,0,1,0"))
                                                (rule "applyEqRigid" (formula "58") (term "0,0,1,0,0,1,1,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "58") (term "0,1,0,0,1,1,0,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "58") (term "1,0,1,0,0,1,1,0,1,0"))
                                                (rule "mul_literals" (formula "58") (term "1,1,0,1,0,0,1,1,0,1,0"))
                                                (rule "add_zero_right" (formula "58") (term "1,0,1,0,0,1,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,1,0,0,1,1,0,1,0"))
                                                (rule "add_zero_right" (formula "58") (term "0,0,0,1,0,0,1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0,0,1,1,0,1,0"))
                                                (rule "applyEqRigid" (formula "60") (term "0,1,1,1,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,1,1,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "60") (term "1,1,1,1,1,1,0"))
                                                (rule "mul_literals" (formula "60") (term "1,1,1,1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "60") (term "1,1,1,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "60") (term "0,0,1,1,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,1,1,1,0"))
                                                (rule "applyEqRigid" (formula "37") (term "0,0,1,0,0,1,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,0,1,1,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0,1,1,1,0"))
                                                (rule "mul_literals" (formula "37") (term "1,1,0,1,0,0,1,1,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "1,0,1,0,0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0,1,1,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0,0,1,1,1,0"))
                                                (rule "applyEq" (formula "52") (term "0,1,0,1,0,0,1,0,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "52") (term "1,0,1,0,0,1,0,0,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "52") (term "1,1,0,1,0,0,1,0,0,0"))
                                                (rule "times_zero_2" (formula "52") (term "1,1,1,0,1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "52") (term "1,1,0,1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "52") (term "0,1,0,1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "52") (term "0,0,1,0,1,0,0,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,1,0,0,1,0,0,0"))
                                                (rule "applyEq" (formula "35") (term "0,1,0,1,0,0,0,1,0,0,2,0,1,1") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "35") (term "1,0,1,0,0,0,1,0,0,2,0,1,1") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "35") (term "1,1,0,1,0,0,0,1,0,0,2,0,1,1"))
                                                (rule "times_zero_2" (formula "35") (term "1,1,1,0,1,0,0,0,1,0,0,2,0,1,1"))
                                                (rule "add_zero_right" (formula "35") (term "1,1,0,1,0,0,0,1,0,0,2,0,1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0,1,0,0,0,1,0,0,2,0,1,1"))
                                                (rule "add_zero_right" (formula "35") (term "0,0,1,0,1,0,0,0,1,0,0,2,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,1,0,0,0,1,0,0,2,0,1,1"))
                                                (rule "applyEqRigid" (formula "58") (term "0,1,0,1,0,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "58") (term "1,0,1,0,0,0,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "58") (term "1,1,0,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "58") (term "1,1,1,0,1,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "58") (term "1,1,0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,0,1,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "58") (term "0,0,1,0,1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,1,0,0,0,1,0"))
                                                (rule "applyEqRigid" (formula "32") (term "0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "32") (term "0,1,0,0,1,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "32") (term "1,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "32") (term "1,1,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "32") (term "1,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "applyEqRigid" (formula "34") (term "0,1,1,0,1,0,0,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "34") (term "1,1,0,1,0,0,1,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "34") (term "1,1,1,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "34") (term "1,1,1,1,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "1,1,1,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,1,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "0,0,1,1,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,1,0,1,0,0,1,1,0"))
                                                (rule "applyEqRigid" (formula "59") (term "0,1,1,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,1,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "59") (term "1,1,1,1,1,0"))
                                                (rule "mul_literals" (formula "59") (term "1,1,1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "59") (term "1,1,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "59") (term "0,0,1,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,1,1,0"))
                                                (rule "applyEq" (formula "60") (term "0,1,0,1,0,0,1,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "60") (term "1,0,1,0,0,1,1,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "60") (term "1,1,0,1,0,0,1,1,1,0"))
                                                (rule "mul_literals" (formula "60") (term "1,1,1,0,1,0,0,1,1,1,0"))
                                                (rule "add_zero_right" (formula "60") (term "1,1,0,1,0,0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,0,1,0,0,1,1,1,0"))
                                                (rule "add_zero_right" (formula "60") (term "0,0,1,0,1,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,1,0,0,1,1,1,0"))
                                                (rule "applyEqRigid" (formula "53") (term "0,0,1,0,0,0,1,0,0,2,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "53") (term "0,1,0,0,0,1,0,0,2,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "53") (term "1,0,1,0,0,0,1,0,0,2,0"))
                                                (rule "mul_literals" (formula "53") (term "1,1,0,1,0,0,0,1,0,0,2,0"))
                                                (rule "add_zero_right" (formula "53") (term "1,0,1,0,0,0,1,0,0,2,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,1,0,0,0,1,0,0,2,0"))
                                                (rule "add_zero_right" (formula "53") (term "0,0,0,1,0,0,0,1,0,0,2,0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,0,0,0,1,0,0,2,0"))
                                                (rule "applyEqRigid" (formula "34") (term "0,0,1,0,0,0,1,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "34") (term "0,1,0,0,0,1,0,0,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "34") (term "1,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "times_zero_2" (formula "34") (term "1,1,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "1,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "0,0,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "applyEqRigid" (formula "37") (term "0,1,0,1,0,0,1,0,1,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "37") (term "1,0,1,0,0,1,0,1,0,0,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "37") (term "1,1,0,1,0,0,1,0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "37") (term "1,1,1,0,1,0,0,1,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "1,1,0,1,0,0,1,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0,1,0,0,1,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,1,0,1,0,0,1,0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,1,0,0,1,0,1,0,0,1,0"))
                                                (rule "applyEq" (formula "37") (term "0,1,1,1,0,1,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "37") (term "1,1,1,0,1,0,0,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "37") (term "1,1,1,1,0,1,0,0,1,0"))
                                                (rule "times_zero_2" (formula "37") (term "1,1,1,1,1,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "1,1,1,1,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,1,1,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,1,1,1,0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,1,1,0,1,0,0,1,0"))
                                                (rule "applyEq" (formula "37") (term "0,0,1,0,0,1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,0,1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0,1,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "37") (term "1,1,0,1,0,0,1,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "1,0,1,0,0,1,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0,1,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "applyEqRigid" (formula "54") (term "0,1,1,0,1,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "54") (term "1,1,0,1,0,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "54") (term "1,1,1,0,1,0,0"))
                                                (rule "times_zero_2" (formula "54") (term "1,1,1,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "54") (term "1,1,1,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "54") (term "0,1,1,0,1,0"))
                                                (rule "add_zero_right" (formula "54") (term "0,0,1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,1,0,1,0"))
                                                (rule "applyEqRigid" (formula "34") (term "0,1,0,1,0,0,1,1,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "34") (term "1,0,1,0,0,1,1,1,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "34") (term "1,1,0,1,0,0,1,1,1,0"))
                                                (rule "mul_literals" (formula "34") (term "1,1,1,0,1,0,0,1,1,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "1,1,0,1,0,0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0,1,0,0,1,1,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "0,0,1,0,1,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,1,0,0,1,1,1,0"))
                                                (rule "applyEq" (formula "35") (term "0,0,1,0,0,1,0,1,0,0,2,0,1,1") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "35") (term "0,1,0,0,1,0,1,0,0,2,0,1,1") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "35") (term "1,0,1,0,0,1,0,1,0,0,2,0,1,1"))
                                                (rule "mul_literals" (formula "35") (term "1,1,0,1,0,0,1,0,1,0,0,2,0,1,1"))
                                                (rule "add_zero_right" (formula "35") (term "1,0,1,0,0,1,0,1,0,0,2,0,1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,1,0,0,1,0,1,0,0,2,0,1,1"))
                                                (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,0,1,0,1,0,0,2,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0,0,1,0,1,0,0,2,0,1,1"))
                                                (rule "applyEqRigid" (formula "35") (term "0,0,1,0,0,0,1,0,0,1,2,0,1,1") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "35") (term "0,1,0,0,0,1,0,0,1,2,0,1,1") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "35") (term "1,0,1,0,0,0,1,0,0,1,2,0,1,1"))
                                                (rule "times_zero_2" (formula "35") (term "1,1,0,1,0,0,0,1,0,0,1,2,0,1,1"))
                                                (rule "add_zero_right" (formula "35") (term "1,0,1,0,0,0,1,0,0,1,2,0,1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,1,0,0,0,1,0,0,1,2,0,1,1"))
                                                (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,0,0,1,0,0,1,2,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0,0,0,1,0,0,1,2,0,1,1"))
                                                (rule "applyEqRigid" (formula "37") (term "0,1,1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "37") (term "1,1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "37") (term "1,1,1,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "37") (term "1,1,1,1,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "1,1,1,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,1,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "37") (term "0,0,1,1,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,1,0,1,0,0,0,1,0,0,1,0"))
                                                (rule "applyEq" (formula "53") (term "0,1,0,1,0,0,2,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "53") (term "1,0,1,0,0,2,0") (ifseqformula "36"))
                                                (rule "polySimp_elimSub" (formula "53") (term "1,1,0,1,0,0,2,0"))
                                                (rule "mul_literals" (formula "53") (term "1,1,1,0,1,0,0,2,0"))
                                                (rule "add_zero_right" (formula "53") (term "1,1,0,1,0,0,2,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "53") (term "0,1,0,1,0,0,2,0"))
                                                (rule "add_zero_right" (formula "53") (term "0,0,1,0,1,0,0,2,0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,1,0,0,2,0"))
                                                (rule "applyEqRigid" (formula "32") (term "0,1,1,0,1,0,0,0") (ifseqformula "4"))
                                                (rule "lenOfSeqSubEQ" (formula "32") (term "1,1,0,1,0,0,0") (ifseqformula "53"))
                                                (rule "polySimp_elimSub" (formula "32") (term "1,1,1,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "32") (term "1,1,1,1,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "32") (term "1,1,1,0,1,0,0,0"))
                                                (rule "ifthenelse_split" (formula "32") (term "1,1,0,1,1,0,1,0,0,0"))
                                                (branch " 1 + de.polyas.core3.open.cred.CredTool.polyasVals.seq@heapAtPre_B«anonHeapFunction».length * -1 ≤ 0 TRUE"
                                                   (rule "replace_known_left" (formula "38") (term "0,1,0,1,0,0,1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                                   (rule "replace_known_left" (formula "33") (term "0,1,1,1,1,0,1,0,0,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                                   (rule "replace_known_left" (formula "35") (term "0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                                   (rule "replace_known_left" (formula "59") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                                   (rule "true_left" (formula "59"))
                                                   (rule "replace_known_left" (formula "54") (term "0,1,1,1,0,1,0,0,0,1,0,0,0,1,0,0,2,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                                   (rule "replace_known_left" (formula "55") (term "0,1,1,1,0,1,0,0,1,1,0,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                                   (rule "replace_known_left" (formula "37") (term "0,1,1,1,2,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                                   (rule "replace_known_left" (formula "57") (term "0,0,1,0,0,0,1,0,0,1,0,1,0,0,1,1,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                                   (rule "replace_known_left" (formula "60") (term "0,1,1,0,1,0,0,1,1,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                                   (rule "replace_known_left" (formula "56") (term "0,0,1,0,0,1,1,0,1,0,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                                   (rule "replace_known_left" (formula "52") (term "0,0,1,0,0,0,1,0,0,1,1,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                                   (rule "replace_known_left" (formula "39") (term "0,1,1,0,1,0,0,1,1,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                                   (rule "replace_known_left" (formula "59") (term "0,0,1,0,0,0,1,0,0,1,1,1,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                                   (rule "replace_known_left" (formula "58") (term "0,0,1,0,0,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                                   (rule "replace_known_left" (formula "53") (term "0,0,1,0,0,0,1,0,0,1,1,1,1,1,0,1") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                                   (rule "replace_known_left" (formula "36") (term "0,1,1,0,1,0,0,0,1,0,0,2,0,1,1") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "32")))
                                                   (rule "polySimp_addComm1" (formula "56") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "33") (term "0,0,0,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,1,0,0,0"))
                                                   (rule "replace_known_left" (formula "33") (term "0,0,1,0,0,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "32")))
                                                   (rule "applyEq" (formula "55") (term "0,1,0,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "55") (term "1,0,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "55") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "55") (term "1,1,1,0,0"))
                                                   (rule "add_zero_right" (formula "55") (term "1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0"))
                                                   (rule "add_zero_right" (formula "55") (term "0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0"))
                                                   (rule "replace_known_left" (formula "55") (term "0,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                   (rule "applyEq" (formula "54") (term "0,2,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "54") (term "2,0") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "54") (term "1,2,0"))
                                                   (rule "mul_literals" (formula "54") (term "1,1,2,0"))
                                                   (rule "add_zero_right" (formula "54") (term "1,2,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "54") (term "0,2,0"))
                                                   (rule "add_zero_right" (formula "54") (term "0,0,2,0"))
                                                   (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,2,0"))
                                                   (rule "replace_known_left" (formula "54") (term "0,2,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "applyEq" (formula "37") (term "0,1,2,0,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "37") (term "1,2,0,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "37") (term "1,1,2,0,0"))
                                                   (rule "times_zero_2" (formula "37") (term "1,1,1,2,0,0"))
                                                   (rule "add_zero_right" (formula "37") (term "1,1,2,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,2,0,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,1,2,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,2,0,0"))
                                                   (rule "replace_known_left" (formula "37") (term "0,1,2,0,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "applyEq" (formula "53") (term "0,0,0,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "53") (term "0,0,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "53") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "53") (term "1,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "53") (term "1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,0"))
                                                   (rule "add_zero_right" (formula "53") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                                   (rule "replace_known_left" (formula "53") (term "0,0,0,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEqRigid" (formula "39") (term "0,1,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "39") (term "1,1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "39") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "39") (term "1,1,1,1,0"))
                                                   (rule "add_zero_right" (formula "39") (term "1,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,1,0"))
                                                   (rule "add_zero_right" (formula "39") (term "0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,1,0"))
                                                   (rule "replace_known_left" (formula "39") (term "0,1,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "applyEqRigid" (formula "58") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "58") (term "1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "58") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "58") (term "1,1,1,0"))
                                                   (rule "add_zero_right" (formula "58") (term "1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,0"))
                                                   (rule "add_zero_right" (formula "58") (term "0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0"))
                                                   (rule "replace_known_left" (formula "58") (term "0,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "58"))
                                                   (rule "applyEq" (formula "59") (term "0,1,1,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,1,0") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "59") (term "1,1,1,1,0"))
                                                   (rule "mul_literals" (formula "59") (term "1,1,1,1,1,0"))
                                                   (rule "add_zero_right" (formula "59") (term "1,1,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,1,0"))
                                                   (rule "add_zero_right" (formula "59") (term "0,0,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,1,0"))
                                                   (rule "replace_known_left" (formula "59") (term "0,1,1,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "59"))
                                                   (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "57") (term "1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "57") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "57") (term "1,1,1,0"))
                                                   (rule "add_zero_right" (formula "57") (term "1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,0"))
                                                   (rule "add_zero_right" (formula "57") (term "0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0"))
                                                   (rule "replace_known_left" (formula "57") (term "0,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "35") (term "1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "35") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "35") (term "1,1,1,0"))
                                                   (rule "add_zero_right" (formula "35") (term "1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0"))
                                                   (rule "replace_known_left" (formula "35") (term "0,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "applyEqRigid" (formula "32") (term "0,0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "32") (term "0,1,0") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "32") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "32") (term "1,1,0,1,0"))
                                                   (rule "add_zero_right" (formula "32") (term "1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0"))
                                                   (rule "add_zero_right" (formula "32") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0"))
                                                   (rule "applyEq" (formula "60") (term "0,1,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "60") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "60") (term "1,1,1,1,0"))
                                                   (rule "add_zero_right" (formula "60") (term "1,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,0"))
                                                   (rule "add_zero_right" (formula "60") (term "0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,0"))
                                                   (rule "applyEq" (formula "56") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "56") (term "0,0,0,0,1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "56") (term "1,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "56") (term "1,1,0,0,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "56") (term "1,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "56") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,0,1,0"))
                                                   (rule "applyEq" (formula "36") (term "0,1,0,0,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "36") (term "1,0,0,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "36") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "36") (term "1,1,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "36") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0"))
                                                   (rule "applyEqRigid" (formula "56") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "56") (term "1,1,0,1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "56") (term "1,1,1,0,1,0"))
                                                   (rule "mul_literals" (formula "56") (term "1,1,1,1,0,1,0"))
                                                   (rule "add_zero_right" (formula "56") (term "1,1,1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,1,0,1,0"))
                                                   (rule "add_zero_right" (formula "56") (term "0,0,1,1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,1,0,1,0"))
                                                   (rule "applyEq" (formula "56") (term "0,1,0,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "56") (term "1,0,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "56") (term "1,1,0,0"))
                                                   (rule "times_zero_2" (formula "56") (term "1,1,1,0,0"))
                                                   (rule "add_zero_right" (formula "56") (term "1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "56") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,0"))
                                                   (rule "add_zero_right" (formula "56") (term "0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "56") (term "0"))
                                                   (rule "applyEqRigid" (formula "36") (term "0,0,1,0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "36") (term "1,1,0,1,0,1,0"))
                                                   (rule "add_zero_right" (formula "36") (term "1,0,1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,1,0"))
                                                   (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,1,0"))
                                                   (rule "applyEqRigid" (formula "36") (term "0,2,0,1,1") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "36") (term "2,0,1,1") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "36") (term "1,2,0,1,1"))
                                                   (rule "times_zero_2" (formula "36") (term "1,1,2,0,1,1"))
                                                   (rule "add_zero_right" (formula "36") (term "1,2,0,1,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "36") (term "0,2,0,1,1"))
                                                   (rule "add_zero_right" (formula "36") (term "0,0,2,0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,2,0,1,1"))
                                                   (rule "applyEq" (formula "38") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "38") (term "1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "38") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,1,1,0"))
                                                   (rule "add_zero_right" (formula "38") (term "1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                                                   (rule "applyEqRigid" (formula "52") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "52") (term "1,0") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "52") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "52") (term "1,1,1,0"))
                                                   (rule "add_zero_right" (formula "52") (term "1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "52") (term "0,1,0"))
                                                   (rule "add_zero_right" (formula "52") (term "0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0"))
                                                   (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "33") (term "0") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "33") (term "1,0"))
                                                   (rule "mul_literals" (formula "33") (term "1,1,0"))
                                                   (rule "add_zero_right" (formula "33") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0"))
                                                   (rule "add_zero_right" (formula "33") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                                   (rule "pullOutSelect" (formula "77") (term "1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "replaceKnownSelect_taclet00_3" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00_4" (formula "1") (term "2,0"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "78") (term "1,1") (ifseqformula "1"))
                                                   (rule "replaceKnownSelect_taclet0000_8" (formula "78") (term "1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "78") (term "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "applyEqRigid" (formula "54") (term "0,2,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "54") (term "2,0") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "54") (term "1,2,0"))
                                                   (rule "mul_literals" (formula "54") (term "1,1,2,0"))
                                                   (rule "add_zero_right" (formula "54") (term "1,2,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "54") (term "0,2,0"))
                                                   (rule "add_zero_right" (formula "54") (term "0,0,2,0"))
                                                   (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,2,0"))
                                                   (rule "applyEqRigid" (formula "55") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "55") (term "0,0,0,0,1,0") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "55") (term "1,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "55") (term "1,1,0,0,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "55") (term "1,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "55") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,0,1,0"))
                                                   (rule "applyEqRigid" (formula "55") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "55") (term "1,1,0,1,0") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "55") (term "1,1,1,0,1,0"))
                                                   (rule "mul_literals" (formula "55") (term "1,1,1,1,0,1,0"))
                                                   (rule "add_zero_right" (formula "55") (term "1,1,1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,1,0,1,0"))
                                                   (rule "add_zero_right" (formula "55") (term "0,0,1,1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,1,0,1,0"))
                                                   (rule "applyEqRigid" (formula "54") (term "0,1,2,0,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "54") (term "1,2,0,0") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "54") (term "1,1,2,0,0"))
                                                   (rule "mul_literals" (formula "54") (term "1,1,1,2,0,0"))
                                                   (rule "add_zero_right" (formula "54") (term "1,1,2,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "54") (term "0,1,2,0,0"))
                                                   (rule "add_zero_right" (formula "54") (term "0,0,1,2,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,2,0,0"))
                                                   (rule "applyEq" (formula "55") (term "0,1,0,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "55") (term "1,0,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "55") (term "1,1,0,0"))
                                                   (rule "times_zero_2" (formula "55") (term "1,1,1,0,0"))
                                                   (rule "add_zero_right" (formula "55") (term "1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0"))
                                                   (rule "add_zero_right" (formula "55") (term "0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0"))
                                                   (rule "replace_known_left" (formula "55") (term "0,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                   (rule "applyEq" (formula "60") (term "0,1,1,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "60") (term "1,1,1,1,0"))
                                                   (rule "mul_literals" (formula "60") (term "1,1,1,1,1,0"))
                                                   (rule "add_zero_right" (formula "60") (term "1,1,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,1,0"))
                                                   (rule "add_zero_right" (formula "60") (term "0,0,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,1,0"))
                                                   (rule "replace_known_left" (formula "60") (term "0,1,1,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "60"))
                                                   (rule "applyEq" (formula "59") (term "0,0,0,0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "59") (term "0,0,0,1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "59") (term "1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "59") (term "1,1,0,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "59") (term "1,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "59") (term "0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "replace_known_left" (formula "59") (term "0,0,0,0,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "59"))
                                                   (rule "applyEq" (formula "32") (term "0,1,0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "32") (term "1,0,1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "32") (term "1,1,0,1,0"))
                                                   (rule "times_zero_2" (formula "32") (term "1,1,1,0,1,0"))
                                                   (rule "add_zero_right" (formula "32") (term "1,1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,0,1,0"))
                                                   (rule "add_zero_right" (formula "32") (term "0,0,1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,1,0"))
                                                   (rule "applyEqRigid" (formula "35") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "35") (term "1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "35") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "35") (term "1,1,1,0"))
                                                   (rule "add_zero_right" (formula "35") (term "1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0"))
                                                   (rule "applyEqRigid" (formula "57") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "57") (term "1,0") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "57") (term "1,1,0"))
                                                   (rule "times_zero_2" (formula "57") (term "1,1,1,0"))
                                                   (rule "add_zero_right" (formula "57") (term "1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,0"))
                                                   (rule "add_zero_right" (formula "57") (term "0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0"))
                                                   (rule "applyEq" (formula "39") (term "0,1,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "39") (term "1,1,0") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "39") (term "1,1,1,0"))
                                                   (rule "times_zero_2" (formula "39") (term "1,1,1,1,0"))
                                                   (rule "add_zero_right" (formula "39") (term "1,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,1,0"))
                                                   (rule "add_zero_right" (formula "39") (term "0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,1,0"))
                                                   (rule "applyEqRigid" (formula "53") (term "0,0,0,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "53") (term "0,0,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "53") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "53") (term "1,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "53") (term "1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,0"))
                                                   (rule "add_zero_right" (formula "53") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                                   (rule "applyEqRigid" (formula "37") (term "0,2,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "37") (term "2,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "37") (term "1,2,0"))
                                                   (rule "mul_literals" (formula "37") (term "1,1,2,0"))
                                                   (rule "add_zero_right" (formula "37") (term "1,2,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "37") (term "0,2,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,2,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,2,0"))
                                                   (rule "applyEqRigid" (formula "37") (term "0,1,2,0,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "37") (term "1,2,0,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "37") (term "1,1,2,0,0"))
                                                   (rule "mul_literals" (formula "37") (term "1,1,1,2,0,0"))
                                                   (rule "add_zero_right" (formula "37") (term "1,1,2,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,2,0,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,1,2,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,2,0,0"))
                                                   (rule "applyEqRigid" (formula "53") (term "0,1,0,1") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "53") (term "1,0,1") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "53") (term "1,1,0,1"))
                                                   (rule "mul_literals" (formula "53") (term "1,1,1,0,1"))
                                                   (rule "add_zero_right" (formula "53") (term "1,1,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "53") (term "0,1,0,1"))
                                                   (rule "add_zero_right" (formula "53") (term "0,0,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,1"))
                                                   (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "58") (term "1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "58") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "58") (term "1,1,1,0"))
                                                   (rule "add_zero_right" (formula "58") (term "1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,0"))
                                                   (rule "add_zero_right" (formula "58") (term "0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0"))
                                                   (rule "applyEqRigid" (formula "32") (term "0,0,1,0,0,0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "32") (term "0,1,0,0,0,1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "32") (term "1,0,1,0,0,0,1,0"))
                                                   (rule "times_zero_2" (formula "32") (term "1,1,0,1,0,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "32") (term "1,0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0,0,0,1,0"))
                                                   (rule "applyEq" (formula "56") (term "0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "56") (term "0,1,0,0,0,0,0,0,1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "56") (term "1,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "56") (term "1,1,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "56") (term "1,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "56") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "applyEq" (formula "56") (term "0,0,1,0,0,1,1,0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "56") (term "0,1,0,0,1,1,0,1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "56") (term "1,0,1,0,0,1,1,0,1,0"))
                                                   (rule "mul_literals" (formula "56") (term "1,1,0,1,0,0,1,1,0,1,0"))
                                                   (rule "add_zero_right" (formula "56") (term "1,0,1,0,0,1,1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,1,0,0,1,1,0,1,0"))
                                                   (rule "add_zero_right" (formula "56") (term "0,0,0,1,0,0,1,1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0,0,1,1,0,1,0"))
                                                   (rule "applyEq" (formula "36") (term "0,0,1,0,0,1,0,0,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,0,1,0,0,0") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "36") (term "1,1,0,1,0,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,0,1,0,0,0"))
                                                   (rule "replace_known_left" (formula "36") (term "0,1,0,0,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "36"))
                                                   (rule "applyEq" (formula "56") (term "0,1,0,0,0,0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "56") (term "1,0,0,0,0,1,0") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "56") (term "1,1,0,0,0,0,1,0"))
                                                   (rule "times_zero_2" (formula "56") (term "1,1,1,0,0,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "56") (term "1,1,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "56") (term "0,0,1,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,0,0,1,0"))
                                                   (rule "applyEqRigid" (formula "56") (term "0,1,1,1,0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "56") (term "1,1,1,0,1,0") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "56") (term "1,1,1,1,0,1,0"))
                                                   (rule "times_zero_2" (formula "56") (term "1,1,1,1,1,0,1,0"))
                                                   (rule "add_zero_right" (formula "56") (term "1,1,1,1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,1,1,0,1,0"))
                                                   (rule "add_zero_right" (formula "56") (term "0,0,1,1,1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,1,1,0,1,0"))
                                                   (rule "applyEqRigid" (formula "33") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "33") (term "1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "33") (term "1,1,0"))
                                                   (rule "times_zero_2" (formula "33") (term "1,1,1,0"))
                                                   (rule "add_zero_right" (formula "33") (term "1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "33") (term "0,1,0"))
                                                   (rule "add_zero_right" (formula "33") (term "0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0"))
                                                   (rule "applyEqRigid" (formula "52") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "52") (term "0,1,0,0,1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "52") (term "1,0,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "52") (term "1,1,0,1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "52") (term "1,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "52") (term "0,0,0,1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,0,0,1,0"))
                                                   (rule "applyEq" (formula "38") (term "0,1,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "38") (term "1,1,0") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "38") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,1,1,1,0"))
                                                   (rule "add_zero_right" (formula "38") (term "1,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,1,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,1,0"))
                                                   (rule "applyEqRigid" (formula "56") (term "0,1,1,0,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "56") (term "1,1,0,0") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "56") (term "1,1,1,0,0"))
                                                   (rule "times_zero_2" (formula "56") (term "1,1,1,1,0,0"))
                                                   (rule "add_zero_right" (formula "56") (term "1,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "56") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,1,0"))
                                                   (rule "add_zero_right" (formula "56") (term "0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "56") (term "0"))
                                                   (rule "applyEq" (formula "52") (term "0,1,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "52") (term "1,1,0") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "52") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "52") (term "1,1,1,1,0"))
                                                   (rule "add_zero_right" (formula "52") (term "1,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "52") (term "0,1,1,0"))
                                                   (rule "add_zero_right" (formula "52") (term "0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,1,0"))
                                                   (rule "applyEqRigid" (formula "38") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "38") (term "0,1,0,0,1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "38") (term "1,0,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,1,0,1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "38") (term "1,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0,0,1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,0,0,1,0"))
                                                   (rule "applyEqRigid" (formula "33") (term "0,0,1,0,0,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "33") (term "0,1,0,0,0") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "33") (term "1,0,1,0,0,0"))
                                                   (rule "times_zero_2" (formula "33") (term "1,1,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "33") (term "1,0,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "33") (term "0,0,0,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,1,0,0,0"))
                                                   (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "pullOutSelect" (formula "77") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "replaceKnownSelect_taclet000000_13" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet000000_14" (formula "1") (term "2,0"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "78") (term "1,0") (ifseqformula "1"))
                                                   (rule "replaceKnownSelect_taclet00000000_18" (formula "78") (term "0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00000000_19" (formula "78") (term "0"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "applyEq" (formula "57") (term "0,1,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "57") (term "1,1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "57") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "57") (term "1,1,1,1,0"))
                                                   (rule "add_zero_right" (formula "57") (term "1,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,1,0"))
                                                   (rule "add_zero_right" (formula "57") (term "0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,1,0"))
                                                   (rule "applyEqRigid" (formula "35") (term "0,0,1,0,0,0,1,0,0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "35") (term "0,1,0,0,0,1,0,0,1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "35") (term "1,0,1,0,0,0,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "35") (term "1,1,0,1,0,0,0,1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "35") (term "1,0,1,0,0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,1,0,0,0,1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,0,0,1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                                   (rule "applyEq" (formula "35") (term "0,1,0,1,0,0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "35") (term "1,0,1,0,0,1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "35") (term "1,1,0,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "35") (term "1,1,1,0,1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "35") (term "1,1,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0,1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0,1,0,1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,1,0,0,1,0"))
                                                   (rule "replace_known_left" (formula "35") (term "0,1,0") (ifseqformula "32"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "applyEqRigid" (formula "37") (term "0,0,1,0,0,0,1,0,0,2,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,0,0,1,0,0,2,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0,0,1,0,0,2,0"))
                                                   (rule "mul_literals" (formula "37") (term "1,1,0,1,0,0,0,1,0,0,2,0"))
                                                   (rule "add_zero_right" (formula "37") (term "1,0,1,0,0,0,1,0,0,2,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0,0,1,0,0,2,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0,0,1,0,0,2,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0,0,0,1,0,0,2,0"))
                                                   (rule "applyEq" (formula "54") (term "0,0,1,0,0,1,2,0,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "54") (term "0,1,0,0,1,2,0,0") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "54") (term "1,0,1,0,0,1,2,0,0"))
                                                   (rule "mul_literals" (formula "54") (term "1,1,0,1,0,0,1,2,0,0"))
                                                   (rule "add_zero_right" (formula "54") (term "1,0,1,0,0,1,2,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,1,0,0,1,2,0,0"))
                                                   (rule "add_zero_right" (formula "54") (term "0,0,0,1,0,0,1,2,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,1,0,0,1,2,0,0"))
                                                   (rule "applyEq" (formula "53") (term "0,1,1,0,0,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "53") (term "1,1,0,0,0") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "53") (term "1,1,1,0,0,0"))
                                                   (rule "times_zero_2" (formula "53") (term "1,1,1,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "53") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "53") (term "0,1,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "53") (term "0,0,1,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,1,0,0,0"))
                                                   (rule "applyEqRigid" (formula "55") (term "0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "55") (term "0,1,0,0,0,0,0,0,1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "55") (term "1,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "times_zero_2" (formula "55") (term "1,1,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "55") (term "1,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "55") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "applyEqRigid" (formula "37") (term "0,1,1,1,2,0,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "37") (term "1,1,1,2,0,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "37") (term "1,1,1,1,2,0,0"))
                                                   (rule "mul_literals" (formula "37") (term "1,1,1,1,1,2,0,0"))
                                                   (rule "add_zero_right" (formula "37") (term "1,1,1,1,2,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,1,1,2,0,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,1,1,1,2,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,1,1,2,0,0"))
                                                   (rule "applyEqRigid" (formula "37") (term "0,0,1,0,0,1,1,2,0,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,0,1,1,2,0,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0,1,1,2,0,0"))
                                                   (rule "times_zero_2" (formula "37") (term "1,1,0,1,0,0,1,1,2,0,0"))
                                                   (rule "add_zero_right" (formula "37") (term "1,0,1,0,0,1,1,2,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0,1,1,2,0,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0,1,1,2,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0,0,1,1,2,0,0"))
                                                   (rule "applyEqRigid" (formula "54") (term "0,1,2,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "54") (term "1,2,0") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "54") (term "1,1,2,0"))
                                                   (rule "mul_literals" (formula "54") (term "1,1,1,2,0"))
                                                   (rule "add_zero_right" (formula "54") (term "1,1,2,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "54") (term "0,1,2,0"))
                                                   (rule "add_zero_right" (formula "54") (term "0,0,1,2,0"))
                                                   (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,2,0"))
                                                   (rule "applyEqRigid" (formula "37") (term "0,1,1,2,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "37") (term "1,1,2,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "37") (term "1,1,1,2,0"))
                                                   (rule "mul_literals" (formula "37") (term "1,1,1,1,2,0"))
                                                   (rule "add_zero_right" (formula "37") (term "1,1,1,2,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,1,2,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,1,1,2,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,1,2,0"))
                                                   (rule "applyEq" (formula "53") (term "0,0,1,0,0,1,0,0,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "53") (term "0,1,0,0,1,0,0,0") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "53") (term "1,0,1,0,0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "53") (term "1,1,0,1,0,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "53") (term "1,0,1,0,0,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,1,0,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "53") (term "0,0,0,1,0,0,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,0,0,1,0,0,0"))
                                                   (rule "applyEq" (formula "55") (term "0,1,0,0,0,0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "55") (term "1,0,0,0,0,1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "55") (term "1,1,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "55") (term "1,1,1,0,0,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "55") (term "1,1,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "55") (term "0,0,1,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0,0,0,1,0"))
                                                   (rule "applyEq" (formula "53") (term "0,0,1,0,0,0,1,0,0,0,0,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "53") (term "0,1,0,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "53") (term "1,0,1,0,0,0,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "53") (term "1,1,0,1,0,0,0,1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "53") (term "1,0,1,0,0,0,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,1,0,0,0,1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "53") (term "0,0,0,1,0,0,0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,1,0,0,0,1,0,0,0,0,0"))
                                                   (rule "applyEq" (formula "53") (term "0,1,0,1,0,0,0,0,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "53") (term "1,0,1,0,0,0,0,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "53") (term "1,1,0,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "53") (term "1,1,1,0,1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "53") (term "1,1,0,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "53") (term "0,1,0,1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "53") (term "0,0,1,0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,1,0,0,0,0,0"))
                                                   (rule "applyEq" (formula "54") (term "0,1,1,2,0,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "54") (term "1,1,2,0,0") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "54") (term "1,1,1,2,0,0"))
                                                   (rule "times_zero_2" (formula "54") (term "1,1,1,1,2,0,0"))
                                                   (rule "add_zero_right" (formula "54") (term "1,1,1,2,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "54") (term "0,1,1,2,0,0"))
                                                   (rule "add_zero_right" (formula "54") (term "0,0,1,1,2,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,1,2,0,0"))
                                                   (rule "applyEqRigid" (formula "32") (term "0,1,0,1,0,0,1,0,1,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "32") (term "1,0,1,0,0,1,0,1,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "32") (term "1,1,0,1,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "32") (term "1,1,1,0,1,0,0,1,0,1,0"))
                                                   (rule "add_zero_right" (formula "32") (term "1,1,0,1,0,0,1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,0,1,0,0,1,0,1,0"))
                                                   (rule "add_zero_right" (formula "32") (term "0,0,1,0,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,1,0,0,1,0,1,0"))
                                                   (rule "applyEq" (formula "54") (term "0,0,1,0,0,2,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "54") (term "0,1,0,0,2,0") (ifseqformula "37"))
                                                   (rule "polySimp_elimSub" (formula "54") (term "1,0,1,0,0,2,0"))
                                                   (rule "mul_literals" (formula "54") (term "1,1,0,1,0,0,2,0"))
                                                   (rule "add_zero_right" (formula "54") (term "1,0,1,0,0,2,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,1,0,0,2,0"))
                                                   (rule "add_zero_right" (formula "54") (term "0,0,0,1,0,0,2,0"))
                                                   (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,1,0,0,2,0"))
                                                   (rule "applyEq" (formula "37") (term "0,1,0,1,0,0,1,2,0,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "37") (term "1,0,1,0,0,1,2,0,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "37") (term "1,1,0,1,0,0,1,2,0,0"))
                                                   (rule "mul_literals" (formula "37") (term "1,1,1,0,1,0,0,1,2,0,0"))
                                                   (rule "add_zero_right" (formula "37") (term "1,1,0,1,0,0,1,2,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0,1,0,0,1,2,0,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,1,0,1,0,0,1,2,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,1,0,0,1,2,0,0"))
                                                   (rule "applyEq" (formula "37") (term "0,0,1,0,0,1,2,0") (ifseqformula "4"))
                                                   (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,0,1,2,0") (ifseqformula "54"))
                                                   (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0,1,2,0"))
                                                   (rule "mul_literals" (formula "37") (term "1,1,0,1,0,0,1,2,0"))
                                                   (rule "add_zero_right" (formula "37") (term "1,0,1,0,0,1,2,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0,1,2,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0,1,2,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0,0,1,2,0"))
                                                   (rule "ifthenelse_split" (formula "37") (term "1,1,1,1,0,1,0,0,1,2,0"))
                                                   (branch " 1 + de.polyas.core3.open.cred.CredTool.polyasVals.seq@heapAtPre_B«anonHeapFunction».length * -1 ≤ 0 TRUE"
                                                      (rule "replace_known_left" (formula "38") (term "0,1,1,1,1,1,1,1,0,1,0,0,1,1,0,1,0,0,1,2,0,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")))
                                                      (rule "replace_known_left" (formula "57") (term "0,1,0,1,0,0,1,1,0,1,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")))
                                                      (rule "replace_known_left" (formula "59") (term "0,1,1,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "37")) (ifInst ""  (formula "37")))
                                                      (rule "replace_known_left" (formula "55") (term "0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,1,0,1,0,0,0,1,0,0,2,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")))
                                                      (rule "replace_known_left" (formula "56") (term "0,1,0,1,0,0,1,0,1,0,0,1,0,0,0,0,1,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")))
                                                      (rule "replace_known_left" (formula "32") (term "0,1,1,1,0,1,0,0,1,0,1,0,0,1,0,1,0") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "replace_known_left" (formula "38") (term "0,0,1,0,0,1,1,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")))
                                                      (rule "replace_known_left" (formula "59") (term "0,0,0,0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "59"))
                                                      (rule "replace_known_left" (formula "52") (term "0,1,0,1,0,0,1,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")))
                                                      (rule "replace_known_left" (formula "60") (term "0,1,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "36")))
                                                      (rule "replace_known_left" (formula "57") (term "0,0,1,0,0,1,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")))
                                                      (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")))
                                                      (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "replace_known_left" (formula "39") (term "0,1,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "replace_known_left" (formula "53") (term "0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")))
                                                      (rule "replace_known_left" (formula "35") (term "0,2,0,1,1") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "36")))
                                                      (rule "applyEqRigid" (formula "35") (term "0,1,0,0,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "35") (term "1,0,0,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "35") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "35") (term "1,1,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "35") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "35") (term "0,0,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0"))
                                                      (rule "replace_known_left" (formula "35") (term "0,1,0,0,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "applyEq" (formula "39") (term "0,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "39") (term "1,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "39") (term "1,1,1,0"))
                                                      (rule "mul_literals" (formula "39") (term "1,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "39") (term "1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,1,0"))
                                                      (rule "add_zero_right" (formula "39") (term "0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,1,0"))
                                                      (rule "replace_known_left" (formula "39") (term "0,1,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "applyEqRigid" (formula "56") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "56") (term "1,1,0,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "56") (term "1,1,1,0,1,0"))
                                                      (rule "mul_literals" (formula "56") (term "1,1,1,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "56") (term "1,1,1,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "56") (term "0,0,1,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,1,0,1,0"))
                                                      (rule "replace_known_left" (formula "56") (term "0,1,1,0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "56"))
                                                      (rule "applyEqRigid" (formula "55") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "55") (term "1,1,0,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "55") (term "1,1,1,0,1,0"))
                                                      (rule "mul_literals" (formula "55") (term "1,1,1,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "55") (term "1,1,1,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "55") (term "0,0,1,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,1,0,1,0"))
                                                      (rule "replace_known_left" (formula "55") (term "0,1,1,0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "55"))
                                                      (rule "applyEqRigid" (formula "32") (term "0,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "32") (term "0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "32") (term "1,0"))
                                                      (rule "mul_literals" (formula "32") (term "1,1,0"))
                                                      (rule "add_zero_right" (formula "32") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0"))
                                                      (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                                      (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "applyEq" (formula "53") (term "0,1,0,1") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "53") (term "1,0,1") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "53") (term "1,1,0,1"))
                                                      (rule "mul_literals" (formula "53") (term "1,1,1,0,1"))
                                                      (rule "add_zero_right" (formula "53") (term "1,1,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "53") (term "0,1,0,1"))
                                                      (rule "add_zero_right" (formula "53") (term "0,0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,1"))
                                                      (rule "replace_known_left" (formula "53") (term "0,1,0,1") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "applyEqRigid" (formula "57") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "57") (term "1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "57") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "57") (term "1,1,1,0"))
                                                      (rule "add_zero_right" (formula "57") (term "1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,0"))
                                                      (rule "add_zero_right" (formula "57") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0"))
                                                      (rule "replace_known_left" (formula "57") (term "0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "57"))
                                                      (rule "applyEq" (formula "52") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "52") (term "1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "52") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "52") (term "1,1,1,0"))
                                                      (rule "add_zero_right" (formula "52") (term "1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "52") (term "0,1,0"))
                                                      (rule "add_zero_right" (formula "52") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0"))
                                                      (rule "replace_known_left" (formula "52") (term "0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "applyEqRigid" (formula "60") (term "0,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "60") (term "1,1,1,0"))
                                                      (rule "mul_literals" (formula "60") (term "1,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "60") (term "1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,0"))
                                                      (rule "add_zero_right" (formula "60") (term "0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,0"))
                                                      (rule "replace_known_left" (formula "60") (term "0,1,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "60"))
                                                      (rule "applyEqRigid" (formula "37") (term "0,2,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "37") (term "2,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "37") (term "1,2,0"))
                                                      (rule "mul_literals" (formula "37") (term "1,1,2,0"))
                                                      (rule "add_zero_right" (formula "37") (term "1,2,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "37") (term "0,2,0"))
                                                      (rule "add_zero_right" (formula "37") (term "0,0,2,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,2,0"))
                                                      (rule "replace_known_left" (formula "37") (term "0,2,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "34") (term "1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "34") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "34") (term "1,1,1,0"))
                                                      (rule "add_zero_right" (formula "34") (term "1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0"))
                                                      (rule "add_zero_right" (formula "34") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                                                      (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "applyEq" (formula "38") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "38") (term "1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "38") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "38") (term "1,1,1,0"))
                                                      (rule "add_zero_right" (formula "38") (term "1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,0"))
                                                      (rule "add_zero_right" (formula "38") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                                                      (rule "replace_known_left" (formula "38") (term "0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "38"))
                                                      (rule "applyEq" (formula "54") (term "0,2,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "54") (term "2,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "54") (term "1,2,0"))
                                                      (rule "mul_literals" (formula "54") (term "1,1,2,0"))
                                                      (rule "add_zero_right" (formula "54") (term "1,2,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "0,2,0"))
                                                      (rule "add_zero_right" (formula "54") (term "0,0,2,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,2,0"))
                                                      (rule "replace_known_left" (formula "54") (term "0,2,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "applyEqRigid" (formula "36") (term "0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "36") (term "1,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "36") (term "1,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0"))
                                                      (rule "applyEq" (formula "77") (term "0,0") (ifseqformula "46"))
                                                      (rule "eqSymm" (formula "77"))
                                                      (rule "applyEqRigid" (formula "59") (term "0,1,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "59") (term "1,1,1,1,0"))
                                                      (rule "mul_literals" (formula "59") (term "1,1,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "1,1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "0,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,1,0"))
                                                      (rule "applyEq" (formula "59") (term "0,0,0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "59") (term "0,0,0,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "59") (term "1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "59") (term "1,1,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "1,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                      (rule "applyEqRigid" (formula "58") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "58") (term "1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "58") (term "1,1,0"))
                                                      (rule "times_zero_2" (formula "58") (term "1,1,1,0"))
                                                      (rule "add_zero_right" (formula "58") (term "1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,0"))
                                                      (rule "add_zero_right" (formula "58") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0"))
                                                      (rule "applyEq" (formula "59") (term "0,1,0,0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "59") (term "1,0,0,0,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "59") (term "1,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "59") (term "1,1,1,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "1,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "0,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,0,1,0"))
                                                      (rule "applyEqRigid" (formula "59") (term "0,1,1,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,1,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "59") (term "1,1,1,1,1,0"))
                                                      (rule "times_zero_2" (formula "59") (term "1,1,1,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "1,1,1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "0,0,1,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,1,1,0"))
                                                      (rule "applyEqRigid" (formula "56") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "56") (term "0,0,0,0,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "56") (term "1,0,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "56") (term "1,1,0,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "56") (term "1,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "56") (term "0,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,0,1,0"))
                                                      (rule "applyEqRigid" (formula "55") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "55") (term "0,0,0,0,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "55") (term "1,0,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "55") (term "1,1,0,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "55") (term "1,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "55") (term "0,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,0,1,0"))
                                                      (rule "applyEqRigid" (formula "56") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "56") (term "1,1,0,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "56") (term "1,1,1,0,1,0"))
                                                      (rule "mul_literals" (formula "56") (term "1,1,1,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "56") (term "1,1,1,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "56") (term "0,0,1,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,1,0,1,0"))
                                                      (rule "applyEq" (formula "60") (term "0,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "60") (term "1,1,1,0"))
                                                      (rule "times_zero_2" (formula "60") (term "1,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "60") (term "1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,0"))
                                                      (rule "add_zero_right" (formula "60") (term "0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,0"))
                                                      (rule "applyEqRigid" (formula "55") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "55") (term "1,1,0,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "55") (term "1,1,1,0,1,0"))
                                                      (rule "times_zero_2" (formula "55") (term "1,1,1,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "55") (term "1,1,1,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "55") (term "0,0,1,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,1,0,1,0"))
                                                      (rule "applyEq" (formula "37") (term "0,2,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "37") (term "2,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "37") (term "1,2,0"))
                                                      (rule "times_zero_2" (formula "37") (term "1,1,2,0"))
                                                      (rule "add_zero_right" (formula "37") (term "1,2,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "37") (term "0,2,0"))
                                                      (rule "add_zero_right" (formula "37") (term "0,0,2,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,2,0"))
                                                      (rule "applyEq" (formula "77") (term "0,1,1") (ifseqformula "6"))
                                                      (rule "applyEqRigid" (formula "55") (term "0,1,0,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "55") (term "1,0,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "55") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "55") (term "1,1,1,0,0"))
                                                      (rule "add_zero_right" (formula "55") (term "1,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0"))
                                                      (rule "add_zero_right" (formula "55") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0"))
                                                      (rule "replace_known_left" (formula "55") (term "0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "55"))
                                                      (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                      (rule "applyEqRigid" (formula "36") (term "0,1,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "36") (term "1,0,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "36") (term "1,1,0,1,0"))
                                                      (rule "times_zero_2" (formula "36") (term "1,1,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "36") (term "1,1,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,1,0"))
                                                      (rule "applyEq" (formula "59") (term "0,0,1,0,0,1,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "59") (term "0,1,0,0,1,1,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0,0,1,1,1,0"))
                                                      (rule "mul_literals" (formula "59") (term "1,1,0,1,0,0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0,0,1,1,1,0"))
                                                      (rule "applyEqRigid" (formula "56") (term "0,1,0,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "56") (term "1,0,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "56") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "56") (term "1,1,1,0,0"))
                                                      (rule "add_zero_right" (formula "56") (term "1,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "56") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,0"))
                                                      (rule "add_zero_right" (formula "56") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "56") (term "0"))
                                                      (rule "applyEq" (formula "36") (term "0,0,1,0,0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,0,0,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "36") (term "1,1,0,1,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,0,0,1,0"))
                                                      (rule "replace_known_left" (formula "59") (term "0,1,1,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "59"))
                                                      (rule "applyEq" (formula "54") (term "0,1,2,0,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "54") (term "1,2,0,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "54") (term "1,1,2,0,0"))
                                                      (rule "times_zero_2" (formula "54") (term "1,1,1,2,0,0"))
                                                      (rule "add_zero_right" (formula "54") (term "1,1,2,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "0,1,2,0,0"))
                                                      (rule "add_zero_right" (formula "54") (term "0,0,1,2,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,2,0,0"))
                                                      (rule "applyEqRigid" (formula "52") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "52") (term "1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "52") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "52") (term "1,1,1,0"))
                                                      (rule "add_zero_right" (formula "52") (term "1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "52") (term "0,1,0"))
                                                      (rule "add_zero_right" (formula "52") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0"))
                                                      (rule "applyEqRigid" (formula "35") (term "0,2,0,1,1") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "35") (term "2,0,1,1") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "35") (term "1,2,0,1,1"))
                                                      (rule "mul_literals" (formula "35") (term "1,1,2,0,1,1"))
                                                      (rule "add_zero_right" (formula "35") (term "1,2,0,1,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "0,2,0,1,1"))
                                                      (rule "add_zero_right" (formula "35") (term "0,0,2,0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,2,0,1,1"))
                                                      (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "57") (term "1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "57") (term "1,1,0"))
                                                      (rule "times_zero_2" (formula "57") (term "1,1,1,0"))
                                                      (rule "add_zero_right" (formula "57") (term "1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,0"))
                                                      (rule "add_zero_right" (formula "57") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0"))
                                                      (rule "applyEq" (formula "53") (term "0,0,0,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "53") (term "0,0,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "53") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "53") (term "1,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "53") (term "1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,0"))
                                                      (rule "add_zero_right" (formula "53") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                                                      (rule "applyEqRigid" (formula "39") (term "0,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "39") (term "1,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "39") (term "1,1,1,0"))
                                                      (rule "times_zero_2" (formula "39") (term "1,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "39") (term "1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,1,0"))
                                                      (rule "add_zero_right" (formula "39") (term "0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,1,0"))
                                                      (rule "applyEq" (formula "35") (term "0,0,1,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "35") (term "0,1,0,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "35") (term "1,0,1,0,1,0"))
                                                      (rule "mul_literals" (formula "35") (term "1,1,0,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "35") (term "1,0,1,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0,1,0"))
                                                      (rule "applyEqRigid" (formula "53") (term "0,1,0,1") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "53") (term "1,0,1") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "53") (term "1,1,0,1"))
                                                      (rule "mul_literals" (formula "53") (term "1,1,1,0,1"))
                                                      (rule "add_zero_right" (formula "53") (term "1,1,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "53") (term "0,1,0,1"))
                                                      (rule "add_zero_right" (formula "53") (term "0,0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,1"))
                                                      (rule "applyEqRigid" (formula "37") (term "0,1,2,0,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "37") (term "1,2,0,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "37") (term "1,1,2,0,0"))
                                                      (rule "times_zero_2" (formula "37") (term "1,1,1,2,0,0"))
                                                      (rule "add_zero_right" (formula "37") (term "1,1,2,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,2,0,0"))
                                                      (rule "add_zero_right" (formula "37") (term "0,0,1,2,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,2,0,0"))
                                                      (rule "applyEqRigid" (formula "54") (term "0,2,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "54") (term "2,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "54") (term "1,2,0"))
                                                      (rule "mul_literals" (formula "54") (term "1,1,2,0"))
                                                      (rule "add_zero_right" (formula "54") (term "1,2,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "0,2,0"))
                                                      (rule "add_zero_right" (formula "54") (term "0,0,2,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,2,0"))
                                                      (rule "applyEqRigid" (formula "35") (term "0,1,0,0,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "35") (term "1,0,0,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "35") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "35") (term "1,1,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "35") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "35") (term "0,0,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0"))
                                                      (rule "applyEqRigid" (formula "34") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "34") (term "1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "34") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "34") (term "1,1,1,0"))
                                                      (rule "add_zero_right" (formula "34") (term "1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0"))
                                                      (rule "add_zero_right" (formula "34") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                                                      (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "applyEqRigid" (formula "38") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "38") (term "1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "38") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "38") (term "1,1,1,0"))
                                                      (rule "add_zero_right" (formula "38") (term "1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,0"))
                                                      (rule "add_zero_right" (formula "38") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                                                      (rule "applyEqRigid" (formula "58") (term "0,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "58") (term "1,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "58") (term "1,1,1,0"))
                                                      (rule "times_zero_2" (formula "58") (term "1,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "58") (term "1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,1,0"))
                                                      (rule "add_zero_right" (formula "58") (term "0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,1,0"))
                                                      (rule "applyEqRigid" (formula "58") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "58") (term "0,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "58") (term "1,0,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "58") (term "1,1,0,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "58") (term "1,0,1,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "58") (term "0,0,0,1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,1,0,0,1,0"))
                                                      (rule "replace_known_left" (formula "58") (term "0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "32") (term "0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "32") (term "1,0"))
                                                      (rule "times_zero_2" (formula "32") (term "1,1,0"))
                                                      (rule "add_zero_right" (formula "32") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0"))
                                                      (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                                      (rule "applyEq" (formula "32") (term "0,0,1,0,0,0,1,0,0,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "32") (term "0,1,0,0,0,1,0,0,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "32") (term "1,0,1,0,0,0,1,0,0,0"))
                                                      (rule "times_zero_2" (formula "32") (term "1,1,0,1,0,0,0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "32") (term "1,0,1,0,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0,0,0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,0,0,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0,0,0,1,0,0,0"))
                                                      (rule "replace_known_left" (formula "32") (term "0,0,1,0,0,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "applyEq" (formula "58") (term "0,1,0,1,0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "58") (term "1,0,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "58") (term "1,1,0,1,0,0,1,0"))
                                                      (rule "times_zero_2" (formula "58") (term "1,1,1,0,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "58") (term "1,1,0,1,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,0,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "58") (term "0,0,1,0,1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "58") (term "0,1,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "58") (term "1,1,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "58") (term "1,1,1,1,0"))
                                                      (rule "mul_literals" (formula "58") (term "1,1,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "58") (term "1,1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "58") (term "0,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,1,1,0"))
                                                      (rule "replace_known_left" (formula "58") (term "0,1,1,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "applyEqRigid" (formula "55") (term "0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "55") (term "0,1,0,0,0,0,0,0,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "55") (term "1,0,1,0,0,0,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "55") (term "1,1,0,1,0,0,0,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "55") (term "1,0,1,0,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,1,0,0,0,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "55") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,1,0,0,0,0,0,0,1,0"))
                                                      (rule "replace_known_left" (formula "55") (term "0,0,0,0,0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "55"))
                                                      (rule "applyEqRigid" (formula "38") (term "0,0,1,0,0,0,1,0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "38") (term "0,1,0,0,0,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "38") (term "1,0,1,0,0,0,1,0,0,1,0"))
                                                      (rule "times_zero_2" (formula "38") (term "1,1,0,1,0,0,0,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "38") (term "1,0,1,0,0,0,1,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,1,0,0,0,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "38") (term "0,0,0,1,0,0,0,1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                                      (rule "replace_known_left" (formula "38") (term "0,0,1,0,0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "38"))
                                                      (rule "applyEqRigid" (formula "57") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "57") (term "0,1,0,0,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "57") (term "1,0,1,0,0,1,0"))
                                                      (rule "times_zero_2" (formula "57") (term "1,1,0,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "57") (term "1,0,1,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "57") (term "0,0,0,1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,1,0,0,1,0"))
                                                      (rule "replace_known_left" (formula "57") (term "0,0,1,0,0,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "36")))
                                                      (rule "applyEq" (formula "35") (term "0,1,0,1,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "35") (term "1,0,1,0,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "35") (term "1,1,0,1,0,1,0"))
                                                      (rule "mul_literals" (formula "35") (term "1,1,1,0,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "35") (term "1,1,0,1,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "35") (term "0,0,1,0,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,1,0,1,0"))
                                                      (rule "applyEq" (formula "37") (term "0,0,1,0,0,1,2,0,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,0,1,2,0,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0,1,2,0,0"))
                                                      (rule "mul_literals" (formula "37") (term "1,1,0,1,0,0,1,2,0,0"))
                                                      (rule "add_zero_right" (formula "37") (term "1,0,1,0,0,1,2,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0,1,2,0,0"))
                                                      (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0,1,2,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0,0,1,2,0,0"))
                                                      (rule "replace_known_left" (formula "37") (term "0,0,1,0,0,1,2,0,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "36")))
                                                      (rule "applyEqRigid" (formula "53") (term "0,1,1,0,1") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "53") (term "1,1,0,1") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "53") (term "1,1,1,0,1"))
                                                      (rule "mul_literals" (formula "53") (term "1,1,1,1,0,1"))
                                                      (rule "add_zero_right" (formula "53") (term "1,1,1,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "53") (term "0,1,1,0,1"))
                                                      (rule "add_zero_right" (formula "53") (term "0,0,1,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,1,0,1"))
                                                      (rule "replace_known_left" (formula "53") (term "0,1,1,0,1") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "applyEqRigid" (formula "34") (term "0,1,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "34") (term "1,1,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "34") (term "1,1,1,1,0"))
                                                      (rule "mul_literals" (formula "34") (term "1,1,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "34") (term "1,1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "34") (term "0,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,1,1,0"))
                                                      (rule "replace_known_left" (formula "34") (term "0,1,1,1,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "applyEqRigid" (formula "36") (term "0,1,0,1,0,0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "36") (term "1,0,1,0,0,0,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "36") (term "1,1,0,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "36") (term "1,1,1,0,1,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "36") (term "1,1,0,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,1,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0,1,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,1,0,0,0,1,0"))
                                                      (rule "applyEqRigid" (formula "56") (term "0,0,1,0,0,1,0,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "56") (term "0,1,0,0,1,0,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "56") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "56") (term "1,1,0,1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "56") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "56") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "56") (term "0,0,0,1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0,0,1,0"))
                                                      (rule "applyEqRigid" (formula "54") (term "0,1,1,2,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "54") (term "1,1,2,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "54") (term "1,1,1,2,0"))
                                                      (rule "mul_literals" (formula "54") (term "1,1,1,1,2,0"))
                                                      (rule "add_zero_right" (formula "54") (term "1,1,1,2,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "0,1,1,2,0"))
                                                      (rule "add_zero_right" (formula "54") (term "0,0,1,1,2,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,1,2,0"))
                                                      (rule "applyEq" (formula "54") (term "0,0,1,0,0,0,1,0,0,1,2,0,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "54") (term "0,1,0,0,0,1,0,0,1,2,0,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "54") (term "1,0,1,0,0,0,1,0,0,1,2,0,0"))
                                                      (rule "mul_literals" (formula "54") (term "1,1,0,1,0,0,0,1,0,0,1,2,0,0"))
                                                      (rule "add_zero_right" (formula "54") (term "1,0,1,0,0,0,1,0,0,1,2,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,1,0,0,0,1,0,0,1,2,0,0"))
                                                      (rule "add_zero_right" (formula "54") (term "0,0,0,1,0,0,0,1,0,0,1,2,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,1,0,0,0,1,0,0,1,2,0,0"))
                                                      (rule "applyEq" (formula "59") (term "0,1,1,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,1,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "59") (term "1,1,1,1,1,0"))
                                                      (rule "mul_literals" (formula "59") (term "1,1,1,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "1,1,1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "0,0,1,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,1,1,0"))
                                                      (rule "applyEqRigid" (formula "54") (term "0,1,0,1,0,0,2,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "54") (term "1,0,1,0,0,2,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "54") (term "1,1,0,1,0,0,2,0"))
                                                      (rule "times_zero_2" (formula "54") (term "1,1,1,0,1,0,0,2,0"))
                                                      (rule "add_zero_right" (formula "54") (term "1,1,0,1,0,0,2,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "0,1,0,1,0,0,2,0"))
                                                      (rule "add_zero_right" (formula "54") (term "0,0,1,0,1,0,0,2,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,1,0,0,2,0"))
                                                      (rule "applyEqRigid" (formula "35") (term "0,1,2,0,1,1") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "35") (term "1,2,0,1,1") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "35") (term "1,1,2,0,1,1"))
                                                      (rule "mul_literals" (formula "35") (term "1,1,1,2,0,1,1"))
                                                      (rule "add_zero_right" (formula "35") (term "1,1,2,0,1,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,2,0,1,1"))
                                                      (rule "add_zero_right" (formula "35") (term "0,0,1,2,0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,2,0,1,1"))
                                                      (rule "applyEqRigid" (formula "35") (term "0,0,1,0,0,1,1,0,0,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "35") (term "0,1,0,0,1,1,0,0,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "35") (term "1,0,1,0,0,1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "35") (term "1,1,0,1,0,0,1,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "35") (term "1,0,1,0,0,1,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,1,0,0,1,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,0,1,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0,0,1,1,0,0,0"))
                                                      (rule "applyEq" (formula "35") (term "0,1,1,1,0,0,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "35") (term "1,1,1,0,0,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "35") (term "1,1,1,1,0,0,0"))
                                                      (rule "times_zero_2" (formula "35") (term "1,1,1,1,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "35") (term "1,1,1,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,1,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "35") (term "0,0,1,1,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,1,1,0,0,0"))
                                                      (rule "applyEq" (formula "35") (term "0,0,1,0,0,0,1,0,0,1,0,0,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "35") (term "0,1,0,0,0,1,0,0,1,0,0,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "35") (term "1,0,1,0,0,0,1,0,0,1,0,0,0"))
                                                      (rule "times_zero_2" (formula "35") (term "1,1,0,1,0,0,0,1,0,0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "35") (term "1,0,1,0,0,0,1,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,1,0,0,0,1,0,0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,0,0,1,0,0,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0,0,0,1,0,0,1,0,0,0"))
                                                      (rule "applyEq" (formula "35") (term "0,0,1,0,0,0,1,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "35") (term "0,1,0,0,0,1,0,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "35") (term "1,0,1,0,0,0,1,0,1,0"))
                                                      (rule "mul_literals" (formula "35") (term "1,1,0,1,0,0,0,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "35") (term "1,0,1,0,0,0,1,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,1,0,0,0,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,0,0,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0,0,0,1,0,1,0"))
                                                      (rule "applyEq" (formula "54") (term "0,0,1,0,0,1,2,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "54") (term "0,1,0,0,1,2,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "54") (term "1,0,1,0,0,1,2,0"))
                                                      (rule "times_zero_2" (formula "54") (term "1,1,0,1,0,0,1,2,0"))
                                                      (rule "add_zero_right" (formula "54") (term "1,0,1,0,0,1,2,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,1,0,0,1,2,0"))
                                                      (rule "add_zero_right" (formula "54") (term "0,0,0,1,0,0,1,2,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,1,0,0,1,2,0"))
                                                      (rule "applyEqRigid" (formula "36") (term "0,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,0,1,0,0,0,1,0"))
                                                      (rule "times_zero_2" (formula "36") (term "1,1,0,1,0,0,0,1,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,0,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,0,1,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,0,0,1,0,0,0,1,0"))
                                                      (rule "applyEq" (formula "60") (term "0,1,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "60") (term "1,1,1,1,0"))
                                                      (rule "mul_literals" (formula "60") (term "1,1,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "60") (term "1,1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "60") (term "0,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,1,0"))
                                                      (rule "applyEqRigid" (formula "36") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "36") (term "1,1,0,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "36") (term "1,1,1,0,1,0"))
                                                      (rule "mul_literals" (formula "36") (term "1,1,1,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "36") (term "1,1,1,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0,1,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,1,0,1,0"))
                                                      (rule "applyEq" (formula "54") (term "0,1,1,1,2,0,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "54") (term "1,1,1,2,0,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "54") (term "1,1,1,1,2,0,0"))
                                                      (rule "mul_literals" (formula "54") (term "1,1,1,1,1,2,0,0"))
                                                      (rule "add_zero_right" (formula "54") (term "1,1,1,1,2,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "0,1,1,1,2,0,0"))
                                                      (rule "add_zero_right" (formula "54") (term "0,0,1,1,1,2,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,1,1,2,0,0"))
                                                      (rule "applyEqRigid" (formula "52") (term "0,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "52") (term "1,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "52") (term "1,1,1,0"))
                                                      (rule "mul_literals" (formula "52") (term "1,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "52") (term "1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "52") (term "0,1,1,0"))
                                                      (rule "add_zero_right" (formula "52") (term "0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,1,0"))
                                                      (rule "applyEqRigid" (formula "59") (term "0,0,1,0,0,1,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "59") (term "0,1,0,0,1,1,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0,0,1,1,1,0"))
                                                      (rule "mul_literals" (formula "59") (term "1,1,0,1,0,0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0,0,1,1,1,0"))
                                                      (rule "applyEq" (formula "54") (term "0,0,1,0,0,1,1,2,0,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "54") (term "0,1,0,0,1,1,2,0,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "54") (term "1,0,1,0,0,1,1,2,0,0"))
                                                      (rule "times_zero_2" (formula "54") (term "1,1,0,1,0,0,1,1,2,0,0"))
                                                      (rule "add_zero_right" (formula "54") (term "1,0,1,0,0,1,1,2,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,1,0,0,1,1,2,0,0"))
                                                      (rule "add_zero_right" (formula "54") (term "0,0,0,1,0,0,1,1,2,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,1,0,0,1,1,2,0,0"))
                                                      (rule "applyEq" (formula "54") (term "0,1,0,1,0,0,1,2,0,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "54") (term "1,0,1,0,0,1,2,0,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "54") (term "1,1,0,1,0,0,1,2,0,0"))
                                                      (rule "times_zero_2" (formula "54") (term "1,1,1,0,1,0,0,1,2,0,0"))
                                                      (rule "add_zero_right" (formula "54") (term "1,1,0,1,0,0,1,2,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "0,1,0,1,0,0,1,2,0,0"))
                                                      (rule "add_zero_right" (formula "54") (term "0,0,1,0,1,0,0,1,2,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,1,0,0,1,2,0,0"))
                                                      (rule "applyEq" (formula "59") (term "0,0,1,0,0,1,0,0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "59") (term "0,1,0,0,1,0,0,0,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0,0,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "59") (term "1,1,0,1,0,0,1,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,1,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0,0,1,0,0,0,1,0"))
                                                      (rule "applyEq" (formula "59") (term "0,1,1,0,0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "59") (term "1,1,1,0,0,0,1,0"))
                                                      (rule "times_zero_2" (formula "59") (term "1,1,1,1,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "1,1,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "0,0,1,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,0,0,0,1,0"))
                                                      (rule "applyEq" (formula "60") (term "0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "60") (term "0,1,0,0,1,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "60") (term "1,0,1,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "60") (term "1,1,0,1,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "60") (term "1,0,1,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,1,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "60") (term "0,0,0,1,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1,0,0,1,1,0"))
                                                      (rule "applyEq" (formula "35") (term "0,1,0,1,0,0,1,0,0,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "35") (term "1,0,1,0,0,1,0,0,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "35") (term "1,1,0,1,0,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "35") (term "1,1,1,0,1,0,0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "35") (term "1,1,0,1,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0,1,0,0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "35") (term "0,0,1,0,1,0,0,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,1,0,0,1,0,0,0"))
                                                      (rule "applyEqRigid" (formula "54") (term "0,0,1,0,0,0,1,0,0,2,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "54") (term "0,1,0,0,0,1,0,0,2,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "54") (term "1,0,1,0,0,0,1,0,0,2,0"))
                                                      (rule "mul_literals" (formula "54") (term "1,1,0,1,0,0,0,1,0,0,2,0"))
                                                      (rule "add_zero_right" (formula "54") (term "1,0,1,0,0,0,1,0,0,2,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,1,0,0,0,1,0,0,2,0"))
                                                      (rule "add_zero_right" (formula "54") (term "0,0,0,1,0,0,0,1,0,0,2,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,1,0,0,0,1,0,0,2,0"))
                                                      (rule "applyEqRigid" (formula "39") (term "0,1,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "39") (term "1,1,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "39") (term "1,1,1,1,0"))
                                                      (rule "mul_literals" (formula "39") (term "1,1,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "39") (term "1,1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "39") (term "0,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,1,1,0"))
                                                      (rule "applyEq" (formula "59") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "59") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0,0,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "59") (term "1,1,0,1,0,0,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0,0,0,0,0,1,0"))
                                                      (rule "applyEqRigid" (formula "36") (term "0,0,1,0,0,1,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,0,1,0,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,1,0,1,0"))
                                                      (rule "times_zero_2" (formula "36") (term "1,1,0,1,0,0,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,1,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,0,1,0,1,0"))
                                                      (rule "applyEq" (formula "39") (term "0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "39") (term "0,1,0,0,1,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "39") (term "1,0,1,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "39") (term "1,1,0,1,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "39") (term "1,0,1,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,0,0,1,1,0"))
                                                      (rule "applyEq" (formula "35") (term "0,0,1,0,0,2,0,1,1") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "35") (term "0,1,0,0,2,0,1,1") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "35") (term "1,0,1,0,0,2,0,1,1"))
                                                      (rule "times_zero_2" (formula "35") (term "1,1,0,1,0,0,2,0,1,1"))
                                                      (rule "add_zero_right" (formula "35") (term "1,0,1,0,0,2,0,1,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,1,0,0,2,0,1,1"))
                                                      (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,0,2,0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0,0,2,0,1,1"))
                                                      (rule "applyEqRigid" (formula "52") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "52") (term "0,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "52") (term "1,0,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "52") (term "1,1,0,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "52") (term "1,0,1,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "52") (term "0,0,0,1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,0,0,1,0"))
                                                      (rule "applyEqRigid" (formula "52") (term "0,1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "52") (term "1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "52") (term "1,1,0,1,0,0,0,1,0,0,1,0"))
                                                      (rule "times_zero_2" (formula "52") (term "1,1,1,0,1,0,0,0,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "52") (term "1,1,0,1,0,0,0,1,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "52") (term "0,1,0,1,0,0,0,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "52") (term "0,0,1,0,1,0,0,0,1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,1,0,0,0,1,0,0,1,0"))
                                                      (rule "applyEqRigid" (formula "52") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "52") (term "0,1,0,0,0,1,0,0,0,1,0,0,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "52") (term "1,0,1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                                      (rule "times_zero_2" (formula "52") (term "1,1,0,1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "52") (term "1,0,1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "52") (term "0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0"))
                                                      (rule "applyEqRigid" (formula "52") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "52") (term "1,1,0,1,0,0,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "52") (term "1,1,1,0,1,0,0,1,0"))
                                                      (rule "times_zero_2" (formula "52") (term "1,1,1,1,0,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "52") (term "1,1,1,0,1,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "52") (term "0,1,1,0,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "52") (term "0,0,1,1,0,1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,1,0,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "59") (term "0,0,1,0,0,1,1,0,1,0,0,1,0,1,0,0,0,0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "59") (term "0,1,0,0,1,1,0,1,0,0,1,0,1,0,0,0,0,0,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0,0,1,1,0,1,0,0,1,0,1,0,0,0,0,0,1,0"))
                                                      (rule "times_zero_2" (formula "59") (term "1,1,0,1,0,0,1,1,0,1,0,0,1,0,1,0,0,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,1,1,0,1,0,0,1,0,1,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,1,1,0,1,0,0,1,0,1,0,0,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,1,1,0,1,0,0,1,0,1,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0,0,1,1,0,1,0,0,1,0,1,0,0,0,0,0,1,0"))
                                                      (rule "applyEqRigid" (formula "39") (term "0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "39") (term "0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "39") (term "1,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,0"))
                                                      (rule "mul_literals" (formula "39") (term "1,1,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "39") (term "1,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,0"))
                                                      (rule "applyEqRigid" (formula "59") (term "0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "59") (term "0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0"))
                                                      (rule "times_zero_2" (formula "59") (term "1,1,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0"))
                                                      (rule "applyEq" (formula "60") (term "0,1,1,0,1,0,0,1,1,0,1,0,0,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,0,1,0,0,1,1,0,1,0,0,1,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "60") (term "1,1,1,0,1,0,0,1,1,0,1,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "60") (term "1,1,1,1,0,1,0,0,1,1,0,1,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "60") (term "1,1,1,0,1,0,0,1,1,0,1,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,0,1,0,0,1,1,0,1,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "60") (term "0,0,1,1,0,1,0,0,1,1,0,1,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,0,1,0,0,1,1,0,1,0,0,1,1,0"))
                                                      (rule "applyEqRigid" (formula "59") (term "0,1,1,0,1,0,0,1,0,1,0,0,0,1,0,0,1,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,0,1,0,0,1,0,1,0,0,0,1,0,0,1,1,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "59") (term "1,1,1,0,1,0,0,1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                                      (rule "times_zero_2" (formula "59") (term "1,1,1,1,0,1,0,0,1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "1,1,1,0,1,0,0,1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,0,1,0,0,1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "0,0,1,1,0,1,0,0,1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,0,1,0,0,1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                                      (rule "applyEqRigid" (formula "59") (term "0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,1,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "59") (term "0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,1,1,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                                      (rule "mul_literals" (formula "59") (term "1,1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,1,1,1,0"))
                                                      (rule "applyEq" (formula "60") (term "0,1,1,1,0,1,0,0,1,0,1,0,0,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,1,0,1,0,0,1,0,1,0,0,1,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "60") (term "1,1,1,1,0,1,0,0,1,0,1,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "60") (term "1,1,1,1,1,0,1,0,0,1,0,1,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "60") (term "1,1,1,1,0,1,0,0,1,0,1,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,1,0,1,0,0,1,0,1,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "60") (term "0,0,1,1,1,0,1,0,0,1,0,1,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,1,0,1,0,0,1,0,1,0,0,1,1,0"))
                                                      (rule "applyEq" (formula "52") (term "0,1,0,1,0,0,1,0,1,0,0,1,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "52") (term "1,0,1,0,0,1,0,1,0,0,1,1,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "52") (term "1,1,0,1,0,0,1,0,1,0,0,1,1,1,0"))
                                                      (rule "times_zero_2" (formula "52") (term "1,1,1,0,1,0,0,1,0,1,0,0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "52") (term "1,1,0,1,0,0,1,0,1,0,0,1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "52") (term "0,1,0,1,0,0,1,0,1,0,0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "52") (term "0,0,1,0,1,0,0,1,0,1,0,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,1,0,0,1,0,1,0,0,1,1,1,0"))
                                                      (rule "applyEqRigid" (formula "59") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "59") (term "0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "59") (term "1,1,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0"))
                                                      (rule "applyEq" (formula "54") (term "0,0,1,0,0,0,1,0,0,1,1,1,2,0,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "54") (term "0,1,0,0,0,1,0,0,1,1,1,2,0,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "54") (term "1,0,1,0,0,0,1,0,0,1,1,1,2,0,0"))
                                                      (rule "mul_literals" (formula "54") (term "1,1,0,1,0,0,0,1,0,0,1,1,1,2,0,0"))
                                                      (rule "add_zero_right" (formula "54") (term "1,0,1,0,0,0,1,0,0,1,1,1,2,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,1,0,0,0,1,0,0,1,1,1,2,0,0"))
                                                      (rule "add_zero_right" (formula "54") (term "0,0,0,1,0,0,0,1,0,0,1,1,1,2,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,1,0,0,0,1,0,0,1,1,1,2,0,0"))
                                                      (rule "applyEq" (formula "59") (term "0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "59") (term "0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "59") (term "1,1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,1,0"))
                                                      (rule "applyEqRigid" (formula "59") (term "0,1,1,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "59") (term "1,1,1,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0"))
                                                      (rule "times_zero_2" (formula "59") (term "1,1,1,1,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "1,1,1,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "0,0,1,1,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0"))
                                                      (rule "applyEq" (formula "60") (term "0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "60") (term "0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "60") (term "1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "60") (term "1,1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "60") (term "1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "60") (term "0,0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,1,1,0"))
                                                      (rule "applyEq" (formula "52") (term "0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "52") (term "0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "52") (term "1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0"))
                                                      (rule "times_zero_2" (formula "52") (term "1,1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "52") (term "1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "52") (term "0,0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0"))
                                                      (rule "applyEqRigid" (formula "35") (term "0,1,1,1,2,0,1,1") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "35") (term "1,1,1,2,0,1,1") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "35") (term "1,1,1,1,2,0,1,1"))
                                                      (rule "mul_literals" (formula "35") (term "1,1,1,1,1,2,0,1,1"))
                                                      (rule "add_zero_right" (formula "35") (term "1,1,1,1,2,0,1,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,1,1,2,0,1,1"))
                                                      (rule "add_zero_right" (formula "35") (term "0,0,1,1,1,2,0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,1,1,2,0,1,1"))
                                                      (rule "applyEq" (formula "35") (term "0,1,1,1,1,1,0,1,0,0,1,1,0,0,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "35") (term "1,1,1,1,1,0,1,0,0,1,1,0,0,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "35") (term "1,1,1,1,1,1,0,1,0,0,1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "35") (term "1,1,1,1,1,1,1,0,1,0,0,1,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "35") (term "1,1,1,1,1,1,0,1,0,0,1,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,1,1,1,1,0,1,0,0,1,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "35") (term "0,0,1,1,1,1,1,0,1,0,0,1,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,1,1,1,1,0,1,0,0,1,1,0,0,0"))
                                                      (rule "applyEq" (formula "36") (term "0,1,0,1,0,0,1,1,1,1,1,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "36") (term "1,0,1,0,0,1,1,1,1,1,0,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "36") (term "1,1,0,1,0,0,1,1,1,1,1,0,1,0"))
                                                      (rule "times_zero_2" (formula "36") (term "1,1,1,0,1,0,0,1,1,1,1,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "36") (term "1,1,0,1,0,0,1,1,1,1,1,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,1,0,0,1,1,1,1,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0,1,0,1,0,0,1,1,1,1,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,1,0,0,1,1,1,1,1,0,1,0"))
                                                      (rule "applyEq" (formula "54") (term "0,0,1,0,0,1,1,0,1,0,0,2,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "54") (term "0,1,0,0,1,1,0,1,0,0,2,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "54") (term "1,0,1,0,0,1,1,0,1,0,0,2,0"))
                                                      (rule "mul_literals" (formula "54") (term "1,1,0,1,0,0,1,1,0,1,0,0,2,0"))
                                                      (rule "add_zero_right" (formula "54") (term "1,0,1,0,0,1,1,0,1,0,0,2,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,1,0,0,1,1,0,1,0,0,2,0"))
                                                      (rule "add_zero_right" (formula "54") (term "0,0,0,1,0,0,1,1,0,1,0,0,2,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,1,0,0,1,1,0,1,0,0,2,0"))
                                                      (rule "applyEq" (formula "32") (term "0,0,1,0,0,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "32") (term "0,1,0,0,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "32") (term "1,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "1,1,0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "32") (term "1,0,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0,0,0"))
                                                      (rule "applyEq" (formula "32") (term "0,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "32") (term "1,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "32") (term "1,1,1,0"))
                                                      (rule "times_zero_2" (formula "32") (term "1,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "32") (term "1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,1,0"))
                                                      (rule "add_zero_right" (formula "32") (term "0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,1,0"))
                                                      (rule "applyEqRigid" (formula "39") (term "0,0,1,0,0,0,1,0,0,1,1,1,1,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "39") (term "0,1,0,0,0,1,0,0,1,1,1,1,1,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "39") (term "1,0,1,0,0,0,1,0,0,1,1,1,1,1,1,0"))
                                                      (rule "mul_literals" (formula "39") (term "1,1,0,1,0,0,0,1,0,0,1,1,1,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "39") (term "1,0,1,0,0,0,1,0,0,1,1,1,1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0,0,0,1,0,0,1,1,1,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,0,1,0,0,1,1,1,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,0,0,0,1,0,0,1,1,1,1,1,1,0"))
                                                      (rule "applyEq" (formula "39") (term "0,0,1,0,0,1,1,1,1,1,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "39") (term "0,1,0,0,1,1,1,1,1,1,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "39") (term "1,0,1,0,0,1,1,1,1,1,1,1,0"))
                                                      (rule "times_zero_2" (formula "39") (term "1,1,0,1,0,0,1,1,1,1,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "39") (term "1,0,1,0,0,1,1,1,1,1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0,0,1,1,1,1,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,1,1,1,1,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,0,0,1,1,1,1,1,1,1,0"))
                                                      (rule "applyEqRigid" (formula "38") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "38") (term "0,1,0,0,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "38") (term "1,0,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "38") (term "1,1,0,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "38") (term "1,0,1,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "38") (term "0,0,0,1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,0,0,1,0"))
                                                      (rule "applyEqRigid" (formula "38") (term "0,1,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "38") (term "1,1,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "38") (term "1,1,1,1,0"))
                                                      (rule "mul_literals" (formula "38") (term "1,1,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "38") (term "1,1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "38") (term "0,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,1,1,0"))
                                                      (rule "applyEq" (formula "60") (term "0,1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "60") (term "1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "60") (term "1,1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0"))
                                                      (rule "times_zero_2" (formula "60") (term "1,1,1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "60") (term "1,1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "60") (term "0,0,1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0"))
                                                      (rule "applyEqRigid" (formula "59") (term "0,1,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "59") (term "1,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,1,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "59") (term "1,1,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,1,1,0"))
                                                      (rule "mul_literals" (formula "59") (term "1,1,1,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "1,1,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "0,0,1,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,1,1,0"))
                                                      (rule "applyEqRigid" (formula "36") (term "0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "36") (term "0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0,1,0"))
                                                      (rule "times_zero_2" (formula "36") (term "1,1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0,1,0"))
                                                      (rule "applyEqRigid" (formula "39") (term "0,1,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "39") (term "1,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "37"))
                                                      (rule "polySimp_elimSub" (formula "39") (term "1,1,0,1,0,0,0,1,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "39") (term "1,1,1,0,1,0,0,0,1,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "39") (term "1,1,0,1,0,0,0,1,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0,1,0,0,0,1,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "39") (term "0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
                                                      (rule "applyEq" (formula "39") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "4"))
                                                      (rule "lenOfSeqSubEQ" (formula "39") (term "0,1,0,0,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "54"))
                                                      (rule "polySimp_elimSub" (formula "39") (term "1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "39") (term "1,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "39") (term "1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0"))
                                                      (rule "ifthenelse_split" (formula "39") (term "1,1,1,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0"))
                                                      (branch " 1 + de.polyas.core3.open.cred.CredTool.polyasVals.seq@heapAtPre_B«anonHeapFunction».length * -1 ≤ 0 TRUE"
                                                         (rule "replace_known_left" (formula "53") (term "0,1,1,0,1,0,0,1,1,1,0") (ifseqformula "39"))
                                                          (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")))
                                                         (rule "replace_known_left" (formula "55") (term "0,0,1,0,0,0,1,0,0,1,2,0") (ifseqformula "39"))
                                                          (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")))
                                                         (rule "replace_known_left" (formula "40") (term "0,1,1,1,0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,0") (ifseqformula "39"))
                                                          (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")))
                                                         (rule "replace_known_left" (formula "61") (term "0,0,1,0,0,1,0,1,0,0,1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "39"))
                                                          (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")))
                                                         (rule "replace_known_left" (formula "60") (term "0,1,1,1,1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "39"))
                                                          (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")))
                                                         (rule "replace_known_left" (formula "38") (term "0,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,0") (ifseqformula "39"))
                                                          (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")))
                                                         (rule "replace_known_left" (formula "34") (term "0,1,1,0") (ifseqformula "39"))
                                                          (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")))
                                                         (rule "replace_known_left" (formula "57") (term "0,0,1,0,0,0,1,0,0,1,0") (ifseqformula "39"))
                                                          (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")))
                                                         (rule "replace_known_left" (formula "36") (term "0,1,0,1,0,0,1,0,1,0,0,1,1,0,1,0") (ifseqformula "39"))
                                                          (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")))
                                                         (rule "true_left" (formula "36"))
                                                         (rule "replace_known_left" (formula "58") (term "0,0,1,0,0,1,0,1,0,0,1,0") (ifseqformula "38"))
                                                          (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")))
                                                         (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "38"))
                                                          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")))
                                                         (rule "replace_known_left" (formula "55") (term "0,1,0,0") (ifseqformula "38"))
                                                          (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "38")))
                                                         (rule "replace_known_left" (formula "36") (term "0,2,0") (ifseqformula "38"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "replace_known_left" (formula "53") (term "0,0,1,0,0,1,1,0,1") (ifseqformula "38"))
                                                          (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")))
                                                         (rule "replace_known_left" (formula "35") (term "0,0,1,0,0,1,2,0,1,1") (ifseqformula "38"))
                                                          (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")))
                                                         (rule "polySimp_addComm1" (formula "56") (term "0"))
                                                         (rule "applyEqRigid" (formula "57") (term "0,1,0") (ifseqformula "4"))
                                                         (rule "lenOfSeqSubEQ" (formula "57") (term "1,0") (ifseqformula "36"))
                                                         (rule "polySimp_elimSub" (formula "57") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "57") (term "1,1,1,0"))
                                                         (rule "add_zero_right" (formula "57") (term "1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,0"))
                                                         (rule "add_zero_right" (formula "57") (term "0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0"))
                                                         (rule "replace_known_left" (formula "57") (term "0,1,0") (ifseqformula "38"))
                                                          (builtin "One Step Simplification" (formula "57"))
                                                         (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "64"))
                                                         (rule "closeTrue" (formula "64"))
                                                      )
                                                      (branch " 1 + de.polyas.core3.open.cred.CredTool.polyasVals.seq@heapAtPre_B«anonHeapFunction».length * -1 ≤ 0 FALSE"
                                                          (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                                         (rule "mul_literals" (formula "39") (term "1,0,0,1,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,0,0,1,1,1,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,0,0,0,1,0,0,1,1,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,0,0,1,1,0"))
                                                         (rule "add_zero_right" (formula "39") (term "0,0,1,1,1,1,1,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0,1,1,1,1,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0,1,1,1,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0,1,1,1,1,1,1,1,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1,1,1,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "39") (term "0,0,1,1,0"))
                                                         (rule "leq_literals" (formula "39") (term "0,1,1,1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "39"))
                                                         (rule "add_literals" (formula "39") (term "1,0"))
                                                         (rule "replace_known_right" (formula "60") (term "0,0,1,0,0,0,1,0,0,1,1,1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0") (ifseqformula "64"))
                                                          (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                                         (rule "add_literals" (formula "60") (term "1,0"))
                                                         (rule "replace_known_right" (formula "52") (term "0,1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,0,1,0,0,1,1,1,0") (ifseqformula "64"))
                                                          (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                                         (rule "add_zero_right" (formula "52") (term "0"))
                                                         (rule "replace_known_right" (formula "59") (term "0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,1,1,0") (ifseqformula "64"))
                                                          (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                                         (rule "add_literals" (formula "59") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "59") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "59") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "59"))
                                                         (rule "replace_known_right" (formula "32") (term "0,1,0") (ifseqformula "64"))
                                                          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                                         (rule "qeq_literals" (formula "32"))
                                                         (rule "true_left" (formula "32"))
                                                         (rule "replace_known_right" (formula "35") (term "0,0,1,0,0,0,1,0,0,1,1,1,1,0,1,0") (ifseqformula "63"))
                                                          (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")))
                                                         (rule "times_zero_2" (formula "35") (term "1,0"))
                                                         (rule "add_literals" (formula "35") (term "0"))
                                                         (rule "leq_literals" (formula "35"))
                                                         (rule "closeFalse" (formula "35"))
                                                      )
                                                   )
                                                   (branch " 1 + de.polyas.core3.open.cred.CredTool.polyasVals.seq@heapAtPre_B«anonHeapFunction».length * -1 ≤ 0 FALSE"
                                                       (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                                      (rule "eqSymm" (formula "37"))
                                                      (rule "replace_known_right" (formula "54") (term "0,1,0,1,0,0,0,1,0,0,1,1,1,1,1,1,0,1,0,0,2,0") (ifseqformula "64"))
                                                       (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                                      (rule "eqSymm" (formula "54"))
                                                      (rule "replace_known_right" (formula "39") (term "0,1,1,0") (ifseqformula "63"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "add_literals" (formula "39") (term "1,0"))
                                                      (rule "replace_known_right" (formula "52") (term "0,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "63"))
                                                       (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")))
                                                      (rule "add_zero_right" (formula "52") (term "0"))
                                                      (rule "replace_known_right" (formula "32") (term "0,1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,0,1,0,0,1,0,1,0") (ifseqformula "63"))
                                                       (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")))
                                                      (rule "mul_literals" (formula "32") (term "1,0"))
                                                      (rule "add_zero_right" (formula "32") (term "0"))
                                                      (rule "leq_literals" (formula "32"))
                                                      (rule "closeFalse" (formula "32"))
                                                   )
                                                )
                                                (branch " 1 + de.polyas.core3.open.cred.CredTool.polyasVals.seq@heapAtPre_B«anonHeapFunction».length * -1 ≤ 0 FALSE"
                                                    (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                                   (rule "mul_literals" (formula "32") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "32") (term "1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "32") (term "0,0,1,1,0"))
                                                   (rule "add_literals" (formula "32") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "32") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "qeq_literals" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "replace_known_right" (formula "36") (term "0,1,0,1,0,0,0,1,0,0,1,1,1,1,0,1,0,0,1,0") (ifseqformula "63"))
                                                    (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")))
                                                   (rule "replace_known_right" (formula "55") (term "0,1,1,1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "63"))
                                                    (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")))
                                                   (rule "replace_known_right" (formula "59") (term "0,1,1,1,0,1,0,0,1,0,1,0,0,1,1,1,0") (ifseqformula "63"))
                                                    (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")))
                                                   (rule "add_literals" (formula "59") (term "1,0"))
                                                   (rule "replace_known_right" (formula "58") (term "0,1,0,1,0,0,1,1,1,1,0") (ifseqformula "63"))
                                                    (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")))
                                                   (rule "add_literals" (formula "58") (term "1,1,0"))
                                                   (rule "replace_known_right" (formula "33") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,1,0") (ifseqformula "63"))
                                                    (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")))
                                                   (rule "add_zero_right" (formula "33") (term "0"))
                                                   (rule "replace_known_right" (formula "52") (term "0,1,0,1,0,0,1,0,1,0,0,1,0,1,0,0,2,0") (ifseqformula "63"))
                                                    (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")))
                                                   (rule "replace_known_right" (formula "54") (term "0,0,0,0,0,1,0,0") (ifseqformula "63"))
                                                    (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")))
                                                   (rule "add_zero_right" (formula "54") (term "0"))
                                                   (rule "times_zero_2" (formula "54") (term "0,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "54") (term "1,0,1,0"))
                                                   (rule "leq_literals" (formula "54") (term "0,0,1,0"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "mul_literals" (formula "54") (term "1,0"))
                                                   (rule "add_literals" (formula "54") (term "0"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "true_left" (formula "54"))
                                                   (rule "replace_known_right" (formula "53") (term "0,0,1,0,0,0,1,0,0,1,1,1,1,0,1,0") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")))
                                                   (rule "add_zero_right" (formula "53") (term "0,0"))
                                                   (rule "add_literals" (formula "53") (term "1,0,1,0"))
                                                   (rule "replace_known_right" (formula "55") (term "0,0,1,0,0,1,0") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "62")))
                                                   (rule "add_zero_right" (formula "55") (term "0"))
                                                   (rule "replace_known_right" (formula "35") (term "0,1,0,1,0,0,1,2,0") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "52")))
                                                   (rule "true_left" (formula "35"))
                                                   (rule "replace_known_right" (formula "55") (term "0,0,1,0,0,1,0,1,0,0,1,0,1,0") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")))
                                                   (rule "times_zero_2" (formula "55") (term "1,0"))
                                                   (rule "add_literals" (formula "55") (term "0"))
                                                   (rule "leq_literals" (formula "55"))
                                                   (rule "closeFalse" (formula "55"))
                                                )
                                             )
                                             (branch " 1 + de.polyas.core3.open.cred.CredTool.polyasVals.seq@heapAtPre_B«anonHeapFunction».length * -1 ≤ 0 FALSE"
                                                 (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                                (rule "add_literals" (formula "59") (term "1,1,0"))
                                                (rule "mul_literals" (formula "59") (term "1,0,0,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "59") (term "0,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "59") (term "0,0,0,0,1,0"))
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "mul_literals" (formula "59") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "59") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "replace_known_right" (formula "34") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,0") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                                (rule "add_zero_right" (formula "34") (term "0"))
                                                (rule "replace_known_right" (formula "53") (term "0,1,1,0,1,0,0,0,1,0,0,0,1,0,0,2,0") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                                (rule "eqSymm" (formula "53"))
                                                (rule "replace_known_right" (formula "32") (term "0,0,1,0,0,0,1,0,0,1,0,1,0,0,1,1,1,1,0") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                                (rule "qeq_literals" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "replace_known_right" (formula "54") (term "0,1,0,1,0,0,0,1,0,0,1,1,1,1,0") (ifseqformula "63"))
                                                 (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")))
                                                (rule "add_zero_right" (formula "54") (term "0"))
                                                (rule "replace_known_right" (formula "55") (term "0,1,1,1,1,1,1,1,0") (ifseqformula "63"))
                                                 (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")))
                                                (rule "replace_known_right" (formula "59") (term "0,1,1,0,1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,1,1,0") (ifseqformula "63"))
                                                 (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")))
                                                (rule "add_literals" (formula "59") (term "1,0"))
                                                (rule "replace_known_right" (formula "50") (term "0,1,1,1,1,0") (ifseqformula "63"))
                                                 (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")))
                                                (rule "add_zero_right" (formula "50") (term "0"))
                                                (rule "replace_known_right" (formula "35") (term "0,1,1,1,2,0") (ifseqformula "63"))
                                                 (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")))
                                                (rule "replace_known_right" (formula "36") (term "0,1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "63"))
                                                 (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")))
                                                (rule "replace_known_right" (formula "53") (term "0,1,1,0,1,0") (ifseqformula "63"))
                                                 (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")))
                                                (rule "add_literals" (formula "53") (term "1,0,1,0"))
                                                (rule "add_literals" (formula "53") (term "0,0"))
                                                (rule "mul_literals" (formula "53") (term "0,0,0,1,0"))
                                                (rule "leq_literals" (formula "53") (term "0,0,1,0"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "mul_literals" (formula "53") (term "1,0"))
                                                (rule "add_literals" (formula "53") (term "0"))
                                                (rule "leq_literals" (formula "53"))
                                                (rule "true_left" (formula "53"))
                                                (rule "replace_known_right" (formula "56") (term "0,1,0,1,0,0,1,0,1,0") (ifseqformula "62"))
                                                 (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")) (ifInst ""  (formula "62")))
                                                (rule "mul_literals" (formula "56") (term "1,0"))
                                                (rule "add_literals" (formula "56") (term "0"))
                                                (rule "leq_literals" (formula "56"))
                                                (rule "closeFalse" (formula "56"))
                                             )
                                          )
                                          (branch " 1 + de.polyas.core3.open.cred.CredTool.polyasVals.seq@heapAtPre_B«anonHeapFunction».length * -1 ≤ 0 FALSE"
                                              (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,1,1,0,1,0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "62") (term "1,1,0"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,1,1,1,1,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,0,1,0,0,1,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,1,0,1,0,0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,1,1,0,1,0,0,1,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,0,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,1,1,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,0,1,0,0,1,0,1,0,0,1,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,1,0,1,0,0,1,1,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,0,1,0,0,1,1,1,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "62") (term "0,0,1,1,0,1,0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "62") (term "0,0,0,1,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "62") (term "0,0,1,1,1,1,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "62") (term "0,0,0,1,0,0,1,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "62") (term "0,0,1,0,1,0,0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "62") (term "0,0,0,1,0,0,0,1,0,0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "62") (term "0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "62") (term "0,0,1,1,0,1,0,0,1,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "62") (term "0,0,0,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "62") (term "0,0,1,1,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "62") (term "0,0,0,1,0,0,1,0,1,0,0,1,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "62") (term "0,0,1,0,1,0,0,1,1,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "62") (term "0,0,0,1,0,0,1,1,1,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "62") (term "0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "62") (term "0,1,1,0,1,0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "62") (term "0,1,0,1,0,0,1,1,0,0,1,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "leq_literals" (formula "62") (term "0,0,1,0,0,0,1,0,0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,0,1,0,0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "62") (term "0,0,1,0,0,1,1,1,0,0,1,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,1,1,1,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "62") (term "0,0,1,0,0,1,0,1,0,0,1,0,0,1,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,1,0,1,0,0,1,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "62") (term "0,1,0,1,0,0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "62") (term "0,1,1,0,1,0,0,1,0,0,1,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "leq_literals" (formula "62") (term "0,0,1,0,0,1,1,0,1,0,1,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "add_literals" (formula "62") (term "0,0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "62") (term "0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,1,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "62") (term "0,1,1,1,0,1,0,1,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,1,1,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "62") (term "0,0,1,1,1,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "sub_literals" (formula "62") (term "1,0,1,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "mul_literals" (formula "62") (term "1,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "62") (term "0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "62") (term "0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "mul_literals" (formula "62") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "62") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "replace_known_right" (formula "57") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,2,0") (ifseqformula "67"))
                                              (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")))
                                             (rule "mul_literals" (formula "57") (term "1,0,0,0,1,0,0,0,1,0,0,1,2,0"))
                                             (rule "mul_literals" (formula "57") (term "1,0,0,1,1,1,2,0"))
                                             (rule "mul_literals" (formula "57") (term "1,0,0,0,1,0,0,1,1,2,0"))
                                             (rule "mul_literals" (formula "57") (term "1,0,0,1,1,0,1,0,0,2,0"))
                                             (rule "mul_literals" (formula "57") (term "1,0,0,0,1,0,0,1,0,1,0,0,2,0"))
                                             (rule "mul_literals" (formula "57") (term "1,0,0,0,1,0,0,2,0"))
                                             (rule "add_literals" (formula "57") (term "2,0,0"))
                                             (rule "mul_literals" (formula "57") (term "1,0,0,1,0,1,0,0,1,2,0"))
                                             (rule "add_zero_right" (formula "57") (term "0,0,0,1,0,0,0,1,0,0,1,2,0"))
                                             (rule "add_literals" (formula "57") (term "0,0,1,1,1,2,0"))
                                             (rule "add_zero_right" (formula "57") (term "0,0,0,1,0,0,1,1,2,0"))
                                             (rule "add_zero_right" (formula "57") (term "0,0,1,1,0,1,0,0,2,0"))
                                             (rule "add_zero_right" (formula "57") (term "0,0,0,1,0,0,1,0,1,0,0,2,0"))
                                             (rule "add_zero_right" (formula "57") (term "0,0,0,1,0,0,2,0"))
                                             (rule "add_zero_right" (formula "57") (term "0,0,1,0,1,0,0,1,2,0"))
                                             (rule "leq_literals" (formula "57") (term "0,0,1,0,0,0,1,0,0,1,2,0"))
                                              (builtin "One Step Simplification" (formula "57"))
                                             (rule "mul_literals" (formula "57") (term "1,0,0,0,1,0,0,1,2,0"))
                                             (rule "leq_literals" (formula "57") (term "0,1,0,1,0,0,1,2,0"))
                                              (builtin "One Step Simplification" (formula "57"))
                                             (rule "leq_literals" (formula "57") (term "0,1,1,0,1,0,0,2,0"))
                                              (builtin "One Step Simplification" (formula "57"))
                                             (rule "mul_literals" (formula "57") (term "1,0,0,1,2,0"))
                                             (rule "leq_literals" (formula "57") (term "0,0,1,0,0,1,1,2,0"))
                                              (builtin "One Step Simplification" (formula "57"))
                                             (rule "mul_literals" (formula "57") (term "1,0,0,2,0"))
                                             (rule "leq_literals" (formula "57") (term "0,1,1,1,2,0"))
                                              (builtin "One Step Simplification" (formula "57"))
                                             (rule "replace_known_right" (formula "39") (term "0,1,1,0,1,0,0") (ifseqformula "67"))
                                              (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "67")))
                                             (rule "times_zero_2" (formula "39") (term "0,0,0,1,0,0"))
                                             (rule "add_literals" (formula "39") (term "1,0,1,0,0"))
                                             (rule "leq_literals" (formula "39") (term "0,0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "add_zero_right" (formula "39") (term "0"))
                                             (rule "mul_literals" (formula "39") (term "1,0"))
                                             (rule "add_literals" (formula "39") (term "0"))
                                             (rule "leq_literals" (formula "39"))
                                             (rule "true_left" (formula "39"))
                                             (rule "replace_known_right" (formula "40") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "66"))
                                              (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")))
                                             (rule "replace_known_right" (formula "39") (term "0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0") (ifseqformula "66"))
                                              (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")))
                                             (rule "times_zero_2" (formula "39") (term "0,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "39") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "39") (term "1,0,1,0,0"))
                                             (rule "leq_literals" (formula "39") (term "0,0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "mul_literals" (formula "39") (term "1,0,0"))
                                             (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "39") (term "0,0"))
                                             (rule "leq_literals" (formula "39") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "add_zero_right" (formula "39") (term "0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "true_left" (formula "39"))
                                             (rule "replace_known_right" (formula "38") (term "0,1,0,1,0,0,0,1,0,0,1,0,1,0,0,2,0") (ifseqformula "65"))
                                              (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")))
                                             (rule "mul_literals" (formula "38") (term "1,0,0,2,0"))
                                             (rule "add_literals" (formula "38") (term "2,0,0"))
                                             (rule "add_zero_right" (formula "38") (term "0,0,2,0"))
                                             (rule "leq_literals" (formula "38") (term "0,2,0"))
                                              (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "55")))
                                             (rule "true_left" (formula "38"))
                                             (rule "replace_known_right" (formula "58") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                             (rule "add_zero_right" (formula "58") (term "0"))
                                             (rule "replace_known_right" (formula "52") (term "0,1,0,1,0,0,1,1,0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                             (rule "add_zero_right" (formula "52") (term "0"))
                                             (rule "replace_known_right" (formula "39") (term "0,1,1,0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                             (rule "add_zero_right" (formula "39") (term "1,0"))
                                             (rule "replace_known_right" (formula "56") (term "0,0,1,0,0,1,1,1,1,0,1,0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                             (rule "add_zero_right" (formula "56") (term "0,0"))
                                             (rule "add_literals" (formula "56") (term "1,0,1,0"))
                                             (rule "replace_known_right" (formula "60") (term "0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")) (ifInst ""  (formula "64")))
                                             (rule "add_literals" (formula "60") (term "1,0"))
                                             (rule "replace_known_right" (formula "55") (term "0,1,0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "55"))
                                             (rule "add_zero_right" (formula "55") (term "0"))
                                             (rule "replace_known_right" (formula "34") (term "0,1,0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "add_zero_right" (formula "34") (term "0"))
                                             (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "qeq_literals" (formula "32"))
                                             (rule "true_left" (formula "32"))
                                             (rule "replace_known_right" (formula "52") (term "0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,1,1,1,0,1") (ifseqformula "63"))
                                              (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")) (ifInst ""  (formula "63")))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,1,1,1,1,0,1,0,0,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,1,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,1,1,1,0,1,0,0,0,1,0,0,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,0,1,0,0,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,1,0,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,1,0,1,0,0,1,1,0,1,0,0,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,1,0,1,0,0,1,0,1,0,0,0,1,0,0,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,1,1,1,1,1,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,1,1,0,1,0,0,0,1,0,0,1,1,1,0,1"))
                                             (rule "times_zero_2" (formula "52") (term "1,0,0,0,1,0,0,0,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,0,1,0,0,1,0,1,0,0,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,1,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,1,0,1,0,0,1,1,1,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,0,1,0,0,1,0,1,0,0,1,1,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,0,1,0,0,1,1,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,0,1,0,0,1,1,1,1,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,1,1,0,1,0,0,1,1,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,0,1,0,0,0,1,0,0,1,1,1,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,0,1,0,0,0,1,0,0,1,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,0,1,0,0,1,1,1,0,1,0,0,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,1,1,0,1,0,0,1,0,1,0,0,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,1,1,1,0,1,0,0,1,1,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,1,0,1,0,0,1,0,1,0,0,1,1,1,0,1"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,1,1,1,1,0,1,0,0,1,1,0,1"))
                                             (rule "add_literals" (formula "52") (term "0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,1,1,1,0,1"))
                                             (rule "add_literals" (formula "52") (term "0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,1,1,0,1"))
                                             (rule "add_literals" (formula "52") (term "0,0,1,1,1,0,1,0,0,0,1,0,0,1,1,0,1"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,0,1,0,0,1,0,1"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,1,0,1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0,1"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,1,0,1,0,0,1,1,0,1,0,0,1,1,0,1"))
                                             (rule "add_literals" (formula "52") (term "0,0,1,0,1,0,0,1,0,1,0,0,0,1,0,0,1,1,0,1"))
                                             (rule "add_literals" (formula "52") (term "0,0,1,1,1,1,1,1,1,0,1"))
                                             (rule "add_literals" (formula "52") (term "0,0,1,1,0,1,0,0,0,1,0,0,1,1,1,0,1"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,0,1,0,0,0,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "52") (term "0,0,0,1,0,0,1,0,1,0,0,1,1,0,1"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,0,1,0,0,1,1,0,1,0,0,1,1,1,0,1"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,1,1,1,0,1"))
                                             (rule "add_literals" (formula "52") (term "0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0,1"))
                                             (rule "add_literals" (formula "52") (term "0,0,1,0,1,0,0,1,1,1,1,1,0,1"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,0,1,0,0,1,0,1,0,0,1,1,1,1,0,1"))
                                             (rule "add_literals" (formula "52") (term "0,0,0,1,0,0,1,1,1,1,0,1"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,0,1,0,0,1,1,1,1,1,1,0,1"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,1,1,0,1,0,0,1,1,1,1,0,1"))
                                             (rule "add_literals" (formula "52") (term "0,0,0,1,0,0,0,1,0,0,1,1,1,1,1,0,1"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,0,1,0,0,0,1,0,0,1,1,1,0,1"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,1,0,1"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,0,1,0,0,1,1,1,0,1,0,0,1,1,0,1"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,1,1,0,1,0,0,1,0,1,0,0,1,1,0,1"))
                                             (rule "add_literals" (formula "52") (term "0,0,0,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,0,1"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,1,1,0,1"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,1,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0,1"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,1,1,1,0,1,0,0,1,1,1,0,1"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,1,0,1,0,0,1,0,1,0,0,1,1,1,0,1"))
                                             (rule "leq_literals" (formula "52") (term "0,1,1,1,1,0,1,0,0,1,1,0,1"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "leq_literals" (formula "52") (term "0,0,1,0,0,1,0,1"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "leq_literals" (formula "52") (term "0,0,1,0,0,0,1,0,0,1,1,1,1,1,0,1"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "leq_literals" (formula "52") (term "0,0,1,0,0,0,1,0,0,1,0,1,0,0,1,1,1,0,1"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "leq_literals" (formula "52") (term "0,0,1,0,0,1,1,0,1,0,0,1,1,1,0,1"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "leq_literals" (formula "52") (term "0,1,1,1,1,1,1,1,0,1"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "leq_literals" (formula "52") (term "0,0,1,0,0,0,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,0,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "52") (term "0,1"))
                                             (rule "leq_literals" (formula "52") (term "0,1,0,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0"))
                                             (rule "equal_literals" (formula "52") (term "1"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "52") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "mul_literals" (formula "52") (term "0"))
                                             (rule "leq_literals" (formula "52"))
                                             (rule "true_left" (formula "52"))
                                             (rule "replace_known_right" (formula "34") (term "0,1,0,1") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "62")))
                                             (rule "add_literals" (formula "34") (term "0,1"))
                                             (rule "times_zero_2" (formula "34") (term "0,0"))
                                             (rule "equal_literals" (formula "34") (term "1"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "leq_literals" (formula "34"))
                                             (rule "true_left" (formula "34"))
                                             (rule "replace_known_right" (formula "34") (term "0,1,1,0,1,0,0,1,1,0,1,0,1,0") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")))
                                             (rule "mul_literals" (formula "34") (term "1,0,0,0,1,0,0,1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "34") (term "0,0,0"))
                                             (rule "mul_literals" (formula "34") (term "1,0,0,1,1,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "34") (term "1,0,0,2,0,1,1"))
                                             (rule "mul_literals" (formula "34") (term "1,0,0,0,1,0,1,0"))
                                             (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1,0,1,0,1,0"))
                                             (rule "qeq_literals" (formula "34") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "add_zero_right" (formula "34") (term "0,0,1,1,0,1,0,0"))
                                             (rule "leq_literals" (formula "34") (term "0,0,1,0,0,1,0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "add_literals" (formula "34") (term "0,0,2,0,1,1"))
                                             (rule "mul_literals" (formula "34") (term "1,0,0,1,0,1,0,0"))
                                             (rule "leq_literals" (formula "34") (term "0,1,1,0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "leq_literals" (formula "34") (term "0,2,0,1,1"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "mul_literals" (formula "34") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "34") (term "0,0"))
                                             (rule "eqSymm" (formula "51"))
                                             (rule "replace_known_right" (formula "35") (term "0,1,0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,1,1") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")) (ifInst ""  (formula "61")))
                                             (rule "true_left" (formula "35"))
                                             (rule "eqSymm" (formula "34") (term "1,1"))
                                             (rule "polySimp_addComm1" (formula "55") (term "0"))
                                             (rule "add_literals" (formula "55") (term "0,0"))
                                             (rule "inEqSimp_leqRight" (formula "59"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "eqSeqEmpty" (formula "51"))
                                             (rule "eqSeqEmpty" (formula "35") (term "1,1"))
                                             (rule "applyEq" (formula "54") (term "0,1,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "44") (term "0") (ifseqformula "27"))
                                             (rule "eqSymm" (formula "44"))
                                             (rule "applyEq" (formula "54") (term "1") (ifseqformula "6"))
                                             (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "51"))
                                             (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "52") (term "0,0,0,0,0,1,0") (ifseqformula "5"))
                                             (rule "applyEqRigid" (formula "52") (term "0,1,1,0,1,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "53") (term "0,0,0,0,0,1,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "53") (term "0,0,0,0,1,0") (ifseqformula "51"))
                                             (rule "mul_literals" (formula "53") (term "0,0,0,1,0"))
                                             (rule "leq_literals" (formula "53") (term "0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "mul_literals" (formula "53") (term "1,0"))
                                             (rule "add_literals" (formula "53") (term "0"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "true_left" (formula "53"))
                                             (rule "applyEqRigid" (formula "52") (term "0,0,0,0,1,0") (ifseqformula "51"))
                                             (rule "times_zero_2" (formula "52") (term "0,0,0,1,0"))
                                             (rule "leq_literals" (formula "52") (term "0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "52") (term "1,0"))
                                             (rule "mul_literals" (formula "52") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                             (rule "add_literals" (formula "52") (term "0,0"))
                                             (rule "add_zero_left" (formula "52") (term "0"))
                                             (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "51"))
                                             (rule "mul_literals" (formula "1") (term "0"))
                                             (rule "qeq_literals" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "applyEqRigid" (formula "51") (term "0,0") (ifseqformula "50"))
                                             (rule "mul_literals" (formula "51") (term "0"))
                                             (rule "leq_literals" (formula "51"))
                                             (rule "true_left" (formula "51"))
                                             (rule "polySimp_sepNegMonomial" (formula "49"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                             (rule "polySimp_elimOne" (formula "49") (term "0"))
                                             (rule "applyEqRigid" (formula "52") (term "0,1,0") (ifseqformula "49"))
                                             (rule "mul_literals" (formula "52") (term "1,0"))
                                             (rule "add_literals" (formula "52") (term "0"))
                                             (rule "leq_literals" (formula "52"))
                                             (rule "true_left" (formula "52"))
                                             (rule "polySimp_sepNegMonomial" (formula "33"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                             (rule "polySimp_elimOne" (formula "33") (term "0"))
                                             (rule "applyEq" (formula "34") (term "1,0,0") (ifseqformula "33"))
                                             (rule "add_literals" (formula "34") (term "0,0"))
                                             (rule "qeq_literals" (formula "34") (term "0"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "applyEq" (formula "32") (term "0") (ifseqformula "33"))
                                             (rule "qeq_literals" (formula "32"))
                                             (rule "true_left" (formula "32"))
                                             (rule "applyEqRigid" (formula "26") (term "0,0") (ifseqformula "33"))
                                             (rule "eqSymm" (formula "26"))
                                             (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "33"))
                                             (rule "applyEqRigid" (formula "50") (term "0,0") (ifseqformula "33"))
                                             (rule "applyEqRigid" (formula "37") (term "0,1,0") (ifseqformula "33"))
                                             (rule "eqSymm" (formula "37") (term "1,0"))
                                             (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "26"))
                                             (rule "applyEq" (formula "43") (term "1") (ifseqformula "26"))
                                             (rule "pullOutSelect" (formula "68") (term "1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "replaceKnownSelect_taclet00_3" (formula "1") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_4" (formula "1") (term "2,0"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "69") (term "1,1") (ifseqformula "1"))
                                             (rule "replaceKnownSelect_taclet0000_8" (formula "69") (term "1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "69") (term "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "68") (term "0") (inst "selectSK=java_util_Collection_seq_4"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "42"))
                                             (rule "eqSymm" (formula "69"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "equalityToSeqGetAndSeqLenRight" (formula "69") (inst "iv=iv"))
                                             (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0,0,1"))
                                             (rule "applyEq" (formula "69") (term "0,0") (ifseqformula "33"))
                                             (rule "eqSymm" (formula "69") (term "0"))
                                             (rule "applyEq" (formula "69") (term "0,1,0,0,1,0,0,1") (ifseqformula "33"))
                                             (rule "mul_literals" (formula "69") (term "1,0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "69") (term "0,0,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "69") (term "1,1,0,0,1"))
                                             (rule "eqSeqConcat" (formula "27"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "polySimp_addComm0" (formula "27") (term "1"))
                                             (rule "eqSeqSingleton" (formula "29"))
                                             (rule "andLeft" (formula "29"))
                                             (rule "lenOfSeqSub" (formula "29") (term "0"))
                                             (rule "polySimp_elimSub" (formula "29") (term "1,0"))
                                             (rule "polySimp_addComm0" (formula "29") (term "1,0"))
                                             (rule "ifEqualsInteger" (formula "29"))
                                             (rule "equal_literals" (formula "29") (term "1,1"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "andLeft" (formula "29"))
                                             (rule "polySimp_homoEq" (formula "30"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "29"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "29") (term "0"))
                                             (rule "applyEq" (formula "28") (term "2,0") (ifseqformula "39"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "lenOfSeqEmptyEQ" (formula "39") (term "0") (ifseqformula "28"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "true_left" (formula "39"))
                                             (rule "lenOfSeqEmptyEQ" (formula "27") (term "1,1") (ifseqformula "28"))
                                             (rule "lenOfSeqEmptyEQ" (formula "29") (term "1,0,0") (ifseqformula "28"))
                                             (rule "lenOfSeqEmptyEQ" (formula "31") (term "1,0,0") (ifseqformula "28"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "lenOfSeqEmptyEQ" (formula "30") (term "1,0,0") (ifseqformula "28"))
                                             (rule "add_zero_right" (formula "27") (term "1"))
                                             (rule "add_literals" (formula "29") (term "0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0"))
                                             (rule "eqSymm" (formula "28"))
                                             (rule "eqSeqEmpty" (formula "28"))
                                             (rule "applyEqRigid" (formula "30") (term "0,1,0") (ifseqformula "27"))
                                             (rule "mul_literals" (formula "30") (term "1,0"))
                                             (rule "add_literals" (formula "30") (term "0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "applyEqRigid" (formula "29") (term "0,1,0") (ifseqformula "27"))
                                             (rule "mul_literals" (formula "29") (term "1,0"))
                                             (rule "add_literals" (formula "29") (term "0"))
                                             (rule "leq_literals" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "eqSeqConcat" (formula "39") (term "1"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "polySimp_addComm0" (formula "39") (term "1,0,0,1"))
                                             (rule "eqSeqSingleton" (formula "39") (term "1,1"))
                                             (rule "lenOfSeqSub" (formula "39") (term "0,0,1,1"))
                                             (rule "polySimp_elimSub" (formula "39") (term "1,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "39") (term "1,0,0,1,1"))
                                             (rule "ifEqualsInteger" (formula "39") (term "0,1,1"))
                                             (rule "equal_literals" (formula "39") (term "1,1,0,1,1"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "polySimp_homoEq" (formula "39") (term "1,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0,1,1"))
                                             (rule "polySimp_mulAssoc" (formula "39") (term "0,1,0,1,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "0,0,1,0,1,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,1,0,1,1"))
                                             (rule "polySimp_elimOne" (formula "39") (term "0,1,0,1,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "0,1,0,1,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1,1"))
                                             (rule "applyEq" (formula "39") (term "0,1,0,0,0,1,1") (ifseqformula "35"))
                                             (rule "mul_literals" (formula "39") (term "1,0,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1,1"))
                                             (rule "add_literals" (formula "39") (term "0,0,0,0,1,1"))
                                             (rule "applyEqRigid" (formula "39") (term "0,1,0,1,0,1,1") (ifseqformula "35"))
                                             (rule "mul_literals" (formula "39") (term "1,0,1,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "39") (term "0,1,0,1,1"))
                                             (rule "add_literals" (formula "39") (term "0,0,1,0,1,1"))
                                             (rule "applyEqRigid" (formula "39") (term "2,0,0,1,1,1") (ifseqformula "35"))
                                             (rule "applyEqRigid" (formula "39") (term "0,0,0,1") (ifseqformula "35"))
                                             (rule "polySimp_homoEq" (formula "39") (term "0,0,1"))
                                             (rule "mul_literals" (formula "39") (term "1,0,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "39") (term "0,0,0,0,1"))
                                             (rule "applyEqRigid" (formula "39") (term "2,0,1,0,1") (ifseqformula "28"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "eqSymm" (formula "39") (term "1,0,1"))
                                             (rule "eqSeqEmpty" (formula "39") (term "1,0,1"))
                                             (rule "replace_known_left" (formula "39") (term "1,0,1") (ifseqformula "28"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "applyEq" (formula "39") (term "1,0,0,1") (ifseqformula "28"))
                                             (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                             (rule "equal_literals" (formula "39") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "notLeft" (formula "39"))
                                             (rule "eqSeqConcat" (formula "44"))
                                              (builtin "One Step Simplification" (formula "44"))
                                             (rule "andLeft" (formula "44"))
                                             (rule "andLeft" (formula "44"))
                                             (rule "polySimp_addComm0" (formula "44") (term "1"))
                                             (rule "eqSeqSingleton" (formula "46"))
                                             (rule "andLeft" (formula "46"))
                                             (rule "lenOfSeqSub" (formula "46") (term "0"))
                                             (rule "polySimp_elimSub" (formula "46") (term "1,0"))
                                             (rule "polySimp_addComm0" (formula "46") (term "1,0"))
                                             (rule "ifEqualsInteger" (formula "46"))
                                             (rule "equal_literals" (formula "46") (term "1,1"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "andLeft" (formula "46"))
                                             (rule "polySimp_homoEq" (formula "47"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "47") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "46"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "46") (term "0"))
                                             (rule "applyEqRigid" (formula "45") (term "2,0") (ifseqformula "28"))
                                              (builtin "One Step Simplification" (formula "45"))
                                             (rule "lenOfSeqEmptyEQ" (formula "28") (term "0") (ifseqformula "45"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "lenOfSeqEmptyEQ" (formula "43") (term "1,1") (ifseqformula "44"))
                                             (rule "lenOfSeqEmptyEQ" (formula "47") (term "1,0,0") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "lenOfSeqEmptyEQ" (formula "46") (term "1,0,0") (ifseqformula "44"))
                                             (rule "lenOfSeqEmptyEQ" (formula "45") (term "1,0,0") (ifseqformula "44"))
                                             (rule "add_literals" (formula "43") (term "1"))
                                             (rule "add_literals" (formula "46") (term "0,0"))
                                             (rule "add_zero_right" (formula "45") (term "0,0"))
                                             (rule "eqSymm" (formula "44"))
                                             (rule "eqSeqEmpty" (formula "44"))
                                             (rule "applyEqRigid" (formula "46") (term "0,1,0") (ifseqformula "43"))
                                             (rule "mul_literals" (formula "46") (term "1,0"))
                                             (rule "add_literals" (formula "46") (term "0"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "true_left" (formula "46"))
                                             (rule "applyEq" (formula "45") (term "0,1,0") (ifseqformula "43"))
                                             (rule "mul_literals" (formula "45") (term "1,0"))
                                             (rule "add_literals" (formula "45") (term "0"))
                                             (rule "leq_literals" (formula "45"))
                                             (rule "true_left" (formula "45"))
                                             (rule "pullOutSelect" (formula "1") (term "0,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_3"))
                                             (rule "applyEq" (formula "2") (term "1,0,1,0,1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,0,0,0,1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "replaceKnownSelect_taclet000000_13" (formula "1") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_14" (formula "1") (term "2,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "72") (term "0,0,0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "72") (term "0,1,1,0,1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "eqSymm" (formula "70") (term "1,0,1"))
                                             (rule "replace_known_left" (formula "70") (term "0") (ifseqformula "50"))
                                              (builtin "One Step Simplification" (formula "70"))
                                             (rule "allRight" (formula "70") (inst "sk=iv_0"))
                                             (rule "impRight" (formula "70"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "59"))
                                             (rule "closeTrue" (formula "59"))
                                          )
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "67"))
                                          (rule "replaceKnownSelect_taclet000000_11" (formula "45") (term "0"))
                                          (rule "replaceKnownSelect_taclet00_1" (formula "45") (term "1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000000_12" (formula "45") (term "0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "45") (term "1"))
                                          (rule "impRight" (formula "79"))
                                          (rule "notRight" (formula "64"))
                                          (rule "close" (formula "66") (ifseqformula "1"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "andRight" (formula "63"))
                                       (branch "Case 1"
                                           (builtin "One Step Simplification" (formula "67"))
                                          (rule "replaceKnownSelect_taclet000000_11" (formula "45") (term "0"))
                                          (rule "replaceKnownSelect_taclet00_1" (formula "45") (term "1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000000_12" (formula "45") (term "0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "45") (term "1"))
                                          (rule "impRight" (formula "79"))
                                          (rule "notRight" (formula "68"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "eqSymm" (formula "84"))
                                          (rule "eqSymm" (formula "6"))
                                          (rule "eqSymm" (formula "4"))
                                          (rule "eqSymm" (formula "5"))
                                          (rule "eqSymm" (formula "2"))
                                          (rule "polySimp_homoEq" (formula "57"))
                                          (rule "polySimp_homoEq" (formula "64"))
                                          (rule "polySimp_homoEq" (formula "34"))
                                          (rule "polySimp_homoEq" (formula "58") (term "1"))
                                          (rule "mul_literals" (formula "58") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "58") (term "0,1"))
                                          (rule "polySimp_homoEq" (formula "35") (term "1"))
                                          (rule "mul_literals" (formula "35") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "35") (term "0,1"))
                                          (rule "polySimp_homoEq" (formula "61"))
                                          (rule "polySimp_homoEq" (formula "40"))
                                          (rule "polySimp_mulComm0" (formula "64") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "61") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "57") (term "0"))
                                          (rule "polySimp_addComm1" (formula "34") (term "0"))
                                          (rule "polySimp_rightDist" (formula "64") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0"))
                                          (rule "polySimp_elimOne" (formula "64") (term "1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "64") (term "0,1,0"))
                                          (rule "polySimp_rightDist" (formula "61") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "61") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "61") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "61") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "61") (term "0,1,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "40") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "0,1,0"))
                                          (rule "eqSeqConcat4" (formula "51"))
                                          (rule "andLeft" (formula "51"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,1,0,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,1,0,0"))
                                          (rule "mul_literals" (formula "41") (term "0,1,0,0,1,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "62"))
                                          (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1"))
                                          (rule "add_zero_right" (formula "59") (term "0,0,1"))
                                          (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "59") (term "0,1,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0"))
                                          (rule "add_zero_right" (formula "61") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "61") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "61") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "61") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "61") (term "0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "42"))
                                          (rule "inEqSimp_ltToLeq" (formula "37") (term "0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "57") (term "0"))
                                          (rule "add_zero_right" (formula "57") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0"))
                                          (rule "add_zero_right" (formula "64") (term "0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "35") (term "0"))
                                          (rule "add_zero_right" (formula "35") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                                          (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "63") (term "0"))
                                          (rule "polySimp_rightDist" (formula "57") (term "1,0,0"))
                                          (rule "mul_literals" (formula "57") (term "0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "60") (term "0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "41") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                          (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "64") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,1,0,0"))
                                          (rule "add_literals" (formula "41") (term "0,0,0,1,1,0,0"))
                                          (rule "add_zero_left" (formula "41") (term "0,0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "62") (term "0"))
                                          (rule "polySimp_addComm1" (formula "62") (term "0,0"))
                                          (rule "add_literals" (formula "62") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,1"))
                                          (rule "add_zero_left" (formula "39") (term "0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "59") (term "0,0,1"))
                                          (rule "add_literals" (formula "59") (term "0,0,0,1"))
                                          (rule "add_zero_left" (formula "59") (term "0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "61") (term "0,0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "61") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor2" (formula "61") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "61") (term "1,0,0,0,1,0"))
                                          (rule "times_zero_1" (formula "61") (term "0,0,0,1,0"))
                                          (rule "leq_literals" (formula "61") (term "0,0,1,0"))
                                           (builtin "One Step Simplification" (formula "61"))
                                          (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                                          (rule "add_literals" (formula "42") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                          (rule "add_literals" (formula "57") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "57") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "41") (term "0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "41") (term "0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor2" (formula "41") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "41") (term "1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "41") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "41") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                          (rule "add_literals" (formula "35") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "35") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "64") (term "0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "36") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "36") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_ltToLeq" (formula "63") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "63") (term "0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "63") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "61") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                          (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                          (rule "add_literals" (formula "42") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "42") (term "0,0"))
                                          (rule "polySimp_pullOutFactor2" (formula "42") (term "0"))
                                          (rule "add_literals" (formula "42") (term "1,0"))
                                          (rule "times_zero_1" (formula "42") (term "0"))
                                          (rule "leq_literals" (formula "42"))
                                          (rule "true_left" (formula "42"))
                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0"))
                                          (rule "add_zero_right" (formula "59") (term "0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "59") (term "0,1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0"))
                                          (rule "add_zero_right" (formula "40") (term "0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "63") (term "0,0,0,0,0"))
                                          (rule "replace_known_left" (formula "63") (term "0,0") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "inEqSimp_ltToLeq" (formula "39"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "58"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "58") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "36") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "62") (term "0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "62") (term "0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "41") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "59") (term "0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "59") (term "0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "40") (term "0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "40") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "60") (term "0,0,0,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "60") (term "0,1,0,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "41") (term "0,0") (ifseqformula "39"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "60") (term "0,0,0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "60") (term "0,0,0,1,0,0,0"))
                                          (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "applyEq" (formula "62") (term "0,0,0,0,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "60") (term "0,1,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "60") (term "0,0,0,0") (ifseqformula "4"))
                                          (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "32"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "applyEqRigid" (formula "82") (term "0,1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "82") (term "0,0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "82"))
                                          (rule "applyEq" (formula "59") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "59") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "44") (term "5") (ifseqformula "31"))
                                          (rule "applyEqRigid" (formula "63") (term "0,1,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "64") (term "1") (ifseqformula "6"))
                                          (rule "applyEq" (formula "58") (term "0,1,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "58") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "66") (term "1,0,1") (ifseqformula "6"))
                                          (rule "applyEq" (formula "62") (term "0,1,1,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "56") (term "0,0,0,0") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "57") (term "0,2,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "49") (term "0,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "63") (term "1") (ifseqformula "6"))
                                          (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "78") (term "0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "50") (term "1") (ifseqformula "5"))
                                          (rule "applyEqRigid" (formula "57") (term "1") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "58") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "65") (term "1,0,0") (ifseqformula "6"))
                                          (rule "applyEq" (formula "43") (term "0,1") (ifseqformula "26"))
                                          (rule "eqSymm" (formula "43") (term "1"))
                                          (rule "applyEqRigid" (formula "56") (term "0,1,0,1") (ifseqformula "4"))
                                          (rule "applyEq" (formula "67") (term "0") (ifseqformula "5"))
                                          (rule "applyEqRigid" (formula "56") (term "0,1,2,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "43") (term "0,1,0") (ifseqformula "26"))
                                          (rule "eqSymm" (formula "43") (term "1,0"))
                                          (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "55") (term "0,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "57") (term "0,1,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "66") (term "0") (ifseqformula "6"))
                                          (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "66") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "27") (term "5") (ifseqformula "25"))
                                          (rule "applyEq" (formula "26") (term "0") (ifseqformula "49"))
                                          (rule "applyEq" (formula "77") (term "0,0") (ifseqformula "12"))
                                          (rule "eqSymm" (formula "77"))
                                          (rule "applyEq" (formula "57") (term "1") (ifseqformula "5"))
                                          (rule "applyEq" (formula "49") (term "1") (ifseqformula "26"))
                                          (rule "applyEq" (formula "77") (term "0,1,1") (ifseqformula "12"))
                                          (rule "polySimp_sepPosMonomial" (formula "35") (term "1"))
                                          (rule "mul_literals" (formula "35") (term "1,1"))
                                          (rule "polySimp_sepPosMonomial" (formula "34"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1"))
                                          (rule "mul_literals" (formula "34") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                          (rule "applyEqRigid" (formula "41") (term "1,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "59") (term "0,0,0,1,0") (ifseqformula "34"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "59") (term "0,0,1,0"))
                                          (rule "mul_literals" (formula "59") (term "0,0,0,1,0"))
                                          (rule "applyEqRigid" (formula "55") (term "1,0") (ifseqformula "34"))
                                          (rule "polySimp_addComm1" (formula "55") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "55") (term "0,0"))
                                          (rule "add_literals" (formula "55") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "55") (term "0,0"))
                                          (rule "applyEqRigid" (formula "42") (term "1,1,0") (ifseqformula "34"))
                                          (rule "polySimp_addAssoc" (formula "42") (term "1,0"))
                                          (rule "add_literals" (formula "42") (term "0,1,0"))
                                          (rule "applyEqRigid" (formula "36") (term "0,1,0,1,0") (ifseqformula "34"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "36") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,1,0"))
                                          (rule "add_literals" (formula "36") (term "1,1,0,1,0"))
                                          (rule "times_zero_1" (formula "36") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,1,0"))
                                          (rule "qeq_literals" (formula "36") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "applyEq" (formula "39") (term "0,0,0,0,1,0") (ifseqformula "34"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "0,0,0,1,0"))
                                          (rule "mul_literals" (formula "39") (term "0,0,0,0,1,0"))
                                          (rule "applyEqRigid" (formula "38") (term "1,2,0,0") (ifseqformula "34"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "2,0,0"))
                                          (rule "add_literals" (formula "38") (term "0,2,0,0"))
                                          (rule "applyEq" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                          (rule "mul_literals" (formula "35") (term "0,0,0"))
                                          (rule "applyEq" (formula "40") (term "1,1,0,1,0") (ifseqformula "34"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "1,0,1,0"))
                                          (rule "add_literals" (formula "40") (term "0,1,0,1,0"))
                                          (rule "applyEqRigid" (formula "59") (term "1,1,1,0") (ifseqformula "34"))
                                          (rule "polySimp_addAssoc" (formula "59") (term "1,1,0"))
                                          (rule "add_literals" (formula "59") (term "0,1,1,0"))
                                          (rule "applyEqRigid" (formula "37") (term "0,1,0,0") (ifseqformula "34"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,0"))
                                          (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "40") (term "0,0,0,0,1,0") (ifseqformula "34"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "0,0,0,1,0"))
                                          (rule "mul_literals" (formula "40") (term "0,0,0,0,1,0"))
                                          (rule "applyEq" (formula "37") (term "0,1") (ifseqformula "34"))
                                          (rule "applyEqRigid" (formula "58") (term "1,0") (ifseqformula "34"))
                                          (rule "polySimp_addComm1" (formula "58") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "58") (term "0,0"))
                                          (rule "add_literals" (formula "58") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "58") (term "0,0"))
                                          (rule "applyEqRigid" (formula "35") (term "0,1") (ifseqformula "34"))
                                          (rule "polySimp_homoEq" (formula "35") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,1"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,1"))
                                          (rule "add_literals" (formula "35") (term "0,0,1"))
                                          (rule "applyEq" (formula "56") (term "2,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "60") (term "1,1,0") (ifseqformula "34"))
                                          (rule "polySimp_addAssoc" (formula "60") (term "1,0"))
                                          (rule "add_literals" (formula "60") (term "0,1,0"))
                                          (rule "applyEqRigid" (formula "38") (term "2,0") (ifseqformula "34"))
                                          (rule "lenOfSeqSubEQ" (formula "39") (term "1,1,0,1,0") (ifseqformula "38"))
                                          (rule "polySimp_elimSub" (formula "39") (term "1,1,1,0,1,0"))
                                          (rule "mul_literals" (formula "39") (term "1,1,1,1,0,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "1,1,1,0,1,0"))
                                          (rule "lenOfSeqSubEQ" (formula "36") (term "1,0,0") (ifseqformula "38"))
                                          (rule "polySimp_elimSub" (formula "36") (term "1,1,0,0"))
                                          (rule "times_zero_2" (formula "36") (term "1,1,1,0,0"))
                                          (rule "add_zero_right" (formula "36") (term "1,1,0,0"))
                                          (rule "lenOfSeqSubEQ" (formula "39") (term "1,0,0") (ifseqformula "38"))
                                          (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0"))
                                          (rule "times_zero_2" (formula "39") (term "1,1,1,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "1,1,0,0"))
                                          (rule "lenOfSeqSubEQ" (formula "32") (term "0") (ifseqformula "38"))
                                          (rule "polySimp_elimSub" (formula "32") (term "1,0"))
                                          (rule "mul_literals" (formula "32") (term "1,1,0"))
                                          (rule "add_zero_right" (formula "32") (term "1,0"))
                                          (rule "lenOfSeqSubEQ" (formula "40") (term "1,0,0") (ifseqformula "38"))
                                          (rule "polySimp_elimSub" (formula "40") (term "1,1,0,0"))
                                          (rule "times_zero_2" (formula "40") (term "1,1,1,0,0"))
                                          (rule "add_zero_right" (formula "40") (term "1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "40") (term "0"))
                                          (rule "lenOfSeqSubEQ" (formula "34") (term "0") (ifseqformula "38"))
                                          (rule "polySimp_elimSub" (formula "34") (term "1,0"))
                                          (rule "mul_literals" (formula "34") (term "1,1,0"))
                                          (rule "add_zero_right" (formula "34") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "34"))
                                          (rule "polySimp_homoEq" (formula "34") (term "1"))
                                          (rule "times_zero_2" (formula "34") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "34") (term "0,1"))
                                          (rule "lenOfSeqSubEQ" (formula "56") (term "1,2,0,0") (ifseqformula "38"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,1,2,0,0"))
                                          (rule "mul_literals" (formula "56") (term "1,1,1,2,0,0"))
                                          (rule "add_zero_right" (formula "56") (term "1,1,2,0,0"))
                                          (rule "lenOfSeqSubEQ" (formula "36") (term "2,0,1,1") (ifseqformula "38"))
                                          (rule "polySimp_elimSub" (formula "36") (term "1,2,0,1,1"))
                                          (rule "mul_literals" (formula "36") (term "1,1,2,0,1,1"))
                                          (rule "add_zero_right" (formula "36") (term "1,2,0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,1,0,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,1,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,1,0,1,0,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,1,1,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,1,0,1,0,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,1,1,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "40") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "40") (term "0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "40") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                                          (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "34") (term "0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                          (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "40") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "56") (term "0,1,2,0,0"))
                                          (rule "add_zero_right" (formula "56") (term "0,0,1,2,0,0"))
                                          (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,2,0,0"))
                                          (rule "mul_literals" (formula "56") (term "0,1,0,0,1,2,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "0,2,0,1,1"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,2,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,0,2,0,1,1"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,0,2,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                          (rule "add_literals" (formula "34") (term "0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "38") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "38") (term "0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,2,0,0"))
                                          (rule "add_literals" (formula "55") (term "0,0,0,1,2,0,0"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0,2,0,1,1"))
                                          (rule "add_literals" (formula "35") (term "0,0,0,2,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "54"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                          (rule "polySimp_elimOne" (formula "54") (term "0"))
                                          (rule "applyEqRigid" (formula "57") (term "0,1,0") (ifseqformula "54"))
                                          (rule "polySimp_pullOutFactor1" (formula "57") (term "0"))
                                          (rule "add_literals" (formula "57") (term "1,0"))
                                          (rule "times_zero_1" (formula "57") (term "0"))
                                          (rule "leq_literals" (formula "57"))
                                          (rule "true_left" (formula "57"))
                                          (rule "applyEq" (formula "57") (term "0,1,0,0") (ifseqformula "54"))
                                          (rule "polySimp_sepPosMonomial" (formula "36") (term "1"))
                                          (rule "mul_literals" (formula "36") (term "1,1"))
                                          (rule "polySimp_sepNegMonomial" (formula "34") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "34") (term "0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "57") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "57") (term "0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "57") (term "0,0,1,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "39"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1"))
                                          (rule "mul_literals" (formula "39") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                          (rule "applyEqRigid" (formula "35") (term "1,0,0") (ifseqformula "39"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                          (rule "add_literals" (formula "35") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "35") (term "0,0"))
                                          (rule "applyEq" (formula "38") (term "1,1,0,1,0") (ifseqformula "39"))
                                          (rule "polySimp_addComm1" (formula "38") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "1,0,1,0,0"))
                                          (rule "add_literals" (formula "38") (term "0,1,0,1,0,0"))
                                          (rule "add_zero_left" (formula "38") (term "1,0,1,0,0"))
                                          (rule "applyEq" (formula "35") (term "2,0,1,1") (ifseqformula "39"))
                                          (rule "applyEq" (formula "32") (term "0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "55") (term "1,2,0,0") (ifseqformula "39"))
                                          (rule "polySimp_addAssoc" (formula "55") (term "2,0,0"))
                                          (rule "add_literals" (formula "55") (term "0,2,0,0"))
                                          (rule "add_zero_left" (formula "55") (term "2,0,0"))
                                          (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "39"))
                                          (rule "polySimp_addComm1" (formula "38") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "38") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "0,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "57"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1"))
                                          (rule "polySimp_rightDist" (formula "57") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "57") (term "1,1"))
                                          (rule "mul_literals" (formula "57") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "57") (term "1,1"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "polySimp_homoEq" (formula "57") (term "1"))
                                          (rule "mul_literals" (formula "57") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "57") (term "0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "0,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "57") (term "1"))
                                          (rule "mul_literals" (formula "57") (term "1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0"))
                                          (rule "polySimp_homoEq" (formula "39"))
                                          (rule "polySimp_elimOne" (formula "39") (term "0,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "39"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                          (rule "mul_literals" (formula "39") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                          (rule "applyEqRigid" (formula "55") (term "2,0,0") (ifseqformula "39"))
                                          (rule "applyEqRigid" (formula "38") (term "1,0,1,0") (ifseqformula "39"))
                                          (rule "applyEqRigid" (formula "35") (term "1,2,0,1,1") (ifseqformula "39"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "2,0,1,1"))
                                          (rule "add_literals" (formula "35") (term "0,2,0,1,1"))
                                          (rule "add_zero_left" (formula "35") (term "2,0,1,1"))
                                          (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "39"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                          (rule "add_literals" (formula "32") (term "0,0"))
                                          (rule "add_zero_left" (formula "32") (term "0"))
                                          (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "39"))
                                          (rule "applyEqRigid" (formula "38") (term "0,0") (ifseqformula "39"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "0,0,0"))
                                          (rule "polySimp_homoEq" (formula "39"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "39"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                          (rule "mul_literals" (formula "39") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                          (rule "applyEqRigid" (formula "35") (term "1,0,0") (ifseqformula "39"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                          (rule "add_literals" (formula "35") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "35") (term "0,0"))
                                          (rule "applyEq" (formula "32") (term "0") (ifseqformula "39"))
                                          (rule "applyEqRigid" (formula "55") (term "1,2,0,0") (ifseqformula "39"))
                                          (rule "polySimp_addAssoc" (formula "55") (term "2,0,0"))
                                          (rule "add_literals" (formula "55") (term "0,2,0,0"))
                                          (rule "add_zero_left" (formula "55") (term "2,0,0"))
                                          (rule "applyEqRigid" (formula "38") (term "1,1,0,1,0") (ifseqformula "39"))
                                          (rule "polySimp_addComm1" (formula "38") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "1,0,1,0,0"))
                                          (rule "add_literals" (formula "38") (term "0,1,0,1,0,0"))
                                          (rule "add_zero_left" (formula "38") (term "1,0,1,0,0"))
                                          (rule "applyEqRigid" (formula "35") (term "2,0,1,1") (ifseqformula "39"))
                                          (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "39"))
                                          (rule "polySimp_addComm1" (formula "38") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "38") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                          (rule "mul_literals" (formula "32") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "38"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "35") (term "0") (ifseqformula "32"))
                                          (rule "leq_literals" (formula "35") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "35"))
                                          (rule "andLeft" (formula "35"))
                                          (rule "applyEq" (formula "4") (term "1") (ifseqformula "35"))
                                          (rule "applyEqRigid" (formula "56") (term "1") (ifseqformula "35"))
                                          (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "35"))
                                          (rule "eqSymm" (formula "49"))
                                          (rule "applyEqRigid" (formula "38") (term "1") (ifseqformula "35"))
                                          (rule "applyEq" (formula "43") (term "0,1,0") (ifseqformula "35"))
                                          (rule "eqSymm" (formula "43") (term "1,0"))
                                          (rule "applyEq" (formula "43") (term "0,1,0") (ifseqformula "49"))
                                          (rule "applyEq" (formula "26") (term "1") (ifseqformula "49"))
                                          (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "49"))
                                          (rule "equalityToSeqGetAndSeqLenRight" (formula "75") (inst "iv=iv"))
                                          (rule "inEqSimp_ltToLeq" (formula "75") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "75") (term "0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "75") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "75") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "75") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "75") (term "1,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "75") (term "1,1,1,0,0,1"))
                                          (rule "eqSeqConcat" (formula "49"))
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "andLeft" (formula "49"))
                                          (rule "andLeft" (formula "49"))
                                          (rule "polySimp_addComm0" (formula "49") (term "1"))
                                          (rule "eqSeqSingleton" (formula "51"))
                                          (rule "andLeft" (formula "51"))
                                          (rule "lenOfSeqSub" (formula "51") (term "0"))
                                          (rule "polySimp_elimSub" (formula "51") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "51") (term "1,0"))
                                          (rule "lenOfSeqSubEQ" (formula "49") (term "1,1") (ifseqformula "38"))
                                          (rule "polySimp_elimSub" (formula "49") (term "1,1,1"))
                                          (rule "mul_literals" (formula "49") (term "1,1,1,1"))
                                          (rule "add_zero_right" (formula "49") (term "1,1,1"))
                                          (rule "polySimp_homoEq" (formula "49"))
                                          (rule "polySimp_addComm1" (formula "49") (term "0"))
                                          (rule "lenOfSeqSubEQ" (formula "52") (term "1,0,0") (ifseqformula "36"))
                                          (rule "polySimp_elimSub" (formula "52") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "52") (term "1,1,1,0,0"))
                                          (rule "add_zero_right" (formula "52") (term "1,1,0,0"))
                                          (rule "lenOfSeqSubEQ" (formula "50") (term "2,0") (ifseqformula "36"))
                                          (rule "polySimp_elimSub" (formula "50") (term "1,2,0"))
                                          (rule "mul_literals" (formula "50") (term "1,1,2,0"))
                                          (rule "add_zero_right" (formula "50") (term "1,2,0"))
                                          (rule "ifEqualsInteger" (formula "51"))
                                          (rule "equal_literals" (formula "51") (term "1,1"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "andLeft" (formula "51"))
                                          (rule "polySimp_homoEq" (formula "52"))
                                          (rule "polySimp_mulComm0" (formula "52") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "52") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "52") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "52") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "52") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "49") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "49") (term "0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "49") (term "0,0,0,1,0"))
                                          (rule "lenOfSeqSubEQ" (formula "52") (term "1,0,0") (ifseqformula "36"))
                                          (rule "polySimp_elimSub" (formula "52") (term "1,1,0,0"))
                                          (rule "times_zero_2" (formula "52") (term "1,1,1,0,0"))
                                          (rule "add_zero_right" (formula "52") (term "1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "52") (term "0"))
                                          (rule "lenOfSeqSubEQ" (formula "51") (term "0") (ifseqformula "50"))
                                          (rule "polySimp_elimSub" (formula "51") (term "1,0"))
                                          (rule "mul_literals" (formula "51") (term "1,1,0"))
                                          (rule "add_zero_right" (formula "51") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "53") (term "0,1,0,0"))
                                          (rule "add_zero_right" (formula "53") (term "0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "50") (term "0,2,0"))
                                          (rule "add_zero_right" (formula "50") (term "0,0,2,0"))
                                          (rule "polySimp_rightDist" (formula "50") (term "1,0,0,2,0"))
                                          (rule "mul_literals" (formula "50") (term "0,1,0,0,2,0"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "53") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "50") (term "0,0,2,0"))
                                          (rule "add_literals" (formula "50") (term "0,0,0,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "52") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "52") (term "0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "52") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "51") (term "0,1,0,0"))
                                          (rule "add_zero_right" (formula "51") (term "0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "51") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "51") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "51") (term "0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "51") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0"))
                                          (rule "add_zero_right" (formula "51") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "51"))
                                          (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "49"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                                          (rule "mul_literals" (formula "49") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                                          (rule "polySimp_sepPosMonomial" (formula "52"))
                                          (rule "polySimp_mulComm0" (formula "52") (term "1"))
                                          (rule "polySimp_rightDist" (formula "52") (term "1"))
                                          (rule "mul_literals" (formula "52") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "52") (term "1,1"))
                                          (rule "applyEq" (formula "53") (term "1,0,0") (ifseqformula "52"))
                                          (rule "applyEqRigid" (formula "51") (term "1,1,0") (ifseqformula "52"))
                                          (rule "applyEqRigid" (formula "51") (term "0,1,0,0,1,0") (ifseqformula "52"))
                                          (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "51") (term "0,0,0,1,0"))
                                          (rule "applyEqRigid" (formula "50") (term "2,0") (ifseqformula "52"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "49") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "49") (term "0,0,0"))
                                          (rule "applyEqRigid" (formula "40") (term "0") (ifseqformula "49"))
                                          (rule "polySimp_homoEq" (formula "40"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "40") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                          (rule "add_literals" (formula "40") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "40") (term "0,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "40"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1"))
                                          (rule "polySimp_elimOne" (formula "40") (term "1"))
                                          (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "52") (term "0,1,0,0,0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "40"))
                                          (rule "inEqSimp_commuteGeq" (formula "39"))
                                          (rule "applyEqRigid" (formula "60") (term "2,0,0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "36") (term "1,2,0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "52") (term "1,1,0") (ifseqformula "40"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "polySimp_homoEq" (formula "52") (term "1"))
                                          (rule "mul_literals" (formula "52") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "52") (term "0,1"))
                                          (rule "applyEqRigid" (formula "39") (term "0") (ifseqformula "40"))
                                          (rule "inEqSimp_commuteLeq" (formula "39"))
                                          (rule "polySimp_sepPosMonomial" (formula "52") (term "1"))
                                          (rule "mul_literals" (formula "52") (term "1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "51") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "51") (term "0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "51") (term "0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "52") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "52") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "51"))
                                          (rule "polySimp_mulComm0" (formula "51") (term "1"))
                                          (rule "polySimp_rightDist" (formula "51") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                                          (rule "mul_literals" (formula "51") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "51") (term "1,1"))
                                          (rule "eqSeqConcat" (formula "26"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "polySimp_addComm0" (formula "26") (term "1"))
                                          (rule "eqSeqSingleton" (formula "28"))
                                          (rule "andLeft" (formula "28"))
                                          (rule "lenOfSeqSub" (formula "28") (term "0"))
                                          (rule "polySimp_elimSub" (formula "28") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "28") (term "1,0"))
                                          (rule "lenOfSeqSubEQ" (formula "26") (term "1,1") (ifseqformula "53"))
                                          (rule "polySimp_homoEq" (formula "26"))
                                          (rule "polySimp_elimSub" (formula "26") (term "1,1,0,0"))
                                          (rule "times_zero_2" (formula "26") (term "1,1,1,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0"))
                                          (rule "lenOfSeqSubEQ" (formula "29") (term "1,0,0") (ifseqformula "39"))
                                          (rule "polySimp_elimSub" (formula "29") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "29") (term "1,1,1,0,0"))
                                          (rule "add_zero_right" (formula "29") (term "1,1,0,0"))
                                          (rule "lenOfSeqSubEQ" (formula "27") (term "2,0") (ifseqformula "53"))
                                          (rule "polySimp_elimSub" (formula "27") (term "1,2,0"))
                                          (rule "mul_literals" (formula "27") (term "1,1,2,0"))
                                          (rule "add_zero_right" (formula "27") (term "1,2,0"))
                                          (rule "ifEqualsInteger" (formula "28"))
                                          (rule "equal_literals" (formula "28") (term "1,1"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "andLeft" (formula "28"))
                                          (rule "polySimp_homoEq" (formula "29"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,1,0"))
                                          (rule "lenOfSeqSubEQ" (formula "29") (term "1,0,0") (ifseqformula "27"))
                                          (rule "polySimp_elimSub" (formula "29") (term "1,1,0,0"))
                                          (rule "times_zero_2" (formula "29") (term "1,1,1,0,0"))
                                          (rule "add_zero_right" (formula "29") (term "1,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0"))
                                          (rule "lenOfSeqSubEQ" (formula "28") (term "0") (ifseqformula "54"))
                                          (rule "polySimp_elimSub" (formula "28") (term "1,0"))
                                          (rule "mul_literals" (formula "28") (term "1,1,0"))
                                          (rule "add_zero_right" (formula "28") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,0,0"))
                                          (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "27") (term "0,2,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,2,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0,2,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,0,2,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0,2,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,0,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "26"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                          (rule "mul_literals" (formula "26") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                          (rule "applyEqRigid" (formula "29") (term "0,1,0,0,1,0") (ifseqformula "26"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,1,0"))
                                          (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "26"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "28") (term "0,0"))
                                          (rule "polySimp_pullOutFactor2" (formula "28") (term "0"))
                                          (rule "add_literals" (formula "28") (term "1,0"))
                                          (rule "times_zero_1" (formula "28") (term "0"))
                                          (rule "leq_literals" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "applyEqRigid" (formula "27") (term "2,0") (ifseqformula "26"))
                                          (rule "applyEqRigid" (formula "28") (term "1,1,0") (ifseqformula "26"))
                                          (rule "polySimp_sepPosMonomial" (formula "28"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1"))
                                          (rule "mul_literals" (formula "28") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "polySimp_homoEq" (formula "28") (term "1"))
                                          (rule "mul_literals" (formula "28") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "28") (term "0,1"))
                                          (rule "polySimp_sepPosMonomial" (formula "28") (term "1"))
                                          (rule "mul_literals" (formula "28") (term "1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "0,0,0"))
                                          (rule "applyEq" (formula "54") (term "0") (ifseqformula "26"))
                                          (rule "inEqSimp_homoInEq0" (formula "54"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "54") (term "1,0"))
                                          (rule "mul_literals" (formula "54") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "0"))
                                          (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                          (rule "add_literals" (formula "54") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "54") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "54"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                          (rule "polySimp_elimOne" (formula "54") (term "0"))
                                          (rule "eqSeqConcat" (formula "46") (term "1"))
                                           (builtin "One Step Simplification" (formula "46"))
                                          (rule "polySimp_addComm0" (formula "46") (term "1,0,0,1"))
                                          (rule "eqSeqSingleton" (formula "46") (term "1,1"))
                                          (rule "lenOfSeqSubEQ" (formula "46") (term "1,1,0,0,1") (ifseqformula "27"))
                                          (rule "polySimp_elimSub" (formula "46") (term "1,1,1,0,0,1"))
                                          (rule "mul_literals" (formula "46") (term "1,1,1,1,0,0,1"))
                                          (rule "add_zero_right" (formula "46") (term "1,1,1,0,0,1"))
                                          (rule "polySimp_homoEq" (formula "46") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0,0,0,1"))
                                          (rule "lenOfSeqSubEQ" (formula "46") (term "2,0,1,0,1") (ifseqformula "27"))
                                          (rule "polySimp_elimSub" (formula "46") (term "1,2,0,1,0,1"))
                                          (rule "mul_literals" (formula "46") (term "1,1,2,0,1,0,1"))
                                          (rule "add_zero_right" (formula "46") (term "1,2,0,1,0,1"))
                                          (rule "lenOfSeqSub" (formula "46") (term "0,0,1,1"))
                                          (rule "polySimp_elimSub" (formula "46") (term "1,0,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "46") (term "1,0,0,1,1"))
                                          (rule "lenOfSeqSubEQ" (formula "46") (term "1,0,0,1,1,1") (ifseqformula "27"))
                                          (rule "polySimp_elimSub" (formula "46") (term "1,1,0,0,1,1,1"))
                                          (rule "times_zero_2" (formula "46") (term "1,1,1,0,0,1,1,1"))
                                          (rule "add_zero_right" (formula "46") (term "1,1,0,0,1,1,1"))
                                          (rule "ifEqualsInteger" (formula "46") (term "0,1,1"))
                                          (rule "equal_literals" (formula "46") (term "1,1,0,1,1"))
                                           (builtin "One Step Simplification" (formula "46"))
                                          (rule "polySimp_homoEq" (formula "46") (term "1,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0,1,1"))
                                          (rule "polySimp_mulAssoc" (formula "46") (term "0,1,0,1,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "0,0,1,0,1,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0,1,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "46") (term "0,1,0,1,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,1,0,1,1"))
                                          (rule "lenOfSeqSubEQ" (formula "46") (term "0,0,0,1,1") (ifseqformula "27"))
                                          (rule "polySimp_elimSub" (formula "46") (term "1,0,0,0,1,1"))
                                          (rule "times_zero_2" (formula "46") (term "1,1,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "46") (term "1,0,0,0,1,1"))
                                          (rule "lenOfSeqSubEQ" (formula "46") (term "1,0,0,1,0,1,1") (ifseqformula "53"))
                                          (rule "polySimp_elimSub" (formula "46") (term "1,1,0,0,1,0,1,1"))
                                          (rule "mul_literals" (formula "46") (term "1,1,1,0,0,1,0,1,1"))
                                          (rule "add_zero_right" (formula "46") (term "1,1,0,0,1,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0,1,0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "46") (term "0,2,0,1,0,1"))
                                          (rule "add_zero_right" (formula "46") (term "0,0,2,0,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,2,0,1,0,1"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,2,0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,2,0,1,0,1"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,2,0,1,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "46") (term "0,1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "46") (term "0,0,1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "46") (term "0,1,0,0,1,1,1"))
                                          (rule "add_zero_right" (formula "46") (term "0,0,1,0,0,1,1,1"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,1,1,1"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,1,1,1"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,1,1,1"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,1,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "46") (term "0,0,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,0,0,0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "46") (term "0,1,0,1,0,1,1"))
                                          (rule "add_zero_right" (formula "46") (term "0,0,1,0,1,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,1,0,1,1"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,1,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,1,0,1,1"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,1,0,1,0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,1,1"))
                                          (rule "polySimp_sepPosMonomial" (formula "46") (term "0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,1"))
                                          (rule "polySimp_sepPosMonomial" (formula "46") (term "1,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,1,0,1,1"))
                                          (rule "mul_literals" (formula "46") (term "0,1,1,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0,2,0,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "0,0,2,0,1,0,1"))
                                          (rule "polySimp_elimOne" (formula "46") (term "0,0,2,0,1,0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0,1,0,0,1,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "0,0,1,0,0,1,1,1"))
                                          (rule "polySimp_elimOne" (formula "46") (term "0,0,1,0,0,1,1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0,1,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "0,0,1,0,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "46") (term "0,0,1,0,0,0,1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "0,0,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "46") (term "0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0,0,1,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "0,0,0,1,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "46") (term "0,0,0,1,0,1,1"))
                                          (rule "applyEq" (formula "46") (term "0,1,0,1,1") (ifseqformula "26"))
                                          (rule "polySimp_homoEq" (formula "46") (term "1,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0,1,1"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,1,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,1,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0,0,1,0,1,1"))
                                          (rule "add_literals" (formula "46") (term "0,0,0,1,0,1,1"))
                                          (rule "add_zero_left" (formula "46") (term "0,0,1,0,1,1"))
                                          (rule "polySimp_sepNegMonomial" (formula "46") (term "1,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "46") (term "0,1,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,1,1"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,1,1"))
                                          (rule "pullOutSelect" (formula "82") (term "1,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                                          (rule "applyEq" (formula "83") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "83") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "replaceKnownSelect_taclet000000_13" (formula "1") (term "2,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000000_14" (formula "1") (term "2,0"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "83") (term "1,0,0,0") (ifseqformula "1"))
                                          (rule "replaceKnownSelect_taclet00000000_18" (formula "83") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00000000_19" (formula "83") (term "0,0,0"))
                                          (rule "applyEqReverse" (formula "83") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                          (rule "replaceKnownSelect_taclet00000000_18" (formula "83") (term "0,0,1,0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00000000_19" (formula "83") (term "0,0,1,0,1"))
                                          (rule "applyEqReverse" (formula "83") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                                          (rule "replaceKnownSelect_taclet00000000_18" (formula "83") (term "0,1,1,1,0,0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00000000_19" (formula "83") (term "0,1,1,1,0,0,1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "eqSymm" (formula "82") (term "0"))
                                          (rule "eqSymm" (formula "82") (term "1,0,1"))
                                          (rule "lenOfSeqConcat" (formula "82") (term "1,1,1,0,0,1"))
                                           (builtin "One Step Simplification" (formula "82"))
                                          (rule "polySimp_addComm0" (formula "82") (term "1,1,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "82") (term "1,1,0,0,1"))
                                          (rule "add_literals" (formula "82") (term "0,1,1,0,0,1"))
                                          (rule "add_zero_left" (formula "82") (term "1,1,0,0,1"))
                                          (rule "lenOfSeqConcat" (formula "82") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "82"))
                                          (rule "polySimp_addComm0" (formula "82") (term "1,0"))
                                          (rule "applyEq" (formula "82") (term "0,1,0,1,1,0,1") (ifseqformula "6"))
                                          (rule "getOfSeqSub" (formula "56") (term "0"))
                                          (rule "castDel" (formula "56") (term "2,0"))
                                          (rule "add_zero_left" (formula "56") (term "1,1,0"))
                                          (rule "leq_literals" (formula "56") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "polySimp_elimSub" (formula "56") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "56") (term "0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "56") (term "1,0,0"))
                                          (rule "polySimp_addComm0" (formula "56") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "56") (term "1,0,0"))
                                          (rule "add_literals" (formula "56") (term "1,1,1,0,0"))
                                          (rule "times_zero_1" (formula "56") (term "1,1,0,0"))
                                          (rule "add_zero_right" (formula "56") (term "1,0,0"))
                                          (rule "less_literals" (formula "56") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "getOfSeqSub" (formula "29") (term "0"))
                                          (rule "castDel" (formula "29") (term "2,0"))
                                          (rule "leq_literals" (formula "29") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "add_zero_left" (formula "29") (term "1,1,0"))
                                          (rule "polySimp_elimSub" (formula "29") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "1,0,0"))
                                          (rule "polySimp_addComm0" (formula "29") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "29") (term "1,0,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,1,0,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,1,0,0"))
                                          (rule "add_literals" (formula "29") (term "1,0,0"))
                                          (rule "less_literals" (formula "29") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "getOfSeqSub" (formula "46") (term "0,1,1,1"))
                                          (rule "castDel" (formula "46") (term "2,0,1,1,1"))
                                          (rule "add_zero_left" (formula "46") (term "1,1,0,1,1,1"))
                                          (rule "leq_literals" (formula "46") (term "0,0,0,1,1,1"))
                                           (builtin "One Step Simplification" (formula "46"))
                                          (rule "polySimp_elimSub" (formula "46") (term "1,0,0,1,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,1,1,1"))
                                          (rule "add_zero_right" (formula "46") (term "0,0,0,1,1,1"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,1,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,1,1,1"))
                                          (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "0,1,0,0,0,1,1,1"))
                                          (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,1,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,1,1,1"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,1,1"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,1,1"))
                                          (rule "mul_literals" (formula "46") (term "0,1,0,0,1,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,1,1,1"))
                                          (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,1,1,1"))
                                          (rule "getOfSeqConcat" (formula "82") (term "1,1,0,1"))
                                          (rule "eqSymm" (formula "82") (term "1,0,1"))
                                          (rule "polySimp_elimSub" (formula "82") (term "1,2,0,1,0,1"))
                                          (rule "polySimp_addComm0" (formula "82") (term "1,2,0,1,0,1"))
                                          (rule "getOfSeqSingleton" (formula "82") (term "2,0,1,0,1"))
                                          (rule "castDel" (formula "82") (term "1,2,0,1,0,1"))
                                          (rule "castDel" (formula "82") (term "2,2,0,1,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "82") (term "0,0,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,1,0,1"))
                                          (rule "polySimp_sepPosMonomial" (formula "82") (term "0,2,0,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "82") (term "1,0,2,0,1,0,1"))
                                          (rule "polySimp_elimOne" (formula "82") (term "1,0,2,0,1,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "82") (term "1,0,0,1,0,1"))
                                          (rule "mul_literals" (formula "82") (term "0,1,0,0,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,1,0,1"))
                                          (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,1,0,1"))
                                          (rule "pullOutSelect" (formula "82") (term "1,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_3"))
                                          (rule "applyEq" (formula "83") (term "1,0,1,1,0,1") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "replaceKnownSelect_taclet00_3" (formula "1") (term "2,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_4" (formula "1") (term "2,0"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "83") (term "1,0,1,1,0,1") (ifseqformula "1"))
                                          (rule "replaceKnownSelect_taclet0000_8" (formula "83") (term "0,1,1,0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "83") (term "0,1,1,0,1"))
                                          (rule "applyEqReverse" (formula "83") (term "1,0,0,0") (ifseqformula "1"))
                                          (rule "replaceKnownSelect_taclet0000_8" (formula "83") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "83") (term "0,0,0"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "polySimp_homoEq" (formula "82") (term "0"))
                                          (rule "polySimp_addComm1" (formula "82") (term "0,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "82") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "82") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "82") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0"))
                                          (rule "mul_literals" (formula "82") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "82") (term "1,1,0"))
                                          (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "69"))
                                          (rule "closeTrue" (formula "69"))
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "67"))
                                          (rule "replaceKnownSelect_taclet000000_11" (formula "45") (term "0"))
                                          (rule "replaceKnownSelect_taclet00_1" (formula "45") (term "1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000000_12" (formula "45") (term "0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "45") (term "1"))
                                          (rule "notRight" (formula "63"))
                                          (rule "close" (formula "72") (ifseqformula "1"))
                                       )
                                    )
                                 )
                                 (branch "pre add_857115291_15 (information flow)"
                                    (rule "andRight" (formula "63"))
                                    (branch "Case 1"
                                        (builtin "One Step Simplification" (formula "67"))
                                       (rule "replaceKnownSelect_taclet000000_11" (formula "45") (term "0"))
                                       (rule "replaceKnownSelect_taclet00_1" (formula "45") (term "1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000000_12" (formula "45") (term "0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "45") (term "1"))
                                       (rule "impRight" (formula "79"))
                                       (rule "notRight" (formula "68"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "eqSymm" (formula "84"))
                                       (rule "eqSymm" (formula "6"))
                                       (rule "eqSymm" (formula "5"))
                                       (rule "eqSymm" (formula "4"))
                                       (rule "close" (formula "69") (ifseqformula "4"))
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "67"))
                                       (rule "replaceKnownSelect_taclet000000_11" (formula "45") (term "0"))
                                       (rule "replaceKnownSelect_taclet00_1" (formula "45") (term "1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000000_12" (formula "45") (term "0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "45") (term "1"))
                                       (rule "impRight" (formula "79"))
                                       (rule "notRight" (formula "68"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "eqSymm" (formula "84"))
                                       (rule "eqSymm" (formula "6"))
                                       (rule "eqSymm" (formula "5"))
                                       (rule "close" (formula "69") (ifseqformula "5"))
                                    )
                                 )
                                 (branch "post add_857115291_15 (information flow)"
                                     (builtin "One Step Simplification" (formula "66"))
                                    (rule "replaceKnownSelect_taclet00_1" (formula "45") (term "1"))
                                    (rule "replaceKnownSelect_taclet000000_11" (formula "45") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "45") (term "1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000000_12" (formula "45") (term "0"))
                                    (rule "impRight" (formula "78"))
                                    (rule "notRight" (formula "67"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "eqSymm" (formula "83"))
                                    (rule "eqSymm" (formula "6"))
                                    (rule "eqSymm" (formula "5"))
                                    (rule "eqSymm" (formula "4"))
                                    (rule "eqSymm" (formula "2"))
                                    (rule "polySimp_homoEq" (formula "64"))
                                    (rule "polySimp_homoEq" (formula "61"))
                                    (rule "polySimp_homoEq" (formula "35") (term "1"))
                                    (rule "mul_literals" (formula "35") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "35") (term "0,1"))
                                    (rule "polySimp_homoEq" (formula "58") (term "1"))
                                    (rule "mul_literals" (formula "58") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "58") (term "0,1"))
                                    (rule "polySimp_homoEq" (formula "34"))
                                    (rule "polySimp_homoEq" (formula "40"))
                                    (rule "polySimp_homoEq" (formula "57"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0"))
                                    (rule "polySimp_addComm1" (formula "57") (term "0"))
                                    (rule "polySimp_rightDist" (formula "64") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "64") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "0,1,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "61") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "61") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "61") (term "0,1,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "40") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "0,1,0"))
                                    (rule "eqSeqConcat4" (formula "51"))
                                    (rule "andLeft" (formula "51"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "0"))
                                    (rule "add_zero_right" (formula "35") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "62"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                    (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "41") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "57") (term "0"))
                                    (rule "add_zero_right" (formula "57") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "57") (term "1,0,0"))
                                    (rule "mul_literals" (formula "57") (term "0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1"))
                                    (rule "add_zero_right" (formula "59") (term "0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "37") (term "0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,1,1,0,0"))
                                    (rule "add_zero_right" (formula "61") (term "0,0,1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0"))
                                    (rule "add_zero_right" (formula "64") (term "0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "42"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,1,0,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "63") (term "0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "60") (term "0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                    (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "64") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "35") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "62") (term "0"))
                                    (rule "polySimp_addComm1" (formula "62") (term "0,0"))
                                    (rule "add_literals" (formula "62") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "41") (term "0,0") (ifseqformula "39"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                    (rule "add_literals" (formula "57") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "57") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "59") (term "0,0,1"))
                                    (rule "add_literals" (formula "59") (term "0,0,0,1"))
                                    (rule "add_zero_left" (formula "59") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "61") (term "0,0,0,1,1,0,0"))
                                    (rule "add_zero_left" (formula "61") (term "0,0,1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "61") (term "0,0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "61") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor2" (formula "61") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "61") (term "1,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "61") (term "0,0,0,1,0"))
                                    (rule "leq_literals" (formula "61") (term "0,0,1,0"))
                                     (builtin "One Step Simplification" (formula "61"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "64") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "41") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor2" (formula "41") (term "0,0,0"))
                                    (rule "add_literals" (formula "41") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "41") (term "0,0,0"))
                                    (rule "leq_literals" (formula "41") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "36") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,0,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "inEqSimp_ltToLeq" (formula "63") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "63") (term "0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "63") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "39") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,1,0"))
                                    (rule "add_zero_right" (formula "60") (term "0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "60") (term "0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                    (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "42") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2" (formula "42") (term "0"))
                                    (rule "add_literals" (formula "42") (term "1,0"))
                                    (rule "times_zero_1" (formula "42") (term "0"))
                                    (rule "leq_literals" (formula "42"))
                                    (rule "true_left" (formula "42"))
                                    (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "63") (term "0,0,0,0,0"))
                                    (rule "replace_known_left" (formula "63") (term "0,0") (ifseqformula "61"))
                                     (builtin "One Step Simplification" (formula "63"))
                                    (rule "inEqSimp_ltToLeq" (formula "58"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "58") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "62") (term "0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "62") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "59") (term "0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "59") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0"))
                                    (rule "add_zero_right" (formula "60") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "60") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "60") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "60") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "40") (term "0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "60") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "58"))
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "36") (term "0,0,1,0"))
                                    (rule "applyEq" (formula "58") (term "0,1,0,0") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "63") (term "0,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "63") (term "1") (ifseqformula "6"))
                                    (rule "applyEqRigid" (formula "57") (term "0,2,0") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "62") (term "0,1,1,1,0") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "56") (term "0,1,0,1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "50") (term "1") (ifseqformula "5"))
                                    (rule "applyEqRigid" (formula "81") (term "0,1,1") (ifseqformula "12"))
                                    (rule "applyEq" (formula "70") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "68") (term "0") (ifseqformula "5"))
                                    (rule "applyEqRigid" (formula "57") (term "0,1,2,0,0") (ifseqformula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "62") (term "0,0,0,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "62") (term "1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "62") (term "1,1,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "62") (term "1,0,0,0,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "58") (term "1,1,0,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "58") (term "1,1,1,0,1,0"))
                                    (rule "mul_literals" (formula "58") (term "1,1,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "58") (term "1,1,1,0,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "60") (term "0,0,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "60") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "60") (term "1,1,0,0,0"))
                                    (rule "add_zero_right" (formula "60") (term "1,0,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "60") (term "1,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "60") (term "1,1,1,0"))
                                    (rule "mul_literals" (formula "60") (term "1,1,1,1,0"))
                                    (rule "add_zero_right" (formula "60") (term "1,1,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,0,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "59") (term "1,1,1,0,1,0"))
                                    (rule "mul_literals" (formula "59") (term "1,1,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "59") (term "1,1,1,0,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "59") (term "0,0,0,0,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "59") (term "1,0,0,0,0,1,0"))
                                    (rule "times_zero_2" (formula "59") (term "1,1,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "59") (term "1,0,0,0,0,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "56") (term "0,0,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "56") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "56") (term "1,1,0,0,0"))
                                    (rule "add_zero_right" (formula "56") (term "1,0,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "55") (term "1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "55") (term "1,1,0"))
                                    (rule "mul_literals" (formula "55") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "55") (term "1,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "59") (term "1,0,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "59") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "59") (term "1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "59") (term "1,1,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "61") (term "1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "61") (term "1,1,0"))
                                    (rule "mul_literals" (formula "61") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "61") (term "1,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "58") (term "0,0,0,0,1,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "58") (term "1,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "58") (term "1,1,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "58") (term "1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "62") (term "0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "58") (term "0,0,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0"))
                                    (rule "add_zero_right" (formula "60") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,0"))
                                    (rule "add_zero_right" (formula "60") (term "0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "59") (term "0,0,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "59") (term "0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "59") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,0"))
                                    (rule "add_zero_right" (formula "56") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "55") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "55") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "61") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "58") (term "0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "59") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "59") (term "0"))
                                    (rule "applyEq" (formula "76") (term "0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "64") (term "1") (ifseqformula "6"))
                                    (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "60") (term "1") (ifseqformula "5"))
                                    (rule "applyEqRigid" (formula "80") (term "0,0") (ifseqformula "3"))
                                    (rule "eqSymm" (formula "80"))
                                    (rule "applyEq" (formula "68") (term "0") (ifseqformula "6"))
                                    (rule "applyEqRigid" (formula "49") (term "0,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "43") (term "0,1,0") (ifseqformula "26"))
                                    (rule "eqSymm" (formula "43") (term "1,0"))
                                    (rule "applyEq" (formula "66") (term "1,0,1") (ifseqformula "6"))
                                    (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "44") (term "5") (ifseqformula "31"))
                                    (rule "applyEqRigid" (formula "57") (term "1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "43") (term "0,1") (ifseqformula "26"))
                                    (rule "eqSymm" (formula "43") (term "1"))
                                    (rule "applyEq" (formula "49") (term "0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "66") (term "1,0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "27") (term "5") (ifseqformula "25"))
                                    (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "79") (term "0,0") (ifseqformula "12"))
                                    (rule "eqSymm" (formula "79"))
                                    (rule "applyEq" (formula "26") (term "0") (ifseqformula "49"))
                                    (rule "applyEqRigid" (formula "79") (term "0,1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "49") (term "1") (ifseqformula "26"))
                                    (rule "polySimp_sepPosMonomial" (formula "35") (term "1"))
                                    (rule "mul_literals" (formula "35") (term "1,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "34"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                    (rule "mul_literals" (formula "34") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                    (rule "applyEqRigid" (formula "59") (term "1,1,1,0,1,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "58") (term "0,1,0,0,0,0,0,0,1,0") (ifseqformula "34"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "58") (term "0,0,0,0,0,0,0,1,0"))
                                    (rule "applyEq" (formula "59") (term "0,1,0,0,0,0,0,0,1,0") (ifseqformula "34"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "59") (term "0,0,0,0,0,0,0,1,0"))
                                    (rule "applyEqRigid" (formula "58") (term "1,1,1,0,1,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "40") (term "0,0,0,0,1,0") (ifseqformula "34"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "0,0,0,1,0"))
                                    (rule "mul_literals" (formula "40") (term "0,0,0,0,1,0"))
                                    (rule "applyEq" (formula "35") (term "0,1") (ifseqformula "34"))
                                    (rule "polySimp_homoEq" (formula "35") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,1"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,1"))
                                    (rule "add_literals" (formula "35") (term "0,0,1"))
                                    (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "56") (term "1,0,0,0") (ifseqformula "34"))
                                    (rule "applyEqRigid" (formula "41") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "34"))
                                    (rule "applyEqRigid" (formula "36") (term "0,1,0,1,0") (ifseqformula "34"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,1,0"))
                                    (rule "add_literals" (formula "36") (term "1,1,0,1,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,1,0"))
                                    (rule "add_literals" (formula "36") (term "0,1,0"))
                                    (rule "qeq_literals" (formula "36") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "applyEq" (formula "62") (term "1,1,1,0") (ifseqformula "34"))
                                    (rule "polySimp_addAssoc" (formula "62") (term "1,1,0"))
                                    (rule "add_literals" (formula "62") (term "0,1,1,0"))
                                    (rule "applyEq" (formula "56") (term "0,1,0,0,0,0,0") (ifseqformula "34"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "56") (term "0,0,0,0,0,0"))
                                    (rule "applyEqRigid" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,0,0"))
                                    (rule "applyEqRigid" (formula "62") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "34"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "62") (term "0,0,0,0,0,0,1,0"))
                                    (rule "applyEqRigid" (formula "60") (term "0,1,0,0,1,1,0") (ifseqformula "34"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "60") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "60") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "60") (term "0,0,0,1,1,0"))
                                    (rule "applyEq" (formula "58") (term "0,1,0,0,1,1,0,1,0") (ifseqformula "34"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,1,0,1,0"))
                                    (rule "mul_literals" (formula "58") (term "0,1,0,0,1,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,1,0,1,0"))
                                    (rule "add_literals" (formula "58") (term "0,0,0,1,1,0,1,0"))
                                    (rule "applyEq" (formula "56") (term "1,0,1") (ifseqformula "34"))
                                    (rule "polySimp_addAssoc" (formula "56") (term "0,1"))
                                    (rule "add_literals" (formula "56") (term "0,0,1"))
                                    (rule "applyEqRigid" (formula "58") (term "1,0,0,0,0,1,0") (ifseqformula "34"))
                                    (rule "applyEqRigid" (formula "39") (term "0,0,0,0,1,0") (ifseqformula "34"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "0,0,0,1,0"))
                                    (rule "mul_literals" (formula "39") (term "0,0,0,0,1,0"))
                                    (rule "applyEqRigid" (formula "37") (term "0,1") (ifseqformula "34"))
                                    (rule "applyEq" (formula "59") (term "1,0,0,0,0,1,0") (ifseqformula "34"))
                                    (rule "applyEqRigid" (formula "62") (term "1,0,0,0,1,0") (ifseqformula "34"))
                                    (rule "applyEqRigid" (formula "40") (term "1,1,0,1,0") (ifseqformula "34"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "1,0,1,0"))
                                    (rule "add_literals" (formula "40") (term "0,1,0,1,0"))
                                    (rule "applyEqRigid" (formula "57") (term "2,0") (ifseqformula "34"))
                                    (rule "applyEqRigid" (formula "60") (term "1,0,0,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "38") (term "2,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "61") (term "0,1,0,0,1,0") (ifseqformula "34"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "61") (term "0,0,0,1,0"))
                                    (rule "applyEq" (formula "60") (term "1,1,1,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "55") (term "0,1,0,0,1,0") (ifseqformula "34"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "55") (term "0,0,0,1,0"))
                                    (rule "applyEqRigid" (formula "42") (term "1,1,0") (ifseqformula "34"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "1,0"))
                                    (rule "add_literals" (formula "42") (term "0,1,0"))
                                    (rule "applyEq" (formula "61") (term "1,1,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "38") (term "1,2,0,0") (ifseqformula "34"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "2,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,2,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "57") (term "1,2,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "57") (term "1,1,2,0,0"))
                                    (rule "mul_literals" (formula "57") (term "1,1,1,2,0,0"))
                                    (rule "add_zero_right" (formula "57") (term "1,1,2,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "37") (term "0,1,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "1,0,1,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "39") (term "1,1,0,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,1,1,0,1,0"))
                                    (rule "mul_literals" (formula "39") (term "1,1,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "1,1,1,0,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "59") (term "0,1,0,0,1,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0,0,1,0,0"))
                                    (rule "times_zero_2" (formula "59") (term "1,1,0,1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "59") (term "0"))
                                    (rule "lenOfSeqSubEQ" (formula "63") (term "1,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "63") (term "1,1,1,0"))
                                    (rule "mul_literals" (formula "63") (term "1,1,1,1,0"))
                                    (rule "add_zero_right" (formula "63") (term "1,1,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "39") (term "1,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0"))
                                    (rule "times_zero_2" (formula "39") (term "1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "39") (term "1,1,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "36") (term "1,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "36") (term "1,1,0,0"))
                                    (rule "times_zero_2" (formula "36") (term "1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "36") (term "1,1,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "36") (term "2,0,1,1") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "36") (term "1,2,0,1,1"))
                                    (rule "mul_literals" (formula "36") (term "1,1,2,0,1,1"))
                                    (rule "add_zero_right" (formula "36") (term "1,2,0,1,1"))
                                    (rule "lenOfSeqSubEQ" (formula "34") (term "0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "34") (term "1,0"))
                                    (rule "mul_literals" (formula "34") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "34") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "polySimp_homoEq" (formula "34") (term "1"))
                                    (rule "mul_literals" (formula "34") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "34") (term "0,1"))
                                    (rule "lenOfSeqSubEQ" (formula "60") (term "0,1,0,0,0,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "60") (term "1,0,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "60") (term "1,1,0,1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "60") (term "1,0,1,0,0,0,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "58") (term "1,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "58") (term "1,1,0,0"))
                                    (rule "times_zero_2" (formula "58") (term "1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "58") (term "1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "58") (term "0"))
                                    (rule "lenOfSeqSubEQ" (formula "40") (term "1,0,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "40") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "40") (term "1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "57") (term "0,1,2,0,0"))
                                    (rule "add_zero_right" (formula "57") (term "0,0,1,2,0,0"))
                                    (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,2,0,0"))
                                    (rule "mul_literals" (formula "57") (term "0,1,0,0,1,2,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,1,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,1,0,1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,1,1,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "59") (term "0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,0,1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "63") (term "0,1,1,0"))
                                    (rule "add_zero_right" (formula "63") (term "0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "63") (term "0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,0"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,2,0,0"))
                                    (rule "add_literals" (formula "57") (term "0,0,0,1,2,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "0,2,0,1,1"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,2,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,2,0,1,1"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,2,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,1,0,1,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,1,1,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "34") (term "0"))
                                    (rule "add_zero_right" (formula "34") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "60") (term "0,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "60") (term "0,1,0,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "59") (term "0,0,0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "59") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "63") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "63") (term "0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "58") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "58") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "58") (term "0"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "58") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,2,0,1,1"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,2,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "60") (term "0,0,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "58") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "59") (term "1,1,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "59") (term "1,1,1,0"))
                                    (rule "mul_literals" (formula "59") (term "1,1,1,1,0"))
                                    (rule "add_zero_right" (formula "59") (term "1,1,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "59") (term "0,1,0,0,1,1,0,1,0,0") (ifseqformula "57"))
                                    (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0,0,1,1,0,1,0,0"))
                                    (rule "mul_literals" (formula "59") (term "1,1,0,1,0,0,1,1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,1,1,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "59") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,1,1,0,0"))
                                    (rule "add_zero_right" (formula "59") (term "0,0,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,1,0,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "59") (term "0,0,0,1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,1,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "59") (term "0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0,0,1,1,0,1,0,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,0,1,0,0,1,1,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,1,0,0,1,1,0,1,0,0"))
                                    (rule "add_literals" (formula "59") (term "0,0,0,0,1,0,0,1,1,0,1,0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "35") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "35") (term "0,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "56") (term "1"))
                                    (rule "mul_literals" (formula "56") (term "1,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "37") (term "1"))
                                    (rule "mul_literals" (formula "37") (term "1,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "62"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1"))
                                    (rule "polySimp_rightDist" (formula "62") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "62") (term "1,1"))
                                    (rule "mul_literals" (formula "62") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "62") (term "1,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "55"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1"))
                                    (rule "polySimp_rightDist" (formula "55") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "1,1"))
                                    (rule "mul_literals" (formula "55") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "55") (term "1,1"))
                                    (rule "applyEqRigid" (formula "36") (term "2,0,1,1") (ifseqformula "55"))
                                    (rule "applyEq" (formula "37") (term "0,1,0,0") (ifseqformula "55"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0"))
                                    (rule "applyEqRigid" (formula "59") (term "0,1,0,0,1,0") (ifseqformula "55"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "59") (term "0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "59") (term "0,0,0,1,0,0"))
                                    (rule "applyEq" (formula "58") (term "0,0,0,0,1,0") (ifseqformula "55"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "58") (term "0,0,0,1,0"))
                                    (rule "mul_literals" (formula "58") (term "0,0,0,0,1,0"))
                                    (rule "applyEqRigid" (formula "40") (term "1,0") (ifseqformula "55"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0"))
                                    (rule "applyEq" (formula "39") (term "1,1,0,1,0") (ifseqformula "55"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "1,0,1,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,1,0,1,0,0"))
                                    (rule "applyEqRigid" (formula "63") (term "1,1,0") (ifseqformula "55"))
                                    (rule "polySimp_addAssoc" (formula "63") (term "1,0"))
                                    (rule "add_literals" (formula "63") (term "0,1,0"))
                                    (rule "applyEqRigid" (formula "56") (term "0,0,0") (ifseqformula "55"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "56") (term "0,0"))
                                    (rule "mul_literals" (formula "56") (term "0,0,0"))
                                    (rule "applyEq" (formula "36") (term "1,0,0") (ifseqformula "55"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0"))
                                    (rule "applyEq" (formula "60") (term "1,1,0") (ifseqformula "55"))
                                    (rule "applyEqRigid" (formula "57") (term "1,2,0,0") (ifseqformula "55"))
                                    (rule "polySimp_addAssoc" (formula "57") (term "2,0,0"))
                                    (rule "add_literals" (formula "57") (term "0,2,0,0"))
                                    (rule "applyEqRigid" (formula "61") (term "1,0") (ifseqformula "55"))
                                    (rule "polySimp_addAssoc" (formula "61") (term "0"))
                                    (rule "polySimp_addComm1" (formula "61") (term "0,0"))
                                    (rule "add_literals" (formula "61") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "61") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2" (formula "61") (term "0"))
                                    (rule "add_literals" (formula "61") (term "1,0"))
                                    (rule "times_zero_1" (formula "61") (term "0"))
                                    (rule "leq_literals" (formula "61"))
                                    (rule "true_left" (formula "61"))
                                    (rule "applyEqRigid" (formula "60") (term "0,1,0,0,0,0,0") (ifseqformula "55"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "60") (term "0,0,0,0,0,0"))
                                    (rule "applyEq" (formula "61") (term "0,0,0,0") (ifseqformula "55"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "0,0,0"))
                                    (rule "mul_literals" (formula "61") (term "0,0,0,0"))
                                    (rule "applyEq" (formula "58") (term "1,1,0,1,0") (ifseqformula "55"))
                                    (rule "polySimp_addAssoc" (formula "58") (term "1,0,1,0"))
                                    (rule "add_literals" (formula "58") (term "0,1,0,1,0"))
                                    (rule "applyEqRigid" (formula "58") (term "1,0,0") (ifseqformula "55"))
                                    (rule "polySimp_addAssoc" (formula "58") (term "0,0"))
                                    (rule "add_literals" (formula "58") (term "0,0,0"))
                                    (rule "applyEq" (formula "59") (term "0,1,0,0,1,1,0,1,0") (ifseqformula "55"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,1,0,1,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,1,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,1,0,1,0"))
                                    (rule "add_literals" (formula "59") (term "0,0,0,1,1,0,1,0"))
                                    (rule "applyEq" (formula "59") (term "0,0,0,0,1,0") (ifseqformula "55"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "59") (term "0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "0,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "59") (term "0,0,0,0,1,0,0"))
                                    (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "55"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0"))
                                    (rule "applyEqRigid" (formula "59") (term "1,1,0") (ifseqformula "55"))
                                    (rule "polySimp_sepPosMonomial" (formula "34") (term "1"))
                                    (rule "mul_literals" (formula "34") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                    (rule "mul_literals" (formula "32") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "0,0"))
                                    (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "true_left" (formula "35"))
                                    (rule "polySimp_sepNegMonomial" (formula "39"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "58"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1"))
                                    (rule "mul_literals" (formula "58") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "58") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "54") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "54") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "54") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "57") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "57") (term "0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "57") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "55") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0"))
                                    (rule "mul_literals" (formula "35") (term "1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "59") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "59") (term "0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "59") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "60") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "60") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "60") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "0,0,0,1,0"))
                                    (rule "replace_known_left" (formula "38") (term "0,0,1,0") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "polySimp_pullOutFactor1" (formula "38") (term "0"))
                                    (rule "add_literals" (formula "38") (term "1,0"))
                                    (rule "times_zero_1" (formula "38") (term "0"))
                                    (rule "leq_literals" (formula "38"))
                                    (rule "true_left" (formula "38"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "38") (term "0,0") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "polySimp_homoEq" (formula "38"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "38") (term "0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "38"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1"))
                                    (rule "applyEqRigid" (formula "36") (term "0,0") (ifseqformula "38"))
                                    (rule "applyEqRigid" (formula "56") (term "0,1,0,0,0") (ifseqformula "37"))
                                    (rule "polySimp_homoEq" (formula "56"))
                                    (rule "polySimp_addComm1" (formula "56") (term "0"))
                                    (rule "applyEqRigid" (formula "58") (term "0,0,0") (ifseqformula "37"))
                                    (rule "replace_known_left" (formula "58") (term "0,0") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "58"))
                                    (rule "polySimp_homoEq" (formula "58"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1,0"))
                                    (rule "mul_literals" (formula "58") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "58") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "58") (term "0,0"))
                                    (rule "add_literals" (formula "58") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "58") (term "0,0"))
                                    (rule "applyEq" (formula "55") (term "0,0,0,1,0") (ifseqformula "37"))
                                    (rule "replace_known_left" (formula "55") (term "0,0,1,0") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "polySimp_pullOutFactor1" (formula "55") (term "0"))
                                    (rule "add_literals" (formula "55") (term "1,0"))
                                    (rule "times_zero_1" (formula "55") (term "0"))
                                    (rule "leq_literals" (formula "55"))
                                    (rule "true_left" (formula "55"))
                                    (rule "applyEqRigid" (formula "35") (term "0,0") (ifseqformula "37"))
                                    (rule "applyEqRigid" (formula "58") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEqRigid" (formula "54") (term "1,2,0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "56") (term "1,1,1,0") (ifseqformula "37"))
                                    (rule "applyEqRigid" (formula "35") (term "1,2,0,1,1") (ifseqformula "37"))
                                    (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "37"))
                                    (rule "replace_known_left" (formula "53") (term "0") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "true_left" (formula "53"))
                                    (rule "applyEq" (formula "55") (term "0,0,0,0,0") (ifseqformula "37"))
                                    (rule "applyEqRigid" (formula "55") (term "0,0,0") (ifseqformula "52"))
                                    (rule "applyEqRigid" (formula "54") (term "0,1,0,0,1,1,1,0") (ifseqformula "37"))
                                    (rule "applyEqRigid" (formula "54") (term "0,1,0,0,1,0") (ifseqformula "37"))
                                    (rule "polySimp_addComm1" (formula "54") (term "0"))
                                    (rule "applyEqRigid" (formula "56") (term "1,0") (ifseqformula "37"))
                                    (rule "polySimp_pullOutFactor2" (formula "56") (term "0"))
                                    (rule "add_literals" (formula "56") (term "1,0"))
                                    (rule "times_zero_1" (formula "56") (term "0"))
                                     (builtin "One Step Simplification" (formula "56"))
                                    (rule "true_left" (formula "56"))
                                    (rule "applyEq" (formula "55") (term "1,0,0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "52") (term "1,1") (ifseqformula "37"))
                                     (builtin "One Step Simplification" (formula "52"))
                                    (rule "polySimp_homoEq" (formula "52") (term "1"))
                                    (rule "mul_literals" (formula "52") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "52") (term "0,1"))
                                    (rule "applyEq" (formula "54") (term "1,1,0,1,0") (ifseqformula "37"))
                                    (rule "polySimp_addComm1" (formula "54") (term "0"))
                                    (rule "polySimp_sepPosMonomial" (formula "52") (term "1"))
                                    (rule "mul_literals" (formula "52") (term "1,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "53"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1"))
                                    (rule "polySimp_rightDist" (formula "53") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "1,1"))
                                    (rule "mul_literals" (formula "53") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "53") (term "1,1"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "polySimp_homoEq" (formula "53") (term "1"))
                                    (rule "mul_literals" (formula "53") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "53") (term "0,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "53") (term "1"))
                                    (rule "mul_literals" (formula "53") (term "1,1"))
                                    (rule "ifEqualsInteger" (formula "53") (term "1"))
                                    (rule "equal_literals" (formula "53") (term "1,1,1"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "polySimp_homoEq" (formula "53") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "53") (term "1,0,1,1"))
                                    (rule "mul_literals" (formula "53") (term "0,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "53") (term "0,1,1"))
                                    (rule "add_literals" (formula "53") (term "0,0,1,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "53") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "0,1,1"))
                                    (rule "polySimp_elimOne" (formula "53") (term "0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "0,0"))
                                    (rule "mul_literals" (formula "54") (term "1,0,0"))
                                    (rule "replace_known_left" (formula "54") (term "0,0") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "53") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "53") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "53") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "53") (term "0,0"))
                                    (rule "replace_known_left" (formula "53") (term "0") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "true_left" (formula "53"))
                                    (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "32"))
                                    (rule "leq_literals" (formula "33") (term "0"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "true_left" (formula "33"))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "69") (inst "iv=iv"))
                                    (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "69") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "69") (term "1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "69") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0,0,1"))
                                    (rule "inEqSimp_subsumption1" (formula "34") (term "0") (ifseqformula "32"))
                                    (rule "leq_literals" (formula "34") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "applyEq" (formula "52") (term "1") (ifseqformula "34"))
                                    (rule "applyEqRigid" (formula "46") (term "0,0") (ifseqformula "34"))
                                    (rule "eqSymm" (formula "46"))
                                    (rule "applyEq" (formula "36") (term "1") (ifseqformula "34"))
                                    (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "34"))
                                    (rule "applyEqRigid" (formula "40") (term "0,1,0") (ifseqformula "34"))
                                    (rule "eqSymm" (formula "40") (term "1,0"))
                                    (rule "applyEq" (formula "40") (term "0,1,0") (ifseqformula "46"))
                                    (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "46"))
                                    (rule "applyEq" (formula "26") (term "1") (ifseqformula "46"))
                                    (rule "pullOutSelect" (formula "70") (term "1,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                                    (rule "applyEq" (formula "71") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "71") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "replaceKnownSelect_taclet000000_13" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000000_14" (formula "1") (term "2,0"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "71") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                    (rule "replaceKnownSelect_taclet00000000_18" (formula "71") (term "0,0,1,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00000000_19" (formula "71") (term "0,0,1,0,1"))
                                    (rule "applyEqReverse" (formula "71") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                                    (rule "replaceKnownSelect_taclet00000000_18" (formula "71") (term "0,1,1,1,0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00000000_19" (formula "71") (term "0,1,1,1,0,0,1"))
                                    (rule "applyEqReverse" (formula "71") (term "1,0,0,0") (ifseqformula "1"))
                                    (rule "replaceKnownSelect_taclet00000000_18" (formula "71") (term "0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00000000_19" (formula "71") (term "0,0,0"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "eqSymm" (formula "70") (term "1,0,1"))
                                    (rule "eqSymm" (formula "70") (term "0"))
                                    (rule "lenOfSeqConcat" (formula "70") (term "1,1,1,0,0,1"))
                                     (builtin "One Step Simplification" (formula "70"))
                                    (rule "polySimp_addComm0" (formula "70") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "70") (term "1,1,0,0,1"))
                                    (rule "add_literals" (formula "70") (term "0,1,1,0,0,1"))
                                    (rule "add_zero_left" (formula "70") (term "1,1,0,0,1"))
                                    (rule "lenOfSeqConcat" (formula "70") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "70"))
                                    (rule "polySimp_addComm0" (formula "70") (term "1,0"))
                                    (rule "applyEq" (formula "70") (term "0,1,1,0,0,1") (ifseqformula "26"))
                                    (rule "lenOfSeqConcat" (formula "70") (term "1,1,0,0,1"))
                                     (builtin "One Step Simplification" (formula "70"))
                                    (rule "polySimp_addComm0" (formula "70") (term "1,1,0,0,1"))
                                    (rule "lenOfSeqSubEQ" (formula "70") (term "1,1,1,0,0,1") (ifseqformula "36"))
                                    (rule "polySimp_elimSub" (formula "70") (term "1,1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "70") (term "1,1,1,1,1,0,0,1"))
                                    (rule "add_zero_right" (formula "70") (term "1,1,1,1,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "70") (term "0,1,1,1,0,0,1"))
                                    (rule "add_zero_right" (formula "70") (term "0,0,1,1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,0,1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,0,1,1,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "70") (term "0,0,1,1,1,0,0,1"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,1,1,1,0,0,1"))
                                    (rule "applyEq" (formula "70") (term "0,0,1,1,0,1") (ifseqformula "26"))
                                    (rule "applyEq" (formula "70") (term "0,1,1,0") (ifseqformula "26"))
                                    (rule "lenOfSeqConcat" (formula "70") (term "1,1,0"))
                                     (builtin "One Step Simplification" (formula "70"))
                                    (rule "polySimp_addComm0" (formula "70") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "70") (term "1,0"))
                                    (rule "add_literals" (formula "70") (term "0,1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "70") (term "1,1,0") (ifseqformula "36"))
                                    (rule "polySimp_homoEq" (formula "70") (term "0"))
                                    (rule "polySimp_elimSub" (formula "70") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "70") (term "1,1,1,0,0,0"))
                                    (rule "add_zero_right" (formula "70") (term "1,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "70") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "70") (term "0,1,0,0"))
                                    (rule "add_zero_right" (formula "70") (term "0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "70") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,1,0,0"))
                                    (rule "applyEq" (formula "70") (term "0,1,0,1,1,0,1") (ifseqformula "6"))
                                    (rule "polySimp_sepPosMonomial" (formula "70") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "70") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "70") (term "1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "70") (term "0,1,1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "0,0,1,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "70") (term "0,0,1,1,1,0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "70") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "70") (term "0,0,0,0"))
                                    (rule "getOfSeqConcat" (formula "70") (term "1,1,0,1"))
                                    (rule "eqSymm" (formula "70") (term "1,0,1"))
                                    (rule "polySimp_elimSub" (formula "70") (term "1,2,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "70") (term "1,2,0,1,0,1"))
                                    (rule "lenOfSeqConcat" (formula "70") (term "1,0,0,1,0,1"))
                                     (builtin "One Step Simplification" (formula "70"))
                                    (rule "polySimp_addComm0" (formula "70") (term "1,0,0,1,0,1"))
                                    (rule "getOfSeqSingleton" (formula "70") (term "2,0,1,0,1"))
                                    (rule "castDel" (formula "70") (term "2,2,0,1,0,1"))
                                    (rule "castDel" (formula "70") (term "1,2,0,1,0,1"))
                                    (rule "lenOfSeqConcat" (formula "70") (term "0,0,0,0,2,0,1,0,1"))
                                     (builtin "One Step Simplification" (formula "70"))
                                    (rule "polySimp_mulComm0" (formula "70") (term "0,0,0,2,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "70") (term "1,0,0,0,2,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "70") (term "0,0,0,2,0,1,0,1"))
                                    (rule "mul_literals" (formula "70") (term "0,0,0,0,2,0,1,0,1"))
                                    (rule "lenOfSeqSubEQ" (formula "70") (term "0,1,0,0,0,2,0,1,0,1") (ifseqformula "35"))
                                    (rule "polySimp_elimSub" (formula "70") (term "1,0,1,0,0,0,2,0,1,0,1"))
                                    (rule "mul_literals" (formula "70") (term "1,1,0,1,0,0,0,2,0,1,0,1"))
                                    (rule "add_zero_right" (formula "70") (term "1,0,1,0,0,0,2,0,1,0,1"))
                                    (rule "lenOfSeqSubEQ" (formula "70") (term "1,1,0,0,1,0,1") (ifseqformula "35"))
                                    (rule "polySimp_elimSub" (formula "70") (term "1,1,1,0,0,1,0,1"))
                                    (rule "times_zero_2" (formula "70") (term "1,1,1,1,0,0,1,0,1"))
                                    (rule "add_zero_right" (formula "70") (term "1,1,1,0,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,1,0,0,0,2,0,1,0,1"))
                                    (rule "add_zero_right" (formula "70") (term "0,0,0,1,0,0,0,2,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,1,0,0,0,2,0,1,0,1"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,0,0,1,0,0,0,2,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "70") (term "0,0,0,1,0,0,0,2,0,1,0,1"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,0,1,0,0,0,2,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "70") (term "0,1,1,0,0,1,0,1"))
                                    (rule "add_zero_right" (formula "70") (term "0,0,1,1,0,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,0,1,1,0,0,1,0,1"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,0,1,1,0,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "70") (term "0,0,1,1,0,0,1,0,1"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,1,1,0,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0,1,0,1"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "70") (term "0,0,0,0,1,0,1"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,0,0,1,0,1"))
                                    (rule "add_zero_left" (formula "70") (term "0,0,0,0,1,0,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "70") (term "0,2,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "70") (term "1,0,2,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,2,0,1,0,1"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,2,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,2,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "70") (term "1,1,0,2,0,1,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "1,0,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "70") (term "1,0,0,1,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "70") (term "0,1,1,0,2,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "0,0,1,1,0,2,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "70") (term "0,0,1,1,0,2,0,1,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "70") (term "0,1,0,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "0,0,1,0,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "70") (term "0,0,1,0,0,1,0,1"))
                                    (rule "getOfSeqConcat" (formula "70") (term "1,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "70") (term "1,2,1,0,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "70") (term "1,2,1,0,1,0,1"))
                                    (rule "getOfSeqSingleton" (formula "70") (term "2,1,0,1,0,1"))
                                    (rule "castDel" (formula "70") (term "2,2,1,0,1,0,1"))
                                    (rule "castDel" (formula "70") (term "1,2,1,0,1,0,1"))
                                    (rule "lenOfSeqSubEQ" (formula "70") (term "1,0,1,0,1,0,1") (ifseqformula "35"))
                                    (rule "polySimp_elimSub" (formula "70") (term "1,1,0,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "70") (term "1,1,1,0,1,0,1,0,1"))
                                    (rule "add_zero_right" (formula "70") (term "1,1,0,1,0,1,0,1"))
                                    (rule "lenOfSeqSubEQ" (formula "70") (term "0,0,0,0,2,1,0,1,0,1") (ifseqformula "35"))
                                    (rule "polySimp_elimSub" (formula "70") (term "1,0,0,0,0,2,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "70") (term "1,1,0,0,0,0,2,1,0,1,0,1"))
                                    (rule "add_zero_right" (formula "70") (term "1,0,0,0,0,2,1,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "70") (term "0,1,0,1,0,1,0,1"))
                                    (rule "add_zero_right" (formula "70") (term "0,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,0,1,0,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "70") (term "0,0,1,0,1,0,1,0,1"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,1,0,1,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0,0,0,2,1,0,1,0,1"))
                                    (rule "add_zero_right" (formula "70") (term "0,0,0,0,0,0,2,1,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0,0,0,0,2,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,0,0,0,0,0,2,1,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "70") (term "0,0,0,0,0,0,2,1,0,1,0,1"))
                                    (rule "add_literals" (formula "70") (term "0,0,0,0,0,0,0,2,1,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "70") (term "0,1,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,1,0,1,0,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "70") (term "0,2,1,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "1,0,2,1,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "70") (term "1,0,2,1,0,1,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,1,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "70") (term "1,0,1,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "70") (term "1,0,1,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "70") (term "0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "70") (term "1,1,0,1,0,1,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "70") (term "0,1,0,2,1,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "0,0,1,0,2,1,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "70") (term "0,0,1,0,2,1,0,1,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "70") (term "0,1,1,0,1,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "70") (term "0,0,1,1,0,1,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "70") (term "0,0,1,1,0,1,0,1,0,1"))
                                    (rule "eqSeqConcat" (formula "46"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "andLeft" (formula "46"))
                                    (rule "andLeft" (formula "46"))
                                    (rule "polySimp_addComm0" (formula "46") (term "1"))
                                    (rule "eqSeqSingleton" (formula "48"))
                                    (rule "andLeft" (formula "48"))
                                    (rule "lenOfSeqSub" (formula "48") (term "0"))
                                    (rule "polySimp_elimSub" (formula "48") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "48") (term "1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "47") (term "2,0") (ifseqformula "35"))
                                    (rule "polySimp_elimSub" (formula "47") (term "1,2,0"))
                                    (rule "mul_literals" (formula "47") (term "1,1,2,0"))
                                    (rule "add_zero_right" (formula "47") (term "1,2,0"))
                                    (rule "lenOfSeqSubEQ" (formula "49") (term "1,0,0") (ifseqformula "35"))
                                    (rule "polySimp_elimSub" (formula "49") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "49") (term "1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "49") (term "1,1,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "46") (term "1,1") (ifseqformula "36"))
                                    (rule "polySimp_elimSub" (formula "46") (term "1,1,1"))
                                    (rule "mul_literals" (formula "46") (term "1,1,1,1"))
                                    (rule "add_zero_right" (formula "46") (term "1,1,1"))
                                    (rule "polySimp_homoEq" (formula "46"))
                                    (rule "polySimp_addComm1" (formula "46") (term "0"))
                                    (rule "lenOfSeqSubEQ" (formula "48") (term "0,0,0") (ifseqformula "35"))
                                    (rule "polySimp_elimSub" (formula "48") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "48") (term "1,1,0,0,0"))
                                    (rule "add_zero_right" (formula "48") (term "1,0,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "48") (term "0,0,1,0") (ifseqformula "47"))
                                    (rule "polySimp_elimSub" (formula "48") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "48") (term "1,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "48") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "48") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "47") (term "0,2,0"))
                                    (rule "add_zero_right" (formula "47") (term "0,0,2,0"))
                                    (rule "polySimp_rightDist" (formula "47") (term "1,0,0,2,0"))
                                    (rule "mul_literals" (formula "47") (term "0,1,0,0,2,0"))
                                    (rule "polySimp_addAssoc" (formula "47") (term "0,0,2,0"))
                                    (rule "add_literals" (formula "47") (term "0,0,0,2,0"))
                                    (rule "ifEqualsInteger" (formula "48"))
                                    (rule "equal_literals" (formula "48") (term "1,1"))
                                     (builtin "One Step Simplification" (formula "48"))
                                    (rule "andLeft" (formula "48"))
                                    (rule "polySimp_homoEq" (formula "49"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "49") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "50") (term "0,1,0,0"))
                                    (rule "add_zero_right" (formula "50") (term "0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "50") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "46") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "46") (term "0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "46") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "48"))
                                    (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "49") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "49") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "49") (term "0,1,1,0"))
                                    (rule "add_zero_right" (formula "49") (term "0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "49") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "49") (term "0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "48") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "48") (term "0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "48") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "49") (term "0,0,0,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "49") (term "0,1,0,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "49") (term "0,0,0,0,1,0,0,1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "46"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                    (rule "mul_literals" (formula "46") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                    (rule "applyEq" (formula "47") (term "2,0") (ifseqformula "46"))
                                    (rule "applyEqRigid" (formula "49") (term "0,1,0,0,1,0") (ifseqformula "46"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "49") (term "0,0,0,1,0"))
                                    (rule "applyEqRigid" (formula "50") (term "1,0,0") (ifseqformula "46"))
                                    (rule "applyEq" (formula "49") (term "1,1,0") (ifseqformula "46"))
                                    (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "46"))
                                    (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                    (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                                    (rule "add_literals" (formula "48") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "48") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2" (formula "48") (term "0"))
                                    (rule "add_literals" (formula "48") (term "1,0"))
                                    (rule "times_zero_1" (formula "48") (term "0"))
                                    (rule "leq_literals" (formula "48"))
                                    (rule "true_left" (formula "48"))
                                    (rule "polySimp_sepPosMonomial" (formula "48"))
                                    (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                    (rule "polySimp_rightDist" (formula "48") (term "1"))
                                    (rule "mul_literals" (formula "48") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                     (builtin "One Step Simplification" (formula "48"))
                                    (rule "polySimp_homoEq" (formula "48") (term "1"))
                                    (rule "mul_literals" (formula "48") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "48") (term "0,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "48") (term "1"))
                                    (rule "mul_literals" (formula "48") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "46") (term "0,0,0"))
                                    (rule "applyEq" (formula "73") (term "0,0") (ifseqformula "46"))
                                    (rule "polySimp_homoEq" (formula "73") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "73") (term "1,0,0"))
                                    (rule "mul_literals" (formula "73") (term "0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "73") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "73") (term "0,0,0"))
                                    (rule "add_literals" (formula "73") (term "0,0,0,0"))
                                    (rule "applyEqRigid" (formula "73") (term "1,0,0,1,0,1") (ifseqformula "46"))
                                    (rule "applyEqRigid" (formula "73") (term "1,1,1,0,0,1") (ifseqformula "46"))
                                    (rule "polySimp_addAssoc" (formula "73") (term "1,1,0,0,1"))
                                    (rule "add_literals" (formula "73") (term "0,1,1,0,0,1"))
                                    (rule "add_zero_left" (formula "73") (term "1,1,0,0,1"))
                                    (rule "applyEq" (formula "73") (term "1,1,0,1,0,1,0,1") (ifseqformula "46"))
                                    (rule "polySimp_addAssoc" (formula "73") (term "1,0,1,0,1,0,1"))
                                    (rule "add_literals" (formula "73") (term "0,1,0,1,0,1,0,1"))
                                    (rule "applyEq" (formula "73") (term "1,0,2,1,0,1,0,1") (ifseqformula "46"))
                                    (rule "applyEqRigid" (formula "73") (term "1,1,0,2,0,1,0,1") (ifseqformula "46"))
                                    (rule "polySimp_addAssoc" (formula "73") (term "1,0,2,0,1,0,1"))
                                    (rule "add_literals" (formula "73") (term "0,1,0,2,0,1,0,1"))
                                    (rule "add_zero_left" (formula "73") (term "1,0,2,0,1,0,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "73") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "73") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "73") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0"))
                                    (rule "mul_literals" (formula "73") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "73") (term "1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "48") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "48") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "48") (term "0,0"))
                                    (rule "eqSeqConcat" (formula "40") (term "1"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "polySimp_addComm0" (formula "40") (term "1,0,0,1"))
                                    (rule "eqSeqSingleton" (formula "40") (term "1,1"))
                                    (rule "lenOfSeqSubEQ" (formula "40") (term "2,0,1,0,1") (ifseqformula "47"))
                                    (rule "polySimp_elimSub" (formula "40") (term "1,2,0,1,0,1"))
                                    (rule "mul_literals" (formula "40") (term "1,1,2,0,1,0,1"))
                                    (rule "add_zero_right" (formula "40") (term "1,2,0,1,0,1"))
                                    (rule "lenOfSeqSubEQ" (formula "40") (term "1,1,0,0,1") (ifseqformula "36"))
                                    (rule "polySimp_homoEq" (formula "40") (term "0,0,1"))
                                    (rule "polySimp_elimSub" (formula "40") (term "1,1,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "40") (term "1,1,1,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "40") (term "1,1,0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1"))
                                    (rule "lenOfSeqSub" (formula "40") (term "0,0,1,1"))
                                    (rule "polySimp_elimSub" (formula "40") (term "1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "40") (term "1,0,0,1,1"))
                                    (rule "lenOfSeqSubEQ" (formula "40") (term "1,0,0,1,1,1") (ifseqformula "47"))
                                    (rule "polySimp_elimSub" (formula "40") (term "1,1,0,0,1,1,1"))
                                    (rule "mul_literals" (formula "40") (term "1,1,1,0,0,1,1,1"))
                                    (rule "add_zero_right" (formula "40") (term "1,1,0,0,1,1,1"))
                                    (rule "ifEqualsInteger" (formula "40") (term "0,1,1"))
                                    (rule "equal_literals" (formula "40") (term "1,1,0,1,1"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "polySimp_homoEq" (formula "40") (term "1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0,1,1"))
                                    (rule "polySimp_mulAssoc" (formula "40") (term "0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "40") (term "0,1,0,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,1,0,1,1"))
                                    (rule "lenOfSeqSubEQ" (formula "40") (term "0,0,0,1,1") (ifseqformula "35"))
                                    (rule "polySimp_elimSub" (formula "40") (term "1,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "40") (term "1,1,0,0,0,1,1"))
                                    (rule "add_zero_right" (formula "40") (term "1,0,0,0,1,1"))
                                    (rule "lenOfSeqSubEQ" (formula "40") (term "1,0,0,1,0,1,1") (ifseqformula "47"))
                                    (rule "polySimp_elimSub" (formula "40") (term "1,1,0,0,1,0,1,1"))
                                    (rule "times_zero_2" (formula "40") (term "1,1,1,0,0,1,0,1,1"))
                                    (rule "add_zero_right" (formula "40") (term "1,1,0,0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,1,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,2,0,1,0,1"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,2,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,2,0,1,0,1"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,2,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,2,0,1,0,1"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,2,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0,0,1,1,1"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,1,0,0,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,1,1,1"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,1,1,1"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,1,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0,0,0,1"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,1,1"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0,1,0,1,1"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,1,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,1,0,1,1"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,1,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "40") (term "0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "40") (term "1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,0,1,1"))
                                    (rule "mul_literals" (formula "40") (term "0,1,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,2,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "0,0,2,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "40") (term "0,0,2,0,1,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,1,0,0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "0,0,1,0,0,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "40") (term "0,0,1,0,0,1,1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,1,0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "0,0,1,0,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "40") (term "0,0,1,0,0,0,1,1"))
                                    (rule "applyEq" (formula "40") (term "1,0,0,0,1,1") (ifseqformula "46"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,0,0,1,1"))
                                    (rule "add_zero_left" (formula "40") (term "0,0,0,0,1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "40") (term "0,0,0,0,0,1"))
                                    (rule "applyEq" (formula "40") (term "0,0,0,1") (ifseqformula "46"))
                                    (rule "polySimp_homoEq" (formula "40") (term "0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,1"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,1"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "40") (term "0,0,0,0,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "40") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,0,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "40") (term "0,0,0,1,0,1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "40") (term "0,0,0,1,1"))
                                    (rule "eqSeqConcat" (formula "26"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "andLeft" (formula "26"))
                                    (rule "andLeft" (formula "26"))
                                    (rule "polySimp_addComm0" (formula "26") (term "1"))
                                    (rule "eqSeqSingleton" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "lenOfSeqSubEQ" (formula "27") (term "2,0") (ifseqformula "38"))
                                    (rule "polySimp_elimSub" (formula "27") (term "1,2,0"))
                                    (rule "times_zero_2" (formula "27") (term "1,1,2,0"))
                                    (rule "add_zero_right" (formula "27") (term "1,2,0"))
                                    (rule "lenOfSeqSub" (formula "28") (term "0"))
                                    (rule "polySimp_elimSub" (formula "28") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "28") (term "1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "26") (term "1,1") (ifseqformula "50"))
                                    (rule "polySimp_elimSub" (formula "26") (term "1,1,1"))
                                    (rule "mul_literals" (formula "26") (term "1,1,1,1"))
                                    (rule "add_zero_right" (formula "26") (term "1,1,1"))
                                    (rule "polySimp_homoEq" (formula "26"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0"))
                                    (rule "lenOfSeqSubEQ" (formula "29") (term "1,0,0") (ifseqformula "27"))
                                    (rule "polySimp_elimSub" (formula "29") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "29") (term "1,1,0,0"))
                                    (rule "ifEqualsInteger" (formula "28"))
                                    (rule "equal_literals" (formula "28") (term "1,1"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "polySimp_homoEq" (formula "29"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "27") (term "0,2,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0,2,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,2,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,2,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,2,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,2,0"))
                                    (rule "lenOfSeqSubEQ" (formula "28") (term "0") (ifseqformula "51"))
                                    (rule "polySimp_elimSub" (formula "28") (term "1,0"))
                                    (rule "mul_literals" (formula "28") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "28") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,1,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "29") (term "1,0,0") (ifseqformula "27"))
                                    (rule "polySimp_elimSub" (formula "29") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "29") (term "1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,1,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,1,0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,1,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0"))
                                    (rule "add_zero_right" (formula "29") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "26"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1"))
                                    (rule "mul_literals" (formula "26") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                    (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "26"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2" (formula "28") (term "0"))
                                    (rule "add_literals" (formula "28") (term "1,0"))
                                    (rule "times_zero_1" (formula "28") (term "0"))
                                    (rule "leq_literals" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "polySimp_sepPosMonomial" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1"))
                                    (rule "mul_literals" (formula "28") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                    (rule "applyEqRigid" (formula "29") (term "1,0,0") (ifseqformula "28"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "0,0,2,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "0,0,2,0"))
                                    (rule "applyEq" (formula "27") (term "2,0") (ifseqformula "49"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "0,0,0"))
                                    (rule "applyEqRigid" (formula "43") (term "2,0,1,0,1") (ifseqformula "26"))
                                    (rule "applyEq" (formula "43") (term "0,1,0,1,1") (ifseqformula "26"))
                                    (rule "polySimp_homoEq" (formula "43") (term "1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "43") (term "0,0,1,0,1,1"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,1,0,1,1"))
                                    (rule "add_zero_left" (formula "43") (term "0,0,1,0,1,1"))
                                    (rule "applyEq" (formula "43") (term "1,0,0,1,1,1") (ifseqformula "26"))
                                    (rule "polySimp_sepNegMonomial" (formula "43") (term "1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "43") (term "0,1,0,1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "0,0,1,0"))
                                    (rule "applyEqRigid" (formula "28") (term "1,0") (ifseqformula "49"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "0,0,0,1,0,0,0"))
                                    (rule "applyEq" (formula "28") (term "0,1,0,0,0") (ifseqformula "49"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "75") (term "0,1,1,0,1") (inst "selectSK=java_util_Collection_seq_4"))
                                    (rule "applyEq" (formula "76") (term "0,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "25"))
                                    (rule "polySimp_homoEq" (formula "76") (term "0"))
                                    (rule "polySimp_addComm1" (formula "76") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "polySimp_sepPosMonomial" (formula "76") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "76") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "76") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0"))
                                    (rule "mul_literals" (formula "76") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "76") (term "1,1,0"))
                                    (rule "getOfSeqSub" (formula "52") (term "0"))
                                    (rule "castDel" (formula "52") (term "2,0"))
                                    (rule "leq_literals" (formula "52") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "52"))
                                    (rule "add_zero_left" (formula "52") (term "1,1,0"))
                                    (rule "polySimp_elimSub" (formula "52") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "52") (term "0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "52") (term "1,0,0"))
                                    (rule "polySimp_addComm0" (formula "52") (term "0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "52") (term "1,0,0"))
                                    (rule "add_literals" (formula "52") (term "1,1,1,0,0"))
                                    (rule "times_zero_1" (formula "52") (term "1,1,0,0"))
                                    (rule "add_zero_right" (formula "52") (term "1,0,0"))
                                    (rule "less_literals" (formula "52") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "52"))
                                    (rule "getOfSeqSub" (formula "29") (term "0"))
                                    (rule "castDel" (formula "29") (term "2,0"))
                                    (rule "leq_literals" (formula "29") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "add_zero_left" (formula "29") (term "1,1,0"))
                                    (rule "polySimp_elimSub" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_addComm0" (formula "29") (term "0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "1,0,0"))
                                    (rule "add_literals" (formula "29") (term "1,1,1,0,0"))
                                    (rule "times_zero_1" (formula "29") (term "1,1,0,0"))
                                    (rule "add_literals" (formula "29") (term "1,0,0"))
                                    (rule "less_literals" (formula "29") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "getOfSeqSub" (formula "43") (term "0,1,1,1"))
                                    (rule "castDel" (formula "43") (term "2,0,1,1,1"))
                                    (rule "leq_literals" (formula "43") (term "0,0,0,1,1,1"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "add_zero_left" (formula "43") (term "1,1,0,1,1,1"))
                                    (rule "polySimp_elimSub" (formula "43") (term "1,0,0,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,1,1,1"))
                                    (rule "mul_literals" (formula "43") (term "0,1,1,0,0,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "1,0,0,1,1,1"))
                                    (rule "polySimp_addComm0" (formula "43") (term "0,1,0,0,1,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,1,1,1"))
                                    (rule "add_zero_right" (formula "43") (term "0,0,0,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "43") (term "0,1,0,0,0,1,1,1"))
                                    (rule "mul_literals" (formula "43") (term "0,0,1,0,0,0,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,1,1,1"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,0,0,1,1,1"))
                                    (rule "add_zero_left" (formula "43") (term "0,0,0,0,1,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,0,0,1,1,1"))
                                    (rule "getOfSeqSubEQ" (formula "76") (term "1,1,0,1,0,1") (ifseqformula "39"))
                                    (rule "castDel" (formula "76") (term "2,1,1,0,1,0,1"))
                                    (rule "add_zero_right" (formula "76") (term "1,1,1,1,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "76") (term "1,1,0,1,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "76") (term "1,1,1,0,1,1,0,1,0,1"))
                                    (rule "add_zero_right" (formula "76") (term "1,1,0,1,1,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "76") (term "1,0,1,1,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "76") (term "1,0,0,1,0,1,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "76") (term "0,1,0,0,1,0,1,1,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "76") (term "0,0,1,0,1,1,0,1,0,1"))
                                    (rule "add_literals" (formula "76") (term "0,0,0,1,0,1,1,0,1,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "76") (term "0,0,1,1,0,1,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "1,0,1,1,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "76") (term "1,1,0,1,1,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "76") (term "1,1,0,1,1,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "76") (term "1,1,1,0,1,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "76") (term "0,1,1,0,1,1,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "76") (term "1,1,1,0,1,1,0,1,0,1"))
                                    (rule "getOfSeqSub" (formula "76") (term "1,1,1,0,1,0,1"))
                                    (rule "castDel" (formula "76") (term "2,1,1,1,0,1,0,1"))
                                    (rule "add_zero_right" (formula "76") (term "1,1,1,1,1,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "76") (term "1,1,0,1,1,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "76") (term "1,1,1,0,1,1,1,0,1,0,1"))
                                    (rule "add_zero_right" (formula "76") (term "1,1,0,1,1,1,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "76") (term "1,0,1,1,1,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "76") (term "1,0,0,1,0,1,1,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "76") (term "0,1,0,0,1,0,1,1,1,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "76") (term "0,0,1,0,1,1,1,0,1,0,1"))
                                    (rule "add_literals" (formula "76") (term "0,0,0,1,0,1,1,1,0,1,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "76") (term "0,0,1,1,1,0,1,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "1,0,1,1,1,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "76") (term "1,1,0,1,1,1,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "76") (term "1,1,0,1,1,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "76") (term "0,1,1,0,1,1,1,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "76") (term "1,1,1,0,1,1,1,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "76") (term "1,1,1,0,1,1,1,0,1,0,1"))
                                    (rule "pullOutSelect" (formula "1") (term "1,0,0,0,1,1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_3"))
                                    (rule "applyEq" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0,1,0,1,1,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "replaceKnownSelect_taclet00_3" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_4" (formula "1") (term "2,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "replaceKnownSelect_taclet00_1" (formula "2") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "2") (term "2,0"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "76")) (ifInst ""  (formula "10")))
                                    (rule "applyEqReverse" (formula "77") (term "0,1,1,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "77") (term "0,1,1,0,1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "polySimp_homoEq" (formula "75") (term "0"))
                                    (rule "polySimp_addComm1" (formula "75") (term "0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "75") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "75") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "75") (term "1,0"))
                                    (rule "mul_literals" (formula "75") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "75") (term "1,1,0"))
                                    (rule "seqGetAlphaCast" (formula "40") (term "0"))
                                    (rule "castDel" (formula "40") (term "0"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "true_left" (formula "40"))
                                    (rule "commute_or" (formula "35"))
                                    (rule "inEqSimp_or_weaken1" (formula "35"))
                                    (rule "add_literals" (formula "35") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "34")))
                                    (rule "true_left" (formula "35"))
                                    (rule "seqGetAlphaCast" (formula "40") (term "0"))
                                    (rule "castDel" (formula "40") (term "0"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "true_left" (formula "40"))
                                    (rule "substringSubstring" (formula "37") (term "0") (inst "newSym=newSym_1"))
                                    (rule "qeq_literals" (formula "37") (term "1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "add_zero_left" (formula "37") (term "2,0,1,1"))
                                    (rule "qeq_literals" (formula "37") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "add_literals" (formula "37") (term "1,0,1,1"))
                                    (rule "polySimp_elimSub" (formula "37") (term "1,1,0"))
                                    (rule "mul_literals" (formula "37") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "37") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "37") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,1,0,0,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,1,0,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,1,0,0,0"))
                                    (rule "qeq_literals" (formula "37") (term "1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,1,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,1,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,1,0"))
                                    (rule "add_literals" (formula "37") (term "0,1,0"))
                                    (rule "qeq_literals" (formula "37") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "applyEqRigid" (formula "37") (term "0,0,1") (ifseqformula "38"))
                                    (rule "eqSymm" (formula "37") (term "0,1"))
                                    (rule "applyEqRigid" (formula "37") (term "0,1,1") (ifseqformula "36"))
                                    (rule "eqSymm" (formula "37") (term "1,1"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0"))
                                    (rule "mul_literals" (formula "37") (term "1,1,0"))
                                    (rule "replace_known_left" (formula "37") (term "1,0") (ifseqformula "34"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_subsumption1" (formula "37") (term "0") (ifseqformula "34"))
                                    (rule "leq_literals" (formula "37") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "lenNonNegative" (formula "39") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "39"))
                                    (rule "applyEq" (formula "39") (term "0") (ifseqformula "40"))
                                    (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "34"))
                                    (rule "leq_literals" (formula "39") (term "0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "true_left" (formula "39"))
                                    (rule "seqGetAlphaCast" (formula "59") (term "0"))
                                    (rule "castDel" (formula "59") (term "0"))
                                     (builtin "One Step Simplification" (formula "59"))
                                    (rule "true_left" (formula "59"))
                                    (rule "substringSubstring" (formula "57") (term "0") (inst "newSym=newSym_2"))
                                    (rule "qeq_literals" (formula "57") (term "0,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "qeq_literals" (formula "57") (term "1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "add_zero_left" (formula "57") (term "1,0,1,1"))
                                    (rule "add_zero_left" (formula "57") (term "2,0,1,1"))
                                    (rule "polySimp_elimSub" (formula "57") (term "1,1,0"))
                                    (rule "times_zero_2" (formula "57") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "57") (term "1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "57") (term "1,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "57") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "57") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "57") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "57") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "57") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "57") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,1,0"))
                                    (rule "add_literals" (formula "57") (term "1,1,0,1,0"))
                                    (rule "times_zero_1" (formula "57") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "57") (term "0,1,0"))
                                    (rule "qeq_literals" (formula "57") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "applyEq" (formula "57") (term "0,1,0,0") (ifseqformula "39"))
                                    (rule "inEqSimp_homoInEq1" (formula "57") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "57") (term "1,1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "57") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "57") (term "0,1,0,0"))
                                    (rule "leq_literals" (formula "57") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "applyEq" (formula "57") (term "0,0,1") (ifseqformula "58"))
                                    (rule "eqSymm" (formula "57") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "0,0"))
                                    (rule "mul_literals" (formula "57") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "1,0"))
                                    (rule "mul_literals" (formula "57") (term "1,1,0"))
                                    (rule "replace_known_left" (formula "57") (term "1,0") (ifseqformula "34"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "inEqSimp_subsumption1" (formula "57") (term "0") (ifseqformula "34"))
                                    (rule "leq_literals" (formula "57") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "andLeft" (formula "57"))
                                    (rule "applyEqRigid" (formula "58") (term "1") (ifseqformula "57"))
                                    (rule "seqGetAlphaCast" (formula "60") (term "0"))
                                    (rule "castDel" (formula "60") (term "0"))
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "true_left" (formula "60"))
                                    (rule "commute_or" (formula "50"))
                                    (rule "inEqSimp_or_weaken1" (formula "50"))
                                    (rule "add_literals" (formula "50") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "lenOfSeqSubEQ" (formula "35") (term "1") (ifseqformula "27"))
                                    (rule "eqSymm" (formula "35"))
                                    (rule "polySimp_elimSub" (formula "35") (term "1,0"))
                                    (rule "mul_literals" (formula "35") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "35") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0"))
                                    (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                    (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "true_left" (formula "36"))
                                    (rule "applyEqRigid" (formula "35") (term "0,1") (ifseqformula "36"))
                                    (rule "lenOfSeqSubEQ" (formula "35") (term "1") (ifseqformula "59"))
                                    (rule "eqSymm" (formula "35"))
                                    (rule "polySimp_elimSub" (formula "35") (term "1,0"))
                                    (rule "mul_literals" (formula "35") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "35") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0"))
                                    (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "35") (term "0,0,1"))
                                    (rule "applyEq" (formula "35") (term "1") (ifseqformula "26"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "0,0,0"))
                                    (rule "applyEq" (formula "35") (term "0") (ifseqformula "49"))
                                    (rule "polySimp_homoEq" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "35") (term "0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "35"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1"))
                                    (rule "applyEq" (formula "43") (term "0,1,0,1,1") (ifseqformula "35"))
                                    (rule "eqSymm" (formula "43") (term "1,0,1,1"))
                                    (rule "applyEq" (formula "43") (term "0,0,0,1,1,1") (ifseqformula "35"))
                                    (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,1,1,1"))
                                    (rule "applyEq" (formula "43") (term "1,2,0,1,0,1") (ifseqformula "35"))
                                    (rule "applyEq" (formula "43") (term "1,1,1,0,1,1,1") (ifseqformula "35"))
                                    (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "35"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "polySimp_homoEq" (formula "26") (term "1"))
                                    (rule "mul_literals" (formula "26") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "26") (term "0,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "26") (term "1"))
                                    (rule "mul_literals" (formula "26") (term "1,1"))
                                    (rule "equalityToSeqGetAndSeqLenLeft" (formula "37") (inst "iv=iv"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "lenOfSeqSub" (formula "37") (term "0"))
                                    (rule "polySimp_elimSub" (formula "37") (term "1,0"))
                                    (rule "times_zero_2" (formula "37") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "37") (term "1,0"))
                                    (rule "lenOfSeqSub" (formula "38") (term "1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "38") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "38") (term "1,1,1,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "37") (term "1") (ifseqformula "61"))
                                    (rule "eqSymm" (formula "37"))
                                    (rule "polySimp_elimSub" (formula "37") (term "1,0"))
                                    (rule "times_zero_2" (formula "37") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "37") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,1,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                    (rule "applyEqRigid" (formula "37") (term "0,0,1,0") (ifseqformula "38"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "equalityToSeqGetAndSeqLenLeft" (formula "60") (inst "iv=iv"))
                                    (rule "andLeft" (formula "60"))
                                    (rule "lenOfSeqSub" (formula "60") (term "0"))
                                    (rule "polySimp_elimSub" (formula "60") (term "1,0"))
                                    (rule "times_zero_2" (formula "60") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "60") (term "1,0"))
                                    (rule "lenOfSeqSub" (formula "61") (term "1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "61") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "61") (term "1,1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "61") (term "1,1,1,0,0"))
                                    (rule "lenOfSeqSubEQ" (formula "60") (term "1") (ifseqformula "27"))
                                    (rule "polySimp_elimSub" (formula "60") (term "1,1"))
                                    (rule "mul_literals" (formula "60") (term "1,1,1"))
                                    (rule "add_zero_right" (formula "60") (term "1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0"))
                                    (rule "add_zero_right" (formula "60") (term "0,0,0"))
                                    (rule "eqSymm" (formula "60"))
                                    (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "60") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "60") (term "0,0,1"))
                                    (rule "add_literals" (formula "60") (term "0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "0,1,1,0,0"))
                                    (rule "add_zero_right" (formula "61") (term "0,0,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,1,0,0"))
                                    (rule "mul_literals" (formula "61") (term "0,1,0,0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "61") (term "0,0,0,1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0"))
                                    (rule "add_zero_right" (formula "60") (term "0,0,0"))
                                    (rule "eqSymm" (formula "60"))
                                    (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "60") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "60") (term "0,0,1"))
                                    (rule "add_literals" (formula "60") (term "0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0"))
                                    (rule "applyEq" (formula "61") (term "0,0,1,0") (ifseqformula "62"))
                                     (builtin "One Step Simplification" (formula "61"))
                                    (rule "true_left" (formula "61"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "60") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "60") (term "0,0,0"))
                                    (rule "eqSymm" (formula "60"))
                                    (rule "polySimp_elimOne" (formula "60") (term "0,0,1"))
                                    (rule "applyEq" (formula "60") (term "1") (ifseqformula "49"))
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "polySimp_homoEq" (formula "60") (term "1"))
                                    (rule "mul_literals" (formula "60") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "60") (term "0,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "60") (term "1"))
                                    (rule "mul_literals" (formula "60") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "60") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "60") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "60") (term "0,0"))
                                    (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "lenOfSeqSub" (formula "40") (term "1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "40") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "1,1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "40") (term "1,1,1,0,0"))
                                    (rule "lenOfSeqSub" (formula "39") (term "0"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,0"))
                                    (rule "mul_literals" (formula "39") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "1,0"))
                                    (rule "lenOfSeqSubEQ" (formula "39") (term "1") (ifseqformula "27"))
                                    (rule "polySimp_elimSub" (formula "39") (term "1,1"))
                                    (rule "mul_literals" (formula "39") (term "1,1,1"))
                                    (rule "add_zero_right" (formula "39") (term "1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,1,0,0"))
                                    (rule "add_zero_right" (formula "40") (term "0,0,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,0"))
                                    (rule "eqSymm" (formula "39"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,0"))
                                    (rule "eqSymm" (formula "39"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                    (rule "applyEq" (formula "40") (term "0,0,1,0") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "true_left" (formula "40"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0"))
                                    (rule "eqSymm" (formula "39"))
                                    (rule "polySimp_elimOne" (formula "39") (term "0,0,1"))
                                    (rule "applyEq" (formula "39") (term "1") (ifseqformula "50"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "polySimp_homoEq" (formula "39") (term "1"))
                                    (rule "mul_literals" (formula "39") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "39") (term "0,1"))
                                    (rule "polySimp_sepPosMonomial" (formula "39") (term "1"))
                                    (rule "mul_literals" (formula "39") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "0,0"))
                                    (rule "equalityToSeqGetAndSeqLenLeft" (formula "4") (inst "iv=iv"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "lenOfSeqSubEQ" (formula "4") (term "1") (ifseqformula "61"))
                                    (rule "eqSymm" (formula "4"))
                                    (rule "polySimp_elimSub" (formula "4") (term "1,0"))
                                    (rule "mul_literals" (formula "4") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "4") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
                                    (rule "applyEq" (formula "4") (term "0,1") (ifseqformula "6"))
                                    (rule "lenOfSeqSubEQ" (formula "4") (term "1") (ifseqformula "61"))
                                    (rule "eqSymm" (formula "4"))
                                    (rule "polySimp_elimSub" (formula "4") (term "1,0"))
                                    (rule "times_zero_2" (formula "4") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "4") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                    (rule "eqSymm" (formula "4"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0,1"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,1"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "applyEq" (formula "4") (term "0,0,1,0") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "nnf_imp2or" (formula "78") (term "0,1"))
                                    (rule "ifthenelse_split" (formula "49") (term "0"))
                                    (branch " (de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_A«anonHeapFunction»).seq@anon_heap_add_0«anonHeapFunction».length ≥ 3 TRUE"
                                       (rule "polySimp_homoEq" (formula "50"))
                                       (rule "polySimp_mulComm0" (formula "50") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "50") (term "1,0"))
                                       (rule "mul_literals" (formula "50") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                       (rule "polySimp_addComm1" (formula "50") (term "0,0"))
                                       (rule "add_literals" (formula "50") (term "0,0,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "50"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                       (rule "polySimp_elimOne" (formula "50") (term "0"))
                                       (rule "replace_known_left" (formula "79") (term "0") (ifseqformula "50"))
                                        (builtin "One Step Simplification" (formula "79"))
                                       (rule "allRight" (formula "79") (inst "sk=iv_0"))
                                       (rule "orRight" (formula "79"))
                                       (rule "notRight" (formula "79"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "eqSymm" (formula "81") (term "0,2,0"))
                                       (rule "replace_known_left" (formula "81") (term "0,0,1,1,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "1")))
                                       (rule "polySimp_homoEq" (formula "81") (term "0,2,1,0"))
                                       (rule "polySimp_addComm1" (formula "81") (term "0,0,2,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "81") (term "0,1,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "81") (term "0,0,1,1,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "81") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "81") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "81") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "81") (term "0,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "81") (term "0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "81") (term "0,0,1,1,0"))
                                       (rule "applyEqRigid" (formula "81") (term "1,0,0,1,1,0") (ifseqformula "52"))
                                       (rule "polySimp_addAssoc" (formula "81") (term "0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "81") (term "0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "81") (term "0,0,0,0,1,1,0"))
                                       (rule "applyEqRigid" (formula "44") (term "1,1,0") (ifseqformula "52"))
                                       (rule "polySimp_addAssoc" (formula "44") (term "1,0"))
                                       (rule "add_literals" (formula "44") (term "0,1,0"))
                                       (rule "add_zero_left" (formula "44") (term "1,0"))
                                       (rule "applyEq" (formula "64") (term "1,1,0") (ifseqformula "52"))
                                       (rule "polySimp_addAssoc" (formula "64") (term "1,0"))
                                       (rule "add_literals" (formula "64") (term "0,1,0"))
                                       (rule "applyEq" (formula "36") (term "0") (ifseqformula "52"))
                                       (rule "inEqSimp_homoInEq1" (formula "36"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                       (rule "add_literals" (formula "36") (term "0,0"))
                                       (rule "applyEq" (formula "45") (term "0,0,0,1") (ifseqformula "52"))
                                       (rule "polySimp_homoEq" (formula "45") (term "0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,1"))
                                       (rule "mul_literals" (formula "45") (term "0,1,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "45") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "45") (term "1,1,0,0,0,1"))
                                       (rule "times_zero_1" (formula "45") (term "1,0,0,0,1"))
                                       (rule "add_literals" (formula "45") (term "0,0,0,1"))
                                       (rule "equal_literals" (formula "45") (term "0,0,1"))
                                        (builtin "One Step Simplification" (formula "45"))
                                       (rule "notLeft" (formula "45"))
                                       (rule "applyEq" (formula "41") (term "1,2,0") (ifseqformula "51"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "2,0"))
                                       (rule "add_literals" (formula "41") (term "0,2,0"))
                                       (rule "applyEq" (formula "62") (term "1,2,0") (ifseqformula "51"))
                                       (rule "polySimp_addAssoc" (formula "62") (term "2,0"))
                                       (rule "add_literals" (formula "62") (term "0,2,0"))
                                       (rule "applyEq" (formula "64") (term "1,1,0") (ifseqformula "51"))
                                       (rule "polySimp_addAssoc" (formula "64") (term "1,0"))
                                       (rule "add_literals" (formula "64") (term "0,1,0"))
                                       (rule "add_zero_left" (formula "64") (term "1,0"))
                                       (rule "applyEq" (formula "39") (term "1,2,0") (ifseqformula "51"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "2,0"))
                                       (rule "add_literals" (formula "39") (term "0,2,0"))
                                       (rule "applyEq" (formula "62") (term "1,2,0,0") (ifseqformula "51"))
                                       (rule "polySimp_addAssoc" (formula "62") (term "2,0,0"))
                                       (rule "add_literals" (formula "62") (term "0,2,0,0"))
                                       (rule "add_zero_left" (formula "62") (term "2,0,0"))
                                       (rule "applyEqRigid" (formula "81") (term "1,0,0,1,1,1,0") (ifseqformula "51"))
                                       (rule "polySimp_addAssoc" (formula "81") (term "0,0,1,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "81") (term "0,0,0,1,1,1,0"))
                                       (rule "add_literals" (formula "81") (term "0,0,0,0,1,1,1,0"))
                                       (rule "applyEq" (formula "41") (term "1,2,0,0") (ifseqformula "51"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "2,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,2,0,0"))
                                       (rule "add_zero_left" (formula "41") (term "2,0,0"))
                                       (rule "applyEqRigid" (formula "43") (term "1,1,0") (ifseqformula "51"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "1,0"))
                                       (rule "add_literals" (formula "43") (term "0,1,0"))
                                       (rule "applyEq" (formula "50") (term "0") (ifseqformula "51"))
                                       (rule "inEqSimp_homoInEq1" (formula "50"))
                                       (rule "polySimp_mulComm0" (formula "50") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "50") (term "1,0"))
                                       (rule "mul_literals" (formula "50") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                       (rule "add_literals" (formula "50") (term "0,0"))
                                       (rule "applyEq" (formula "61") (term "1,2,0") (ifseqformula "51"))
                                       (rule "polySimp_addAssoc" (formula "61") (term "2,0"))
                                       (rule "add_literals" (formula "61") (term "0,2,0"))
                                       (rule "applyEq" (formula "42") (term "1") (ifseqformula "51"))
                                       (rule "polySimp_sepPosMonomial" (formula "81") (term "0,2,1,0"))
                                       (rule "polySimp_mulComm0" (formula "81") (term "1,0,2,1,0"))
                                       (rule "polySimp_rightDist" (formula "81") (term "1,0,2,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,2,1,0"))
                                       (rule "mul_literals" (formula "81") (term "0,1,0,2,1,0"))
                                       (rule "polySimp_elimOne" (formula "81") (term "1,1,0,2,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "81") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "81") (term "1,0,0"))
                                       (rule "mul_literals" (formula "81") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "81") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "81") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "81") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "81") (term "1,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "81") (term "1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "81") (term "1,0,1,1,0"))
                                       (rule "mul_literals" (formula "81") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "81") (term "1,1,0,1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "0,1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "80") (term "1,0,1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "80") (term "1,0,1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,1,1,1,0"))
                                       (rule "mul_literals" (formula "80") (term "0,1,0,1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "80") (term "1,1,0,1,1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "49"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                       (rule "polySimp_elimOne" (formula "49") (term "0"))
                                       (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "inEqSimp_subsumption1" (formula "51") (ifseqformula "48"))
                                       (rule "leq_literals" (formula "51") (term "0"))
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "true_left" (formula "51"))
                                       (rule "equalityToSeqGetAndSeqLenLeft" (formula "50") (inst "iv=iv"))
                                       (rule "andLeft" (formula "50"))
                                       (rule "lenOfSeqSub" (formula "50") (term "0"))
                                       (rule "polySimp_elimSub" (formula "50") (term "1,0"))
                                       (rule "mul_literals" (formula "50") (term "1,1,0"))
                                       (rule "add_zero_right" (formula "50") (term "1,0"))
                                       (rule "lenOfSeqSub" (formula "51") (term "1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "51") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "51") (term "1,1,1,1,0,0"))
                                       (rule "add_zero_right" (formula "51") (term "1,1,1,0,0"))
                                       (rule "lenOfSeqSubEQ" (formula "50") (term "1") (ifseqformula "60"))
                                       (rule "eqSymm" (formula "50"))
                                       (rule "polySimp_elimSub" (formula "50") (term "1,0"))
                                       (rule "mul_literals" (formula "50") (term "1,1,0"))
                                       (rule "add_zero_right" (formula "50") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "true_left" (formula "50"))
                                       (rule "inEqSimp_ltToLeq" (formula "50") (term "0,1,1,0,0"))
                                       (rule "add_zero_right" (formula "50") (term "0,0,1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,1,0,0"))
                                       (rule "mul_literals" (formula "50") (term "0,1,0,0,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,1,0,0"))
                                       (rule "add_literals" (formula "50") (term "0,0,0,1,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0"))
                                       (rule "applyEq" (formula "50") (term "0,0,1,0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "true_left" (formula "50"))
                                       (rule "lenNonNegative" (formula "50") (term "1,2,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "50"))
                                       (rule "inEqSimp_subsumption1" (formula "50") (ifseqformula "48"))
                                       (rule "leq_literals" (formula "50") (term "0"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "true_left" (formula "50"))
                                       (rule "cut_direct" (formula "64") (term "1"))
                                       (branch "CUT: (dataForVoter_9_A.publicSigningKey@heapAtPre_A«anonHeapFunction»).<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                           (builtin "One Step Simplification" (formula "65"))
                                          (rule "true_left" (formula "65"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "28") (inst "iv=iv"))
                                          (rule "andLeft" (formula "28"))
                                          (rule "lenOfSeqSub" (formula "28") (term "0"))
                                          (rule "polySimp_elimSub" (formula "28") (term "1,0"))
                                          (rule "mul_literals" (formula "28") (term "1,1,0"))
                                          (rule "add_zero_right" (formula "28") (term "1,0"))
                                          (rule "lenOfSeqSubEQ" (formula "28") (term "1") (ifseqformula "30"))
                                          (rule "eqSymm" (formula "28"))
                                          (rule "polySimp_elimSub" (formula "28") (term "1,0"))
                                          (rule "mul_literals" (formula "28") (term "1,1,0"))
                                          (rule "add_zero_right" (formula "28") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "lenOfSeqSub" (formula "28") (term "1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "28") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "28") (term "1,1,1,1,0,0"))
                                          (rule "add_zero_right" (formula "28") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,1,0,0"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,1,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,1,0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0,1,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                          (rule "applyEqRigid" (formula "28") (term "0,0,1,0") (ifseqformula "29"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "seqGetAlphaCast" (formula "51") (term "0"))
                                          (rule "castDel" (formula "51") (term "0"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "true_left" (formula "51"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "8") (term "1,0,1") (ifseqformula "9"))
                                          (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "65"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "3") (ifseqformula "20"))
                                          (rule "replace_known_right" (formula "62") (term "0") (ifseqformula "71"))
                                           (builtin "One Step Simplification" (formula "62"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "20"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                                          (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "74"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "9"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                                          (rule "andLeft" (formula "39"))
                                          (rule "lenOfSeqSubEQ" (formula "39") (term "1") (ifseqformula "29"))
                                          (rule "eqSymm" (formula "39"))
                                          (rule "polySimp_elimSub" (formula "39") (term "1,0"))
                                          (rule "mul_literals" (formula "39") (term "1,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                          (rule "applyEqRigid" (formula "40") (term "0,0,1,0,0,1,0,0") (ifseqformula "41"))
                                          (rule "lenOfSeqSubEQ" (formula "40") (term "0,1,0,0,1,0,0") (ifseqformula "29"))
                                          (rule "polySimp_elimSub" (formula "40") (term "1,0,1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "40") (term "1,1,0,1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "40") (term "1,0,1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "40") (term "0,0,0,1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "40") (term "0,0,0,0,1,0,0,1,0,0"))
                                          (rule "applyEqRigid" (formula "40") (term "0,0,1,0") (ifseqformula "41"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "true_left" (formula "40"))
                                          (rule "applyEq" (formula "39") (term "0,1") (ifseqformula "40"))
                                          (rule "lenOfSeqSubEQ" (formula "39") (term "1") (ifseqformula "29"))
                                          (rule "eqSymm" (formula "39"))
                                          (rule "polySimp_elimSub" (formula "39") (term "1,0"))
                                          (rule "mul_literals" (formula "39") (term "1,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0"))
                                          (rule "eqSymm" (formula "39"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,1"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "true_left" (formula "39"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "58") (inst "iv=iv"))
                                          (rule "andLeft" (formula "58"))
                                          (rule "lenOfSeqSubEQ" (formula "58") (term "1") (ifseqformula "61"))
                                          (rule "eqSymm" (formula "58"))
                                          (rule "polySimp_elimSub" (formula "58") (term "1,0"))
                                          (rule "mul_literals" (formula "58") (term "1,1,0"))
                                          (rule "add_zero_right" (formula "58") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0"))
                                          (rule "add_zero_right" (formula "58") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "58") (term "0,0,0"))
                                          (rule "add_literals" (formula "58") (term "0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0"))
                                          (rule "applyEqRigid" (formula "59") (term "0,0,1,0,0,1,0,0") (ifseqformula "60"))
                                          (rule "lenOfSeqSubEQ" (formula "59") (term "0,1,0,0,1,0,0") (ifseqformula "61"))
                                          (rule "polySimp_elimSub" (formula "59") (term "1,0,1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "59") (term "1,1,0,1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "59") (term "0,0,0,1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "59") (term "0,1,0,0,0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "59") (term "0,0,0,0,1,0,0,1,0,0"))
                                          (rule "applyEqRigid" (formula "58") (term "0,1") (ifseqformula "60"))
                                          (rule "lenOfSeqSubEQ" (formula "58") (term "1") (ifseqformula "29"))
                                          (rule "eqSymm" (formula "58"))
                                          (rule "polySimp_elimSub" (formula "58") (term "1,0"))
                                          (rule "times_zero_2" (formula "58") (term "1,1,0"))
                                          (rule "add_zero_right" (formula "58") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0"))
                                          (rule "add_zero_right" (formula "58") (term "0,0,0"))
                                          (rule "eqSymm" (formula "58"))
                                          (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "58") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "58") (term "0,0,1"))
                                          (rule "add_literals" (formula "58") (term "0,0,0,1"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "true_left" (formula "58"))
                                          (rule "applyEq" (formula "58") (term "0,0,1,0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "true_left" (formula "58"))
                                          (rule "lenNonNegative" (formula "36") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "36"))
                                          (rule "applyEq" (formula "36") (term "0") (ifseqformula "37"))
                                          (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "50"))
                                          (rule "leq_literals" (formula "36") (term "0"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "true_left" (formula "36"))
                                          (rule "seqGetAlphaCast" (formula "30") (term "0"))
                                          (rule "castDel" (formula "30") (term "0"))
                                           (builtin "One Step Simplification" (formula "30"))
                                          (rule "true_left" (formula "30"))
                                          (rule "ifthenelse_split" (formula "80") (term "2,0"))
                                          (branch " (de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_A«anonHeapFunction»).seq@anon_heap_add«anonHeapFunction».length = iv_0 TRUE"
                                             (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "30") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "62") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "81") (term "0,0,1,1,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "81") (term "0,1,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "81") (term "0,0,1,1,0"))
                                             (rule "add_literals" (formula "81") (term "1,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "81") (term "1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "81") (term "0,0,1,1,0"))
                                             (rule "leq_literals" (formula "81") (term "0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "81"))
                                             (rule "applyEq" (formula "39") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "41") (term "2,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "50") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "61") (term "2,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "1,0"))
                                             (rule "times_zero_1" (formula "4") (term "0"))
                                             (rule "leq_literals" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "applyEqRigid" (formula "30") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "59") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "52") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "60") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "51") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "40") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "80") (term "0,0,2,1,0") (ifseqformula "1"))
                                             (rule "polySimp_homoEq" (formula "80") (term "0,2,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "80") (term "0,0,2,1,0"))
                                             (rule "add_literals" (formula "80") (term "1,1,0,0,2,1,0"))
                                             (rule "times_zero_1" (formula "80") (term "1,0,0,2,1,0"))
                                             (rule "add_zero_right" (formula "80") (term "0,0,2,1,0"))
                                             (rule "equal_literals" (formula "80") (term "0,2,1,0"))
                                              (builtin "One Step Simplification" (formula "80"))
                                             (rule "applyEqRigid" (formula "36") (term "1") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "41") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "50") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "80") (term "0,0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "80") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "80") (term "0,0,0"))
                                             (rule "add_literals" (formula "80") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "80") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "80") (term "0,0,0"))
                                             (rule "leq_literals" (formula "80") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "80"))
                                             (rule "eqSymm" (formula "80"))
                                             (rule "close" (formula "80") (ifseqformula "43"))
                                          )
                                          (branch " (de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_A«anonHeapFunction»).seq@anon_heap_add«anonHeapFunction».length = iv_0 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "80"))
                                             (rule "replace_known_left" (formula "81") (term "0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "3")))
                                             (rule "inEqSimp_contradEq7" (formula "80") (ifseqformula "3"))
                                             (rule "polySimp_mulComm0" (formula "80") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "80") (term "0,0"))
                                             (rule "add_literals" (formula "80") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "80") (term "1,0,0"))
                                             (rule "add_literals" (formula "80") (term "0,0"))
                                             (rule "leq_literals" (formula "80") (term "0"))
                                              (builtin "One Step Simplification" (formula "80"))
                                             (rule "false_right" (formula "80"))
                                             (rule "seqGetAlphaCast" (formula "43") (term "0"))
                                             (rule "castDel" (formula "43") (term "0"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "seqGetAlphaCast" (formula "61") (term "0"))
                                             (rule "castDel" (formula "61") (term "0"))
                                              (builtin "One Step Simplification" (formula "61"))
                                             (rule "true_left" (formula "61"))
                                             (rule "seqGetAlphaCast" (formula "62") (term "0"))
                                             (rule "castDel" (formula "62") (term "0"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "true_left" (formula "62"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                                             (rule "andLeft" (formula "38"))
                                             (rule "lenOfSeqSub" (formula "39") (term "1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "39") (term "1,1,1,0,0"))
                                             (rule "times_zero_2" (formula "39") (term "1,1,1,1,0,0"))
                                             (rule "add_zero_right" (formula "39") (term "1,1,1,0,0"))
                                             (rule "lenOfSeqSub" (formula "38") (term "0"))
                                             (rule "polySimp_elimSub" (formula "38") (term "1,0"))
                                             (rule "mul_literals" (formula "38") (term "1,1,0"))
                                             (rule "add_zero_right" (formula "38") (term "1,0"))
                                             (rule "lenOfSeqSubEQ" (formula "38") (term "1") (ifseqformula "61"))
                                             (rule "eqSymm" (formula "38"))
                                             (rule "polySimp_elimSub" (formula "38") (term "1,0"))
                                             (rule "mul_literals" (formula "38") (term "1,1,0"))
                                             (rule "add_zero_right" (formula "38") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "true_left" (formula "38"))
                                             (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,1,0,0"))
                                             (rule "add_zero_right" (formula "38") (term "0,0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "38") (term "0,1,0,0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,1,0,0"))
                                             (rule "add_literals" (formula "38") (term "0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                             (rule "applyEq" (formula "38") (term "0,0,1,0") (ifseqformula "39"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "true_left" (formula "38"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "60") (inst "iv=iv"))
                                             (rule "andLeft" (formula "60"))
                                             (rule "lenOfSeqSub" (formula "60") (term "0"))
                                             (rule "polySimp_elimSub" (formula "60") (term "1,0"))
                                             (rule "mul_literals" (formula "60") (term "1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "1,0"))
                                             (rule "lenOfSeqSub" (formula "61") (term "1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "61") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "61") (term "1,1,1,1,0,0"))
                                             (rule "add_zero_right" (formula "61") (term "1,1,1,0,0"))
                                             (rule "lenOfSeqSubEQ" (formula "60") (term "1") (ifseqformula "29"))
                                             (rule "eqSymm" (formula "60"))
                                             (rule "polySimp_elimSub" (formula "60") (term "1,0"))
                                             (rule "mul_literals" (formula "60") (term "1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "true_left" (formula "60"))
                                             (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,0,0"))
                                             (rule "add_zero_right" (formula "60") (term "0,0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "60") (term "0,1,0,0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "60") (term "0,0,1,1,0,0"))
                                             (rule "add_literals" (formula "60") (term "0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,0"))
                                             (rule "applyEqRigid" (formula "60") (term "0,0,1,0") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "true_left" (formula "60"))
                                             (rule "substringSubstring" (formula "60") (term "0") (inst "newSym=newSym_3"))
                                             (rule "qeq_literals" (formula "60") (term "0,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "add_zero_left" (formula "60") (term "1,0,1,1"))
                                             (rule "add_zero_left" (formula "60") (term "2,0,1,1"))
                                             (rule "qeq_literals" (formula "60") (term "1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "polySimp_elimSub" (formula "60") (term "1,1,0"))
                                             (rule "mul_literals" (formula "60") (term "1,1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "60") (term "1,0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "60") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "60") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "60") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "60") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "60") (term "0,1,0"))
                                             (rule "polySimp_addComm0" (formula "60") (term "0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,1,0"))
                                             (rule "add_literals" (formula "60") (term "1,1,0,1,0"))
                                             (rule "times_zero_1" (formula "60") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "60") (term "0,1,0"))
                                             (rule "qeq_literals" (formula "60") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "applyEqRigid" (formula "60") (term "0,0,1") (ifseqformula "61"))
                                             (rule "eqSymm" (formula "60") (term "0,1"))
                                             (rule "applyEq" (formula "60") (term "0,1,1") (ifseqformula "59"))
                                             (rule "eqSymm" (formula "60") (term "1,1"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "applyEq" (formula "60") (term "0,1,0,0") (ifseqformula "41"))
                                             (rule "inEqSimp_homoInEq1" (formula "60") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "60") (term "1,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "60") (term "1,0,1,0,0"))
                                             (rule "mul_literals" (formula "60") (term "0,1,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "60") (term "0,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "60") (term "0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "60") (term "1,1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "60") (term "1,0,1,0,0"))
                                             (rule "add_zero_right" (formula "60") (term "0,1,0,0"))
                                             (rule "leq_literals" (formula "60") (term "1,0,0"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "1,0"))
                                             (rule "mul_literals" (formula "60") (term "1,1,0"))
                                             (rule "inEqSimp_subsumption1" (formula "60") (term "0,0") (ifseqformula "49"))
                                             (rule "leq_literals" (formula "60") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "inEqSimp_subsumption1" (formula "60") (term "0") (ifseqformula "49"))
                                             (rule "leq_literals" (formula "60") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "substringSubstring" (formula "40") (term "0") (inst "newSym=newSym_4"))
                                             (rule "add_literals" (formula "40") (term "1,0,1,1"))
                                             (rule "qeq_literals" (formula "40") (term "0,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "qeq_literals" (formula "40") (term "1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "add_zero_left" (formula "40") (term "2,0,1,1"))
                                             (rule "polySimp_elimSub" (formula "40") (term "1,1,0"))
                                             (rule "times_zero_2" (formula "40") (term "1,1,1,0"))
                                             (rule "add_zero_right" (formula "40") (term "1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "40") (term "1,0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "40") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "0,1,0"))
                                             (rule "polySimp_addComm0" (formula "40") (term "0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,1,0"))
                                             (rule "add_literals" (formula "40") (term "1,1,0,1,0"))
                                             (rule "times_zero_1" (formula "40") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "40") (term "0,1,0"))
                                             (rule "qeq_literals" (formula "40") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "applyEqRigid" (formula "40") (term "0,1,0,0") (ifseqformula "51"))
                                             (rule "inEqSimp_homoInEq1" (formula "40") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0,0"))
                                             (rule "mul_literals" (formula "40") (term "0,1,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "0,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "40") (term "0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "40") (term "1,1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "40") (term "1,0,1,0,0"))
                                             (rule "add_literals" (formula "40") (term "0,1,0,0"))
                                             (rule "leq_literals" (formula "40") (term "1,0,0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "applyEqRigid" (formula "40") (term "0,0,1") (ifseqformula "41"))
                                             (rule "eqSymm" (formula "40") (term "0,1"))
                                             (rule "applyEq" (formula "40") (term "0,1,1") (ifseqformula "38"))
                                             (rule "eqSymm" (formula "40") (term "1,1"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0"))
                                             (rule "mul_literals" (formula "40") (term "1,1,0"))
                                             (rule "inEqSimp_subsumption1" (formula "40") (term "0,0") (ifseqformula "50"))
                                             (rule "leq_literals" (formula "40") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "inEqSimp_subsumption1" (formula "40") (term "0") (ifseqformula "50"))
                                             (rule "leq_literals" (formula "40") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "41") (inst "iv=iv"))
                                             (rule "andLeft" (formula "41"))
                                             (rule "lenOfSeqSub" (formula "41") (term "0"))
                                             (rule "polySimp_elimSub" (formula "41") (term "1,0"))
                                             (rule "times_zero_2" (formula "41") (term "1,1,0"))
                                             (rule "add_zero_right" (formula "41") (term "1,0"))
                                             (rule "lenOfSeqSub" (formula "42") (term "1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "42") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "42") (term "1,1,1,1,0,0"))
                                             (rule "add_zero_right" (formula "42") (term "1,1,1,0,0"))
                                             (rule "lenOfSeqSubEQ" (formula "41") (term "1") (ifseqformula "62"))
                                             (rule "eqSymm" (formula "41"))
                                             (rule "polySimp_elimSub" (formula "41") (term "1,0"))
                                             (rule "mul_literals" (formula "41") (term "1,1,0"))
                                             (rule "add_zero_right" (formula "41") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "true_left" (formula "41"))
                                             (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,1,0,0"))
                                             (rule "add_zero_right" (formula "41") (term "0,0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0,0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,1,0,0"))
                                             (rule "add_literals" (formula "41") (term "0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                             (rule "applyEq" (formula "41") (term "0,0,1,0") (ifseqformula "42"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "true_left" (formula "41"))
                                             (rule "seqGetAlphaCast" (formula "43") (term "0"))
                                             (rule "castDel" (formula "43") (term "0"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "60") (inst "iv=iv"))
                                             (rule "andLeft" (formula "60"))
                                             (rule "lenOfSeqSub" (formula "60") (term "0"))
                                             (rule "polySimp_elimSub" (formula "60") (term "1,0"))
                                             (rule "mul_literals" (formula "60") (term "1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "1,0"))
                                             (rule "lenOfSeqSubEQ" (formula "60") (term "1") (ifseqformula "29"))
                                             (rule "eqSymm" (formula "60"))
                                             (rule "polySimp_elimSub" (formula "60") (term "1,0"))
                                             (rule "mul_literals" (formula "60") (term "1,1,0"))
                                             (rule "add_zero_right" (formula "60") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "true_left" (formula "60"))
                                             (rule "lenOfSeqSub" (formula "60") (term "1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "60") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "60") (term "1,1,1,1,0,0"))
                                             (rule "add_zero_right" (formula "60") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "60") (term "0,1,1,0,0"))
                                             (rule "add_zero_right" (formula "60") (term "0,0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "60") (term "0,1,0,0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "60") (term "0,0,1,1,0,0"))
                                             (rule "add_literals" (formula "60") (term "0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,0"))
                                             (rule "applyEq" (formula "60") (term "0,0,1,0") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "true_left" (formula "60"))
                                             (rule "ifthenelse_split" (formula "82") (term "0"))
                                             (branch " (de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_A«anonHeapFunction»).seq@anon_heap_add«anonHeapFunction».length ≥ 2 + iv_0 TRUE"
                                                 (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "1")))
                                                (rule "closeTrue" (formula "83"))
                                             )
                                             (branch " (de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_A«anonHeapFunction»).seq@anon_heap_add«anonHeapFunction».length ≥ 2 + iv_0 FALSE"
                                                (rule "inEqSimp_geqRight" (formula "82"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
                                                (rule "replace_known_left" (formula "84") (term "0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "84"))
                                                (rule "eqSymm" (formula "84"))
                                                (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "52"))
                                                (rule "polySimp_mulComm0" (formula "52") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "52") (term "1,0"))
                                                (rule "mul_literals" (formula "52") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                                (rule "add_literals" (formula "52") (term "0,0"))
                                                (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "4"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "1,0"))
                                                (rule "add_literals" (formula "32") (term "0,1,0"))
                                                (rule "add_zero_left" (formula "32") (term "1,0"))
                                                (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "43") (term "1,2,0") (ifseqformula "4"))
                                                (rule "polySimp_addAssoc" (formula "43") (term "2,0"))
                                                (rule "add_literals" (formula "43") (term "0,2,0"))
                                                (rule "add_zero_left" (formula "43") (term "2,0"))
                                                (rule "applyEq" (formula "62") (term "1,2,0") (ifseqformula "4"))
                                                (rule "polySimp_addAssoc" (formula "62") (term "2,0"))
                                                (rule "add_literals" (formula "62") (term "0,2,0"))
                                                (rule "add_zero_left" (formula "62") (term "2,0"))
                                                (rule "applyEq" (formula "65") (term "1,1,0") (ifseqformula "4"))
                                                (rule "polySimp_addAssoc" (formula "65") (term "1,0"))
                                                (rule "add_literals" (formula "65") (term "0,1,0"))
                                                (rule "add_zero_left" (formula "65") (term "1,0"))
                                                (rule "applyEq" (formula "43") (term "2,0,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "64") (term "2,0,0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "45") (term "1,1,0") (ifseqformula "4"))
                                                (rule "polySimp_addAssoc" (formula "45") (term "1,0"))
                                                (rule "add_literals" (formula "45") (term "0,1,0"))
                                                (rule "add_zero_left" (formula "45") (term "1,0"))
                                                (rule "close" (formula "84") (ifseqformula "45"))
                                             )
                                          )
                                       )
                                       (branch "CUT: (dataForVoter_9_A.publicSigningKey@heapAtPre_A«anonHeapFunction»).<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                           (builtin "One Step Simplification" (formula "64"))
                                          (rule "referencedObjectIsCreatedRightEQ" (formula "65") (ifseqformula "8") (ifseqformula "74"))
                                          (rule "close" (formula "65") (ifseqformula "20"))
                                       )
                                    )
                                    (branch " (de.polyas.core3.open.cred.CredTool.polyasVals@heapAtPre_A«anonHeapFunction»).seq@anon_heap_add_0«anonHeapFunction».length ≥ 3 FALSE"
                                       (rule "polySimp_homoEq" (formula "49"))
                                       (rule "mul_literals" (formula "49") (term "1,0"))
                                       (rule "add_zero_right" (formula "49") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "66"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "50"))
                                       (rule "mul_literals" (formula "50") (term "1"))
                                       (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "50"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "true_left" (formula "27"))
                                       (rule "applyEq" (formula "43") (term "1,0,0,1,1,1") (ifseqformula "49"))
                                       (rule "applyEqRigid" (formula "52") (term "1,1,0") (ifseqformula "49"))
                                       (rule "add_literals" (formula "52") (term "1,0"))
                                       (rule "applyEq" (formula "43") (term "1,0,0,1,1") (ifseqformula "49"))
                                       (rule "applyEqRigid" (formula "50") (term "1,2,0") (ifseqformula "49"))
                                       (rule "add_literals" (formula "50") (term "2,0"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "eqSymm" (formula "50"))
                                       (rule "eqSeqEmpty" (formula "50"))
                                       (rule "lenOfSeqSubEQ" (formula "50") (term "0") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "polySimp_elimSub" (formula "50") (term "0,1"))
                                       (rule "mul_literals" (formula "50") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "50") (term "0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0"))
                                       (rule "add_zero_right" (formula "50") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "50") (term "0,0,0"))
                                       (rule "add_literals" (formula "50") (term "0,0,0,0"))
                                       (rule "applyEqRigid" (formula "43") (term "1,2,0,1,0,1") (ifseqformula "49"))
                                       (rule "add_literals" (formula "43") (term "2,0,1,0,1"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "eqSymm" (formula "43") (term "1,0,1"))
                                       (rule "eqSeqEmpty" (formula "43") (term "1,0,1"))
                                       (rule "lenOfSeqSubEQ" (formula "43") (term "0,1,0,1") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "polySimp_elimSub" (formula "43") (term "0,1,1,0,1"))
                                       (rule "times_zero_2" (formula "43") (term "1,0,1,1,0,1"))
                                       (rule "add_zero_right" (formula "43") (term "0,1,1,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,1,0,1"))
                                       (rule "add_zero_right" (formula "43") (term "0,0,0,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,1,0,1"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1,0,1"))
                                       (rule "add_literals" (formula "43") (term "0,0,0,0,1,0,1"))
                                       (rule "replace_known_left" (formula "43") (term "1,0,1") (ifseqformula "50"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "applyEqRigid" (formula "78") (term "1,1,0,1,0,1,0,1") (ifseqformula "49"))
                                       (rule "add_literals" (formula "78") (term "1,0,1,0,1,0,1"))
                                       (rule "applyEq" (formula "78") (term "1,1,0,0,1,0,1") (ifseqformula "49"))
                                       (rule "add_literals" (formula "78") (term "1,0,0,1,0,1"))
                                       (rule "applyEqRigid" (formula "27") (term "1,2,0") (ifseqformula "49"))
                                       (rule "add_literals" (formula "27") (term "2,0"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "eqSymm" (formula "27"))
                                       (rule "eqSeqEmpty" (formula "27"))
                                       (rule "lenOfSeqSubEQ" (formula "27") (term "0") (ifseqformula "37"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "polySimp_elimSub" (formula "27") (term "0,1"))
                                       (rule "times_zero_2" (formula "27") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "27") (term "0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0"))
                                       (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                       (rule "applyEq" (formula "78") (term "1,1,0,0,0,1") (ifseqformula "49"))
                                       (rule "applyEqRigid" (formula "28") (term "1,1,0") (ifseqformula "49"))
                                       (rule "add_literals" (formula "28") (term "1,0"))
                                       (rule "applyEq" (formula "51") (term "0") (ifseqformula "49"))
                                       (rule "qeq_literals" (formula "51"))
                                       (rule "true_left" (formula "51"))
                                       (rule "applyEq" (formula "77") (term "1,0,2,0,1,0,1") (ifseqformula "49"))
                                       (rule "applyEq" (formula "77") (term "1,1,0,2,1,0,1,0,1") (ifseqformula "49"))
                                       (rule "add_literals" (formula "77") (term "1,0,2,1,0,1,0,1"))
                                       (rule "applyEq" (formula "77") (term "1,1,0") (ifseqformula "49"))
                                       (rule "add_literals" (formula "77") (term "1,0"))
                                       (rule "applyEqRigid" (formula "35") (term "1") (ifseqformula "49"))
                                       (rule "applyEqRigid" (formula "43") (term "1,1,1,0,1,1,1") (ifseqformula "49"))
                                       (rule "add_literals" (formula "43") (term "1,1,0,1,1,1"))
                                       (rule "applyEqRigid" (formula "50") (term "0,1,0,0,0") (ifseqformula "49"))
                                       (rule "mul_literals" (formula "50") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "50") (term "0,0,0"))
                                       (rule "leq_literals" (formula "50") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "true_left" (formula "50"))
                                       (rule "applyEqRigid" (formula "43") (term "1,1,0,1,1") (ifseqformula "49"))
                                       (rule "applyEq" (formula "43") (term "1,0,1") (ifseqformula "49"))
                                       (rule "polySimp_sepPosMonomial" (formula "27") (term "1"))
                                       (rule "mul_literals" (formula "27") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "27") (term "0,0,0"))
                                       (rule "inEqSimp_contradEq7" (formula "43") (term "1,0,1,1") (ifseqformula "34"))
                                       (rule "mul_literals" (formula "43") (term "1,0,0,1,0,1,1"))
                                       (rule "add_literals" (formula "43") (term "0,0,1,0,1,1"))
                                       (rule "leq_literals" (formula "43") (term "0,1,0,1,1"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "notLeft" (formula "43"))
                                       (rule "inEqSimp_contradInEq0" (formula "27") (term "0,0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "27") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "true_left" (formula "27"))
                                       (rule "inEqSimp_antiSymm" (formula "33") (ifseqformula "1"))
                                       (rule "replace_known_left" (formula "76") (term "0") (ifseqformula "33"))
                                        (builtin "One Step Simplification" (formula "76"))
                                       (rule "allRight" (formula "76") (inst "sk=iv_0"))
                                       (rule "orRight" (formula "76"))
                                       (rule "notRight" (formula "76"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "replace_known_left" (formula "78") (term "0,0,1,1,1,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "1")))
                                       (rule "inEqSimp_homoInEq0" (formula "78") (term "0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "78") (term "0,0,1,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "78") (term "0,1,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "78") (term "0,0,1,1,1,0"))
                                       (rule "applyEq" (formula "78") (term "1,0,0,1,1,1,0") (ifseqformula "35"))
                                       (rule "polySimp_addComm1" (formula "78") (term "0,0,1,1,1,0"))
                                       (rule "add_literals" (formula "78") (term "0,0,0,1,1,1,0"))
                                       (rule "add_zero_left" (formula "78") (term "0,0,1,1,1,0"))
                                       (rule "applyEqRigid" (formula "78") (term "1,0,0,1,1,0") (ifseqformula "35"))
                                       (rule "polySimp_addComm1" (formula "78") (term "0,0,1,1,0"))
                                       (rule "add_literals" (formula "78") (term "0,0,0,1,1,0"))
                                       (rule "applyEqRigid" (formula "41") (term "1,2,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "41") (term "2,0"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "eqSymm" (formula "41"))
                                       (rule "eqSeqEmpty" (formula "41"))
                                       (rule "lenOfSeqSubEQ" (formula "41") (term "0") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "polySimp_elimSub" (formula "41") (term "0,1"))
                                       (rule "mul_literals" (formula "41") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "41") (term "0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                       (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,0"))
                                       (rule "applyEq" (formula "59") (term "1,2,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "59") (term "2,0"))
                                        (builtin "One Step Simplification" (formula "59"))
                                       (rule "eqSymm" (formula "59"))
                                       (rule "eqSeqEmpty" (formula "59"))
                                       (rule "lenOfSeqSubEQ" (formula "59") (term "0") (ifseqformula "39"))
                                        (builtin "One Step Simplification" (formula "59"))
                                       (rule "polySimp_elimSub" (formula "59") (term "0,1"))
                                       (rule "times_zero_2" (formula "59") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "59") (term "0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0"))
                                       (rule "add_zero_right" (formula "59") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "59") (term "0,0,0"))
                                       (rule "add_literals" (formula "59") (term "0,0,0,0"))
                                       (rule "applyEq" (formula "60") (term "1,1,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "60") (term "1,0"))
                                       (rule "applyEq" (formula "39") (term "1,2,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "39") (term "2,0"))
                                        (builtin "One Step Simplification" (formula "39"))
                                       (rule "eqSymm" (formula "39"))
                                       (rule "eqSeqEmpty" (formula "39"))
                                       (rule "lenOfSeqSubEQ" (formula "39") (term "0") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "39"))
                                       (rule "polySimp_elimSub" (formula "39") (term "0,1"))
                                       (rule "times_zero_2" (formula "39") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "39") (term "0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                       (rule "applyEqRigid" (formula "42") (term "1,1,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "42") (term "1,0"))
                                       (rule "applyEqRigid" (formula "58") (term "1,1,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "58") (term "1,0"))
                                       (rule "applyEqRigid" (formula "43") (term "1,1,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "43") (term "1,0"))
                                       (rule "applyEq" (formula "57") (term "1,2,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "57") (term "2,0"))
                                        (builtin "One Step Simplification" (formula "57"))
                                       (rule "eqSymm" (formula "57"))
                                       (rule "eqSeqEmpty" (formula "57"))
                                       (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "35"))
                                       (rule "qeq_literals" (formula "36"))
                                       (rule "true_left" (formula "36"))
                                       (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "35"))
                                       (rule "leq_literals" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "applyEq" (formula "39") (term "1") (ifseqformula "34"))
                                       (rule "applyEqRigid" (formula "38") (term "0,1,0,0,0") (ifseqformula "34"))
                                       (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "38") (term "0,0,0"))
                                       (rule "leq_literals" (formula "38") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                       (rule "inEqSimp_invertInEq1" (formula "73") (term "0,1,1,1,0"))
                                       (rule "mul_literals" (formula "73") (term "1,0,1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "73") (term "0,0,1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "73") (term "0,0,1,1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "73") (term "0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "73") (term "0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "73") (term "0,0,1,1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "73") (term "0,1,1,0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "73") (term "0,0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "73"))
                                       (rule "inEqSimp_contradInEq1" (formula "73") (term "0,1,0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "73") (term "0,0,1,0"))
                                        (builtin "One Step Simplification" (formula "73"))
                                       (rule "cut_direct" (formula "59") (term "1"))
                                       (branch "CUT: (dataForVoter_9_A.publicSigningKey@heapAtPre_A«anonHeapFunction»).<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "true_left" (formula "60"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "3") (ifseqformula "20"))
                                          (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "66"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                                          (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "70"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "9"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "20"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "8") (term "1,0,1") (ifseqformula "9"))
                                          (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "51"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                                          (rule "andLeft" (formula "38"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                          (rule "applyEq" (formula "39") (term "0,0,1,0,0,1,0,0") (ifseqformula "40"))
                                          (rule "applyEqRigid" (formula "38") (term "0,0") (ifseqformula "40"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "applyEq" (formula "38") (term "0,0,1,0") (ifseqformula "39"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "54") (inst "iv=iv"))
                                          (rule "andLeft" (formula "54"))
                                          (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0"))
                                          (rule "applyEq" (formula "55") (term "0,0,1,0,0,1,0,0") (ifseqformula "56"))
                                          (rule "applyEqRigid" (formula "54") (term "0,0") (ifseqformula "56"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "true_left" (formula "54"))
                                          (rule "applyEq" (formula "54") (term "0,0,1,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "true_left" (formula "54"))
                                          (rule "lenNonNegative" (formula "36") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "36"))
                                          (rule "applyEq" (formula "36") (term "0") (ifseqformula "37"))
                                          (rule "qeq_literals" (formula "36"))
                                          (rule "true_left" (formula "36"))
                                          (rule "lenNonNegative" (formula "47") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "47"))
                                          (rule "applyEq" (formula "47") (term "0") (ifseqformula "48"))
                                          (rule "qeq_literals" (formula "47"))
                                          (rule "true_left" (formula "47"))
                                          (rule "seqGetAlphaCast" (formula "48") (term "0"))
                                          (rule "castDel" (formula "48") (term "0"))
                                           (builtin "One Step Simplification" (formula "48"))
                                          (rule "true_left" (formula "48"))
                                          (rule "seqGetAlphaCast" (formula "29") (term "0"))
                                          (rule "castDel" (formula "29") (term "0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "ifthenelse_split" (formula "75") (term "0"))
                                          (branch "iv_0 ≤ 0 TRUE"
                                             (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "4") (term "0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                             (rule "replace_known_left" (formula "76") (term "0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "76"))
                                             (rule "eqSymm" (formula "76"))
                                             (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "applyEqRigid" (formula "75") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "75") (ifseqformula "40"))
                                          )
                                          (branch "iv_0 ≤ 0 FALSE"
                                             (rule "inEqSimp_leqRight" (formula "75"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "3"))
                                             (rule "replace_known_left" (formula "76") (term "0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "76"))
                                             (rule "eqSymm" (formula "76"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "applyEqRigid" (formula "75") (term "1,0") (ifseqformula "1"))
                                             (rule "close" (formula "75") (ifseqformula "41"))
                                          )
                                       )
                                       (branch "CUT: (dataForVoter_9_A.publicSigningKey@heapAtPre_A«anonHeapFunction»).<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "referencedObjectIsCreatedRightEQ" (formula "60") (ifseqformula "8") (ifseqformula "69"))
                                          (rule "close" (formula "60") (ifseqformula "20"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "Exceptional Post (add)"
                         (builtin "One Step Simplification" (formula "48"))
                         (builtin "One Step Simplification" (formula "52"))
                        (rule "replaceKnownSelect_taclet000000_11" (formula "48") (term "0,1,0,0,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet000000_12" (formula "48") (term "0,1,0,0,1,1"))
                        (rule "andLeft" (formula "48"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "1,0") (ifseqformula "48"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,1,0") (ifseqformula "42"))
                        (rule "andLeft" (formula "49"))
                        (rule "andLeft" (formula "49"))
                        (rule "andLeft" (formula "51"))
                        (rule "notLeft" (formula "49"))
                        (rule "close" (formula "52") (ifseqformula "51"))
                     )
                     (branch "Pre (add)"
                         (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "49")) (ifInst ""  (formula "49")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "1,1") (ifseqformula "42"))
                        (rule "wellFormedAnonEQ" (formula "50") (term "0,1") (ifseqformula "42"))
                        (rule "impRight" (formula "62"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "65"))
                        (rule "eqSymm" (formula "3"))
                        (rule "eqSymm" (formula "2"))
                        (rule "eqSymm" (formula "1"))
                        (rule "replace_known_left" (formula "53") (term "0,0,1") (ifseqformula "15"))
                         (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "44")))
                        (rule "polySimp_homoEq" (formula "32") (term "1"))
                        (rule "times_zero_2" (formula "32") (term "1,0,1"))
                        (rule "add_zero_right" (formula "32") (term "0,1"))
                        (rule "polySimp_homoEq" (formula "37"))
                        (rule "polySimp_homoEq" (formula "31"))
                        (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "31") (term "0"))
                        (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                        (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "37") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "32") (term "0"))
                        (rule "add_zero_right" (formula "32") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                        (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                        (rule "add_literals" (formula "32") (term "0,0,0"))
                        (rule "add_zero_left" (formula "32") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "34") (term "0"))
                        (rule "add_zero_right" (formula "34") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "36"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "36") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,1,0,0"))
                        (rule "add_zero_right" (formula "38") (term "0,0,1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,1,0,0"))
                        (rule "mul_literals" (formula "38") (term "0,1,0,0,1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "39"))
                        (rule "polySimp_rightDist" (formula "39") (term "1,0,0"))
                        (rule "mul_literals" (formula "39") (term "0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,0"))
                        (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,1,0,0"))
                        (rule "add_literals" (formula "38") (term "0,0,0,1,1,0,0"))
                        (rule "add_zero_left" (formula "38") (term "0,0,1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                        (rule "add_literals" (formula "39") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,0"))
                        (rule "add_literals" (formula "38") (term "0,0,0,0,1,0"))
                        (rule "add_zero_left" (formula "38") (term "0,0,0,1,0"))
                        (rule "polySimp_pullOutFactor2" (formula "38") (term "0,0,1,0"))
                        (rule "add_literals" (formula "38") (term "1,0,0,1,0"))
                        (rule "times_zero_1" (formula "38") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "38") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "polySimp_addAssoc" (formula "39") (term "0"))
                        (rule "polySimp_addComm1" (formula "39") (term "0,0"))
                        (rule "add_literals" (formula "39") (term "0,0,0"))
                        (rule "add_zero_left" (formula "39") (term "0,0"))
                        (rule "polySimp_pullOutFactor2" (formula "39") (term "0"))
                        (rule "add_literals" (formula "39") (term "1,0"))
                        (rule "times_zero_1" (formula "39") (term "0"))
                        (rule "leq_literals" (formula "39"))
                        (rule "true_left" (formula "39"))
                        (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0"))
                        (rule "add_zero_right" (formula "37") (term "0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0"))
                        (rule "add_zero_right" (formula "36") (term "0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "36") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0"))
                        (rule "add_literals" (formula "37") (term "0,0,0,0,1,0"))
                        (rule "add_zero_left" (formula "37") (term "0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,0"))
                        (rule "add_literals" (formula "36") (term "0,0,0,0,1,0"))
                        (rule "add_zero_left" (formula "36") (term "0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0"))
                        (rule "add_zero_right" (formula "38") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                        (rule "polySimp_mulAssoc" (formula "38") (term "0,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                        (rule "replace_known_left" (formula "38") (term "0,0") (ifseqformula "36"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "33") (term "0,0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "33") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0,0"))
                        (rule "add_literals" (formula "33") (term "1,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "33") (term "0,0,0,0"))
                        (rule "qeq_literals" (formula "33") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "applyEq" (formula "64") (term "0,1,1") (ifseqformula "9"))
                        (rule "applyEqRigid" (formula "64") (term "0,1") (ifseqformula "9"))
                        (rule "applyEq" (formula "24") (term "5") (ifseqformula "22"))
                        (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "40") (term "0,1") (ifseqformula "23"))
                        (rule "eqSymm" (formula "40") (term "1"))
                        (rule "applyEq" (formula "46") (term "0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "41") (term "5") (ifseqformula "28"))
                        (rule "applyEq" (formula "40") (term "0,1,0") (ifseqformula "23"))
                        (rule "eqSymm" (formula "40") (term "1,0"))
                        (rule "applyEq" (formula "52") (term "1,0,0,1") (ifseqformula "3"))
                        (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "52") (term "1,0,1,1") (ifseqformula "3"))
                        (rule "applyEq" (formula "50") (term "0") (ifseqformula "2"))
                        (rule "applyEq" (formula "59") (term "0") (ifseqformula "7"))
                        (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                        (rule "applyEq" (formula "47") (term "1") (ifseqformula "2"))
                        (rule "applyEq" (formula "46") (term "0") (ifseqformula "23"))
                        (rule "eqSymm" (formula "46"))
                        (rule "polySimp_sepPosMonomial" (formula "32") (term "1"))
                        (rule "mul_literals" (formula "32") (term "1,1"))
                        (rule "polySimp_sepPosMonomial" (formula "31"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1"))
                        (rule "polySimp_rightDist" (formula "31") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                        (rule "mul_literals" (formula "31") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                        (rule "applyEq" (formula "33") (term "1,0,0,0") (ifseqformula "31"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                        (rule "add_literals" (formula "33") (term "0,0,0,0"))
                        (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "31"))
                        (rule "polySimp_addAssoc" (formula "39") (term "1,0"))
                        (rule "add_literals" (formula "39") (term "0,1,0"))
                        (rule "applyEqRigid" (formula "37") (term "1,1,0,1,0") (ifseqformula "31"))
                        (rule "polySimp_addAssoc" (formula "37") (term "1,0,1,0"))
                        (rule "add_literals" (formula "37") (term "0,1,0,1,0"))
                        (rule "applyEqRigid" (formula "34") (term "0,1,0,0") (ifseqformula "31"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                        (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                        (rule "add_literals" (formula "34") (term "0,0,0"))
                        (rule "applyEqRigid" (formula "34") (term "0,1") (ifseqformula "31"))
                        (rule "applyEqRigid" (formula "32") (term "0,1") (ifseqformula "31"))
                        (rule "polySimp_homoEq" (formula "32") (term "1"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0,1"))
                        (rule "mul_literals" (formula "32") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
                        (rule "add_literals" (formula "32") (term "0,0,1"))
                        (rule "applyEqRigid" (formula "36") (term "0,0,0,0,1,0") (ifseqformula "31"))
                        (rule "polySimp_mulComm0" (formula "36") (term "0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "0,0,0,1,0"))
                        (rule "mul_literals" (formula "36") (term "0,0,0,0,1,0"))
                        (rule "applyEq" (formula "29") (term "0") (ifseqformula "31"))
                        (rule "applyEq" (formula "33") (term "0,1,0,1,0") (ifseqformula "31"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                        (rule "polySimp_addComm1" (formula "33") (term "0,0,1,0"))
                        (rule "add_literals" (formula "33") (term "0,0,0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,1,0"))
                        (rule "add_literals" (formula "33") (term "1,1,0,1,0"))
                        (rule "times_zero_1" (formula "33") (term "1,0,1,0"))
                        (rule "add_literals" (formula "33") (term "0,1,0"))
                        (rule "qeq_literals" (formula "33") (term "1,0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "applyEqRigid" (formula "35") (term "1,2,0,0") (ifseqformula "31"))
                        (rule "polySimp_addAssoc" (formula "35") (term "2,0,0"))
                        (rule "add_literals" (formula "35") (term "0,2,0,0"))
                        (rule "applyEq" (formula "35") (term "2,0") (ifseqformula "31"))
                        (rule "lenOfSeqSubEQ" (formula "37") (term "0,0,0,0,1,0") (ifseqformula "35"))
                        (rule "polySimp_elimSub" (formula "37") (term "1,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "37") (term "1,1,0,0,0,0,1,0"))
                        (rule "add_zero_right" (formula "37") (term "1,0,0,0,0,1,0"))
                        (rule "lenOfSeqSubEQ" (formula "37") (term "1,0,0") (ifseqformula "35"))
                        (rule "polySimp_elimSub" (formula "37") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "37") (term "1,1,1,0,0"))
                        (rule "add_zero_right" (formula "37") (term "1,1,0,0"))
                        (rule "lenOfSeqSubEQ" (formula "36") (term "1,0,0") (ifseqformula "35"))
                        (rule "polySimp_elimSub" (formula "36") (term "1,1,0,0"))
                        (rule "times_zero_2" (formula "36") (term "1,1,1,0,0"))
                        (rule "add_zero_right" (formula "36") (term "1,1,0,0"))
                        (rule "polySimp_addComm1" (formula "36") (term "0"))
                        (rule "lenOfSeqSubEQ" (formula "33") (term "2,0,1,1") (ifseqformula "35"))
                        (rule "polySimp_elimSub" (formula "33") (term "1,2,0,1,1"))
                        (rule "times_zero_2" (formula "33") (term "1,1,2,0,1,1"))
                        (rule "add_zero_right" (formula "33") (term "1,2,0,1,1"))
                        (rule "lenOfSeqSubEQ" (formula "38") (term "1,0") (ifseqformula "35"))
                        (rule "polySimp_elimSub" (formula "38") (term "1,1,0"))
                        (rule "mul_literals" (formula "38") (term "1,1,1,0"))
                        (rule "add_zero_right" (formula "38") (term "1,1,0"))
                        (rule "lenOfSeqSubEQ" (formula "32") (term "0,0,0") (ifseqformula "35"))
                        (rule "polySimp_elimSub" (formula "32") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "32") (term "1,1,0,0,0"))
                        (rule "add_zero_right" (formula "32") (term "1,0,0,0"))
                        (rule "lenOfSeqSubEQ" (formula "31") (term "0") (ifseqformula "35"))
                        (rule "polySimp_elimSub" (formula "31") (term "1,0"))
                        (rule "mul_literals" (formula "31") (term "1,1,0"))
                        (rule "add_zero_right" (formula "31") (term "1,0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "polySimp_homoEq" (formula "31") (term "1"))
                        (rule "mul_literals" (formula "31") (term "1,0,1"))
                        (rule "add_zero_right" (formula "31") (term "0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0,0,1,0"))
                        (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "37") (term "0"))
                        (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,1,0,0"))
                        (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,1,0,0"))
                        (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0"))
                        (rule "add_zero_right" (formula "36") (term "0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "36") (term "0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "36") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "33") (term "0,2,0,1,1"))
                        (rule "add_zero_right" (formula "33") (term "0,0,2,0,1,1"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0,0,2,0,1,1"))
                        (rule "mul_literals" (formula "33") (term "0,1,0,0,2,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0"))
                        (rule "add_literals" (formula "36") (term "0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,0"))
                        (rule "add_zero_right" (formula "38") (term "0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0"))
                        (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "33") (term "0,0,2,0,1,1"))
                        (rule "add_literals" (formula "33") (term "0,0,0,2,0,1,1"))
                        (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0,0"))
                        (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0"))
                        (rule "add_literals" (formula "38") (term "0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "31") (term "0"))
                        (rule "add_zero_right" (formula "31") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "32") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0"))
                        (rule "add_zero_right" (formula "37") (term "0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "37") (term "0"))
                        (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                        (rule "add_literals" (formula "31") (term "0,0,0"))
                        (rule "lenOfSeqSubEQ" (formula "35") (term "1,1,0,1,0,0") (ifseqformula "34"))
                        (rule "polySimp_elimSub" (formula "35") (term "1,1,1,0,1,0,0"))
                        (rule "mul_literals" (formula "35") (term "1,1,1,1,0,1,0,0"))
                        (rule "add_zero_right" (formula "35") (term "1,1,1,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "35") (term "0"))
                        (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,1,0,1,0"))
                        (rule "add_zero_right" (formula "35") (term "0,0,1,1,0,1,0"))
                        (rule "polySimp_addComm1" (formula "35") (term "0"))
                        (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,1,0,1,0,0"))
                        (rule "mul_literals" (formula "35") (term "0,1,0,0,1,1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,1,0,1,0,0"))
                        (rule "add_literals" (formula "35") (term "0,0,0,1,1,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "35") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "33") (term "1"))
                        (rule "mul_literals" (formula "33") (term "1,1"))
                        (rule "polySimp_sepNegMonomial" (formula "31") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "31") (term "0,1"))
                        (rule "polySimp_sepNegMonomial" (formula "36"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                        (rule "polySimp_elimOne" (formula "36") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "33") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                        (rule "mul_literals" (formula "29") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0"))
                        (rule "mul_literals" (formula "32") (term "1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,2,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "0,0,2,0,1,1"))
                        (rule "polySimp_elimOne" (formula "32") (term "0,0,2,0,1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "37") (term "0,0,1,0"))
                        (rule "inEqSimp_invertInEq0" (formula "31") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "0,0"))
                        (rule "mul_literals" (formula "31") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,1,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "0,0,1,1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "35") (term "0,0,1,1,0,1,0"))
                        (rule "polySimp_addComm1" (formula "35") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "36") (term "0,0,1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "35") (term "0,0,0,1,0,0"))
                        (rule "replace_known_left" (formula "35") (term "0,0,1,0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "35"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                        (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                        (rule "add_literals" (formula "35") (term "0,0,0"))
                        (rule "add_zero_left" (formula "35") (term "0,0"))
                        (rule "inEqSimp_invertInEq0" (formula "36") (term "0,0"))
                        (rule "mul_literals" (formula "36") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "35") (term "0,0,1,0"))
                        (rule "polySimp_pullOutFactor2" (formula "35") (term "0"))
                        (rule "add_literals" (formula "35") (term "1,0"))
                        (rule "times_zero_1" (formula "35") (term "0"))
                        (rule "leq_literals" (formula "35"))
                        (rule "true_left" (formula "35"))
                        (rule "inEqSimp_contradEq7" (formula "31") (term "1") (ifseqformula "29"))
                        (rule "mul_literals" (formula "31") (term "1,0,0,1"))
                        (rule "add_literals" (formula "31") (term "0,0,1"))
                        (rule "leq_literals" (formula "31") (term "0,1"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "31"))
                         (builtin "One Step Simplification" (formula "35"))
                        (rule "polySimp_homoEq" (formula "35"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                        (rule "mul_literals" (formula "35") (term "0,1,0"))
                        (rule "polySimp_addComm1" (formula "35") (term "0"))
                        (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                        (rule "add_literals" (formula "35") (term "0,0,0"))
                        (rule "polySimp_sepPosMonomial" (formula "35"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1"))
                        (rule "polySimp_rightDist" (formula "35") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                        (rule "mul_literals" (formula "35") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                         (builtin "One Step Simplification" (formula "35"))
                        (rule "polySimp_homoEq" (formula "35") (term "1"))
                        (rule "mul_literals" (formula "35") (term "1,0,1"))
                        (rule "add_zero_right" (formula "35") (term "0,1"))
                        (rule "polySimp_sepPosMonomial" (formula "35") (term "1"))
                        (rule "mul_literals" (formula "35") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "29"))
                        (rule "leq_literals" (formula "30") (term "0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "true_left" (formula "30"))
                        (rule "inEqSimp_subsumption1" (formula "31") (term "0") (ifseqformula "29"))
                        (rule "leq_literals" (formula "31") (term "0,0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "andLeft" (formula "31"))
                        (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "31"))
                        (rule "eqSymm" (formula "23"))
                        (rule "applyEqRigid" (formula "34") (term "1") (ifseqformula "31"))
                        (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "31"))
                        (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "31"))
                        (rule "eqSymm" (formula "37") (term "1,0"))
                        (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "23"))
                        (rule "applyEq" (formula "43") (term "1") (ifseqformula "23"))
                        (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "23"))
                        (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=java_util_Collection_seq_3"))
                        (rule "eqSymm" (formula "60"))
                        (rule "equalityToSeqGetAndSeqLenRight" (formula "60") (inst "iv=iv"))
                        (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "60") (term "1,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "60") (term "1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1,0,0,1"))
                        (rule "mul_literals" (formula "60") (term "0,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "60") (term "1,1,1,0,0,1"))
                        (rule "eqSeqConcat" (formula "24"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "andLeft" (formula "24"))
                        (rule "andLeft" (formula "24"))
                        (rule "polySimp_addComm0" (formula "24") (term "1"))
                        (rule "eqSeqSingleton" (formula "26"))
                        (rule "andLeft" (formula "26"))
                        (rule "lenOfSeqSub" (formula "26") (term "0"))
                        (rule "polySimp_elimSub" (formula "26") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "26") (term "1,0"))
                        (rule "lenOfSeqSubEQ" (formula "25") (term "2,0") (ifseqformula "38"))
                        (rule "polySimp_elimSub" (formula "25") (term "1,2,0"))
                        (rule "mul_literals" (formula "25") (term "1,1,2,0"))
                        (rule "add_zero_right" (formula "25") (term "1,2,0"))
                        (rule "lenOfSeqSubEQ" (formula "24") (term "1,1") (ifseqformula "36"))
                        (rule "polySimp_elimSub" (formula "24") (term "1,1,1"))
                        (rule "mul_literals" (formula "24") (term "1,1,1,1"))
                        (rule "add_zero_right" (formula "24") (term "1,1,1"))
                        (rule "polySimp_homoEq" (formula "24"))
                        (rule "polySimp_addComm1" (formula "24") (term "0"))
                        (rule "lenOfSeqSubEQ" (formula "27") (term "1,0,0") (ifseqformula "38"))
                        (rule "polySimp_elimSub" (formula "27") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "27") (term "1,1,1,0,0"))
                        (rule "add_zero_right" (formula "27") (term "1,1,0,0"))
                        (rule "ifEqualsInteger" (formula "26"))
                        (rule "equal_literals" (formula "26") (term "1,1"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "andLeft" (formula "26"))
                        (rule "polySimp_homoEq" (formula "27"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                        (rule "polySimp_mulAssoc" (formula "27") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "0,2,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0,2,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,2,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0,2,0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0,0,2,0"))
                        (rule "add_literals" (formula "25") (term "0,0,0,2,0"))
                        (rule "lenOfSeqSubEQ" (formula "26") (term "0") (ifseqformula "39"))
                        (rule "polySimp_elimSub" (formula "26") (term "1,0"))
                        (rule "mul_literals" (formula "26") (term "1,1,0"))
                        (rule "add_zero_right" (formula "26") (term "1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                        (rule "lenOfSeqSubEQ" (formula "27") (term "1,0,0") (ifseqformula "25"))
                        (rule "polySimp_elimSub" (formula "27") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "27") (term "1,1,1,0,0"))
                        (rule "add_zero_right" (formula "27") (term "1,1,0,0"))
                        (rule "polySimp_addComm1" (formula "27") (term "0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0"))
                        (rule "add_zero_right" (formula "27") (term "0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                        (rule "polySimp_sepPosMonomial" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1"))
                        (rule "polySimp_rightDist" (formula "24") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                        (rule "mul_literals" (formula "24") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                        (rule "polySimp_sepPosMonomial" (formula "27"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1"))
                        (rule "polySimp_rightDist" (formula "27") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                        (rule "mul_literals" (formula "27") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,2,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0,0,2,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "0,0,2,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "0,0,0,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1"))
                        (rule "polySimp_rightDist" (formula "26") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                        (rule "mul_literals" (formula "26") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "0,0,0"))
                        (rule "eqSeqConcat" (formula "41") (term "1"))
                         (builtin "One Step Simplification" (formula "41"))
                        (rule "polySimp_addComm0" (formula "41") (term "1,0,0,1"))
                        (rule "eqSeqSingleton" (formula "41") (term "1,1"))
                        (rule "lenOfSeqSubEQ" (formula "41") (term "2,0,1,0,1") (ifseqformula "36"))
                        (rule "polySimp_elimSub" (formula "41") (term "1,2,0,1,0,1"))
                        (rule "mul_literals" (formula "41") (term "1,1,2,0,1,0,1"))
                        (rule "add_zero_right" (formula "41") (term "1,2,0,1,0,1"))
                        (rule "lenOfSeqSubEQ" (formula "41") (term "1,1,0,0,1") (ifseqformula "25"))
                        (rule "polySimp_elimSub" (formula "41") (term "1,1,1,0,0,1"))
                        (rule "times_zero_2" (formula "41") (term "1,1,1,1,0,0,1"))
                        (rule "add_zero_right" (formula "41") (term "1,1,1,0,0,1"))
                        (rule "polySimp_homoEq" (formula "41") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "41") (term "0,0,0,1"))
                        (rule "lenOfSeqSub" (formula "41") (term "0,0,1,1"))
                        (rule "polySimp_elimSub" (formula "41") (term "1,0,0,1,1"))
                        (rule "polySimp_addComm0" (formula "41") (term "1,0,0,1,1"))
                        (rule "lenOfSeqSubEQ" (formula "41") (term "1,0,0,1,1,1") (ifseqformula "25"))
                        (rule "polySimp_elimSub" (formula "41") (term "1,1,0,0,1,1,1"))
                        (rule "mul_literals" (formula "41") (term "1,1,1,0,0,1,1,1"))
                        (rule "add_zero_right" (formula "41") (term "1,1,0,0,1,1,1"))
                        (rule "ifEqualsInteger" (formula "41") (term "0,1,1"))
                        (rule "equal_literals" (formula "41") (term "1,1,0,1,1"))
                         (builtin "One Step Simplification" (formula "41"))
                        (rule "polySimp_homoEq" (formula "41") (term "1,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0,1,1"))
                        (rule "polySimp_mulAssoc" (formula "41") (term "0,1,0,1,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,1,0,1,1"))
                        (rule "polySimp_elimOne" (formula "41") (term "0,1,0,1,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "41") (term "0,1,0,1,1"))
                        (rule "lenOfSeqSubEQ" (formula "41") (term "0,0,0,1,1") (ifseqformula "25"))
                        (rule "polySimp_elimSub" (formula "41") (term "1,0,0,0,1,1"))
                        (rule "times_zero_2" (formula "41") (term "1,1,0,0,0,1,1"))
                        (rule "add_zero_right" (formula "41") (term "1,0,0,0,1,1"))
                        (rule "lenOfSeqSubEQ" (formula "41") (term "1,0,0,1,0,1,1") (ifseqformula "36"))
                        (rule "polySimp_elimSub" (formula "41") (term "1,1,0,0,1,0,1,1"))
                        (rule "mul_literals" (formula "41") (term "1,1,1,0,0,1,0,1,1"))
                        (rule "add_zero_right" (formula "41") (term "1,1,0,0,1,0,1,1"))
                        (rule "polySimp_addComm1" (formula "41") (term "0,1,0,1,1"))
                        (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0,0,0,1"))
                        (rule "add_zero_right" (formula "41") (term "0,0,1,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "41") (term "0,2,0,1,0,1"))
                        (rule "add_zero_right" (formula "41") (term "0,0,2,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,2,0,1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0,0,1,1,1"))
                        (rule "add_zero_right" (formula "41") (term "0,0,1,0,0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,1,1"))
                        (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0,0,1,1"))
                        (rule "add_zero_right" (formula "41") (term "0,0,0,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,1,1"))
                        (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0,1,0,1,1"))
                        (rule "add_zero_right" (formula "41") (term "0,0,1,0,1,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,1,0,1,1"))
                        (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,1,1"))
                        (rule "polySimp_sepPosMonomial" (formula "41") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,1"))
                        (rule "mul_literals" (formula "41") (term "0,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,1"))
                        (rule "polySimp_sepPosMonomial" (formula "41") (term "1,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,1,0,1,1"))
                        (rule "mul_literals" (formula "41") (term "0,1,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,1,1"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,2,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "0,0,2,0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "41") (term "0,0,2,0,1,0,1"))
                        (rule "applyEqRigid" (formula "41") (term "2,0,1,0,1") (ifseqformula "24"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,1,0,0,1,1,1"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1,0,0,1,1,1"))
                        (rule "polySimp_elimOne" (formula "41") (term "0,0,1,0,0,1,1,1"))
                        (rule "applyEqRigid" (formula "41") (term "1,0,0,1,1,1") (ifseqformula "24"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,1,0,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1,0,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "41") (term "0,0,1,0,0,0,1,1"))
                        (rule "applyEqRigid" (formula "41") (term "1,0,0,0,1,1") (ifseqformula "24"))
                        (rule "polySimp_addComm1" (formula "41") (term "0,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,1,1"))
                        (rule "add_literals" (formula "41") (term "0,0,0,0,0,1,1"))
                        (rule "add_zero_left" (formula "41") (term "0,0,0,0,1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "0,0,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "41") (term "0,0,0,0,0,1"))
                        (rule "applyEqRigid" (formula "41") (term "0,0,0,1") (ifseqformula "24"))
                        (rule "polySimp_homoEq" (formula "41") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,1"))
                        (rule "mul_literals" (formula "41") (term "0,1,0,0,0,1"))
                        (rule "polySimp_addComm1" (formula "41") (term "0,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,1"))
                        (rule "add_literals" (formula "41") (term "0,0,0,0,0,1"))
                        (rule "add_zero_left" (formula "41") (term "0,0,0,0,1"))
                        (rule "polySimp_sepPosMonomial" (formula "41") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,0,1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "0,0,0,1,0,1,1"))
                        (rule "polySimp_elimOne" (formula "41") (term "0,0,0,1,0,1,1"))
                        (rule "applyEqRigid" (formula "41") (term "0,1,0,1,1") (ifseqformula "24"))
                        (rule "polySimp_homoEq" (formula "41") (term "1,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0,1,1"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0,1,1"))
                        (rule "mul_literals" (formula "41") (term "0,1,0,1,0,1,1"))
                        (rule "polySimp_addComm1" (formula "41") (term "0,1,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,1,1"))
                        (rule "add_literals" (formula "41") (term "0,0,0,1,0,1,1"))
                        (rule "add_zero_left" (formula "41") (term "0,0,1,0,1,1"))
                        (rule "polySimp_sepPosMonomial" (formula "41") (term "1,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,1"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,1,0,1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "0,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "41") (term "0,0,0,1,1"))
                        (rule "eqSeqConcat" (formula "47"))
                         (builtin "One Step Simplification" (formula "47"))
                        (rule "andLeft" (formula "47"))
                        (rule "andLeft" (formula "47"))
                        (rule "polySimp_addComm0" (formula "47") (term "1"))
                        (rule "eqSeqSingleton" (formula "49"))
                        (rule "andLeft" (formula "49"))
                        (rule "lenOfSeqSub" (formula "49") (term "0"))
                        (rule "polySimp_elimSub" (formula "49") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "49") (term "1,0"))
                        (rule "lenOfSeqSubEQ" (formula "47") (term "1,1") (ifseqformula "25"))
                        (rule "polySimp_homoEq" (formula "47"))
                        (rule "polySimp_elimSub" (formula "47") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "47") (term "1,1,1,0,0"))
                        (rule "add_zero_right" (formula "47") (term "1,1,0,0"))
                        (rule "polySimp_addComm1" (formula "47") (term "0"))
                        (rule "lenOfSeqSubEQ" (formula "50") (term "1,0,0") (ifseqformula "25"))
                        (rule "polySimp_elimSub" (formula "50") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "50") (term "1,1,1,0,0"))
                        (rule "add_zero_right" (formula "50") (term "1,1,0,0"))
                        (rule "lenOfSeqSubEQ" (formula "48") (term "2,0") (ifseqformula "36"))
                        (rule "polySimp_elimSub" (formula "48") (term "1,2,0"))
                        (rule "times_zero_2" (formula "48") (term "1,1,2,0"))
                        (rule "add_zero_right" (formula "48") (term "1,2,0"))
                        (rule "ifEqualsInteger" (formula "49"))
                        (rule "equal_literals" (formula "49") (term "1,1"))
                         (builtin "One Step Simplification" (formula "49"))
                        (rule "andLeft" (formula "49"))
                        (rule "polySimp_homoEq" (formula "50"))
                        (rule "polySimp_mulComm0" (formula "50") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "50") (term "1,0"))
                        (rule "polySimp_mulAssoc" (formula "50") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "50") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "50") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "50") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "47") (term "0,1,0"))
                        (rule "add_zero_right" (formula "47") (term "0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0"))
                        (rule "lenOfSeqSubEQ" (formula "49") (term "0") (ifseqformula "25"))
                        (rule "polySimp_elimSub" (formula "49") (term "1,0"))
                        (rule "times_zero_2" (formula "49") (term "1,1,0"))
                        (rule "add_zero_right" (formula "49") (term "1,0"))
                        (rule "lenOfSeqSubEQ" (formula "50") (term "1,0,0") (ifseqformula "38"))
                        (rule "polySimp_elimSub" (formula "50") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "50") (term "1,1,1,0,0"))
                        (rule "add_zero_right" (formula "50") (term "1,1,0,0"))
                        (rule "polySimp_addComm1" (formula "50") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "51") (term "0,1,0,0"))
                        (rule "add_zero_right" (formula "51") (term "0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "48") (term "0,2,0"))
                        (rule "add_zero_right" (formula "48") (term "0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,2,0"))
                        (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0"))
                        (rule "add_zero_right" (formula "49") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "50") (term "0,1,0"))
                        (rule "add_zero_right" (formula "50") (term "0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0"))
                        (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0"))
                        (rule "add_literals" (formula "50") (term "0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "49"))
                        (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                        (rule "polySimp_sepPosMonomial" (formula "47"))
                        (rule "polySimp_mulComm0" (formula "47") (term "1"))
                        (rule "polySimp_rightDist" (formula "47") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                        (rule "mul_literals" (formula "47") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                        (rule "applyEq" (formula "51") (term "1,0,0") (ifseqformula "47"))
                        (rule "applyEqRigid" (formula "49") (term "1,0") (ifseqformula "47"))
                        (rule "polySimp_addAssoc" (formula "49") (term "0"))
                        (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                        (rule "add_literals" (formula "49") (term "0,0,0"))
                        (rule "add_zero_left" (formula "49") (term "0,0"))
                        (rule "polySimp_pullOutFactor2" (formula "49") (term "0"))
                        (rule "add_literals" (formula "49") (term "1,0"))
                        (rule "times_zero_1" (formula "49") (term "0"))
                        (rule "leq_literals" (formula "49"))
                        (rule "true_left" (formula "49"))
                        (rule "applyEqRigid" (formula "48") (term "2,0") (ifseqformula "47"))
                        (rule "polySimp_sepPosMonomial" (formula "49"))
                        (rule "polySimp_mulComm0" (formula "49") (term "1"))
                        (rule "polySimp_rightDist" (formula "49") (term "1"))
                        (rule "mul_literals" (formula "49") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "47") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "47") (term "0,0,0"))
                        (rule "applyEq" (formula "24") (term "0") (ifseqformula "47"))
                        (rule "polySimp_homoEq" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0"))
                        (rule "add_zero_left" (formula "24") (term "0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "24"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                        (rule "polySimp_elimOne" (formula "24") (term "0"))
                        (rule "applyEq" (formula "48") (term "1,2,0") (ifseqformula "24"))
                        (rule "applyEqRigid" (formula "50") (term "1,1,0,0") (ifseqformula "24"))
                        (rule "applyEq" (formula "50") (term "2,0,0") (ifseqformula "24"))
                        (rule "applyEq" (formula "49") (term "1,1") (ifseqformula "24"))
                        (rule "applyEqRigid" (formula "47") (term "1,1") (ifseqformula "24"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "49") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "49") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "49") (term "0,0,0"))
                        (rule "applyEq" (formula "27") (term "1,0,0") (ifseqformula "49"))
                        (rule "applyEqRigid" (formula "36") (term "2,0") (ifseqformula "49"))
                        (rule "replace_known_left" (formula "41") (term "1,0,1") (ifseqformula "36"))
                         (builtin "One Step Simplification" (formula "41"))
                        (rule "applyEq" (formula "47") (term "0,0,0") (ifseqformula "49"))
                        (rule "inEqSimp_homoInEq1" (formula "47") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                        (rule "add_literals" (formula "47") (term "0,0,0,0"))
                        (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "49"))
                        (rule "applyEqRigid" (formula "26") (term "0") (ifseqformula "49"))
                        (rule "inEqSimp_homoInEq0" (formula "26"))
                        (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                        (rule "add_literals" (formula "26") (term "1,0"))
                        (rule "times_zero_1" (formula "26") (term "0"))
                        (rule "qeq_literals" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "applyEqRigid" (formula "46") (term "1,0") (ifseqformula "48"))
                         (builtin "One Step Simplification" (formula "46"))
                        (rule "polySimp_homoEq" (formula "46") (term "1"))
                        (rule "mul_literals" (formula "46") (term "1,0,1"))
                        (rule "add_zero_right" (formula "46") (term "0,1"))
                        (rule "applyEq" (formula "25") (term "2,0") (ifseqformula "48"))
                        (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "48"))
                        (rule "polySimp_sepPosMonomial" (formula "46") (term "1"))
                        (rule "mul_literals" (formula "46") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                        (rule "mul_literals" (formula "33") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "46") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "46") (term "0,0"))
                        (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                        (rule "pullOutSelect" (formula "66") (term "1,0,0,1,0,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_3"))
                        (rule "applyEq" (formula "67") (term "1,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "67") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "replaceKnownSelect_taclet00_3" (formula "1") (term "2,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00_4" (formula "1") (term "2,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "67") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "replaceKnownSelect_taclet0000_8" (formula "67") (term "0,1,1,1,0,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "67") (term "0,1,1,1,0,0,1"))
                        (rule "applyEqReverse" (formula "67") (term "1,0,0,0") (ifseqformula "1"))
                        (rule "replaceKnownSelect_taclet0000_8" (formula "67") (term "0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "67") (term "0,0,0"))
                        (rule "applyEqReverse" (formula "67") (term "1,0,0,1,0,1") (ifseqformula "1"))
                        (rule "replaceKnownSelect_taclet0000_8" (formula "67") (term "0,0,1,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0000_9" (formula "67") (term "0,0,1,0,1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "getOfSeqSub" (formula "50") (term "0"))
                        (rule "castDel" (formula "50") (term "2,0"))
                        (rule "add_zero_left" (formula "50") (term "1,1,0"))
                        (rule "leq_literals" (formula "50") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "50"))
                        (rule "polySimp_elimSub" (formula "50") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "50") (term "0,1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "50") (term "1,0,0"))
                        (rule "polySimp_addComm0" (formula "50") (term "0,1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "50") (term "1,0,0"))
                        (rule "add_literals" (formula "50") (term "1,1,1,0,0"))
                        (rule "times_zero_1" (formula "50") (term "1,1,0,0"))
                        (rule "add_literals" (formula "50") (term "1,0,0"))
                        (rule "less_literals" (formula "50") (term "0,0"))
                         (builtin "One Step Simplification" (formula "50"))
                        (rule "getOfSeqSub" (formula "27") (term "0"))
                        (rule "castDel" (formula "27") (term "2,0"))
                        (rule "leq_literals" (formula "27") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "add_zero_left" (formula "27") (term "1,1,0"))
                        (rule "polySimp_elimSub" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "1,0,0"))
                        (rule "polySimp_addComm0" (formula "27") (term "0,1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "27") (term "1,0,0"))
                        (rule "add_literals" (formula "27") (term "1,1,1,0,0"))
                        (rule "times_zero_1" (formula "27") (term "1,1,0,0"))
                        (rule "add_zero_right" (formula "27") (term "1,0,0"))
                        (rule "less_literals" (formula "27") (term "0,0"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "getOfSeqSub" (formula "41") (term "0,1,1,1"))
                        (rule "castDel" (formula "41") (term "2,0,1,1,1"))
                        (rule "add_zero_left" (formula "41") (term "1,1,0,1,1,1"))
                        (rule "leq_literals" (formula "41") (term "0,0,0,1,1,1"))
                         (builtin "One Step Simplification" (formula "41"))
                        (rule "polySimp_elimSub" (formula "41") (term "1,0,0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,1,1"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,1,1"))
                        (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,1,1"))
                        (rule "polySimp_addComm0" (formula "41") (term "1,0,0,1,1,1"))
                        (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,1,1,1"))
                        (rule "add_zero_right" (formula "41") (term "0,0,0,1,1,1"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,1,1,1"))
                        (rule "polySimp_rightDist" (formula "41") (term "0,1,0,0,0,1,1,1"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,0,0,1,1,1"))
                        (rule "mul_literals" (formula "41") (term "0,0,1,0,0,0,1,1,1"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,0,1,0,0,0,1,1,1"))
                        (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,1,1,1"))
                        (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,1,1,1"))
                        (rule "add_literals" (formula "41") (term "0,0,0,0,0,1,1,1"))
                        (rule "add_zero_left" (formula "41") (term "0,0,0,0,1,1,1"))
                        (rule "applyEq" (formula "41") (term "1,0,1,1,1") (ifseqformula "39"))
                         (builtin "One Step Simplification" (formula "41"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,1,1,1"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1,1,1"))
                        (rule "polySimp_elimOne" (formula "41") (term "0,0,1,1,1"))
                        (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=java_util_Collection_seq_4"))
                        (rule "applyEqReverse" (formula "67") (term "0,1,0") (ifseqformula "3"))
                        (rule "applyEqReverse" (formula "67") (term "0,1,1,0,1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "54") (term "0"))
                         (builtin "One Step Simplification" (formula "54"))
                        (rule "orRight" (formula "54"))
                        (rule "referencedObjectIsCreatedRightEQ" (formula "54") (ifseqformula "5") (ifseqformula "62"))
                        (rule "close" (formula "54") (ifseqformula "17"))
                     )
                     (branch "Null reference (var_6 = null)"
                         (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "54")))
                        (rule "closeTrue" (formula "50"))
                     )
                  )
                  (branch "Null Reference (_dataForVoter_9_B = null)"
                      (builtin "One Step Simplification" (formula "51"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Exceptional Post (add)"
                   (builtin "One Step Simplification" (formula "42"))
                   (builtin "One Step Simplification" (formula "46"))
                  (rule "andLeft" (formula "42"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "1,0") (ifseqformula "42"))
                  (rule "andLeft" (formula "43"))
                  (rule "andLeft" (formula "43"))
                  (rule "andLeft" (formula "45"))
                  (rule "notLeft" (formula "43"))
                  (rule "close" (formula "46") (ifseqformula "45"))
               )
               (branch "Pre (add)"
                   (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "42")) (ifInst ""  (formula "12")) (ifInst ""  (formula "42")))
                  (rule "impRight" (formula "56"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "eqSymm" (formula "59"))
                  (rule "eqSymm" (formula "3"))
                  (rule "eqSymm" (formula "1"))
                  (rule "eqSymm" (formula "2"))
                  (rule "polySimp_homoEq" (formula "37"))
                  (rule "polySimp_homoEq" (formula "32") (term "1"))
                  (rule "mul_literals" (formula "32") (term "1,0,1"))
                  (rule "add_zero_right" (formula "32") (term "0,1"))
                  (rule "polySimp_homoEq" (formula "31"))
                  (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "31") (term "0"))
                  (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                  (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "37") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "32") (term "0"))
                  (rule "add_zero_right" (formula "32") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                  (rule "add_literals" (formula "32") (term "0,0,0"))
                  (rule "add_zero_left" (formula "32") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,1,0,0"))
                  (rule "add_zero_right" (formula "38") (term "0,0,1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,1,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "34") (term "0"))
                  (rule "add_zero_right" (formula "34") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "39"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "36"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "36") (term "0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,1,0,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,1,1,0,0"))
                  (rule "add_zero_left" (formula "38") (term "0,0,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "38") (term "0,0,0,1,0"))
                  (rule "polySimp_pullOutFactor2" (formula "38") (term "0,0,1,0"))
                  (rule "add_literals" (formula "38") (term "1,0,0,1,0"))
                  (rule "times_zero_1" (formula "38") (term "0,0,1,0"))
                  (rule "leq_literals" (formula "38") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                  (rule "add_literals" (formula "39") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0"))
                  (rule "add_zero_right" (formula "37") (term "0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0"))
                  (rule "polySimp_addComm1" (formula "39") (term "0,0"))
                  (rule "add_literals" (formula "39") (term "0,0,0"))
                  (rule "add_zero_left" (formula "39") (term "0,0"))
                  (rule "polySimp_pullOutFactor2" (formula "39") (term "0"))
                  (rule "add_literals" (formula "39") (term "1,0"))
                  (rule "times_zero_1" (formula "39") (term "0"))
                  (rule "leq_literals" (formula "39"))
                  (rule "true_left" (formula "39"))
                  (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0"))
                  (rule "add_literals" (formula "37") (term "0,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "37") (term "0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0"))
                  (rule "add_zero_right" (formula "36") (term "0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "36") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,0"))
                  (rule "add_literals" (formula "36") (term "0,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "36") (term "0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0"))
                  (rule "add_zero_right" (formula "38") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                  (rule "polySimp_mulAssoc" (formula "38") (term "0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                  (rule "replace_known_left" (formula "38") (term "0,0") (ifseqformula "36"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "inEqSimp_homoInEq0" (formula "33") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0,0"))
                  (rule "add_literals" (formula "33") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "33") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "33") (term "0,0,0,0"))
                  (rule "qeq_literals" (formula "33") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "33") (term "0,0,1,0"))
                  (rule "applyEq" (formula "24") (term "5") (ifseqformula "22"))
                  (rule "applyEq" (formula "44") (term "0") (ifseqformula "2"))
                  (rule "applyEq" (formula "44") (term "0") (ifseqformula "3"))
                  (rule "applyEq" (formula "41") (term "5") (ifseqformula "28"))
                  (rule "applyEq" (formula "40") (term "0,1,0") (ifseqformula "23"))
                  (rule "eqSymm" (formula "40") (term "1,0"))
                  (rule "applyEq" (formula "44") (term "1,0,1") (ifseqformula "2"))
                  (rule "applyEq" (formula "56") (term "0,1") (ifseqformula "9"))
                  (rule "applyEqRigid" (formula "56") (term "0,1,1") (ifseqformula "9"))
                  (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "52") (term "0") (ifseqformula "7"))
                  (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "40") (term "0,1") (ifseqformula "23"))
                  (rule "eqSymm" (formula "40") (term "1"))
                  (rule "polySimp_sepPosMonomial" (formula "32") (term "1"))
                  (rule "mul_literals" (formula "32") (term "1,1"))
                  (rule "polySimp_sepPosMonomial" (formula "31"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1"))
                  (rule "polySimp_rightDist" (formula "31") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                  (rule "mul_literals" (formula "31") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                  (rule "applyEqRigid" (formula "37") (term "0,0,0,0,1,0") (ifseqformula "31"))
                  (rule "polySimp_mulComm0" (formula "37") (term "0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "37") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "37") (term "0,0,0,0,1,0"))
                  (rule "applyEq" (formula "34") (term "0,1") (ifseqformula "31"))
                  (rule "applyEq" (formula "37") (term "1,1,0,1,0") (ifseqformula "31"))
                  (rule "polySimp_addAssoc" (formula "37") (term "1,0,1,0"))
                  (rule "add_literals" (formula "37") (term "0,1,0,1,0"))
                  (rule "applyEqRigid" (formula "32") (term "0,1") (ifseqformula "31"))
                  (rule "polySimp_homoEq" (formula "32") (term "1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,0,1"))
                  (rule "mul_literals" (formula "32") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
                  (rule "add_literals" (formula "32") (term "0,0,1"))
                  (rule "applyEq" (formula "33") (term "2,0,1,1") (ifseqformula "31"))
                  (rule "applyEqRigid" (formula "34") (term "0,1,0,0") (ifseqformula "31"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                  (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                  (rule "add_literals" (formula "34") (term "0,0,0"))
                  (rule "applyEqRigid" (formula "33") (term "0,1,0,1,0") (ifseqformula "31"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "33") (term "0,0,1,0"))
                  (rule "add_literals" (formula "33") (term "0,0,0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,1,0"))
                  (rule "add_literals" (formula "33") (term "1,1,0,1,0"))
                  (rule "times_zero_1" (formula "33") (term "1,0,1,0"))
                  (rule "add_literals" (formula "33") (term "0,1,0"))
                  (rule "qeq_literals" (formula "33") (term "1,0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "applyEqRigid" (formula "29") (term "0") (ifseqformula "31"))
                  (rule "applyEq" (formula "36") (term "1,1,0,1,0") (ifseqformula "31"))
                  (rule "polySimp_addAssoc" (formula "36") (term "1,0,1,0"))
                  (rule "add_literals" (formula "36") (term "0,1,0,1,0"))
                  (rule "applyEq" (formula "32") (term "0,0,0") (ifseqformula "31"))
                  (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                  (rule "mul_literals" (formula "32") (term "0,0,0"))
                  (rule "applyEq" (formula "35") (term "1,2,0,0") (ifseqformula "31"))
                  (rule "polySimp_addAssoc" (formula "35") (term "2,0,0"))
                  (rule "add_literals" (formula "35") (term "0,2,0,0"))
                  (rule "applyEqRigid" (formula "35") (term "2,0") (ifseqformula "31"))
                  (rule "lenOfSeqSubEQ" (formula "31") (term "0") (ifseqformula "35"))
                  (rule "polySimp_elimSub" (formula "31") (term "1,0"))
                  (rule "mul_literals" (formula "31") (term "1,1,0"))
                  (rule "add_zero_right" (formula "31") (term "1,0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "polySimp_homoEq" (formula "31") (term "1"))
                  (rule "mul_literals" (formula "31") (term "1,0,1"))
                  (rule "add_zero_right" (formula "31") (term "0,1"))
                  (rule "lenOfSeqSubEQ" (formula "33") (term "1,0,0") (ifseqformula "35"))
                  (rule "polySimp_elimSub" (formula "33") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "33") (term "1,1,1,0,0"))
                  (rule "add_zero_right" (formula "33") (term "1,1,0,0"))
                  (rule "lenOfSeqSubEQ" (formula "36") (term "1,0,0") (ifseqformula "35"))
                  (rule "polySimp_elimSub" (formula "36") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "36") (term "1,1,1,0,0"))
                  (rule "add_zero_right" (formula "36") (term "1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "36") (term "0"))
                  (rule "lenOfSeqSubEQ" (formula "38") (term "1,0") (ifseqformula "35"))
                  (rule "polySimp_elimSub" (formula "38") (term "1,1,0"))
                  (rule "mul_literals" (formula "38") (term "1,1,1,0"))
                  (rule "add_zero_right" (formula "38") (term "1,1,0"))
                  (rule "lenOfSeqSubEQ" (formula "37") (term "1,0,0") (ifseqformula "35"))
                  (rule "polySimp_elimSub" (formula "37") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "37") (term "1,1,1,0,0"))
                  (rule "add_zero_right" (formula "37") (term "1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "37") (term "0"))
                  (rule "lenOfSeqSubEQ" (formula "39") (term "1,1,0") (ifseqformula "35"))
                  (rule "polySimp_elimSub" (formula "39") (term "1,1,1,0"))
                  (rule "mul_literals" (formula "39") (term "1,1,1,1,0"))
                  (rule "add_zero_right" (formula "39") (term "1,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "31") (term "0"))
                  (rule "add_zero_right" (formula "31") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                  (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                  (rule "add_literals" (formula "31") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,0,0"))
                  (rule "add_zero_right" (formula "32") (term "0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                  (rule "lenOfSeqSubEQ" (formula "35") (term "0,0,0,0,1,0,0") (ifseqformula "34"))
                  (rule "polySimp_elimSub" (formula "35") (term "1,0,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "35") (term "1,1,0,0,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "35") (term "1,0,0,0,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "35") (term "0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0"))
                  (rule "add_zero_right" (formula "37") (term "0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0"))
                  (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0"))
                  (rule "add_literals" (formula "37") (term "0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0"))
                  (rule "add_zero_right" (formula "36") (term "0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "36") (term "0"))
                  (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "36") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,1,0"))
                  (rule "add_zero_right" (formula "38") (term "0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0"))
                  (rule "add_literals" (formula "36") (term "0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,1,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,0,0"))
                  (rule "add_zero_right" (formula "35") (term "0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "35") (term "0,0,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "33") (term "1"))
                  (rule "mul_literals" (formula "33") (term "1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "31") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "31") (term "0,1"))
                  (rule "polySimp_sepPosMonomial" (formula "36"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1"))
                  (rule "polySimp_rightDist" (formula "36") (term "1"))
                  (rule "mul_literals" (formula "36") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                  (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "36"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                  (rule "add_literals" (formula "32") (term "0,0,0"))
                  (rule "add_zero_left" (formula "32") (term "0,0"))
                  (rule "applyEqRigid" (formula "35") (term "0,0,0,0,1,0") (ifseqformula "36"))
                  (rule "polySimp_mulComm0" (formula "35") (term "0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "35") (term "0,0,0,0,1,0"))
                  (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "36"))
                  (rule "applyEqRigid" (formula "38") (term "1,1,0") (ifseqformula "36"))
                  (rule "polySimp_addAssoc" (formula "38") (term "1,0"))
                  (rule "add_literals" (formula "38") (term "0,1,0"))
                  (rule "add_zero_left" (formula "38") (term "1,0"))
                  (rule "applyEqRigid" (formula "35") (term "1,0,0") (ifseqformula "36"))
                  (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                  (rule "add_literals" (formula "35") (term "0,0,0"))
                  (rule "add_zero_left" (formula "35") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "33") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                  (rule "mul_literals" (formula "29") (term "1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "0,0"))
                  (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "29"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "true_left" (formula "31"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "35") (term "0,0,0"))
                  (rule "polySimp_homoEq" (formula "35"))
                  (rule "polySimp_addComm1" (formula "35") (term "0"))
                  (rule "polySimp_sepPosMonomial" (formula "35"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1"))
                  (rule "polySimp_rightDist" (formula "35") (term "1"))
                  (rule "mul_literals" (formula "35") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                  (rule "applyEqRigid" (formula "34") (term "0,1,0,0,0,1,0") (ifseqformula "35"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "34") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,1,0"))
                  (rule "add_literals" (formula "34") (term "0,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "34") (term "0,0,0,1,0"))
                  (rule "applyEqRigid" (formula "31") (term "0,0") (ifseqformula "35"))
                  (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "35"))
                  (rule "applyEq" (formula "36") (term "1,1,0") (ifseqformula "35"))
                  (rule "polySimp_addAssoc" (formula "36") (term "1,0"))
                  (rule "add_literals" (formula "36") (term "0,1,0"))
                  (rule "add_zero_left" (formula "36") (term "1,0"))
                  (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "35"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "35") (term "0,0,0"))
                  (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "29"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "polySimp_homoEq" (formula "35"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "35") (term "0"))
                  (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                  (rule "add_literals" (formula "35") (term "0,0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "35"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1"))
                  (rule "polySimp_rightDist" (formula "35") (term "1"))
                  (rule "mul_literals" (formula "35") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "polySimp_homoEq" (formula "35") (term "1"))
                  (rule "mul_literals" (formula "35") (term "1,0,1"))
                  (rule "add_zero_right" (formula "35") (term "0,1"))
                  (rule "polySimp_sepPosMonomial" (formula "35") (term "1"))
                  (rule "mul_literals" (formula "35") (term "1,1"))
                  (rule "inEqSimp_invertInEq0" (formula "34") (term "0,0,1,0"))
                  (rule "mul_literals" (formula "34") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "34") (term "0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0"))
                  (rule "mul_literals" (formula "31") (term "1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                  (rule "polySimp_elimOne" (formula "34") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "29"))
                  (rule "leq_literals" (formula "30") (term "0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "true_left" (formula "30"))
                  (rule "pullOutSelect" (formula "52") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                  (rule "pullOutSelect" (formula "53") (term "1") (inst "selectSK=java_util_Collection_seq_2"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "23"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "equalityToSeqGetAndSeqLenRight" (formula "54") (inst "iv=iv"))
                  (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,1"))
                  (rule "mul_literals" (formula "54") (term "0,1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,1"))
                  (rule "eqSeqConcatEQ" (formula "38") (term "1,0") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "eqSymm" (formula "38") (term "1,1,0"))
                  (rule "polySimp_homoEq" (formula "38") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "38") (term "0,0,0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1,0"))
                  (rule "add_literals" (formula "38") (term "1,1,0,0,1,0"))
                  (rule "times_zero_1" (formula "38") (term "1,0,0,1,0"))
                  (rule "add_zero_right" (formula "38") (term "0,0,1,0"))
                  (rule "equal_literals" (formula "38") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "true_left" (formula "38"))
                  (rule "pullOutSelect" (formula "1") (term "1,0,0,0,1,1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                  (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "2") (term "1,0,1,0,1,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "replaceKnownSelect_taclet00_3" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00_4" (formula "1") (term "2,0"))
                  (rule "eqSymm" (formula "2") (term "0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,1,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                  (rule "replaceKnownSelect_taclet00_1" (formula "2") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "2") (term "2,0"))
                  (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,1,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "53")) (ifInst ""  (formula "8")))
                  (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "54") (term "0,1,0") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "54") (term "0,1,1,0,1") (ifseqformula "2"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "52") (term "0,0,1,0,1") (inst "selectSK=java_util_Collection_seq_3"))
                  (rule "applyEq" (formula "53") (term "0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "53") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                  (rule "eqSymm" (formula "53") (term "1,0,1"))
                  (rule "eqSymm" (formula "53") (term "0"))
                  (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "41") (term "0"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "referencedObjectIsCreatedRightEQ" (formula "41") (ifseqformula "4") (ifseqformula "46"))
                  (rule "close" (formula "41") (ifseqformula "17"))
               )
               (branch "Null reference (var_4 = null)"
                   (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "48")))
                  (rule "closeTrue" (formula "44"))
               )
            )
            (branch "Null Reference (_dataForVoter_9_B = null)"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Exceptional Post (add)"
             (builtin "One Step Simplification" (formula "18"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "replaceKnownSelect_taclet00_1" (formula "14") (term "0,1,0,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "14") (term "0,1,0,0,1,1"))
            (rule "andLeft" (formula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1,0") (ifseqformula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,1,0") (ifseqformula "8"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "17"))
            (rule "notLeft" (formula "15"))
            (rule "close" (formula "18") (ifseqformula "17"))
         )
         (branch "Pre (add)"
             (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,1") (ifseqformula "8"))
            (rule "wellFormedAnonEQ" (formula "16") (term "0,1") (ifseqformula "8"))
            (rule "replace_known_left" (formula "16") (term "0,0,1") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "7")))
            (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "16") (term "0"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "orRight" (formula "16"))
            (rule "referencedObjectIsCreatedRight" (formula "16") (ifseqformula "15"))
            (rule "close" (formula "16") (ifseqformula "1"))
         )
         (branch "Null reference (var_2 = null)"
             (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "20")))
            (rule "closeTrue" (formula "16"))
         )
      )
      (branch "Null Reference (_dataForVoter_9_A = null)"
          (builtin "One Step Simplification" (formula "17"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Exceptional Post (add)"
       (builtin "One Step Simplification" (formula "12"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "9") (term "1,0") (ifseqformula "8"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "11"))
      (rule "notLeft" (formula "9"))
      (rule "close" (formula "12") (ifseqformula "11"))
   )
   (branch "Pre (add)"
       (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "7")) (ifInst ""  (formula "1")) (ifInst ""  (formula "7")))
      (rule "Class_invariant_axiom_for_java_util_ArrayList" (formula "10") (term "0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "referencedObjectIsCreatedRight" (formula "10") (ifseqformula "7"))
      (rule "close" (formula "10") (ifseqformula "1"))
   )
   (branch "Null reference (var = null)"
       (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "14")))
      (rule "closeTrue" (formula "10"))
   )
)
(branch "Null Reference (_dataForVoter_9_A = null)"
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
   (rule "closeFalse" (formula "1"))
)
)
}
