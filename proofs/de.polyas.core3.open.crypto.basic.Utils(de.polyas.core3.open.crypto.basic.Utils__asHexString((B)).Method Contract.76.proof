\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Sep 26 14:18:45 CEST 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "src";

\problem {
!(  wellFormed(heapAtPre<<anonHeapFunction>>)
  & heap = heapAtPre<<anonHeapFunction>>
  & ((  b_15 = null
      |   boolean::select(heapAtPre<<anonHeapFunction>>,
                          b_15,
                          java.lang.Object::<created>)
        = TRUE)<<SC>>)
  & (!(b_15 = null)<<origin("requires @ file Utils.java @ line 76","[]")>>)<<impl,
                                                                             origin("requires @ file Utils.java @ line 76","[]")>>
  & {_b_15:=b_15}
      \[{
          exc_361=null;try {
            result_319=de.polyas.core3.open.crypto.basic.Utils.asHexString(_b_15)@de.polyas.core3.open.crypto.basic.Utils;
          }   catch (java.lang.Throwable e) {
            exc_361=e;
          }
        }\] (  resultAtPost_319 = result_319
             & excAtPost_361 = exc_361
             & heapAtPost = heap))

}

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "941")

(branch "dummy ID"
(rule "notRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "4") (term "0,0,0,1"))
(rule "eqSymm" (formula "4") (term "1,0,0,1"))
(rule "eqSymm" (formula "2"))
(rule "replace_known_right" (formula "3") (term "0") (ifseqformula "5"))
 (builtin "One Step Simplification" (formula "3"))
(rule "assignment" (formula "4") (term "1"))
 (builtin "One Step Simplification" (formula "4"))
(rule "boxToDiamond" (formula "4") (term "1"))
 (builtin "One Step Simplification" (formula "4"))
(rule "notLeft" (formula "4"))
(rule "methodBodyExpand" (formula "4") (term "1") (newnames "heapBefore_asHexString,savedHeapBefore_asHexString"))
 (builtin "One Step Simplification" (formula "4"))
(rule "returnUnfold" (formula "4") (term "1") (inst "#v0=s"))
(rule "variableDeclarationAssign" (formula "4") (term "1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "s"))
(rule "methodCallWithAssignmentUnfoldTarget" (formula "4") (term "1") (inst "#v0=s_1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "s_1"))
 (builtin "Use Operation Contract" (formula "4") (newnames "heapBefore_bytesToHexString,result_320,exc_362,heapAfter_bytesToHexString,anon_heap_bytesToHexString") (contract "de.polyas.core3.open.crypto.basic.Utils[de.polyas.core3.open.crypto.basic.Utils::bytesToHexString([B)].JML normal_behavior operation contract.0"))
(branch "Post (bytesToHexString)"
    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
    (builtin "One Step Simplification" (formula "6"))
    (builtin "One Step Simplification" (formula "5"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "5"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,1,0") (ifseqformula "5"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "8"))
   (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "11"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "assignment" (formula "12") (term "1"))
    (builtin "One Step Simplification" (formula "12"))
    (builtin "Use Operation Contract" (formula "12") (newnames "heapBefore_toLowerCase,result_321,exc_363,heapAfter_toLowerCase,anon_heap_toLowerCase") (contract "java.lang.String[java.lang.String::toLowerCase()].JML normal_behavior operation contract.0"))
   (branch "Post (toLowerCase)"
       (builtin "One Step Simplification" (formula "14"))
       (builtin "One Step Simplification" (formula "13"))
       (builtin "One Step Simplification" (formula "12"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "12"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,1,0") (ifseqformula "12"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "0,1,1,0") (ifseqformula "5"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "notLeft" (formula "16"))
      (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "19"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "assignment" (formula "21") (term "1"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "Class_invariant_axiom_for_java_lang_String" (formula "17"))
      (rule "true_left" (formula "17"))
      (rule "Class_invariant_axiom_for_java_lang_String" (formula "15"))
      (rule "true_left" (formula "15"))
      (rule "methodCallReturn" (formula "19") (term "1"))
      (rule "assignment" (formula "19") (term "1"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "methodCallEmpty" (formula "19") (term "1"))
      (rule "tryEmpty" (formula "19") (term "1"))
      (rule "emptyModality" (formula "19") (term "1"))
       (opengoal "!(  wellFormed(heapAtPre<<anonHeapFunction>>)   & heap = heapAtPre<<anonHeapFunction>>   & ((  b_15 = null       |   boolean::select(heapAtPre<<anonHeapFunction>>,                           b_15,                           java.lang.Object::<created>)         = TRUE)<<SC>>)   & (!(b_15 = null)<<origin(\"requires @ file Utils.java @ line 76\",\"[]\")>>)<<impl,                                                                              origin(\"requires @ file Utils.java @ line 76\",\"[]\")>>   & {_b_15:=b_15}       \\[{           exc_361=null;try {             result_319=de.polyas.core3.open.crypto.basic.Utils.asHexString(_b_15)@de.polyas.core3.open.crypto.basic.Utils;           }   catch (java.lang.Throwable e) {             exc_361=e;           }         }\\] (  resultAtPost_319 = result_319              & excAtPost_361 = exc_361              & heapAtPost = heap)) ")
   )
   (branch "Exceptional Post (toLowerCase)"
       (builtin "One Step Simplification" (formula "12"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "andLeft" (formula "12"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "0,1,0") (ifseqformula "5"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "15"))
      (rule "notLeft" (formula "13"))
      (rule "close" (formula "17") (ifseqformula "16"))
   )
   (branch "Pre (toLowerCase)"
       (builtin "One Step Simplification" (formula "12"))
      (rule "wellFormedAnonEQ" (formula "12") (term "1") (ifseqformula "5"))
      (rule "replace_known_left" (formula "12") (term "1,1") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
      (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "6") (term "3") (ifseqformula "4"))
      (rule "Class_invariant_axiom_for_java_lang_String" (formula "10"))
      (rule "closeTrue" (formula "10"))
   )
   (branch "Null reference (s_1 = null)"
       (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "11")))
      (rule "closeTrue" (formula "12"))
   )
)
(branch "Exceptional Post (bytesToHexString)"
    (builtin "One Step Simplification" (formula "6"))
    (builtin "One Step Simplification" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,0") (ifseqformula "5"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "8"))
   (rule "notLeft" (formula "6"))
   (rule "close" (formula "8") (ifseqformula "7"))
)
(branch "Pre (bytesToHexString)"
    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "5")) (ifInst ""  (formula "5")))
   (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
   (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "1"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "2"))
   (rule "close" (formula "4") (ifseqformula "3"))
)
)
}
