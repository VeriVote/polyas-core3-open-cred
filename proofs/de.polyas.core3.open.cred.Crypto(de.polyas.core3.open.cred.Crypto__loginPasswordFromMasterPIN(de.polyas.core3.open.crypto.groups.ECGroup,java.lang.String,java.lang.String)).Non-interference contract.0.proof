\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Sep 26 16:31:35 CEST 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_TRUE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";



\sorts{
Heap;
Update;
de.polyas.core3.open.crypto.groups.ECGroup\extends de.polyas.core3.open.crypto.groups.CyclicGroup;
Field;
org.bouncycastle.jce.spec.ECNamedCurveParameterSpec\extends org.bouncycastle.jce.spec.ECParameterSpec;
org.bouncycastle.math.ec.ECPoint\extends java.lang.Object;
boolean;
numbers;
int;
Seq;
java.lang.String\extends java.lang.Comparable, java.io.Serializable, java.lang.Object;
org.bouncycastle.math.ec.custom.sec.SecP256K1Curve\extends org.bouncycastle.math.ec.ECCurve.AbstractFp;
java.math.BigInteger\extends java.lang.Comparable, java.lang.Number;
java.lang.Throwable\extends java.io.Serializable, java.lang.Object;
LocSet;
Formula;
}

\predicates{
RELATED_BY_asHexString_1063021898(byte[],Heap,java.lang.String,java.lang.Throwable,Heap);
RELATED_BY_getEncoded_253512071(org.bouncycastle.math.ec.ECPoint,boolean,Heap,org.bouncycastle.math.ec.ECPoint,byte[],java.lang.Throwable,Heap);
RELATED_BY_pow_425138489(de.polyas.core3.open.crypto.groups.ECGroup,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,Heap,de.polyas.core3.open.crypto.groups.ECGroup,org.bouncycastle.math.ec.ECPoint,java.lang.Throwable,Heap);
RELATED_BY_getG_359011122(org.bouncycastle.jce.spec.ECParameterSpec,Heap,org.bouncycastle.jce.spec.ECNamedCurveParameterSpec,org.bouncycastle.math.ec.ECPoint,java.lang.Throwable,Heap);
RELATED_BY_uniformHash_2142081982(java.math.BigInteger,java.lang.String,java.lang.String,java.lang.String,Heap,java.math.BigInteger,java.lang.Throwable,Heap);
RELATED_BY_getOrder_757678341(org.bouncycastle.math.ec.ECCurve,Heap,org.bouncycastle.math.ec.custom.sec.SecP256K1Curve,java.math.BigInteger,java.lang.Throwable,Heap);
}

\functions{
Heap heapAtPre_A;
Field de.polyas.core3.open.crypto.groups.ECGroup::$group;
org.bouncycastle.jce.spec.ECNamedCurveParameterSpec org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(Heap,java.lang.Object,Field);
Field org.bouncycastle.jce.spec.ECParameterSpec::$generator;
org.bouncycastle.math.ec.ECPoint org.bouncycastle.math.ec.ECPoint::select(Heap,java.lang.Object,Field);
Field java.lang.Object::<created>;
boolean boolean::select(Heap,java.lang.Object,Field);
boolean TRUE;
numbers #;
numbers 1(numbers);
numbers 0(numbers);
int C(numbers);
Seq seqSingleton(any);
numbers 4(numbers);
numbers 5(numbers);
numbers 8(numbers);
numbers 2(numbers);
numbers 9(numbers);
numbers 7(numbers);
Seq seqConcat(Seq,Seq);
java.lang.String strPool(Seq);
Field de.polyas.core3.open.crypto.groups.ECGroup::$curve;
org.bouncycastle.math.ec.custom.sec.SecP256K1Curve org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(Heap,java.lang.Object,Field);
Formula wellFormed(Heap);
Null null;
Field java.math.BigInteger::$ZERO;
java.math.BigInteger java.math.BigInteger::select(Heap,java.lang.Object,Field);
Field java.math.BigInteger::$value;
int int::select(Heap,java.lang.Object,Field);
int Z(numbers);
Field org.bouncycastle.math.ec.ECCurve::$order;
Heap anon_heap_pow;
LocSet empty;
Heap anon(Heap,LocSet,Heap);
Heap heapAfter_pow_A_0;
org.bouncycastle.math.ec.custom.sec.SecP256K1Curve de_polyas_core3_open_crypto_groups_ECGroup_curve_0_A_0;
org.bouncycastle.jce.spec.ECNamedCurveParameterSpec de_polyas_core3_open_crypto_groups_ECGroup_group_0_A_0;
org.bouncycastle.math.ec.ECPoint org_bouncycastle_jce_spec_ECParameterSpec_generator_0_A_0;
Heap anon_heap_getEncoded;
Heap heapAfter_getEncoded_A_0;
Heap anon_heap_asHexString;
Heap heapAfter_asHexString_A_0;
Heap heapAtPost_A;
Heap heapAtPre_B;
Heap heapAfter_pow_B_0;
org.bouncycastle.math.ec.custom.sec.SecP256K1Curve de_polyas_core3_open_crypto_groups_ECGroup_curve_0_B_0;
org.bouncycastle.jce.spec.ECNamedCurveParameterSpec de_polyas_core3_open_crypto_groups_ECGroup_group_0_B_0;
org.bouncycastle.math.ec.ECPoint org_bouncycastle_jce_spec_ECParameterSpec_generator_0_B_0;
Heap heapAfter_getEncoded_B_0;
Heap heapAfter_asHexString_B_0;
Heap heapAtPost_B;
LocSet allFields(java.lang.Object);
Field org.bouncycastle.math.ec.ECPoint::$value;
Formula java.math.BigInteger::<$inv>(Heap);
Formula java.lang.Object::<inv>(Heap,java.lang.Object);
}

\programVariables{
Heap heap;
de.polyas.core3.open.crypto.groups.ECGroup group_21_A;
java.lang.String voterId_41_A;
java.lang.String password_56_A;
java.lang.Throwable exc_536_A_0;
java.math.BigInteger result_476_A_0;
java.lang.Throwable exc_537_A_0;
java.math.BigInteger result_477_A_0;
java.lang.Throwable exc_538_A_0;
org.bouncycastle.math.ec.ECPoint result_478_A_0;
org.bouncycastle.math.ec.ECPoint result_479_A_0;
java.lang.Throwable exc_539_A_0;
java.lang.Throwable exc_540_A_0;
byte[] result_480_A_0;
java.lang.String result_481_A_0;
java.lang.Throwable exc_541_A_0;
java.lang.Throwable exc_535_A;
java.lang.String result_475_A;
java.lang.String resultAtPost_475_A;
java.lang.Throwable excAtPost_535_A;
de.polyas.core3.open.crypto.groups.ECGroup group_21_B;
java.lang.String voterId_41_B;
java.lang.String password_56_B;
java.lang.Throwable exc_536_B_0;
java.math.BigInteger result_476_B_0;
java.lang.Throwable exc_537_B_0;
java.math.BigInteger result_477_B_0;
java.lang.Throwable exc_538_B_0;
org.bouncycastle.math.ec.ECPoint result_478_B_0;
org.bouncycastle.math.ec.ECPoint result_479_B_0;
java.lang.Throwable exc_539_B_0;
java.lang.Throwable exc_540_B_0;
byte[] result_480_B_0;
java.lang.String result_481_B_0;
java.lang.Throwable exc_541_B_0;
java.lang.Throwable exc_535_B;
java.lang.String result_475_B;
java.lang.String resultAtPost_475_B;
java.lang.Throwable excAtPost_535_B;
de.polyas.core3.open.crypto.groups.ECGroup _group_21_A;
java.lang.String _voterId_41_A;
java.lang.String _password_56_A;
de.polyas.core3.open.crypto.groups.ECGroup _group_21_B;
java.lang.String _voterId_41_B;
java.lang.String _password_56_B;
}

\rules{

unfold_computed_formula_4_of_loginPasswordFromMasterPIN_575816123 {
  \schemaVar \term Heap sv_heapAtPre_A#31;
  \schemaVar \term de.polyas.core3.open.crypto.groups.ECGroup sv_group_21_A#28;
  \schemaVar \term java.lang.String sv_voterId_41_A#29;
  \schemaVar \term java.lang.String sv_password_56_A#30;
  \schemaVar \term java.lang.String sv_resultAtPost_475_A#33;
  \schemaVar \term java.lang.Throwable sv_excAtPost_535_A#34;
  \schemaVar \term Heap sv_heapAtPost_A#35;
  \schemaVar \term Heap sv_heapAtPre_B#39;
  \schemaVar \term de.polyas.core3.open.crypto.groups.ECGroup sv_group_21_B#36;
  \schemaVar \term java.lang.String sv_voterId_41_B#37;
  \schemaVar \term java.lang.String sv_password_56_B#38;
  \schemaVar \term java.lang.String sv_resultAtPost_475_B#41;
  \schemaVar \term java.lang.Throwable sv_excAtPost_535_B#42;
  \schemaVar \term Heap sv_heapAtPost_B#43;
  
  \find (
      {heap:=sv_heapAtPre_A#31}
        (  wellFormed(sv_heapAtPre_A#31)
         & heap = sv_heapAtPre_A#31
         & (  ((  sv_group_21_A#28 = null
                |   boolean::select(sv_heapAtPre_A#31,
                                    sv_group_21_A#28,
                                    java.lang.Object::<created>)
                  = TRUE)<<SC>>)
            & ((  sv_voterId_41_A#29 = null
                |   boolean::select(sv_heapAtPre_A#31,
                                    sv_voterId_41_A#29,
                                    java.lang.Object::<created>)
                  = TRUE)<<SC>>)
            & ((  sv_password_56_A#30 = null
                |   boolean::select(sv_heapAtPre_A#31,
                                    sv_password_56_A#30,
                                    java.lang.Object::<created>)
                  = TRUE)<<SC>>))
         & ((  java.math.BigInteger::<$inv>(sv_heapAtPre_A#31)
             & ((  java.lang.Object::<inv>(sv_heapAtPre_A#31, sv_group_21_A#28)
                 & ((  (!sv_group_21_A#28 = null)<<impl>>
                     & ((  (!sv_voterId_41_A#29 = null)<<impl>>
                         & (!sv_password_56_A#30 = null)<<impl>>)<<SC>>))<<SC>>))<<SC>>))<<SC>>)
         & {_group_21_A:=sv_group_21_A#28
            || _voterId_41_A:=sv_voterId_41_A#29
            || _password_56_A:=sv_password_56_A#30}
             \[{
                 exc_535_A=null;try {
                   result_475_A=de.polyas.core3.open.cred.Crypto.loginPasswordFromMasterPIN(_group_21_A,_voterId_41_A,_password_56_A)@de.polyas.core3.open.cred.Crypto;
                 }   catch (java.lang.Throwable e) {
                   exc_535_A=e;
                 }
               }\] (  sv_resultAtPost_475_A#33 = result_475_A
                    & sv_excAtPost_535_A#34 = exc_535_A
                    & sv_heapAtPost_A#35 = heap))
    & {heap:=sv_heapAtPre_B#39}
        (  wellFormed(sv_heapAtPre_B#39)
         & heap = sv_heapAtPre_B#39
         & (  ((  sv_group_21_B#36 = null
                |   boolean::select(sv_heapAtPre_B#39,
                                    sv_group_21_B#36,
                                    java.lang.Object::<created>)
                  = TRUE)<<SC>>)
            & ((  sv_voterId_41_B#37 = null
                |   boolean::select(sv_heapAtPre_B#39,
                                    sv_voterId_41_B#37,
                                    java.lang.Object::<created>)
                  = TRUE)<<SC>>)
            & ((  sv_password_56_B#38 = null
                |   boolean::select(sv_heapAtPre_B#39,
                                    sv_password_56_B#38,
                                    java.lang.Object::<created>)
                  = TRUE)<<SC>>))
         & ((  java.math.BigInteger::<$inv>(sv_heapAtPre_B#39)
             & ((  java.lang.Object::<inv>(sv_heapAtPre_B#39, sv_group_21_B#36)
                 & ((  (!sv_group_21_B#36 = null)<<impl>>
                     & ((  (!sv_voterId_41_B#37 = null)<<impl>>
                         & (!sv_password_56_B#38 = null)<<impl>>)<<SC>>))<<SC>>))<<SC>>))<<SC>>)
         & {_group_21_B:=sv_group_21_B#36
            || _voterId_41_B:=sv_voterId_41_B#37
            || _password_56_B:=sv_password_56_B#38}
             \[{
                 exc_535_B=null;try {
                   result_475_B=de.polyas.core3.open.cred.Crypto.loginPasswordFromMasterPIN(_group_21_B,_voterId_41_B,_password_56_B)@de.polyas.core3.open.cred.Crypto;
                 }   catch (java.lang.Throwable e) {
                   exc_535_B=e;
                 }
               }\] (  sv_resultAtPost_475_B#41 = result_475_B
                    & sv_excAtPost_535_B#42 = exc_535_B
                    & sv_heapAtPost_B#43 = heap))
  )
  \antecedentPolarity
  \replacewith (
      {heap:=sv_heapAtPre_A#31}
        (    boolean::select(heap,
                             org.bouncycastle.math.ec.ECPoint::select(heap,
                                                                      org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(heap,
                                                                                                                                  sv_group_21_A#28,
                                                                                                                                  de.polyas.core3.open.crypto.groups.ECGroup::$group),
                                                                      org.bouncycastle.jce.spec.ECParameterSpec::$generator),
                             java.lang.Object::<created>)
           = TRUE
         &   boolean::select(heap,
                             strPool(seqConcat(seqSingleton(C(0(0(1(#))))),
                                               seqConcat(seqSingleton(C(1(0(1(#))))),
                                                         seqConcat(seqSingleton(C(4(1(1(#))))),
                                                                   seqConcat(seqSingleton(C(5(0(1(#))))),
                                                                             seqConcat(seqSingleton(C(8(1(1(#))))),
                                                                                       seqConcat(seqSingleton(C(1(0(1(#))))),
                                                                                                 seqConcat(seqSingleton(C(5(4(#)))),
                                                                                                           seqConcat(seqSingleton(C(2(1(1(#))))),
                                                                                                                     seqConcat(seqSingleton(C(7(9(#)))),
                                                                                                                               seqConcat(seqSingleton(C(5(1(1(#))))),
                                                                                                                                         seqConcat(seqSingleton(C(5(1(1(#))))),
                                                                                                                                                   seqConcat(seqSingleton(C(9(1(1(#))))),
                                                                                                                                                             seqConcat(seqSingleton(C(1(1(1(#))))),
                                                                                                                                                                       seqConcat(seqSingleton(C(4(1(1(#))))),
                                                                                                                                                                                 seqSingleton(C(0(0(1(#)))))))))))))))))))),
                             java.lang.Object::<created>)
           = TRUE
         &   boolean::select(sv_heapAtPre_A#31,
                             org.bouncycastle.math.ec.ECPoint::select(sv_heapAtPre_A#31,
                                                                      org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(sv_heapAtPre_A#31,
                                                                                                                                  sv_group_21_A#28,
                                                                                                                                  de.polyas.core3.open.crypto.groups.ECGroup::$group),
                                                                      org.bouncycastle.jce.spec.ECParameterSpec::$generator),
                             java.lang.Object::<created>)
           = TRUE
         &   boolean::select(sv_heapAtPre_A#31,
                             org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(sv_heapAtPre_A#31,
                                                                                         sv_group_21_A#28,
                                                                                         de.polyas.core3.open.crypto.groups.ECGroup::$group),
                             java.lang.Object::<created>)
           = TRUE
         &   boolean::select(sv_heapAtPre_A#31,
                             org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(sv_heapAtPre_A#31,
                                                                                        sv_group_21_A#28,
                                                                                        de.polyas.core3.open.crypto.groups.ECGroup::$curve),
                             java.lang.Object::<created>)
           = TRUE
         & wellFormed(sv_heapAtPre_A#31)
         & sv_heapAtPre_A#31 = heap
         &   boolean::select(sv_heapAtPre_A#31,
                             sv_group_21_A#28,
                             java.lang.Object::<created>)
           = TRUE
         &   boolean::select(sv_heapAtPre_A#31,
                             sv_voterId_41_A#29,
                             java.lang.Object::<created>)
           = TRUE
         &   boolean::select(sv_heapAtPre_A#31,
                             sv_password_56_A#30,
                             java.lang.Object::<created>)
           = TRUE
         &   boolean::select(sv_heapAtPre_A#31,
                             java.math.BigInteger::select(sv_heapAtPre_A#31,
                                                          null,
                                                          java.math.BigInteger::$ZERO),
                             java.lang.Object::<created>)
           = TRUE
         &   int::select(sv_heapAtPre_A#31,
                         java.math.BigInteger::select(sv_heapAtPre_A#31,
                                                      null,
                                                      java.math.BigInteger::$ZERO),
                         java.math.BigInteger::$value)
           = Z(0(#))
         & wellFormed(heap)
         & exc_536_A_0 = null
         &   boolean::select(heap, result_476_A_0, java.lang.Object::<created>)
           = TRUE
         &   int::select(heap,
                         org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(heap,
                                                                                    sv_group_21_A#28,
                                                                                    de.polyas.core3.open.crypto.groups.ECGroup::$curve),
                         org.bouncycastle.math.ec.ECCurve::$order)
           = int::select(heap, result_476_A_0, java.math.BigInteger::$value)
         &   boolean::select(heap,
                             org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(heap,
                                                                                        sv_group_21_A#28,
                                                                                        de.polyas.core3.open.crypto.groups.ECGroup::$curve),
                             java.lang.Object::<created>)
           = TRUE
         & RELATED_BY_getOrder_757678341(org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(heap,
                                                                                                    sv_group_21_A#28,
                                                                                                    de.polyas.core3.open.crypto.groups.ECGroup::$curve),
                                         heap,
                                         org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(heap,
                                                                                                    sv_group_21_A#28,
                                                                                                    de.polyas.core3.open.crypto.groups.ECGroup::$curve),
                                         result_476_A_0,
                                         exc_536_A_0,
                                         heap)
         & exc_537_A_0 = null
         &   boolean::select(heap, result_477_A_0, java.lang.Object::<created>)
           = TRUE
         & RELATED_BY_uniformHash_2142081982(result_476_A_0,
                                             strPool(seqConcat(seqSingleton(C(0(0(1(#))))),
                                                               seqConcat(seqSingleton(C(1(0(1(#))))),
                                                                         seqConcat(seqSingleton(C(4(1(1(#))))),
                                                                                   seqConcat(seqSingleton(C(5(0(1(#))))),
                                                                                             seqConcat(seqSingleton(C(8(1(1(#))))),
                                                                                                       seqConcat(seqSingleton(C(1(0(1(#))))),
                                                                                                                 seqConcat(seqSingleton(C(5(4(#)))),
                                                                                                                           seqConcat(seqSingleton(C(2(1(1(#))))),
                                                                                                                                     seqConcat(seqSingleton(C(7(9(#)))),
                                                                                                                                               seqConcat(seqSingleton(C(5(1(1(#))))),
                                                                                                                                                         seqConcat(seqSingleton(C(5(1(1(#))))),
                                                                                                                                                                   seqConcat(seqSingleton(C(9(1(1(#))))),
                                                                                                                                                                             seqConcat(seqSingleton(C(1(1(1(#))))),
                                                                                                                                                                                       seqConcat(seqSingleton(C(4(1(1(#))))),
                                                                                                                                                                                                 seqSingleton(C(0(0(1(#)))))))))))))))))))),
                                             sv_password_56_A#30,
                                             sv_voterId_41_A#29,
                                             heap,
                                             result_477_A_0,
                                             exc_537_A_0,
                                             heap)
         &   boolean::select(heap,
                             java.math.BigInteger::select(heap,
                                                          null,
                                                          java.math.BigInteger::$ZERO),
                             java.lang.Object::<created>)
           = TRUE
         &   int::select(heap,
                         java.math.BigInteger::select(heap,
                                                      null,
                                                      java.math.BigInteger::$ZERO),
                         java.math.BigInteger::$value)
           = Z(0(#))
         &   boolean::select(heap,
                             sv_password_56_A#30,
                             java.lang.Object::<created>)
           = TRUE
         &   boolean::select(heap,
                             sv_voterId_41_A#29,
                             java.lang.Object::<created>)
           = TRUE
         & exc_538_A_0 = null
         &   boolean::select(heap, result_478_A_0, java.lang.Object::<created>)
           = TRUE
         &   org.bouncycastle.math.ec.ECPoint::select(heap,
                                                      org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(heap,
                                                                                                                  sv_group_21_A#28,
                                                                                                                  de.polyas.core3.open.crypto.groups.ECGroup::$group),
                                                      org.bouncycastle.jce.spec.ECParameterSpec::$generator)
           = result_478_A_0
         &   boolean::select(heap,
                             org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(heap,
                                                                                         sv_group_21_A#28,
                                                                                         de.polyas.core3.open.crypto.groups.ECGroup::$group),
                             java.lang.Object::<created>)
           = TRUE
         & RELATED_BY_getG_359011122(org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(heap,
                                                                                                 sv_group_21_A#28,
                                                                                                 de.polyas.core3.open.crypto.groups.ECGroup::$group),
                                     heap,
                                     org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(heap,
                                                                                                 sv_group_21_A#28,
                                                                                                 de.polyas.core3.open.crypto.groups.ECGroup::$group),
                                     result_478_A_0,
                                     exc_538_A_0,
                                     heap)
         & wellFormed(anon_heap_pow<<anonHeapFunction>>)
         &   anon(heap, empty, anon_heap_pow<<anonHeapFunction>>)
           = heapAfter_pow_A_0
         & (    boolean::select(heap,
                                result_479_A_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_pow<<anonHeapFunction>>,
                                result_479_A_0,
                                java.lang.Object::<created>)
              = TRUE)
         & (    org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(anon_heap_pow<<anonHeapFunction>>,
                                                                           sv_group_21_A#28,
                                                                           de.polyas.core3.open.crypto.groups.ECGroup::$curve)
              = null
            |   boolean::select(anon_heap_pow<<anonHeapFunction>>,
                                org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(anon_heap_pow<<anonHeapFunction>>,
                                                                                           sv_group_21_A#28,
                                                                                           de.polyas.core3.open.crypto.groups.ECGroup::$curve),
                                java.lang.Object::<created>)
              = TRUE)
         &   \if (  boolean::select(heap,
                                    sv_group_21_A#28,
                                    java.lang.Object::<created>)
                  = TRUE)
                 \then (org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(heap,
                                                                                   sv_group_21_A#28,
                                                                                   de.polyas.core3.open.crypto.groups.ECGroup::$curve))
                 \else (org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(anon_heap_pow<<anonHeapFunction>>,
                                                                                   sv_group_21_A#28,
                                                                                   de.polyas.core3.open.crypto.groups.ECGroup::$curve))
           = de_polyas_core3_open_crypto_groups_ECGroup_curve_0_A_0<<selectSK>>
         & (    org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(anon_heap_pow<<anonHeapFunction>>,
                                                                            sv_group_21_A#28,
                                                                            de.polyas.core3.open.crypto.groups.ECGroup::$group)
              = null
            |   boolean::select(anon_heap_pow<<anonHeapFunction>>,
                                org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(anon_heap_pow<<anonHeapFunction>>,
                                                                                            sv_group_21_A#28,
                                                                                            de.polyas.core3.open.crypto.groups.ECGroup::$group),
                                java.lang.Object::<created>)
              = TRUE)
         &   \if (  boolean::select(heap,
                                    sv_group_21_A#28,
                                    java.lang.Object::<created>)
                  = TRUE)
                 \then (org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(heap,
                                                                                    sv_group_21_A#28,
                                                                                    de.polyas.core3.open.crypto.groups.ECGroup::$group))
                 \else (org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(anon_heap_pow<<anonHeapFunction>>,
                                                                                    sv_group_21_A#28,
                                                                                    de.polyas.core3.open.crypto.groups.ECGroup::$group))
           = de_polyas_core3_open_crypto_groups_ECGroup_group_0_A_0<<selectSK>>
         & (    org.bouncycastle.math.ec.ECPoint::select(anon_heap_pow<<anonHeapFunction>>,
                                                         de_polyas_core3_open_crypto_groups_ECGroup_group_0_A_0<<selectSK>>,
                                                         org.bouncycastle.jce.spec.ECParameterSpec::$generator)
              = null
            |   boolean::select(anon_heap_pow<<anonHeapFunction>>,
                                org.bouncycastle.math.ec.ECPoint::select(anon_heap_pow<<anonHeapFunction>>,
                                                                         de_polyas_core3_open_crypto_groups_ECGroup_group_0_A_0<<selectSK>>,
                                                                         org.bouncycastle.jce.spec.ECParameterSpec::$generator),
                                java.lang.Object::<created>)
              = TRUE)
         & (    org.bouncycastle.math.ec.ECPoint::select(heap,
                                                         de_polyas_core3_open_crypto_groups_ECGroup_group_0_A_0<<selectSK>>,
                                                         org.bouncycastle.jce.spec.ECParameterSpec::$generator)
              = null
            |   boolean::select(heap,
                                org.bouncycastle.math.ec.ECPoint::select(heap,
                                                                         de_polyas_core3_open_crypto_groups_ECGroup_group_0_A_0<<selectSK>>,
                                                                         org.bouncycastle.jce.spec.ECParameterSpec::$generator),
                                java.lang.Object::<created>)
              = TRUE)
         &   \if (  boolean::select(heap,
                                    de_polyas_core3_open_crypto_groups_ECGroup_group_0_A_0<<selectSK>>,
                                    java.lang.Object::<created>)
                  = TRUE)
                 \then (org.bouncycastle.math.ec.ECPoint::select(heap,
                                                                 de_polyas_core3_open_crypto_groups_ECGroup_group_0_A_0<<selectSK>>,
                                                                 org.bouncycastle.jce.spec.ECParameterSpec::$generator))
                 \else (org.bouncycastle.math.ec.ECPoint::select(anon_heap_pow<<anonHeapFunction>>,
                                                                 de_polyas_core3_open_crypto_groups_ECGroup_group_0_A_0<<selectSK>>,
                                                                 org.bouncycastle.jce.spec.ECParameterSpec::$generator))
           = org_bouncycastle_jce_spec_ECParameterSpec_generator_0_A_0<<selectSK>>
         & (exc_539_A_0 = null)<<impl>>
         & RELATED_BY_pow_425138489(sv_group_21_A#28,
                                    result_478_A_0,
                                    result_477_A_0,
                                    heap,
                                    sv_group_21_A#28,
                                    result_479_A_0,
                                    exc_539_A_0,
                                    heapAfter_pow_A_0)
         & wellFormed(anon_heap_getEncoded<<anonHeapFunction>>)
         &   anon(heapAfter_pow_A_0,
                  empty,
                  anon_heap_getEncoded<<anonHeapFunction>>)
           = heapAfter_getEncoded_A_0
         & exc_540_A_0 = null
         & (    boolean::select(heap,
                                result_480_A_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_getEncoded<<anonHeapFunction>>,
                                result_480_A_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_pow<<anonHeapFunction>>,
                                result_480_A_0,
                                java.lang.Object::<created>)
              = TRUE)
         & RELATED_BY_getEncoded_253512071(result_479_A_0,
                                           TRUE,
                                           heapAfter_pow_A_0,
                                           result_479_A_0,
                                           result_480_A_0,
                                           exc_540_A_0,
                                           heapAfter_getEncoded_A_0)
         & wellFormed(heapAfter_pow_A_0)
         & wellFormed(anon_heap_asHexString<<anonHeapFunction>>)
         &   anon(heapAfter_getEncoded_A_0,
                  empty,
                  anon_heap_asHexString<<anonHeapFunction>>)
           = heapAfter_asHexString_A_0
         & (    boolean::select(heap,
                                result_481_A_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_asHexString<<anonHeapFunction>>,
                                result_481_A_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_getEncoded<<anonHeapFunction>>,
                                result_481_A_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_pow<<anonHeapFunction>>,
                                result_481_A_0,
                                java.lang.Object::<created>)
              = TRUE)
         & (exc_541_A_0 = null)<<impl>>
         & RELATED_BY_asHexString_1063021898(result_480_A_0,
                                             heapAfter_getEncoded_A_0,
                                             result_481_A_0,
                                             exc_541_A_0,
                                             heapAfter_asHexString_A_0)
         & wellFormed(heapAfter_getEncoded_A_0)
         & !result_481_A_0 = null
         & !result_480_A_0 = null
         & !  org_bouncycastle_jce_spec_ECParameterSpec_generator_0_A_0<<selectSK>>
            = null
         & !  de_polyas_core3_open_crypto_groups_ECGroup_group_0_A_0<<selectSK>>
            = null
         & !  de_polyas_core3_open_crypto_groups_ECGroup_curve_0_A_0<<selectSK>>
            = null
         & !  org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(heap,
                                                                         sv_group_21_A#28,
                                                                         de.polyas.core3.open.crypto.groups.ECGroup::$curve)
            = null
         & !  org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(heap,
                                                                          sv_group_21_A#28,
                                                                          de.polyas.core3.open.crypto.groups.ECGroup::$group)
            = null
         & !result_479_A_0 = null
         & !  org.bouncycastle.math.ec.ECPoint::select(heap,
                                                       org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(heap,
                                                                                                                   sv_group_21_A#28,
                                                                                                                   de.polyas.core3.open.crypto.groups.ECGroup::$group),
                                                       org.bouncycastle.jce.spec.ECParameterSpec::$generator)
            = null
         & !result_478_A_0 = null
         & !  java.math.BigInteger::select(heap,
                                           null,
                                           java.math.BigInteger::$ZERO)
            = null
         & !result_477_A_0 = null
         & !  strPool(seqConcat(seqSingleton(C(0(0(1(#))))),
                                seqConcat(seqSingleton(C(1(0(1(#))))),
                                          seqConcat(seqSingleton(C(4(1(1(#))))),
                                                    seqConcat(seqSingleton(C(5(0(1(#))))),
                                                              seqConcat(seqSingleton(C(8(1(1(#))))),
                                                                        seqConcat(seqSingleton(C(1(0(1(#))))),
                                                                                  seqConcat(seqSingleton(C(5(4(#)))),
                                                                                            seqConcat(seqSingleton(C(2(1(1(#))))),
                                                                                                      seqConcat(seqSingleton(C(7(9(#)))),
                                                                                                                seqConcat(seqSingleton(C(5(1(1(#))))),
                                                                                                                          seqConcat(seqSingleton(C(5(1(1(#))))),
                                                                                                                                    seqConcat(seqSingleton(C(9(1(1(#))))),
                                                                                                                                              seqConcat(seqSingleton(C(1(1(1(#))))),
                                                                                                                                                        seqConcat(seqSingleton(C(4(1(1(#))))),
                                                                                                                                                                  seqSingleton(C(0(0(1(#))))))))))))))))))))
            = null
         & !result_476_A_0 = null
         & !  org.bouncycastle.math.ec.ECPoint::select(sv_heapAtPre_A#31,
                                                       org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(sv_heapAtPre_A#31,
                                                                                                                   sv_group_21_A#28,
                                                                                                                   de.polyas.core3.open.crypto.groups.ECGroup::$group),
                                                       org.bouncycastle.jce.spec.ECParameterSpec::$generator)
            = null
         & !  org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(sv_heapAtPre_A#31,
                                                                          sv_group_21_A#28,
                                                                          de.polyas.core3.open.crypto.groups.ECGroup::$group)
            = null
         & !  org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(sv_heapAtPre_A#31,
                                                                         sv_group_21_A#28,
                                                                         de.polyas.core3.open.crypto.groups.ECGroup::$curve)
            = null
         & !  java.math.BigInteger::select(sv_heapAtPre_A#31,
                                           null,
                                           java.math.BigInteger::$ZERO)
            = null
         & !{exc_535_A:=null
             || heap:=heapAfter_asHexString_A_0
             || result_475_A:=result_481_A_0}
              !(  result_475_A = sv_resultAtPost_475_A#33
                & exc_535_A = sv_excAtPost_535_A#34
                & sv_heapAtPost_A#35 = heap)
         & !sv_password_56_A#30 = null
         & !sv_voterId_41_A#29 = null
         & !sv_group_21_A#28 = null)
    & {heap:=sv_heapAtPre_B#39}
        (    boolean::select(heap,
                             org.bouncycastle.math.ec.ECPoint::select(heap,
                                                                      org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(heap,
                                                                                                                                  sv_group_21_B#36,
                                                                                                                                  de.polyas.core3.open.crypto.groups.ECGroup::$group),
                                                                      org.bouncycastle.jce.spec.ECParameterSpec::$generator),
                             java.lang.Object::<created>)
           = TRUE
         &   boolean::select(heap,
                             strPool(seqConcat(seqSingleton(C(0(0(1(#))))),
                                               seqConcat(seqSingleton(C(1(0(1(#))))),
                                                         seqConcat(seqSingleton(C(4(1(1(#))))),
                                                                   seqConcat(seqSingleton(C(5(0(1(#))))),
                                                                             seqConcat(seqSingleton(C(8(1(1(#))))),
                                                                                       seqConcat(seqSingleton(C(1(0(1(#))))),
                                                                                                 seqConcat(seqSingleton(C(5(4(#)))),
                                                                                                           seqConcat(seqSingleton(C(2(1(1(#))))),
                                                                                                                     seqConcat(seqSingleton(C(7(9(#)))),
                                                                                                                               seqConcat(seqSingleton(C(5(1(1(#))))),
                                                                                                                                         seqConcat(seqSingleton(C(5(1(1(#))))),
                                                                                                                                                   seqConcat(seqSingleton(C(9(1(1(#))))),
                                                                                                                                                             seqConcat(seqSingleton(C(1(1(1(#))))),
                                                                                                                                                                       seqConcat(seqSingleton(C(4(1(1(#))))),
                                                                                                                                                                                 seqSingleton(C(0(0(1(#)))))))))))))))))))),
                             java.lang.Object::<created>)
           = TRUE
         &   boolean::select(sv_heapAtPre_B#39,
                             org.bouncycastle.math.ec.ECPoint::select(sv_heapAtPre_B#39,
                                                                      org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(sv_heapAtPre_B#39,
                                                                                                                                  sv_group_21_B#36,
                                                                                                                                  de.polyas.core3.open.crypto.groups.ECGroup::$group),
                                                                      org.bouncycastle.jce.spec.ECParameterSpec::$generator),
                             java.lang.Object::<created>)
           = TRUE
         &   boolean::select(sv_heapAtPre_B#39,
                             org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(sv_heapAtPre_B#39,
                                                                                         sv_group_21_B#36,
                                                                                         de.polyas.core3.open.crypto.groups.ECGroup::$group),
                             java.lang.Object::<created>)
           = TRUE
         &   boolean::select(sv_heapAtPre_B#39,
                             org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(sv_heapAtPre_B#39,
                                                                                        sv_group_21_B#36,
                                                                                        de.polyas.core3.open.crypto.groups.ECGroup::$curve),
                             java.lang.Object::<created>)
           = TRUE
         & wellFormed(sv_heapAtPre_B#39)
         & sv_heapAtPre_B#39 = heap
         &   boolean::select(sv_heapAtPre_B#39,
                             sv_group_21_B#36,
                             java.lang.Object::<created>)
           = TRUE
         &   boolean::select(sv_heapAtPre_B#39,
                             sv_voterId_41_B#37,
                             java.lang.Object::<created>)
           = TRUE
         &   boolean::select(sv_heapAtPre_B#39,
                             sv_password_56_B#38,
                             java.lang.Object::<created>)
           = TRUE
         &   boolean::select(sv_heapAtPre_B#39,
                             java.math.BigInteger::select(sv_heapAtPre_B#39,
                                                          null,
                                                          java.math.BigInteger::$ZERO),
                             java.lang.Object::<created>)
           = TRUE
         &   int::select(sv_heapAtPre_B#39,
                         java.math.BigInteger::select(sv_heapAtPre_B#39,
                                                      null,
                                                      java.math.BigInteger::$ZERO),
                         java.math.BigInteger::$value)
           = Z(0(#))
         & wellFormed(heap)
         & exc_536_B_0 = null
         &   boolean::select(heap, result_476_B_0, java.lang.Object::<created>)
           = TRUE
         &   int::select(heap,
                         org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(heap,
                                                                                    sv_group_21_B#36,
                                                                                    de.polyas.core3.open.crypto.groups.ECGroup::$curve),
                         org.bouncycastle.math.ec.ECCurve::$order)
           = int::select(heap, result_476_B_0, java.math.BigInteger::$value)
         &   boolean::select(heap,
                             org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(heap,
                                                                                        sv_group_21_B#36,
                                                                                        de.polyas.core3.open.crypto.groups.ECGroup::$curve),
                             java.lang.Object::<created>)
           = TRUE
         & RELATED_BY_getOrder_757678341(org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(heap,
                                                                                                    sv_group_21_B#36,
                                                                                                    de.polyas.core3.open.crypto.groups.ECGroup::$curve),
                                         heap,
                                         org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(heap,
                                                                                                    sv_group_21_B#36,
                                                                                                    de.polyas.core3.open.crypto.groups.ECGroup::$curve),
                                         result_476_B_0,
                                         exc_536_B_0,
                                         heap)
         & exc_537_B_0 = null
         &   boolean::select(heap, result_477_B_0, java.lang.Object::<created>)
           = TRUE
         & RELATED_BY_uniformHash_2142081982(result_476_B_0,
                                             strPool(seqConcat(seqSingleton(C(0(0(1(#))))),
                                                               seqConcat(seqSingleton(C(1(0(1(#))))),
                                                                         seqConcat(seqSingleton(C(4(1(1(#))))),
                                                                                   seqConcat(seqSingleton(C(5(0(1(#))))),
                                                                                             seqConcat(seqSingleton(C(8(1(1(#))))),
                                                                                                       seqConcat(seqSingleton(C(1(0(1(#))))),
                                                                                                                 seqConcat(seqSingleton(C(5(4(#)))),
                                                                                                                           seqConcat(seqSingleton(C(2(1(1(#))))),
                                                                                                                                     seqConcat(seqSingleton(C(7(9(#)))),
                                                                                                                                               seqConcat(seqSingleton(C(5(1(1(#))))),
                                                                                                                                                         seqConcat(seqSingleton(C(5(1(1(#))))),
                                                                                                                                                                   seqConcat(seqSingleton(C(9(1(1(#))))),
                                                                                                                                                                             seqConcat(seqSingleton(C(1(1(1(#))))),
                                                                                                                                                                                       seqConcat(seqSingleton(C(4(1(1(#))))),
                                                                                                                                                                                                 seqSingleton(C(0(0(1(#)))))))))))))))))))),
                                             sv_password_56_B#38,
                                             sv_voterId_41_B#37,
                                             heap,
                                             result_477_B_0,
                                             exc_537_B_0,
                                             heap)
         &   boolean::select(heap,
                             java.math.BigInteger::select(heap,
                                                          null,
                                                          java.math.BigInteger::$ZERO),
                             java.lang.Object::<created>)
           = TRUE
         &   int::select(heap,
                         java.math.BigInteger::select(heap,
                                                      null,
                                                      java.math.BigInteger::$ZERO),
                         java.math.BigInteger::$value)
           = Z(0(#))
         &   boolean::select(heap,
                             sv_password_56_B#38,
                             java.lang.Object::<created>)
           = TRUE
         &   boolean::select(heap,
                             sv_voterId_41_B#37,
                             java.lang.Object::<created>)
           = TRUE
         & exc_538_B_0 = null
         &   boolean::select(heap, result_478_B_0, java.lang.Object::<created>)
           = TRUE
         &   org.bouncycastle.math.ec.ECPoint::select(heap,
                                                      org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(heap,
                                                                                                                  sv_group_21_B#36,
                                                                                                                  de.polyas.core3.open.crypto.groups.ECGroup::$group),
                                                      org.bouncycastle.jce.spec.ECParameterSpec::$generator)
           = result_478_B_0
         &   boolean::select(heap,
                             org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(heap,
                                                                                         sv_group_21_B#36,
                                                                                         de.polyas.core3.open.crypto.groups.ECGroup::$group),
                             java.lang.Object::<created>)
           = TRUE
         & RELATED_BY_getG_359011122(org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(heap,
                                                                                                 sv_group_21_B#36,
                                                                                                 de.polyas.core3.open.crypto.groups.ECGroup::$group),
                                     heap,
                                     org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(heap,
                                                                                                 sv_group_21_B#36,
                                                                                                 de.polyas.core3.open.crypto.groups.ECGroup::$group),
                                     result_478_B_0,
                                     exc_538_B_0,
                                     heap)
         & wellFormed(anon_heap_pow<<anonHeapFunction>>)
         &   anon(heap, empty, anon_heap_pow<<anonHeapFunction>>)
           = heapAfter_pow_B_0
         & (    boolean::select(heap,
                                result_479_B_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_pow<<anonHeapFunction>>,
                                result_479_B_0,
                                java.lang.Object::<created>)
              = TRUE)
         & (    org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(anon_heap_pow<<anonHeapFunction>>,
                                                                           sv_group_21_B#36,
                                                                           de.polyas.core3.open.crypto.groups.ECGroup::$curve)
              = null
            |   boolean::select(anon_heap_pow<<anonHeapFunction>>,
                                org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(anon_heap_pow<<anonHeapFunction>>,
                                                                                           sv_group_21_B#36,
                                                                                           de.polyas.core3.open.crypto.groups.ECGroup::$curve),
                                java.lang.Object::<created>)
              = TRUE)
         &   \if (  boolean::select(heap,
                                    sv_group_21_B#36,
                                    java.lang.Object::<created>)
                  = TRUE)
                 \then (org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(heap,
                                                                                   sv_group_21_B#36,
                                                                                   de.polyas.core3.open.crypto.groups.ECGroup::$curve))
                 \else (org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(anon_heap_pow<<anonHeapFunction>>,
                                                                                   sv_group_21_B#36,
                                                                                   de.polyas.core3.open.crypto.groups.ECGroup::$curve))
           = de_polyas_core3_open_crypto_groups_ECGroup_curve_0_B_0<<selectSK>>
         & (    org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(anon_heap_pow<<anonHeapFunction>>,
                                                                            sv_group_21_B#36,
                                                                            de.polyas.core3.open.crypto.groups.ECGroup::$group)
              = null
            |   boolean::select(anon_heap_pow<<anonHeapFunction>>,
                                org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(anon_heap_pow<<anonHeapFunction>>,
                                                                                            sv_group_21_B#36,
                                                                                            de.polyas.core3.open.crypto.groups.ECGroup::$group),
                                java.lang.Object::<created>)
              = TRUE)
         &   \if (  boolean::select(heap,
                                    sv_group_21_B#36,
                                    java.lang.Object::<created>)
                  = TRUE)
                 \then (org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(heap,
                                                                                    sv_group_21_B#36,
                                                                                    de.polyas.core3.open.crypto.groups.ECGroup::$group))
                 \else (org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(anon_heap_pow<<anonHeapFunction>>,
                                                                                    sv_group_21_B#36,
                                                                                    de.polyas.core3.open.crypto.groups.ECGroup::$group))
           = de_polyas_core3_open_crypto_groups_ECGroup_group_0_B_0<<selectSK>>
         & (    org.bouncycastle.math.ec.ECPoint::select(anon_heap_pow<<anonHeapFunction>>,
                                                         de_polyas_core3_open_crypto_groups_ECGroup_group_0_B_0<<selectSK>>,
                                                         org.bouncycastle.jce.spec.ECParameterSpec::$generator)
              = null
            |   boolean::select(anon_heap_pow<<anonHeapFunction>>,
                                org.bouncycastle.math.ec.ECPoint::select(anon_heap_pow<<anonHeapFunction>>,
                                                                         de_polyas_core3_open_crypto_groups_ECGroup_group_0_B_0<<selectSK>>,
                                                                         org.bouncycastle.jce.spec.ECParameterSpec::$generator),
                                java.lang.Object::<created>)
              = TRUE)
         & (    org.bouncycastle.math.ec.ECPoint::select(heap,
                                                         de_polyas_core3_open_crypto_groups_ECGroup_group_0_B_0<<selectSK>>,
                                                         org.bouncycastle.jce.spec.ECParameterSpec::$generator)
              = null
            |   boolean::select(heap,
                                org.bouncycastle.math.ec.ECPoint::select(heap,
                                                                         de_polyas_core3_open_crypto_groups_ECGroup_group_0_B_0<<selectSK>>,
                                                                         org.bouncycastle.jce.spec.ECParameterSpec::$generator),
                                java.lang.Object::<created>)
              = TRUE)
         &   \if (  boolean::select(heap,
                                    de_polyas_core3_open_crypto_groups_ECGroup_group_0_B_0<<selectSK>>,
                                    java.lang.Object::<created>)
                  = TRUE)
                 \then (org.bouncycastle.math.ec.ECPoint::select(heap,
                                                                 de_polyas_core3_open_crypto_groups_ECGroup_group_0_B_0<<selectSK>>,
                                                                 org.bouncycastle.jce.spec.ECParameterSpec::$generator))
                 \else (org.bouncycastle.math.ec.ECPoint::select(anon_heap_pow<<anonHeapFunction>>,
                                                                 de_polyas_core3_open_crypto_groups_ECGroup_group_0_B_0<<selectSK>>,
                                                                 org.bouncycastle.jce.spec.ECParameterSpec::$generator))
           = org_bouncycastle_jce_spec_ECParameterSpec_generator_0_B_0<<selectSK>>
         & (exc_539_B_0 = null)<<impl>>
         & RELATED_BY_pow_425138489(sv_group_21_B#36,
                                    result_478_B_0,
                                    result_477_B_0,
                                    heap,
                                    sv_group_21_B#36,
                                    result_479_B_0,
                                    exc_539_B_0,
                                    heapAfter_pow_B_0)
         & wellFormed(anon_heap_getEncoded<<anonHeapFunction>>)
         &   anon(heapAfter_pow_B_0,
                  empty,
                  anon_heap_getEncoded<<anonHeapFunction>>)
           = heapAfter_getEncoded_B_0
         & exc_540_B_0 = null
         & (    boolean::select(heap,
                                result_480_B_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_getEncoded<<anonHeapFunction>>,
                                result_480_B_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_pow<<anonHeapFunction>>,
                                result_480_B_0,
                                java.lang.Object::<created>)
              = TRUE)
         & RELATED_BY_getEncoded_253512071(result_479_B_0,
                                           TRUE,
                                           heapAfter_pow_B_0,
                                           result_479_B_0,
                                           result_480_B_0,
                                           exc_540_B_0,
                                           heapAfter_getEncoded_B_0)
         & wellFormed(heapAfter_pow_B_0)
         & wellFormed(anon_heap_asHexString<<anonHeapFunction>>)
         &   anon(heapAfter_getEncoded_B_0,
                  empty,
                  anon_heap_asHexString<<anonHeapFunction>>)
           = heapAfter_asHexString_B_0
         & (    boolean::select(heap,
                                result_481_B_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_asHexString<<anonHeapFunction>>,
                                result_481_B_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_getEncoded<<anonHeapFunction>>,
                                result_481_B_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_pow<<anonHeapFunction>>,
                                result_481_B_0,
                                java.lang.Object::<created>)
              = TRUE)
         & (exc_541_B_0 = null)<<impl>>
         & RELATED_BY_asHexString_1063021898(result_480_B_0,
                                             heapAfter_getEncoded_B_0,
                                             result_481_B_0,
                                             exc_541_B_0,
                                             heapAfter_asHexString_B_0)
         & wellFormed(heapAfter_getEncoded_B_0)
         & !result_481_B_0 = null
         & !result_480_B_0 = null
         & !  org_bouncycastle_jce_spec_ECParameterSpec_generator_0_B_0<<selectSK>>
            = null
         & !  de_polyas_core3_open_crypto_groups_ECGroup_group_0_B_0<<selectSK>>
            = null
         & !  de_polyas_core3_open_crypto_groups_ECGroup_curve_0_B_0<<selectSK>>
            = null
         & !  org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(heap,
                                                                         sv_group_21_B#36,
                                                                         de.polyas.core3.open.crypto.groups.ECGroup::$curve)
            = null
         & !  org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(heap,
                                                                          sv_group_21_B#36,
                                                                          de.polyas.core3.open.crypto.groups.ECGroup::$group)
            = null
         & !result_479_B_0 = null
         & !  org.bouncycastle.math.ec.ECPoint::select(heap,
                                                       org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(heap,
                                                                                                                   sv_group_21_B#36,
                                                                                                                   de.polyas.core3.open.crypto.groups.ECGroup::$group),
                                                       org.bouncycastle.jce.spec.ECParameterSpec::$generator)
            = null
         & !result_478_B_0 = null
         & !  java.math.BigInteger::select(heap,
                                           null,
                                           java.math.BigInteger::$ZERO)
            = null
         & !result_477_B_0 = null
         & !  strPool(seqConcat(seqSingleton(C(0(0(1(#))))),
                                seqConcat(seqSingleton(C(1(0(1(#))))),
                                          seqConcat(seqSingleton(C(4(1(1(#))))),
                                                    seqConcat(seqSingleton(C(5(0(1(#))))),
                                                              seqConcat(seqSingleton(C(8(1(1(#))))),
                                                                        seqConcat(seqSingleton(C(1(0(1(#))))),
                                                                                  seqConcat(seqSingleton(C(5(4(#)))),
                                                                                            seqConcat(seqSingleton(C(2(1(1(#))))),
                                                                                                      seqConcat(seqSingleton(C(7(9(#)))),
                                                                                                                seqConcat(seqSingleton(C(5(1(1(#))))),
                                                                                                                          seqConcat(seqSingleton(C(5(1(1(#))))),
                                                                                                                                    seqConcat(seqSingleton(C(9(1(1(#))))),
                                                                                                                                              seqConcat(seqSingleton(C(1(1(1(#))))),
                                                                                                                                                        seqConcat(seqSingleton(C(4(1(1(#))))),
                                                                                                                                                                  seqSingleton(C(0(0(1(#))))))))))))))))))))
            = null
         & !result_476_B_0 = null
         & !  org.bouncycastle.math.ec.ECPoint::select(sv_heapAtPre_B#39,
                                                       org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(sv_heapAtPre_B#39,
                                                                                                                   sv_group_21_B#36,
                                                                                                                   de.polyas.core3.open.crypto.groups.ECGroup::$group),
                                                       org.bouncycastle.jce.spec.ECParameterSpec::$generator)
            = null
         & !  org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(sv_heapAtPre_B#39,
                                                                          sv_group_21_B#36,
                                                                          de.polyas.core3.open.crypto.groups.ECGroup::$group)
            = null
         & !  org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(sv_heapAtPre_B#39,
                                                                         sv_group_21_B#36,
                                                                         de.polyas.core3.open.crypto.groups.ECGroup::$curve)
            = null
         & !  java.math.BigInteger::select(sv_heapAtPre_B#39,
                                           null,
                                           java.math.BigInteger::$ZERO)
            = null
         & !{exc_535_B:=null
             || heap:=heapAfter_asHexString_B_0
             || result_475_B:=result_481_B_0}
              !(  result_475_B = sv_resultAtPost_475_B#41
                & exc_535_B = sv_excAtPost_535_B#42
                & sv_heapAtPost_B#43 = heap)
         & !sv_password_56_B#38 = null
         & !sv_voterId_41_B#37 = null
         & !sv_group_21_B#36 = null)
  )
  \heuristics ( concrete )
};

Use_information_flow_contract_for_asHexString_1063021898 {
  \schemaVar \term byte[] find_var_7#93;
  \schemaVar \term Heap find_heap#96;
  \schemaVar \term java.lang.String find_result_481#94;
  \schemaVar \term java.lang.Throwable find_exc_541#95;
  \schemaVar \term Heap find_heapAfter_asHexString#97;
  \schemaVar \term byte[] assumes_var_7#98;
  \schemaVar \term Heap assumes_heap#101;
  \schemaVar \term java.lang.String assumes_result_481#99;
  \schemaVar \term java.lang.Throwable assumes_exc_541#100;
  \schemaVar \term Heap assumes_heapAfter_asHexString#102;
  
  \assumes ( RELATED_BY_asHexString_1063021898(assumes_var_7#98,
                                               assumes_heap#101,
                                               assumes_result_481#99,
                                               assumes_exc_541#100,
                                               assumes_heapAfter_asHexString#102)
            ⟹
             
  )
  \find (
    RELATED_BY_asHexString_1063021898(find_var_7#93,
                                      find_heap#96,
                                      find_result_481#94,
                                      find_exc_541#95,
                                      find_heapAfter_asHexString#97)
  )
  \antecedentPolarity
  \replacewith (
    RELATED_BY_asHexString_1063021898(find_var_7#93,
                                      find_heap#96,
                                      find_result_481#94,
                                      find_exc_541#95,
                                      find_heapAfter_asHexString#97)
  )
  \add (      (!(find_var_7#93 = null)<<origin("requires @ file Utils.java @ line 84","[]")>>)<<impl,
                                                                                                origin("requires @ file Utils.java @ line 84","[]")>>
            & (!(assumes_var_7#98 = null)<<origin("requires @ file Utils.java @ line 84","[]")>>)<<impl,
                                                                                                   origin("requires @ file Utils.java @ line 84","[]")>>
         -> allFields(find_var_7#93) = allFields(assumes_var_7#98)
         -> (find_result_481#94 = assumes_result_481#99)<<postCondition>>
        ⟹
         
  )
  \heuristics ( information_flow_contract_appl )
};

Use_information_flow_contract_for_getEncoded_253512071 {
  \schemaVar \term boolean find_TRUE#82;
  \schemaVar \term Heap find_heap#85;
  \schemaVar \term org.bouncycastle.math.ec.ECPoint find_p_9#81;
  \schemaVar \term byte[] find_result_480#83;
  \schemaVar \term java.lang.Throwable find_exc_540#84;
  \schemaVar \term Heap find_heapAfter_getEncoded#86;
  \schemaVar \term boolean assumes_TRUE#88;
  \schemaVar \term Heap assumes_heap#91;
  \schemaVar \term org.bouncycastle.math.ec.ECPoint assumes_p_9#87;
  \schemaVar \term byte[] assumes_result_480#89;
  \schemaVar \term java.lang.Throwable assumes_exc_540#90;
  \schemaVar \term Heap assumes_heapAfter_getEncoded#92;
  
  \assumes ( RELATED_BY_getEncoded_253512071(assumes_p_9#87,
                                             assumes_TRUE#88,
                                             assumes_heap#91,
                                             assumes_p_9#87,
                                             assumes_result_480#89,
                                             assumes_exc_540#90,
                                             assumes_heapAfter_getEncoded#92)
            ⟹
             
  )
  \find (
    RELATED_BY_getEncoded_253512071(find_p_9#81,
                                    find_TRUE#82,
                                    find_heap#85,
                                    find_p_9#81,
                                    find_result_480#83,
                                    find_exc_540#84,
                                    find_heapAfter_getEncoded#86)
  )
  \antecedentPolarity
  \replacewith (
    RELATED_BY_getEncoded_253512071(find_p_9#81,
                                    find_TRUE#82,
                                    find_heap#85,
                                    find_p_9#81,
                                    find_result_480#83,
                                    find_exc_540#84,
                                    find_heapAfter_getEncoded#86)
  )
  \add (      java.lang.Object::<inv>(find_heap#85, find_p_9#81)<<impl>>
            & java.lang.Object::<inv>(assumes_heap#91, assumes_p_9#87)<<impl>>
         ->     int::select(find_heap#85,
                            find_p_9#81,
                            org.bouncycastle.math.ec.ECPoint::$value)
              = int::select(assumes_heap#91,
                            assumes_p_9#87,
                            org.bouncycastle.math.ec.ECPoint::$value)
            & find_TRUE#82 = assumes_TRUE#88
         -> (  find_result_480#83 = assumes_result_480#89
             & allFields(find_result_480#83) = allFields(assumes_result_480#89))<<postCondition>>
        ⟹
         
  )
  \heuristics ( information_flow_contract_appl )
};

Use_information_flow_contract_for_pow_425138489 {
  \schemaVar \term org.bouncycastle.math.ec.ECPoint find_var_5#66;
  \schemaVar \term java.math.BigInteger find_var_6#67;
  \schemaVar \term Heap find_heap#70;
  \schemaVar \term de.polyas.core3.open.crypto.groups.ECGroup find_var_4#65;
  \schemaVar \term org.bouncycastle.math.ec.ECPoint find_result_479#68;
  \schemaVar \term java.lang.Throwable find_exc_539#69;
  \schemaVar \term Heap find_heapAfter_pow#71;
  \schemaVar \term org.bouncycastle.math.ec.ECPoint assumes_var_5#73;
  \schemaVar \term java.math.BigInteger assumes_var_6#74;
  \schemaVar \term Heap assumes_heap#77;
  \schemaVar \term de.polyas.core3.open.crypto.groups.ECGroup assumes_var_4#72;
  \schemaVar \term org.bouncycastle.math.ec.ECPoint assumes_result_479#75;
  \schemaVar \term java.lang.Throwable assumes_exc_539#76;
  \schemaVar \term Heap assumes_heapAfter_pow#78;
  
  \assumes ( RELATED_BY_pow_425138489(assumes_var_4#72,
                                      assumes_var_5#73,
                                      assumes_var_6#74,
                                      assumes_heap#77,
                                      assumes_var_4#72,
                                      assumes_result_479#75,
                                      assumes_exc_539#76,
                                      assumes_heapAfter_pow#78)
            ⟹
             
  )
  \find (
    RELATED_BY_pow_425138489(find_var_4#65,
                             find_var_5#66,
                             find_var_6#67,
                             find_heap#70,
                             find_var_4#65,
                             find_result_479#68,
                             find_exc_539#69,
                             find_heapAfter_pow#71)
  )
  \antecedentPolarity
  \replacewith (
    RELATED_BY_pow_425138489(find_var_4#65,
                             find_var_5#66,
                             find_var_6#67,
                             find_heap#70,
                             find_var_4#65,
                             find_result_479#68,
                             find_exc_539#69,
                             find_heapAfter_pow#71)
  )
  \add (      (java.math.BigInteger::<$inv>(find_heap#70)
            & ((  java.lang.Object::<inv>(find_heap#70, find_var_5#66)
                & ((  java.lang.Object::<inv>(find_heap#70, find_var_6#67)
                    & ((  java.lang.Object::<inv>(find_heap#70, find_var_4#65)<<impl>>
                        & ((  (!(find_var_5#66 = null)<<origin("requires @ file ECGroup.java @ line 33","[]")>>)<<impl,
                                                                                                                  origin("requires @ file ECGroup.java @ line 33","[]")>>
                            & (!(find_var_6#67 = null)<<origin("requires @ file ECGroup.java @ line 33","[]")>>)<<impl,
                                                                                                                  origin("requires @ file ECGroup.java @ line 33","[]")>>)<<SC>>))<<SC>>))<<SC>>))<<SC>>))<<SC>>
            & ((  java.math.BigInteger::<$inv>(assumes_heap#77)
                & ((  java.lang.Object::<inv>(assumes_heap#77, assumes_var_5#73)
                    & ((  java.lang.Object::<inv>(assumes_heap#77,
                                                  assumes_var_6#74)
                        & ((  java.lang.Object::<inv>(assumes_heap#77,
                                                      assumes_var_4#72)<<impl>>
                            & ((  (!(assumes_var_5#73 = null)<<origin("requires @ file ECGroup.java @ line 33","[]")>>)<<impl,
                                                                                                                         origin("requires @ file ECGroup.java @ line 33","[]")>>
                                & (!(assumes_var_6#74 = null)<<origin("requires @ file ECGroup.java @ line 33","[]")>>)<<impl,
                                                                                                                         origin("requires @ file ECGroup.java @ line 33","[]")>>)<<SC>>))<<SC>>))<<SC>>))<<SC>>))<<SC>>)
         ->     int::select(find_heap#70,
                            find_var_5#66,
                            org.bouncycastle.math.ec.ECPoint::$value)
              = int::select(assumes_heap#77,
                            assumes_var_5#73,
                            org.bouncycastle.math.ec.ECPoint::$value)
            &   int::select(find_heap#70,
                            find_var_6#67,
                            java.math.BigInteger::$value)
              = int::select(assumes_heap#77,
                            assumes_var_6#74,
                            java.math.BigInteger::$value)
            &   int::select(find_heap#70,
                            org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(find_heap#70,
                                                                                       find_var_4#65,
                                                                                       de.polyas.core3.open.crypto.groups.ECGroup::$curve),
                            org.bouncycastle.math.ec.ECCurve::$order)
              = int::select(assumes_heap#77,
                            org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(assumes_heap#77,
                                                                                       assumes_var_4#72,
                                                                                       de.polyas.core3.open.crypto.groups.ECGroup::$curve),
                            org.bouncycastle.math.ec.ECCurve::$order)
         -> (  int::select(find_heapAfter_pow#71,
                           find_result_479#68,
                           org.bouncycastle.math.ec.ECPoint::$value)
             = int::select(assumes_heapAfter_pow#78,
                           assumes_result_479#75,
                           org.bouncycastle.math.ec.ECPoint::$value))<<postCondition>>
        ⟹
         
  )
  \heuristics ( information_flow_contract_appl )
};

Use_information_flow_contract_for_getG_359011122 {
  \schemaVar \term org.bouncycastle.jce.spec.ECNamedCurveParameterSpec find_e_2#57;
  \schemaVar \term org.bouncycastle.math.ec.ECPoint find_result_478#58;
  \schemaVar \term java.lang.Throwable find_exc_538#59;
  \schemaVar \term Heap find_heap#60;
  \schemaVar \term org.bouncycastle.jce.spec.ECNamedCurveParameterSpec assumes_e_2#61;
  \schemaVar \term org.bouncycastle.math.ec.ECPoint assumes_result_478#62;
  \schemaVar \term java.lang.Throwable assumes_exc_538#63;
  \schemaVar \term Heap assumes_heap#64;
  
  \assumes ( RELATED_BY_getG_359011122(assumes_e_2#61,
                                       assumes_heap#64,
                                       assumes_e_2#61,
                                       assumes_result_478#62,
                                       assumes_exc_538#63,
                                       assumes_heap#64)
            ⟹
             
  )
  \find (
    RELATED_BY_getG_359011122(find_e_2#57,
                              find_heap#60,
                              find_e_2#57,
                              find_result_478#58,
                              find_exc_538#59,
                              find_heap#60)
  )
  \antecedentPolarity
  \replacewith (
    RELATED_BY_getG_359011122(find_e_2#57,
                              find_heap#60,
                              find_e_2#57,
                              find_result_478#58,
                              find_exc_538#59,
                              find_heap#60)
  )
  \add (      java.lang.Object::<inv>(find_heap#60, find_e_2#57)<<impl>>
            & java.lang.Object::<inv>(assumes_heap#64, assumes_e_2#61)<<impl>>
         ->   int::select(find_heap#60,
                          org.bouncycastle.math.ec.ECPoint::select(find_heap#60,
                                                                   find_e_2#57,
                                                                   org.bouncycastle.jce.spec.ECParameterSpec::$generator),
                          org.bouncycastle.math.ec.ECPoint::$value)
            = int::select(assumes_heap#64,
                          org.bouncycastle.math.ec.ECPoint::select(assumes_heap#64,
                                                                   assumes_e_2#61,
                                                                   org.bouncycastle.jce.spec.ECParameterSpec::$generator),
                          org.bouncycastle.math.ec.ECPoint::$value)
         -> (  int::select(find_heap#60,
                           find_result_478#58,
                           org.bouncycastle.math.ec.ECPoint::$value)
             = int::select(assumes_heap#64,
                           assumes_result_478#62,
                           org.bouncycastle.math.ec.ECPoint::$value))<<postCondition>>
        ⟹
         
  )
  \heuristics ( information_flow_contract_appl )
};

Use_information_flow_contract_for_uniformHash_2142081982 {
  \schemaVar \term java.math.BigInteger find_var#40;
  \schemaVar \term java.lang.String find_var_1#41;
  \schemaVar \term java.lang.String find_var_2#42;
  \schemaVar \term java.lang.String find_var_3#43;
  \schemaVar \term java.math.BigInteger find_result_477#44;
  \schemaVar \term java.lang.Throwable find_exc_537#45;
  \schemaVar \term Heap find_heap#46;
  \schemaVar \term java.math.BigInteger assumes_var#47;
  \schemaVar \term java.lang.String assumes_var_1#48;
  \schemaVar \term java.lang.String assumes_var_2#49;
  \schemaVar \term java.lang.String assumes_var_3#50;
  \schemaVar \term java.math.BigInteger assumes_result_477#51;
  \schemaVar \term java.lang.Throwable assumes_exc_537#52;
  \schemaVar \term Heap assumes_heap#53;
  
  \assumes ( RELATED_BY_uniformHash_2142081982(assumes_var#47,
                                               assumes_var_1#48,
                                               assumes_var_2#49,
                                               assumes_var_3#50,
                                               assumes_heap#53,
                                               assumes_result_477#51,
                                               assumes_exc_537#52,
                                               assumes_heap#53)
            ⟹
             
  )
  \find (
    RELATED_BY_uniformHash_2142081982(find_var#40,
                                      find_var_1#41,
                                      find_var_2#42,
                                      find_var_3#43,
                                      find_heap#46,
                                      find_result_477#44,
                                      find_exc_537#45,
                                      find_heap#46)
  )
  \antecedentPolarity
  \replacewith (
    RELATED_BY_uniformHash_2142081982(find_var#40,
                                      find_var_1#41,
                                      find_var_2#42,
                                      find_var_3#43,
                                      find_heap#46,
                                      find_result_477#44,
                                      find_exc_537#45,
                                      find_heap#46)
  )
  \add (      (java.math.BigInteger::<$inv>(find_heap#46)
            & (!(find_var#40 = null)<<origin("requires @ file Hashes.java @ line 71","[]")>>)<<impl,
                                                                                               origin("requires @ file Hashes.java @ line 71","[]")>>)<<SC>>
            & ((  java.math.BigInteger::<$inv>(assumes_heap#53)
                & (!(assumes_var#47 = null)<<origin("requires @ file Hashes.java @ line 71","[]")>>)<<impl,
                                                                                                      origin("requires @ file Hashes.java @ line 71","[]")>>)<<SC>>)
         -> (  int::select(find_heap#46,
                           find_result_477#44,
                           java.math.BigInteger::$value)
             = int::select(assumes_heap#53,
                           assumes_result_477#51,
                           java.math.BigInteger::$value))<<postCondition>>
        ⟹
         
  )
  \heuristics ( information_flow_contract_appl )
};

Use_information_flow_contract_for_getOrder_757678341 {
  \schemaVar \term org.bouncycastle.math.ec.custom.sec.SecP256K1Curve find_s#32;
  \schemaVar \term java.math.BigInteger find_result_476#33;
  \schemaVar \term java.lang.Throwable find_exc_536#34;
  \schemaVar \term Heap find_heap#35;
  \schemaVar \term org.bouncycastle.math.ec.custom.sec.SecP256K1Curve assumes_s#36;
  \schemaVar \term java.math.BigInteger assumes_result_476#37;
  \schemaVar \term java.lang.Throwable assumes_exc_536#38;
  \schemaVar \term Heap assumes_heap#39;
  
  \assumes ( RELATED_BY_getOrder_757678341(assumes_s#36,
                                           assumes_heap#39,
                                           assumes_s#36,
                                           assumes_result_476#37,
                                           assumes_exc_536#38,
                                           assumes_heap#39)
            ⟹
             
  )
  \find (
    RELATED_BY_getOrder_757678341(find_s#32,
                                  find_heap#35,
                                  find_s#32,
                                  find_result_476#33,
                                  find_exc_536#34,
                                  find_heap#35)
  )
  \antecedentPolarity
  \replacewith (
    RELATED_BY_getOrder_757678341(find_s#32,
                                  find_heap#35,
                                  find_s#32,
                                  find_result_476#33,
                                  find_exc_536#34,
                                  find_heap#35)
  )
  \add (      java.lang.Object::<inv>(find_heap#35, find_s#32)<<impl>>
            & java.lang.Object::<inv>(assumes_heap#39, assumes_s#36)<<impl>>
         ->   int::select(find_heap#35,
                          find_s#32,
                          org.bouncycastle.math.ec.ECCurve::$order)
            = int::select(assumes_heap#39,
                          assumes_s#36,
                          org.bouncycastle.math.ec.ECCurve::$order)
         -> (  int::select(find_heap#35,
                           find_result_476#33,
                           java.math.BigInteger::$value)
             = int::select(assumes_heap#39,
                           assumes_result_476#37,
                           java.math.BigInteger::$value))<<postCondition>>
        ⟹
         
  )
  \heuristics ( information_flow_contract_appl )
};
}

\problem {
     {heap:=heapAtPre_A<<anonHeapFunction>>}
       (  wellFormed(heapAtPre_A<<anonHeapFunction>>)
        & heap = heapAtPre_A<<anonHeapFunction>>
        & (  ((  group_21_A = null
               |   boolean::select(heapAtPre_A<<anonHeapFunction>>,
                                   group_21_A,
                                   java.lang.Object::<created>)
                 = TRUE)<<SC>>)
           & ((  voterId_41_A = null
               |   boolean::select(heapAtPre_A<<anonHeapFunction>>,
                                   voterId_41_A,
                                   java.lang.Object::<created>)
                 = TRUE)<<SC>>)
           & ((  password_56_A = null
               |   boolean::select(heapAtPre_A<<anonHeapFunction>>,
                                   password_56_A,
                                   java.lang.Object::<created>)
                 = TRUE)<<SC>>))
        & ((  java.math.BigInteger::<$inv>(heapAtPre_A<<anonHeapFunction>>)
            & ((  java.lang.Object::<inv>(heapAtPre_A<<anonHeapFunction>>,
                                          group_21_A)
                & ((  (!(group_21_A = null)<<origin("requires @ file Crypto.java @ line 104","[]")>>)<<impl,
                                                                                                       origin("requires @ file Crypto.java @ line 104","[]")>>
                    & ((  (!(voterId_41_A = null)<<origin("requires @ file Crypto.java @ line 104","[]")>>)<<impl,
                                                                                                             origin("requires @ file Crypto.java @ line 104","[]")>>
                        & (!(password_56_A = null)<<origin("requires @ file Crypto.java @ line 104","[]")>>)<<impl,
                                                                                                              origin("requires @ file Crypto.java @ line 104","[]")>>)<<SC>>))<<SC>>))<<SC>>))<<SC>>)
        & {_group_21_A:=group_21_A
           || _voterId_41_A:=voterId_41_A
           || _password_56_A:=password_56_A}
            \[{
                exc_535_A=null;try {
                  result_475_A=de.polyas.core3.open.cred.Crypto.loginPasswordFromMasterPIN(_group_21_A,_voterId_41_A,_password_56_A)@de.polyas.core3.open.cred.Crypto;
                }   catch (java.lang.Throwable e) {
                  exc_535_A=e;
                }
              }\] (  resultAtPost_475_A = result_475_A
                   & excAtPost_535_A = exc_535_A
                   & heapAtPost_A = heap))
   & {heap:=heapAtPre_B<<anonHeapFunction>>}
       (  wellFormed(heapAtPre_B<<anonHeapFunction>>)
        & heap = heapAtPre_B<<anonHeapFunction>>
        & (  ((  group_21_B = null
               |   boolean::select(heapAtPre_B<<anonHeapFunction>>,
                                   group_21_B,
                                   java.lang.Object::<created>)
                 = TRUE)<<SC>>)
           & ((  voterId_41_B = null
               |   boolean::select(heapAtPre_B<<anonHeapFunction>>,
                                   voterId_41_B,
                                   java.lang.Object::<created>)
                 = TRUE)<<SC>>)
           & ((  password_56_B = null
               |   boolean::select(heapAtPre_B<<anonHeapFunction>>,
                                   password_56_B,
                                   java.lang.Object::<created>)
                 = TRUE)<<SC>>))
        & ((  java.math.BigInteger::<$inv>(heapAtPre_B<<anonHeapFunction>>)
            & ((  java.lang.Object::<inv>(heapAtPre_B<<anonHeapFunction>>,
                                          group_21_B)
                & ((  (!group_21_B = null)<<impl>>
                    & ((  (!voterId_41_B = null)<<impl>>
                        & (!password_56_B = null)<<impl>>)<<SC>>))<<SC>>))<<SC>>))<<SC>>)
        & {_group_21_B:=group_21_B
           || _voterId_41_B:=voterId_41_B
           || _password_56_B:=password_56_B}
            \[{
                exc_535_B=null;try {
                  result_475_B=de.polyas.core3.open.cred.Crypto.loginPasswordFromMasterPIN(_group_21_B,_voterId_41_B,_password_56_B)@de.polyas.core3.open.cred.Crypto;
                }   catch (java.lang.Throwable e) {
                  exc_535_B=e;
                }
              }\] (  resultAtPost_475_B = result_475_B
                   & excAtPost_535_B = exc_535_B
                   & heapAtPost_B = heap))
->     int::select(heapAtPre_A<<anonHeapFunction>>,
                   org.bouncycastle.math.ec.ECPoint::select(heapAtPre_A<<anonHeapFunction>>,
                                                            org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(heapAtPre_A<<anonHeapFunction>>,
                                                                                                                        group_21_A,
                                                                                                                        de.polyas.core3.open.crypto.groups.ECGroup::$group),
                                                            org.bouncycastle.jce.spec.ECParameterSpec::$generator),
                   org.bouncycastle.math.ec.ECPoint::$value)
     = int::select(heapAtPre_B<<anonHeapFunction>>,
                   org.bouncycastle.math.ec.ECPoint::select(heapAtPre_B<<anonHeapFunction>>,
                                                            org.bouncycastle.jce.spec.ECNamedCurveParameterSpec::select(heapAtPre_B<<anonHeapFunction>>,
                                                                                                                        group_21_B,
                                                                                                                        de.polyas.core3.open.crypto.groups.ECGroup::$group),
                                                            org.bouncycastle.jce.spec.ECParameterSpec::$generator),
                   org.bouncycastle.math.ec.ECPoint::$value)
   &   int::select(heapAtPre_A<<anonHeapFunction>>,
                   org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(heapAtPre_A<<anonHeapFunction>>,
                                                                              group_21_A,
                                                                              de.polyas.core3.open.crypto.groups.ECGroup::$curve),
                   org.bouncycastle.math.ec.ECCurve::$order)
     = int::select(heapAtPre_B<<anonHeapFunction>>,
                   org.bouncycastle.math.ec.custom.sec.SecP256K1Curve::select(heapAtPre_B<<anonHeapFunction>>,
                                                                              group_21_B,
                                                                              de.polyas.core3.open.crypto.groups.ECGroup::$curve),
                   org.bouncycastle.math.ec.ECCurve::$order)
-> (resultAtPost_475_A = resultAtPost_475_B)<<postCondition>>

}

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "1993")

(branch "dummy ID"
(rule "unfold_computed_formula_4_of_loginPasswordFromMasterPIN_575816123" (formula "1") (term "0"))
(rule "impRight" (formula "1"))
(rule "impRight" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
 (builtin "One Step Simplification" (formula "4"))
 (builtin "One Step Simplification" (formula "3"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "5"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "8"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "10"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "5"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "4"))
(rule "notLeft" (formula "8"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "5"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "5"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "10"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "10"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "17"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "17"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "18"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "19"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "21"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "23"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "24"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "25"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "26"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "27"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "28"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "28"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "29"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "30"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "32"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "33"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "34"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "35"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "36"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "37"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "38"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "39"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "40"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "41"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "42"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "43"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "44"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "45"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "46"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "46"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "46"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "46"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "46"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "47"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "47"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "47"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "47"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "48"))
(rule "andLeft" (formula "3"))
(rule "Use_information_flow_contract_for_getOrder_757678341" (formula "56") (ifseqformula "11"))
(rule "doubleImpLeft" (formula "56"))
(branch "pre_A & pre_B getOrder_757678341 (information flow)"
   (rule "andRight" (formula "96"))
   (branch
      (rule "eqSymm" (formula "130"))
      (rule "eqSymm" (formula "2"))
      (rule "eqSymm" (formula "1"))
      (rule "eqSymm" (formula "46"))
      (rule "eqSymm" (formula "94"))
      (rule "replace_known_left" (formula "75") (term "0,0") (ifseqformula "50"))
       (builtin "One Step Simplification" (formula "75"))
      (rule "applyEqReverse" (formula "77") (term "1,0,0") (ifseqformula "75"))
      (rule "applyEqReverse" (formula "104") (term "0") (ifseqformula "75"))
      (rule "applyEqReverse" (formula "78") (term "1,2,0") (ifseqformula "75"))
      (rule "applyEqReverse" (formula "76") (term "1,1,0,1") (ifseqformula "75"))
      (rule "applyEqReverse" (formula "77") (term "1,1,0,1") (ifseqformula "75"))
      (rule "applyEqReverse" (formula "78") (term "1,1,0") (ifseqformula "75"))
      (rule "applyEqReverse" (formula "76") (term "1,0,0") (ifseqformula "75"))
      (rule "applyEqReverse" (formula "78") (term "1,0,0,0") (ifseqformula "75"))
      (rule "hideAuxiliaryEq" (formula "75"))
      (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "5"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "applyEqReverse" (formula "31") (term "1,1,0,1") (ifseqformula "29"))
      (rule "applyEqReverse" (formula "32") (term "1,2,0") (ifseqformula "29"))
      (rule "applyEqReverse" (formula "102") (term "0") (ifseqformula "29"))
      (rule "applyEqReverse" (formula "32") (term "1,1,0") (ifseqformula "29"))
      (rule "applyEqReverse" (formula "32") (term "1,0,0,0") (ifseqformula "29"))
      (rule "applyEqReverse" (formula "31") (term "1,0,0") (ifseqformula "29"))
      (rule "applyEqReverse" (formula "30") (term "1,0,0") (ifseqformula "29"))
      (rule "applyEqReverse" (formula "30") (term "1,1,0,1") (ifseqformula "29"))
      (rule "hideAuxiliaryEq" (formula "29"))
      (rule "replace_known_left" (formula "72") (term "0,0") (ifseqformula "49"))
       (builtin "One Step Simplification" (formula "72"))
      (rule "applyEqReverse" (formula "102") (term "0") (ifseqformula "72"))
      (rule "hideAuxiliaryEq" (formula "72"))
      (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "5"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "applyEqReverse" (formula "100") (term "0") (ifseqformula "27"))
      (rule "hideAuxiliaryEq" (formula "27"))
      (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "applyEqReverse" (formula "97") (term "0") (ifseqformula "30"))
      (rule "hideAuxiliaryEq" (formula "30"))
      (rule "replace_known_left" (formula "73") (term "0,0") (ifseqformula "64"))
       (builtin "One Step Simplification" (formula "73"))
      (rule "applyEqReverse" (formula "96") (term "0") (ifseqformula "73"))
      (rule "hideAuxiliaryEq" (formula "73"))
      (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "104")))
      (rule "true_left" (formula "29"))
      (rule "replace_known_left" (formula "71") (term "1") (ifseqformula "45"))
       (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "104")))
      (rule "true_left" (formula "71"))
      (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "21"))
      (rule "applyEq" (formula "2") (term "0") (ifseqformula "50"))
      (rule "applyEq" (formula "14") (term "6") (ifseqformula "12"))
      (rule "applyEq" (formula "77") (term "5") (ifseqformula "75"))
      (rule "applyEq" (formula "39") (term "2") (ifseqformula "41"))
      (rule "applyEq" (formula "37") (term "1,0,1,0,0") (ifseqformula "41"))
      (rule "applyEq" (formula "37") (term "1,0,0,0,0") (ifseqformula "41"))
      (rule "applyEq" (formula "102") (term "0") (ifseqformula "21"))
      (rule "applyEq" (formula "90") (term "0") (ifseqformula "85"))
      (rule "applyEq" (formula "89") (term "0") (ifseqformula "41"))
      (rule "applyEq" (formula "81") (term "1,0,0,0,0") (ifseqformula "85"))
      (rule "applyEq" (formula "52") (term "4") (ifseqformula "48"))
      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "62"))
      (rule "applyEq" (formula "64") (term "4") (ifseqformula "60"))
      (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "62"))
      (rule "applyEq" (formula "37") (term "1,0,1") (ifseqformula "41"))
      (rule "applyEq" (formula "39") (term "3") (ifseqformula "38"))
      (rule "applyEq" (formula "80") (term "1,0,1,0,0") (ifseqformula "84"))
      (rule "applyEq" (formula "82") (term "3") (ifseqformula "81"))
      (rule "applyEq" (formula "82") (term "2") (ifseqformula "84"))
      (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "21"))
      (rule "applyEq" (formula "22") (term "4") (ifseqformula "18"))
      (rule "applyEq" (formula "33") (term "5") (ifseqformula "31"))
      (rule "applyEq" (formula "79") (term "1,0,1,0") (ifseqformula "83"))
      (rule "applyEq" (formula "70") (term "6") (ifseqformula "69"))
      (rule "applyEq" (formula "10") (term "4") (ifseqformula "6"))
      (rule "applyEq" (formula "29") (term "6") (ifseqformula "28"))
      (rule "applyEq" (formula "36") (term "1,0,1,0") (ifseqformula "40"))
      (rule "applyEq" (formula "53") (term "6") (ifseqformula "51"))
      (rule "applyEq" (formula "79") (term "1,0,1") (ifseqformula "83"))
      (rule "applyEq" (formula "100") (term "0") (ifseqformula "60"))
      (rule "applyEq" (formula "2") (term "1") (ifseqformula "8"))
      (rule "applyEq" (formula "48") (term "1") (ifseqformula "2"))
      (rule "commute_or" (formula "65"))
      (rule "commute_or" (formula "24"))
      (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "86"))
      (rule "closeTrue" (formula "86"))
   )
   (branch
      (rule "eqSymm" (formula "130"))
      (rule "eqSymm" (formula "2"))
      (rule "eqSymm" (formula "1"))
      (rule "eqSymm" (formula "46"))
      (rule "eqSymm" (formula "94"))
      (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "5"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "applyEqReverse" (formula "103") (term "0") (ifseqformula "29"))
      (rule "applyEqReverse" (formula "30") (term "1,0,0") (ifseqformula "29"))
      (rule "applyEqReverse" (formula "32") (term "1,1,0") (ifseqformula "29"))
      (rule "applyEqReverse" (formula "32") (term "1,2,0") (ifseqformula "29"))
      (rule "applyEqReverse" (formula "32") (term "1,0,0,0") (ifseqformula "29"))
      (rule "applyEqReverse" (formula "30") (term "1,1,0,1") (ifseqformula "29"))
      (rule "applyEqReverse" (formula "31") (term "1,0,0") (ifseqformula "29"))
      (rule "applyEqReverse" (formula "31") (term "1,1,0,1") (ifseqformula "29"))
      (rule "hideAuxiliaryEq" (formula "29"))
      (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "5"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "applyEqReverse" (formula "103") (term "0") (ifseqformula "27"))
      (rule "hideAuxiliaryEq" (formula "27"))
      (rule "replace_known_left" (formula "73") (term "0,0") (ifseqformula "48"))
       (builtin "One Step Simplification" (formula "73"))
      (rule "applyEqReverse" (formula "74") (term "1,0,0") (ifseqformula "73"))
      (rule "applyEqReverse" (formula "101") (term "0") (ifseqformula "73"))
      (rule "applyEqReverse" (formula "74") (term "1,1,0,1") (ifseqformula "73"))
      (rule "applyEqReverse" (formula "75") (term "1,0,0") (ifseqformula "73"))
      (rule "applyEqReverse" (formula "75") (term "1,1,0,1") (ifseqformula "73"))
      (rule "applyEqReverse" (formula "76") (term "1,2,0") (ifseqformula "73"))
      (rule "applyEqReverse" (formula "76") (term "1,1,0") (ifseqformula "73"))
      (rule "applyEqReverse" (formula "76") (term "1,0,0,0") (ifseqformula "73"))
      (rule "hideAuxiliaryEq" (formula "73"))
      (rule "replace_known_left" (formula "71") (term "0,0") (ifseqformula "48"))
       (builtin "One Step Simplification" (formula "71"))
      (rule "applyEqReverse" (formula "100") (term "0") (ifseqformula "71"))
      (rule "hideAuxiliaryEq" (formula "71"))
      (rule "replace_known_left" (formula "74") (term "0,0") (ifseqformula "65"))
       (builtin "One Step Simplification" (formula "74"))
      (rule "applyEqReverse" (formula "98") (term "0") (ifseqformula "74"))
      (rule "hideAuxiliaryEq" (formula "74"))
      (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "applyEqReverse" (formula "96") (term "0") (ifseqformula "30"))
      (rule "hideAuxiliaryEq" (formula "30"))
      (rule "replace_known_right" (formula "72") (term "0") (ifseqformula "105"))
       (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "46")))
      (rule "true_left" (formula "72"))
      (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "103")))
      (rule "true_left" (formula "29"))
      (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "21"))
      (rule "applyEq" (formula "2") (term "0") (ifseqformula "50"))
      (rule "applyEq" (formula "34") (term "5") (ifseqformula "32"))
      (rule "applyEq" (formula "39") (term "3") (ifseqformula "38"))
      (rule "applyEq" (formula "72") (term "6") (ifseqformula "71"))
      (rule "applyEq" (formula "81") (term "1,0,1") (ifseqformula "85"))
      (rule "applyEq" (formula "37") (term "1,0,1,0,0") (ifseqformula "41"))
      (rule "applyEq" (formula "102") (term "0") (ifseqformula "21"))
      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "62"))
      (rule "applyEq" (formula "90") (term "0") (ifseqformula "85"))
      (rule "applyEq" (formula "14") (term "6") (ifseqformula "12"))
      (rule "applyEq" (formula "81") (term "1,0,0,0,0") (ifseqformula "85"))
      (rule "applyEq" (formula "39") (term "2") (ifseqformula "41"))
      (rule "applyEq" (formula "89") (term "0") (ifseqformula "41"))
      (rule "applyEq" (formula "55") (term "6") (ifseqformula "53"))
      (rule "applyEq" (formula "83") (term "3") (ifseqformula "82"))
      (rule "applyEq" (formula "37") (term "1,0,1") (ifseqformula "41"))
      (rule "applyEq" (formula "37") (term "1,0,1,0") (ifseqformula "41"))
      (rule "applyEq" (formula "77") (term "5") (ifseqformula "75"))
      (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "62"))
      (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "21"))
      (rule "applyEq" (formula "81") (term "2") (ifseqformula "83"))
      (rule "applyEq" (formula "62") (term "4") (ifseqformula "58"))
      (rule "applyEq" (formula "79") (term "1,0,1,0") (ifseqformula "83"))
      (rule "applyEq" (formula "79") (term "1,0,1,0,0") (ifseqformula "83"))
      (rule "applyEq" (formula "50") (term "4") (ifseqformula "46"))
      (rule "applyEq" (formula "36") (term "1,0,0,0,0") (ifseqformula "40"))
      (rule "applyEq" (formula "22") (term "4") (ifseqformula "18"))
      (rule "applyEq" (formula "29") (term "6") (ifseqformula "28"))
      (rule "applyEq" (formula "100") (term "0") (ifseqformula "60"))
      (rule "applyEq" (formula "10") (term "4") (ifseqformula "6"))
      (rule "applyEq" (formula "2") (term "1") (ifseqformula "8"))
      (rule "applyEq" (formula "48") (term "1") (ifseqformula "2"))
      (rule "commute_or" (formula "65"))
      (rule "commute_or" (formula "24"))
      (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "86"))
      (rule "closeTrue" (formula "86"))
   )
)
(branch "pre getOrder_757678341 (information flow)"
   (rule "eqSymm" (formula "130"))
   (rule "eqSymm" (formula "2"))
   (rule "close" (formula "96") (ifseqformula "2"))
)
(branch "post getOrder_757678341 (information flow)"
   (rule "Use_information_flow_contract_for_uniformHash_2142081982" (formula "60") (ifseqformula "14"))
   (rule "Use_information_flow_contract_for_getG_359011122" (formula "70") (ifseqformula "23"))
   (rule "Use_information_flow_contract_for_pow_425138489" (formula "83") (ifseqformula "34"))
   (rule "Use_information_flow_contract_for_getEncoded_253512071" (formula "89") (ifseqformula "38"))
   (rule "Use_information_flow_contract_for_asHexString_1063021898" (formula "96") (ifseqformula "43"))
    (builtin "One Step Simplification" (formula "89"))
   (rule "eqSymm" (formula "135"))
   (rule "eqSymm" (formula "2"))
   (rule "eqSymm" (formula "1"))
   (rule "eqSymm" (formula "46"))
   (rule "eqSymm" (formula "100"))
   (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "5"))
    (builtin "One Step Simplification" (formula "29"))
   (rule "applyEqReverse" (formula "32") (term "1,1,0") (ifseqformula "29"))
   (rule "applyEqReverse" (formula "32") (term "1,2,0") (ifseqformula "29"))
   (rule "applyEqReverse" (formula "31") (term "1,1,0,1") (ifseqformula "29"))
   (rule "applyEqReverse" (formula "32") (term "1,0,0,0") (ifseqformula "29"))
   (rule "applyEqReverse" (formula "108") (term "0") (ifseqformula "29"))
   (rule "applyEqReverse" (formula "30") (term "1,1,0,1") (ifseqformula "29"))
   (rule "applyEqReverse" (formula "31") (term "1,0,0") (ifseqformula "29"))
   (rule "applyEqReverse" (formula "30") (term "1,0,0") (ifseqformula "29"))
   (rule "hideAuxiliaryEq" (formula "29"))
   (rule "replace_known_left" (formula "75") (term "0,0") (ifseqformula "49"))
    (builtin "One Step Simplification" (formula "75"))
   (rule "applyEqReverse" (formula "109") (term "0") (ifseqformula "75"))
   (rule "hideAuxiliaryEq" (formula "75"))
   (rule "replace_known_left" (formula "76") (term "0,0") (ifseqformula "49"))
    (builtin "One Step Simplification" (formula "76"))
   (rule "applyEqReverse" (formula "79") (term "1,2,0") (ifseqformula "76"))
   (rule "applyEqReverse" (formula "79") (term "1,1,0") (ifseqformula "76"))
   (rule "applyEqReverse" (formula "78") (term "1,1,0,1") (ifseqformula "76"))
   (rule "applyEqReverse" (formula "106") (term "0") (ifseqformula "76"))
   (rule "applyEqReverse" (formula "79") (term "1,0,0,0") (ifseqformula "76"))
   (rule "applyEqReverse" (formula "78") (term "1,0,0") (ifseqformula "76"))
   (rule "applyEqReverse" (formula "77") (term "1,0,0") (ifseqformula "76"))
   (rule "applyEqReverse" (formula "77") (term "1,1,0,1") (ifseqformula "76"))
   (rule "hideAuxiliaryEq" (formula "76"))
   (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "5"))
    (builtin "One Step Simplification" (formula "27"))
   (rule "applyEqReverse" (formula "105") (term "0") (ifseqformula "27"))
   (rule "hideAuxiliaryEq" (formula "27"))
   (rule "replace_known_left" (formula "77") (term "0,0") (ifseqformula "67"))
    (builtin "One Step Simplification" (formula "77"))
   (rule "applyEqReverse" (formula "103") (term "0") (ifseqformula "77"))
   (rule "hideAuxiliaryEq" (formula "77"))
   (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "22"))
    (builtin "One Step Simplification" (formula "30"))
   (rule "applyEqReverse" (formula "101") (term "0") (ifseqformula "30"))
   (rule "hideAuxiliaryEq" (formula "30"))
   (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "109"))
    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "4")))
   (rule "true_left" (formula "29"))
   (rule "replace_known_left" (formula "74") (term "1") (ifseqformula "45"))
    (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "109")))
   (rule "true_left" (formula "74"))
   (rule "replace_known_right" (formula "88") (term "0,1,0") (ifseqformula "96"))
    (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "97")))
   (rule "replace_known_left" (formula "66") (term "0,1") (ifseqformula "1"))
    (builtin "One Step Simplification" (formula "66"))
   (rule "replace_known_right" (formula "56") (term "0,1,0,0") (ifseqformula "106"))
    (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "105")))
   (rule "replace_known_right" (formula "75") (term "0,0,1,1,1,1,1,0") (ifseqformula "100"))
    (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "101")) (ifInst ""  (formula "103")) (ifInst ""  (formula "102")) (ifInst ""  (formula "2")))
   (rule "allFieldsEq" (formula "81") (term "1,1,1"))
    (builtin "One Step Simplification" (formula "81"))
   (rule "allFieldsEq" (formula "88") (term "0"))
   (rule "applyEq" (formula "88") (term "0,1") (ifseqformula "91"))
   (rule "eqSymm" (formula "88") (term "1"))
   (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "21"))
   (rule "applyEq" (formula "11") (term "4") (ifseqformula "7"))
   (rule "applyEq" (formula "2") (term "0") (ifseqformula "50"))
   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "64"))
   (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "1"))
    (builtin "One Step Simplification" (formula "66"))
   (rule "true_left" (formula "66"))
   (rule "replace_known_left" (formula "74") (term "0,0,1") (ifseqformula "1"))
    (builtin "One Step Simplification" (formula "74"))
   (rule "applyEq" (formula "85") (term "1,0,1,0,0") (ifseqformula "90"))
   (rule "applyEq" (formula "93") (term "0") (ifseqformula "41"))
   (rule "applyEq" (formula "23") (term "4") (ifseqformula "19"))
   (rule "applyEq" (formula "66") (term "4") (ifseqformula "62"))
   (rule "applyEq" (formula "39") (term "2") (ifseqformula "41"))
   (rule "applyEq" (formula "37") (term "1,0,1,0,0") (ifseqformula "41"))
   (rule "applyEq" (formula "88") (term "2") (ifseqformula "90"))
   (rule "applyEq" (formula "81") (term "5") (ifseqformula "78"))
   (rule "applyEq" (formula "107") (term "0") (ifseqformula "64"))
   (rule "applyEq" (formula "37") (term "1,0,1") (ifseqformula "41"))
   (rule "applyEq" (formula "106") (term "0") (ifseqformula "21"))
   (rule "applyEq" (formula "57") (term "6") (ifseqformula "54"))
   (rule "applyEq" (formula "85") (term "1,0,0,0,0") (ifseqformula "90"))
   (rule "applyEq" (formula "94") (term "0") (ifseqformula "90"))
   (rule "applyEq" (formula "37") (term "1,0,1,0") (ifseqformula "41"))
   (rule "applyEq" (formula "14") (term "6") (ifseqformula "12"))
   (rule "applyEq" (formula "37") (term "1,0,0,0,0") (ifseqformula "41"))
   (rule "applyEq" (formula "39") (term "3") (ifseqformula "38"))
   (rule "applyEq" (formula "53") (term "4") (ifseqformula "48"))
   (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "21"))
   (rule "applyEq" (formula "29") (term "6") (ifseqformula "28"))
   (rule "applyEq" (formula "74") (term "6") (ifseqformula "72"))
   (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "63"))
   (rule "applyEq" (formula "86") (term "3") (ifseqformula "84"))
   (rule "applyEq" (formula "33") (term "5") (ifseqformula "31"))
   (rule "applyEq" (formula "83") (term "1,0,1") (ifseqformula "88"))
   (rule "applyEq" (formula "83") (term "1,0,1,0") (ifseqformula "88"))
   (rule "applyEq" (formula "2") (term "1") (ifseqformula "8"))
   (rule "applyEq" (formula "47") (term "1") (ifseqformula "49"))
   (rule "applyEq" (formula "84") (term "0,1") (ifseqformula "39"))
   (rule "eqSymm" (formula "84") (term "1"))
   (rule "replace_known_right" (formula "84") (term "1") (ifseqformula "115"))
    (builtin "One Step Simplification" (formula "84"))
   (rule "notLeft" (formula "84"))
   (rule "replace_known_right" (formula "77") (term "1,1") (ifseqformula "89"))
    (builtin "One Step Simplification" (formula "77"))
   (rule "pullOutSelect" (formula "71") (term "1,1,1") (inst "selectSK=org_bouncycastle_math_ec_ECPoint_value_0"))
   (rule "applyEq" (formula "78") (term "1,0,1") (ifseqformula "71"))
   (rule "simplifySelectOfAnonEQ" (formula "71") (ifseqformula "22"))
    (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "95")))
   (rule "ifthenelse_negated" (formula "71") (term "0"))
   (rule "pullOutSelect" (formula "72") (term "0,1,1") (inst "selectSK=org_bouncycastle_math_ec_ECPoint_value_1"))
   (rule "applyEq" (formula "79") (term "0,0,1") (ifseqformula "72"))
   (rule "simplifySelectOfAnonEQ" (formula "72") (ifseqformula "65"))
    (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "97")))
   (rule "ifthenelse_negated" (formula "72") (term "0"))
   (rule "commute_or" (formula "66"))
   (rule "commute_or" (formula "23"))
   (rule "commute_or" (formula "78") (term "0"))
   (rule "commute_or" (formula "31") (term "0"))
   (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "53") (term "1,0"))
   (rule "replace_known_right" (formula "53") (term "0,0,1,0") (ifseqformula "109"))
    (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "14")))
   (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "73") (term "0,0,0"))
   (rule "replace_known_left" (formula "73") (term "1,0,0,0") (ifseqformula "56"))
    (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "110")))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "79") (term "1,0"))
    (builtin "One Step Simplification" (formula "79"))
   (rule "commute_or_2" (formula "78"))
   (rule "commute_or_2" (formula "31"))
   (rule "commute_or" (formula "84") (term "0,0"))
   (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "53") (term "0"))
   (rule "replace_known_left" (formula "53") (term "1,0") (ifseqformula "56"))
    (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "110")))
   (rule "replace_known_left" (formula "73") (term "0,1") (ifseqformula "53"))
    (builtin "One Step Simplification" (formula "73"))
   (rule "commute_or" (formula "35") (term "0,0"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "79") (term "0"))
    (builtin "One Step Simplification" (formula "79"))
   (rule "notLeft" (formula "79"))
   (rule "replace_known_right" (formula "73") (term "1") (ifseqformula "90"))
    (builtin "One Step Simplification" (formula "73"))
   (rule "notLeft" (formula "73"))
   (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "89") (term "0,1,1,1"))
   (rule "replace_known_right" (formula "89") (term "0,0,0,1,1,1") (ifseqformula "109"))
    (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "14")))
   (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "89") (term "0,1"))
   (rule "replace_known_right" (formula "89") (term "0,0,0,1") (ifseqformula "109"))
    (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "14")))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "89") (term "0,1"))
    (builtin "One Step Simplification" (formula "89"))
   (rule "commute_or_2" (formula "82") (term "0"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "89") (term "1"))
   (rule "replace_known_right" (formula "89") (term "0,1,0,1") (ifseqformula "105"))
    (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "107")))
   (rule "commute_or_2" (formula "82"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "89") (term "0,0"))
    (builtin "One Step Simplification" (formula "89"))
   (rule "commute_or_2" (formula "35") (term "0"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "89") (term "0,1"))
    (builtin "One Step Simplification" (formula "89"))
   (rule "commute_or_2" (formula "35"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "89") (term "1"))
   (rule "applyEq" (formula "89") (term "1,1,1") (ifseqformula "19"))
   (rule "applyEq" (formula "89") (term "0,0,0,1") (ifseqformula "19"))
   (rule "replace_known_right" (formula "89") (term "0,0,1") (ifseqformula "98"))
    (builtin "One Step Simplification" (formula "89"))
   (rule "Class_invariant_axiom_for_java_math_BigInteger" (formula "89") (term "0,0"))
   (rule "replace_known_right" (formula "89") (term "0,0,0,0") (ifseqformula "110"))
    (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "56")))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "89") (term "1"))
    (builtin "One Step Simplification" (formula "89"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "89"))
   (rule "replace_known_right" (formula "89") (term "0,0,0") (ifseqformula "108"))
    (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "106")))
   (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "89") (term "1"))
   (rule "applyEq" (formula "89") (term "1,1,1") (ifseqformula "61"))
   (rule "applyEq" (formula "89") (term "0,0,0,1") (ifseqformula "61"))
   (rule "replace_known_right" (formula "89") (term "0,0,1") (ifseqformula "99"))
    (builtin "One Step Simplification" (formula "89"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "89") (term "0"))
    (builtin "One Step Simplification" (formula "89"))
   (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "89"))
   (rule "closeTrue" (formula "89"))
)
)
}
