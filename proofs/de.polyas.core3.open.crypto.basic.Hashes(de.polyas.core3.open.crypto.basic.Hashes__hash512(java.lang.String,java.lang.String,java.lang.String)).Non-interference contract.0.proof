\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Sep 26 16:19:43 CEST 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_TRUE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";



\sorts{
Heap;
Update;
de.polyas.core3.open.crypto.basic.Hashes.HashCtx\extends java.lang.Object;
boolean;
numbers;
int;
Seq;
java.lang.String\extends java.lang.Comparable, java.io.Serializable, java.lang.Object;
Field;
java.security.MessageDigest\extends java.security.MessageDigestSpi;
java.security.SecureRandom\extends java.util.Random;
LocSet;
java.lang.Throwable\extends java.io.Serializable, java.lang.Object;
Formula;
}

\predicates{
RELATED_BY_digest_1395628877(java.security.MessageDigest,Heap,java.security.MessageDigest,byte[],java.lang.Throwable,Heap);
RELATED_BY_update_34813653(java.security.MessageDigest,byte[],Heap,java.security.MessageDigest,java.lang.Throwable,Heap);
RELATED_BY_getBytes_485683870(java.lang.String,Heap,java.lang.String,byte[],java.lang.Throwable,Heap);
RELATED_BY_getInstance_205199169(java.lang.String,Heap,java.security.MessageDigest,java.lang.Throwable,Heap);
}

\functions{
Heap heapAtPre_A;
boolean de.polyas.core3.open.crypto.basic.Hashes.HashCtx::exactInstance(any);
boolean TRUE;
numbers #;
numbers 8(numbers);
numbers 3(numbers);
int C(numbers);
Seq seqSingleton(any);
numbers 7(numbers);
numbers 2(numbers);
numbers 6(numbers);
numbers 5(numbers);
numbers 4(numbers);
numbers 9(numbers);
numbers 0(numbers);
Seq seqConcat(Seq,Seq);
java.lang.String strPool(Seq);
Field java.lang.Object::<created>;
boolean boolean::select(Heap,java.lang.Object,Field);
Null null;
Field de.polyas.core3.open.cred.Crypto::$SHA_256_DIGEST;
java.security.MessageDigest java.security.MessageDigest::select(Heap,java.lang.Object,Field);
Field de.polyas.core3.open.cred.Crypto::$SECURE_RANDOM;
java.security.SecureRandom java.security.SecureRandom::select(Heap,java.lang.Object,Field);
Formula wellFormed(Heap);
Heap anon_heap_getInstance;
LocSet empty;
Heap anon(Heap,LocSet,Heap);
Heap heapAfter_getInstance_A_0;
Heap anon_heap_getBytes;
Heap create(Heap,java.lang.Object);
Field de.polyas.core3.open.crypto.basic.Hashes.HashCtx::$digest;
Heap store(Heap,java.lang.Object,Field,any);
Field java.lang.Object::<initialized>;
Heap heapAfter_getBytes_A_0;
boolean java_lang_Object_created__0_A_0;
Heap anon_heap_update;
Heap heapAfter_update_A_0;
Heap anon_heap_getBytes_0;
Heap heapAfter_getBytes_0_A_0;
boolean java_lang_Object_created__2_A_0;
Heap anon_heap_update_0;
Heap heapAfter_update_0_A_0;
Heap anon_heap_getBytes_1;
Heap heapAfter_getBytes_1_A_0;
boolean java_lang_Object_created__3_A_0;
Heap anon_heap_update_1;
Heap heapAfter_update_1_A_0;
Heap anon_heap_digest;
Heap heapAfter_digest_A_0;
boolean java_lang_Object_created__4_A_0;
numbers 1(numbers);
Heap heapAtPost_A;
Heap heapAtPre_B;
Heap heapAfter_getInstance_B_0;
Heap heapAfter_getBytes_B_0;
boolean java_lang_Object_created__0_B_0;
Heap heapAfter_update_B_0;
Heap heapAfter_getBytes_0_B_0;
boolean java_lang_Object_created__2_B_0;
Heap heapAfter_update_0_B_0;
Heap heapAfter_getBytes_1_B_0;
boolean java_lang_Object_created__3_B_0;
Heap heapAfter_update_1_B_0;
Heap heapAfter_digest_B_0;
boolean java_lang_Object_created__4_B_0;
Heap heapAtPost_B;
LocSet allFields(java.lang.Object);
Formula java.lang.Object::<inv>(Heap,java.lang.Object);
Formula de.polyas.core3.open.cred.Crypto::<$inv>(Heap);
}

\programVariables{
Heap heap;
de.polyas.core3.open.crypto.basic.Hashes.HashCtx h_2_A_0;
java.lang.String s1_7_A;
java.lang.String s2_7_A;
java.lang.String s3_7_A;
java.security.MessageDigest result_143_A_0;
java.lang.Throwable exc_161_A_0;
java.lang.Throwable exc_162_A_0;
byte[] result_144_A_0;
java.lang.Throwable exc_163_A_0;
java.lang.Throwable exc_164_A_0;
byte[] result_145_A_0;
java.lang.Throwable exc_165_A_0;
java.lang.Throwable exc_166_A_0;
byte[] result_146_A_0;
java.lang.Throwable exc_167_A_0;
byte[] result_147_A_0;
java.lang.Throwable exc_168_A_0;
java.lang.Throwable exc_160_A;
byte[] result_142_A;
byte[] resultAtPost_142_A;
java.lang.Throwable excAtPost_160_A;
de.polyas.core3.open.crypto.basic.Hashes.HashCtx h_2_B_0;
java.lang.String s1_7_B;
java.lang.String s2_7_B;
java.lang.String s3_7_B;
java.security.MessageDigest result_143_B_0;
java.lang.Throwable exc_161_B_0;
java.lang.Throwable exc_162_B_0;
byte[] result_144_B_0;
java.lang.Throwable exc_163_B_0;
java.lang.Throwable exc_164_B_0;
byte[] result_145_B_0;
java.lang.Throwable exc_165_B_0;
java.lang.Throwable exc_166_B_0;
byte[] result_146_B_0;
java.lang.Throwable exc_167_B_0;
byte[] result_147_B_0;
java.lang.Throwable exc_168_B_0;
java.lang.Throwable exc_160_B;
byte[] result_142_B;
byte[] resultAtPost_142_B;
java.lang.Throwable excAtPost_160_B;
java.lang.String _s1_7_A;
java.lang.String _s2_7_A;
java.lang.String _s3_7_A;
java.lang.String _s1_7_B;
java.lang.String _s2_7_B;
java.lang.String _s3_7_B;
}

\rules{

unfold_computed_formula_1_of_hash512_1536541658 {
  \schemaVar \term Heap sv_heapAtPre_A#31;
  \schemaVar \term java.lang.String sv_s1_7_A#28;
  \schemaVar \term java.lang.String sv_s2_7_A#29;
  \schemaVar \term java.lang.String sv_s3_7_A#30;
  \schemaVar \term byte[] sv_resultAtPost_142_A#33;
  \schemaVar \term java.lang.Throwable sv_excAtPost_160_A#34;
  \schemaVar \term Heap sv_heapAtPost_A#35;
  \schemaVar \term Heap sv_heapAtPre_B#39;
  \schemaVar \term java.lang.String sv_s1_7_B#36;
  \schemaVar \term java.lang.String sv_s2_7_B#37;
  \schemaVar \term java.lang.String sv_s3_7_B#38;
  \schemaVar \term byte[] sv_resultAtPost_142_B#41;
  \schemaVar \term java.lang.Throwable sv_excAtPost_160_B#42;
  \schemaVar \term Heap sv_heapAtPost_B#43;
  
  \find (
      {heap:=sv_heapAtPre_A#31}
        (  wellFormed(sv_heapAtPre_A#31)
         & heap = sv_heapAtPre_A#31
         & (  ((  sv_s1_7_A#28 = null
                |   boolean::select(sv_heapAtPre_A#31,
                                    sv_s1_7_A#28,
                                    java.lang.Object::<created>)
                  = TRUE)<<SC>>)
            & ((  sv_s2_7_A#29 = null
                |   boolean::select(sv_heapAtPre_A#31,
                                    sv_s2_7_A#29,
                                    java.lang.Object::<created>)
                  = TRUE)<<SC>>)
            & ((  sv_s3_7_A#30 = null
                |   boolean::select(sv_heapAtPre_A#31,
                                    sv_s3_7_A#30,
                                    java.lang.Object::<created>)
                  = TRUE)<<SC>>))
         & ((  de.polyas.core3.open.cred.Crypto::<$inv>(sv_heapAtPre_A#31)
             & ((  (!sv_s1_7_A#28 = null)<<impl>>
                 & ((  (!sv_s2_7_A#29 = null)<<impl>>
                     & (!sv_s3_7_A#30 = null)<<impl>>)<<SC>>))<<SC>>))<<SC>>)
         & {_s1_7_A:=sv_s1_7_A#28
            || _s2_7_A:=sv_s2_7_A#29
            || _s3_7_A:=sv_s3_7_A#30}
             \[{
                 exc_160_A=null;try {
                   result_142_A=de.polyas.core3.open.crypto.basic.Hashes.hash512(_s1_7_A,_s2_7_A,_s3_7_A)@de.polyas.core3.open.crypto.basic.Hashes;
                 }   catch (java.lang.Throwable e) {
                   exc_160_A=e;
                 }
               }\] (  sv_resultAtPost_142_A#33 = result_142_A
                    & sv_excAtPost_160_A#34 = exc_160_A
                    & sv_heapAtPost_A#35 = heap))
    & {heap:=sv_heapAtPre_B#39}
        (  wellFormed(sv_heapAtPre_B#39)
         & heap = sv_heapAtPre_B#39
         & (  ((  sv_s1_7_B#36 = null
                |   boolean::select(sv_heapAtPre_B#39,
                                    sv_s1_7_B#36,
                                    java.lang.Object::<created>)
                  = TRUE)<<SC>>)
            & ((  sv_s2_7_B#37 = null
                |   boolean::select(sv_heapAtPre_B#39,
                                    sv_s2_7_B#37,
                                    java.lang.Object::<created>)
                  = TRUE)<<SC>>)
            & ((  sv_s3_7_B#38 = null
                |   boolean::select(sv_heapAtPre_B#39,
                                    sv_s3_7_B#38,
                                    java.lang.Object::<created>)
                  = TRUE)<<SC>>))
         & ((  de.polyas.core3.open.cred.Crypto::<$inv>(sv_heapAtPre_B#39)
             & ((  (!sv_s1_7_B#36 = null)<<impl>>
                 & ((  (!sv_s2_7_B#37 = null)<<impl>>
                     & (!sv_s3_7_B#38 = null)<<impl>>)<<SC>>))<<SC>>))<<SC>>)
         & {_s1_7_B:=sv_s1_7_B#36
            || _s2_7_B:=sv_s2_7_B#37
            || _s3_7_B:=sv_s3_7_B#38}
             \[{
                 exc_160_B=null;try {
                   result_142_B=de.polyas.core3.open.crypto.basic.Hashes.hash512(_s1_7_B,_s2_7_B,_s3_7_B)@de.polyas.core3.open.crypto.basic.Hashes;
                 }   catch (java.lang.Throwable e) {
                   exc_160_B=e;
                 }
               }\] (  sv_resultAtPost_142_B#41 = result_142_B
                    & sv_excAtPost_160_B#42 = exc_160_B
                    & sv_heapAtPost_B#43 = heap))
  )
  \antecedentPolarity
  \replacewith (
      {heap:=sv_heapAtPre_A#31}
        (    de.polyas.core3.open.crypto.basic.Hashes.HashCtx::exactInstance(h_2_A_0)
           = TRUE
         &   boolean::select(heap,
                             strPool(seqConcat(seqSingleton(C(3(8(#)))),
                                               seqConcat(seqSingleton(C(2(7(#)))),
                                                         seqConcat(seqSingleton(C(5(6(#)))),
                                                                   seqConcat(seqSingleton(C(5(4(#)))),
                                                                             seqConcat(seqSingleton(C(3(5(#)))),
                                                                                       seqConcat(seqSingleton(C(9(4(#)))),
                                                                                                 seqSingleton(C(0(5(#))))))))))),
                             java.lang.Object::<created>)
           = TRUE
         &   boolean::select(sv_heapAtPre_A#31,
                             java.security.MessageDigest::select(sv_heapAtPre_A#31,
                                                                 null,
                                                                 de.polyas.core3.open.cred.Crypto::$SHA_256_DIGEST),
                             java.lang.Object::<created>)
           = TRUE
         &   boolean::select(sv_heapAtPre_A#31,
                             java.security.SecureRandom::select(sv_heapAtPre_A#31,
                                                                null,
                                                                de.polyas.core3.open.cred.Crypto::$SECURE_RANDOM),
                             java.lang.Object::<created>)
           = TRUE
         & wellFormed(sv_heapAtPre_A#31)
         & sv_heapAtPre_A#31 = heap
         &   boolean::select(sv_heapAtPre_A#31,
                             sv_s1_7_A#28,
                             java.lang.Object::<created>)
           = TRUE
         &   boolean::select(sv_heapAtPre_A#31,
                             sv_s2_7_A#29,
                             java.lang.Object::<created>)
           = TRUE
         &   boolean::select(sv_heapAtPre_A#31,
                             sv_s3_7_A#30,
                             java.lang.Object::<created>)
           = TRUE
         & wellFormed(anon_heap_getInstance<<anonHeapFunction>>)
         &   anon(heap, empty, anon_heap_getInstance<<anonHeapFunction>>)
           = heapAfter_getInstance_A_0
         & (    boolean::select(heap,
                                result_143_A_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_getInstance<<anonHeapFunction>>,
                                result_143_A_0,
                                java.lang.Object::<created>)
              = TRUE)
         & (exc_161_A_0 = null)<<impl>>
         & RELATED_BY_getInstance_205199169(strPool(seqConcat(seqSingleton(C(3(8(#)))),
                                                              seqConcat(seqSingleton(C(2(7(#)))),
                                                                        seqConcat(seqSingleton(C(5(6(#)))),
                                                                                  seqConcat(seqSingleton(C(5(4(#)))),
                                                                                            seqConcat(seqSingleton(C(3(5(#)))),
                                                                                                      seqConcat(seqSingleton(C(9(4(#)))),
                                                                                                                seqSingleton(C(0(5(#))))))))))),
                                            heap,
                                            result_143_A_0,
                                            exc_161_A_0,
                                            heapAfter_getInstance_A_0)
         & wellFormed(heap)
         & wellFormed(anon_heap_getBytes<<anonHeapFunction>>)
         &   anon(store(store(create(heapAfter_getInstance_A_0, h_2_A_0),
                              h_2_A_0,
                              de.polyas.core3.open.crypto.basic.Hashes.HashCtx::$digest,
                              result_143_A_0),
                        h_2_A_0,
                        java.lang.Object::<initialized>,
                        TRUE),
                  empty,
                  anon_heap_getBytes<<anonHeapFunction>>)
           = heapAfter_getBytes_A_0
         & exc_162_A_0 = null
         &   \if (  boolean::select(heap,
                                    result_144_A_0,
                                    java.lang.Object::<created>)
                  = TRUE)
                 \then (boolean::select(heap,
                                        result_144_A_0,
                                        java.lang.Object::<created>))
                 \else (boolean::select(anon_heap_getInstance<<anonHeapFunction>>,
                                        result_144_A_0,
                                        java.lang.Object::<created>))
           = java_lang_Object_created__0_A_0<<selectSK>>
         & (  java_lang_Object_created__0_A_0<<selectSK>> = TRUE
            |   boolean::select(anon_heap_getBytes<<anonHeapFunction>>,
                                result_144_A_0,
                                java.lang.Object::<created>)
              = TRUE)
         & RELATED_BY_getBytes_485683870(sv_s1_7_A#28,
                                         store(store(create(heapAfter_getInstance_A_0,
                                                            h_2_A_0),
                                                     h_2_A_0,
                                                     de.polyas.core3.open.crypto.basic.Hashes.HashCtx::$digest,
                                                     result_143_A_0),
                                               h_2_A_0,
                                               java.lang.Object::<initialized>,
                                               TRUE),
                                         sv_s1_7_A#28,
                                         result_144_A_0,
                                         exc_162_A_0,
                                         heapAfter_getBytes_A_0)
         & wellFormed(store(store(create(heapAfter_getInstance_A_0, h_2_A_0),
                                  h_2_A_0,
                                  de.polyas.core3.open.crypto.basic.Hashes.HashCtx::$digest,
                                  result_143_A_0),
                            h_2_A_0,
                            java.lang.Object::<initialized>,
                            TRUE))
         & wellFormed(anon_heap_update<<anonHeapFunction>>)
         &   anon(heapAfter_getBytes_A_0,
                  empty,
                  anon_heap_update<<anonHeapFunction>>)
           = heapAfter_update_A_0
         & exc_163_A_0 = null
         & RELATED_BY_update_34813653(result_143_A_0,
                                      result_144_A_0,
                                      heapAfter_getBytes_A_0,
                                      result_143_A_0,
                                      exc_163_A_0,
                                      heapAfter_update_A_0)
         & wellFormed(heapAfter_getBytes_A_0)
         & wellFormed(anon_heap_getBytes_0<<anonHeapFunction>>)
         &   anon(heapAfter_update_A_0,
                  empty,
                  anon_heap_getBytes_0<<anonHeapFunction>>)
           = heapAfter_getBytes_0_A_0
         & exc_164_A_0 = null
         &   \if (  boolean::select(heap,
                                    result_145_A_0,
                                    java.lang.Object::<created>)
                  = TRUE)
                 \then (boolean::select(heap,
                                        result_145_A_0,
                                        java.lang.Object::<created>))
                 \else (boolean::select(anon_heap_getInstance<<anonHeapFunction>>,
                                        result_145_A_0,
                                        java.lang.Object::<created>))
           = java_lang_Object_created__2_A_0<<selectSK>>
         & (  java_lang_Object_created__2_A_0<<selectSK>> = TRUE
            |   boolean::select(anon_heap_getBytes<<anonHeapFunction>>,
                                result_145_A_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_getBytes_0<<anonHeapFunction>>,
                                result_145_A_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_update<<anonHeapFunction>>,
                                result_145_A_0,
                                java.lang.Object::<created>)
              = TRUE)
         & RELATED_BY_getBytes_485683870(sv_s2_7_A#29,
                                         heapAfter_update_A_0,
                                         sv_s2_7_A#29,
                                         result_145_A_0,
                                         exc_164_A_0,
                                         heapAfter_getBytes_0_A_0)
         & wellFormed(heapAfter_update_A_0)
         & wellFormed(anon_heap_update_0<<anonHeapFunction>>)
         &   anon(heapAfter_getBytes_0_A_0,
                  empty,
                  anon_heap_update_0<<anonHeapFunction>>)
           = heapAfter_update_0_A_0
         & exc_165_A_0 = null
         & RELATED_BY_update_34813653(result_143_A_0,
                                      result_145_A_0,
                                      heapAfter_getBytes_0_A_0,
                                      result_143_A_0,
                                      exc_165_A_0,
                                      heapAfter_update_0_A_0)
         & wellFormed(heapAfter_getBytes_0_A_0)
         & wellFormed(anon_heap_getBytes_1<<anonHeapFunction>>)
         &   anon(heapAfter_update_0_A_0,
                  empty,
                  anon_heap_getBytes_1<<anonHeapFunction>>)
           = heapAfter_getBytes_1_A_0
         & exc_166_A_0 = null
         &   \if (  boolean::select(heap,
                                    result_146_A_0,
                                    java.lang.Object::<created>)
                  = TRUE)
                 \then (boolean::select(heap,
                                        result_146_A_0,
                                        java.lang.Object::<created>))
                 \else (boolean::select(anon_heap_getInstance<<anonHeapFunction>>,
                                        result_146_A_0,
                                        java.lang.Object::<created>))
           = java_lang_Object_created__3_A_0<<selectSK>>
         & (  java_lang_Object_created__3_A_0<<selectSK>> = TRUE
            |   boolean::select(anon_heap_getBytes<<anonHeapFunction>>,
                                result_146_A_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_getBytes_0<<anonHeapFunction>>,
                                result_146_A_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_getBytes_1<<anonHeapFunction>>,
                                result_146_A_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_update<<anonHeapFunction>>,
                                result_146_A_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_update_0<<anonHeapFunction>>,
                                result_146_A_0,
                                java.lang.Object::<created>)
              = TRUE)
         & RELATED_BY_getBytes_485683870(sv_s3_7_A#30,
                                         heapAfter_update_0_A_0,
                                         sv_s3_7_A#30,
                                         result_146_A_0,
                                         exc_166_A_0,
                                         heapAfter_getBytes_1_A_0)
         & wellFormed(heapAfter_update_0_A_0)
         & wellFormed(anon_heap_update_1<<anonHeapFunction>>)
         &   anon(heapAfter_getBytes_1_A_0,
                  empty,
                  anon_heap_update_1<<anonHeapFunction>>)
           = heapAfter_update_1_A_0
         & exc_167_A_0 = null
         & RELATED_BY_update_34813653(result_143_A_0,
                                      result_146_A_0,
                                      heapAfter_getBytes_1_A_0,
                                      result_143_A_0,
                                      exc_167_A_0,
                                      heapAfter_update_1_A_0)
         & wellFormed(heapAfter_getBytes_1_A_0)
         & wellFormed(anon_heap_digest<<anonHeapFunction>>)
         &   anon(heapAfter_update_1_A_0,
                  empty,
                  anon_heap_digest<<anonHeapFunction>>)
           = heapAfter_digest_A_0
         &   \if (  boolean::select(heap,
                                    result_147_A_0,
                                    java.lang.Object::<created>)
                  = TRUE)
                 \then (boolean::select(heap,
                                        result_147_A_0,
                                        java.lang.Object::<created>))
                 \else (boolean::select(anon_heap_getInstance<<anonHeapFunction>>,
                                        result_147_A_0,
                                        java.lang.Object::<created>))
           = java_lang_Object_created__4_A_0<<selectSK>>
         & (  java_lang_Object_created__4_A_0<<selectSK>> = TRUE
            |   boolean::select(anon_heap_digest<<anonHeapFunction>>,
                                result_147_A_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_getBytes<<anonHeapFunction>>,
                                result_147_A_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_getBytes_0<<anonHeapFunction>>,
                                result_147_A_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_getBytes_1<<anonHeapFunction>>,
                                result_147_A_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_update<<anonHeapFunction>>,
                                result_147_A_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_update_0<<anonHeapFunction>>,
                                result_147_A_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_update_1<<anonHeapFunction>>,
                                result_147_A_0,
                                java.lang.Object::<created>)
              = TRUE)
         & (exc_168_A_0 = null)<<impl>>
         & RELATED_BY_digest_1395628877(result_143_A_0,
                                        heapAfter_update_1_A_0,
                                        result_143_A_0,
                                        result_147_A_0,
                                        exc_168_A_0,
                                        heapAfter_digest_A_0)
         & wellFormed(heapAfter_update_1_A_0)
         & !result_147_A_0 = null
         & !result_146_A_0 = null
         & !result_145_A_0 = null
         & !result_144_A_0 = null
         & !boolean::select(heap, h_2_A_0, java.lang.Object::<created>) = TRUE
         & !  boolean::select(anon_heap_getInstance<<anonHeapFunction>>,
                              h_2_A_0,
                              java.lang.Object::<created>)
            = TRUE
         & !h_2_A_0 = null
         & !result_143_A_0 = null
         & !  strPool(seqConcat(seqSingleton(C(3(8(#)))),
                                seqConcat(seqSingleton(C(2(7(#)))),
                                          seqConcat(seqSingleton(C(5(6(#)))),
                                                    seqConcat(seqSingleton(C(5(4(#)))),
                                                              seqConcat(seqSingleton(C(3(5(#)))),
                                                                        seqConcat(seqSingleton(C(9(4(#)))),
                                                                                  seqSingleton(C(0(5(#)))))))))))
            = null
         & !  strPool(seqConcat(seqSingleton(C(5(6(#)))),
                                seqConcat(seqSingleton(C(6(6(#)))),
                                          seqConcat(seqSingleton(C(7(6(#)))),
                                                    seqConcat(seqSingleton(C(8(6(#)))),
                                                              seqConcat(seqSingleton(C(9(6(#)))),
                                                                        seqConcat(seqSingleton(C(0(7(#)))),
                                                                                  seqConcat(seqSingleton(C(1(7(#)))),
                                                                                            seqConcat(seqSingleton(C(2(7(#)))),
                                                                                                      seqConcat(seqSingleton(C(4(7(#)))),
                                                                                                                seqConcat(seqSingleton(C(5(7(#)))),
                                                                                                                          seqConcat(seqSingleton(C(6(7(#)))),
                                                                                                                                    seqConcat(seqSingleton(C(7(7(#)))),
                                                                                                                                              seqConcat(seqSingleton(C(8(7(#)))),
                                                                                                                                                        seqConcat(seqSingleton(C(0(8(#)))),
                                                                                                                                                                  seqConcat(seqSingleton(C(1(8(#)))),
                                                                                                                                                                            seqConcat(seqSingleton(C(2(8(#)))),
                                                                                                                                                                                      seqConcat(seqSingleton(C(3(8(#)))),
                                                                                                                                                                                                seqConcat(seqSingleton(C(4(8(#)))),
                                                                                                                                                                                                          seqConcat(seqSingleton(C(5(8(#)))),
                                                                                                                                                                                                                    seqConcat(seqSingleton(C(6(8(#)))),
                                                                                                                                                                                                                              seqConcat(seqSingleton(C(7(8(#)))),
                                                                                                                                                                                                                                        seqConcat(seqSingleton(C(8(8(#)))),
                                                                                                                                                                                                                                                  seqConcat(seqSingleton(C(9(8(#)))),
                                                                                                                                                                                                                                                            seqConcat(seqSingleton(C(0(9(#)))),
                                                                                                                                                                                                                                                                      seqConcat(seqSingleton(C(0(5(#)))),
                                                                                                                                                                                                                                                                                seqConcat(seqSingleton(C(1(5(#)))),
                                                                                                                                                                                                                                                                                          seqConcat(seqSingleton(C(2(5(#)))),
                                                                                                                                                                                                                                                                                                    seqConcat(seqSingleton(C(3(5(#)))),
                                                                                                                                                                                                                                                                                                              seqConcat(seqSingleton(C(4(5(#)))),
                                                                                                                                                                                                                                                                                                                        seqConcat(seqSingleton(C(5(5(#)))),
                                                                                                                                                                                                                                                                                                                                  seqConcat(seqSingleton(C(6(5(#)))),
                                                                                                                                                                                                                                                                                                                                            seqSingleton(C(7(5(#))))))))))))))))))))))))))))))))))))
            = null
         & !  java.security.SecureRandom::select(sv_heapAtPre_A#31,
                                                 null,
                                                 de.polyas.core3.open.cred.Crypto::$SECURE_RANDOM)
            = null
         & !  java.security.MessageDigest::select(sv_heapAtPre_A#31,
                                                  null,
                                                  de.polyas.core3.open.cred.Crypto::$SHA_256_DIGEST)
            = null
         & !{exc_160_A:=null
             || heap:=heapAfter_digest_A_0
             || result_142_A:=result_147_A_0}
              !(  result_142_A = sv_resultAtPost_142_A#33
                & exc_160_A = sv_excAtPost_160_A#34
                & sv_heapAtPost_A#35 = heap)
         & !sv_s3_7_A#30 = null
         & !sv_s2_7_A#29 = null
         & !sv_s1_7_A#28 = null)
    & {heap:=sv_heapAtPre_B#39}
        (    de.polyas.core3.open.crypto.basic.Hashes.HashCtx::exactInstance(h_2_B_0)
           = TRUE
         &   boolean::select(heap,
                             strPool(seqConcat(seqSingleton(C(3(8(#)))),
                                               seqConcat(seqSingleton(C(2(7(#)))),
                                                         seqConcat(seqSingleton(C(5(6(#)))),
                                                                   seqConcat(seqSingleton(C(5(4(#)))),
                                                                             seqConcat(seqSingleton(C(3(5(#)))),
                                                                                       seqConcat(seqSingleton(C(9(4(#)))),
                                                                                                 seqSingleton(C(0(5(#))))))))))),
                             java.lang.Object::<created>)
           = TRUE
         &   boolean::select(sv_heapAtPre_B#39,
                             java.security.MessageDigest::select(sv_heapAtPre_B#39,
                                                                 null,
                                                                 de.polyas.core3.open.cred.Crypto::$SHA_256_DIGEST),
                             java.lang.Object::<created>)
           = TRUE
         &   boolean::select(sv_heapAtPre_B#39,
                             java.security.SecureRandom::select(sv_heapAtPre_B#39,
                                                                null,
                                                                de.polyas.core3.open.cred.Crypto::$SECURE_RANDOM),
                             java.lang.Object::<created>)
           = TRUE
         & wellFormed(sv_heapAtPre_B#39)
         & sv_heapAtPre_B#39 = heap
         &   boolean::select(sv_heapAtPre_B#39,
                             sv_s1_7_B#36,
                             java.lang.Object::<created>)
           = TRUE
         &   boolean::select(sv_heapAtPre_B#39,
                             sv_s2_7_B#37,
                             java.lang.Object::<created>)
           = TRUE
         &   boolean::select(sv_heapAtPre_B#39,
                             sv_s3_7_B#38,
                             java.lang.Object::<created>)
           = TRUE
         & wellFormed(anon_heap_getInstance<<anonHeapFunction>>)
         &   anon(heap, empty, anon_heap_getInstance<<anonHeapFunction>>)
           = heapAfter_getInstance_B_0
         & (    boolean::select(heap,
                                result_143_B_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_getInstance<<anonHeapFunction>>,
                                result_143_B_0,
                                java.lang.Object::<created>)
              = TRUE)
         & (exc_161_B_0 = null)<<impl>>
         & RELATED_BY_getInstance_205199169(strPool(seqConcat(seqSingleton(C(3(8(#)))),
                                                              seqConcat(seqSingleton(C(2(7(#)))),
                                                                        seqConcat(seqSingleton(C(5(6(#)))),
                                                                                  seqConcat(seqSingleton(C(5(4(#)))),
                                                                                            seqConcat(seqSingleton(C(3(5(#)))),
                                                                                                      seqConcat(seqSingleton(C(9(4(#)))),
                                                                                                                seqSingleton(C(0(5(#))))))))))),
                                            heap,
                                            result_143_B_0,
                                            exc_161_B_0,
                                            heapAfter_getInstance_B_0)
         & wellFormed(heap)
         & wellFormed(anon_heap_getBytes<<anonHeapFunction>>)
         &   anon(store(store(create(heapAfter_getInstance_B_0, h_2_B_0),
                              h_2_B_0,
                              de.polyas.core3.open.crypto.basic.Hashes.HashCtx::$digest,
                              result_143_B_0),
                        h_2_B_0,
                        java.lang.Object::<initialized>,
                        TRUE),
                  empty,
                  anon_heap_getBytes<<anonHeapFunction>>)
           = heapAfter_getBytes_B_0
         & exc_162_B_0 = null
         &   \if (  boolean::select(heap,
                                    result_144_B_0,
                                    java.lang.Object::<created>)
                  = TRUE)
                 \then (boolean::select(heap,
                                        result_144_B_0,
                                        java.lang.Object::<created>))
                 \else (boolean::select(anon_heap_getInstance<<anonHeapFunction>>,
                                        result_144_B_0,
                                        java.lang.Object::<created>))
           = java_lang_Object_created__0_B_0<<selectSK>>
         & (  java_lang_Object_created__0_B_0<<selectSK>> = TRUE
            |   boolean::select(anon_heap_getBytes<<anonHeapFunction>>,
                                result_144_B_0,
                                java.lang.Object::<created>)
              = TRUE)
         & RELATED_BY_getBytes_485683870(sv_s1_7_B#36,
                                         store(store(create(heapAfter_getInstance_B_0,
                                                            h_2_B_0),
                                                     h_2_B_0,
                                                     de.polyas.core3.open.crypto.basic.Hashes.HashCtx::$digest,
                                                     result_143_B_0),
                                               h_2_B_0,
                                               java.lang.Object::<initialized>,
                                               TRUE),
                                         sv_s1_7_B#36,
                                         result_144_B_0,
                                         exc_162_B_0,
                                         heapAfter_getBytes_B_0)
         & wellFormed(store(store(create(heapAfter_getInstance_B_0, h_2_B_0),
                                  h_2_B_0,
                                  de.polyas.core3.open.crypto.basic.Hashes.HashCtx::$digest,
                                  result_143_B_0),
                            h_2_B_0,
                            java.lang.Object::<initialized>,
                            TRUE))
         & wellFormed(anon_heap_update<<anonHeapFunction>>)
         &   anon(heapAfter_getBytes_B_0,
                  empty,
                  anon_heap_update<<anonHeapFunction>>)
           = heapAfter_update_B_0
         & exc_163_B_0 = null
         & RELATED_BY_update_34813653(result_143_B_0,
                                      result_144_B_0,
                                      heapAfter_getBytes_B_0,
                                      result_143_B_0,
                                      exc_163_B_0,
                                      heapAfter_update_B_0)
         & wellFormed(heapAfter_getBytes_B_0)
         & wellFormed(anon_heap_getBytes_0<<anonHeapFunction>>)
         &   anon(heapAfter_update_B_0,
                  empty,
                  anon_heap_getBytes_0<<anonHeapFunction>>)
           = heapAfter_getBytes_0_B_0
         & exc_164_B_0 = null
         &   \if (  boolean::select(heap,
                                    result_145_B_0,
                                    java.lang.Object::<created>)
                  = TRUE)
                 \then (boolean::select(heap,
                                        result_145_B_0,
                                        java.lang.Object::<created>))
                 \else (boolean::select(anon_heap_getInstance<<anonHeapFunction>>,
                                        result_145_B_0,
                                        java.lang.Object::<created>))
           = java_lang_Object_created__2_B_0<<selectSK>>
         & (  java_lang_Object_created__2_B_0<<selectSK>> = TRUE
            |   boolean::select(anon_heap_getBytes<<anonHeapFunction>>,
                                result_145_B_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_getBytes_0<<anonHeapFunction>>,
                                result_145_B_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_update<<anonHeapFunction>>,
                                result_145_B_0,
                                java.lang.Object::<created>)
              = TRUE)
         & RELATED_BY_getBytes_485683870(sv_s2_7_B#37,
                                         heapAfter_update_B_0,
                                         sv_s2_7_B#37,
                                         result_145_B_0,
                                         exc_164_B_0,
                                         heapAfter_getBytes_0_B_0)
         & wellFormed(heapAfter_update_B_0)
         & wellFormed(anon_heap_update_0<<anonHeapFunction>>)
         &   anon(heapAfter_getBytes_0_B_0,
                  empty,
                  anon_heap_update_0<<anonHeapFunction>>)
           = heapAfter_update_0_B_0
         & exc_165_B_0 = null
         & RELATED_BY_update_34813653(result_143_B_0,
                                      result_145_B_0,
                                      heapAfter_getBytes_0_B_0,
                                      result_143_B_0,
                                      exc_165_B_0,
                                      heapAfter_update_0_B_0)
         & wellFormed(heapAfter_getBytes_0_B_0)
         & wellFormed(anon_heap_getBytes_1<<anonHeapFunction>>)
         &   anon(heapAfter_update_0_B_0,
                  empty,
                  anon_heap_getBytes_1<<anonHeapFunction>>)
           = heapAfter_getBytes_1_B_0
         & exc_166_B_0 = null
         &   \if (  boolean::select(heap,
                                    result_146_B_0,
                                    java.lang.Object::<created>)
                  = TRUE)
                 \then (boolean::select(heap,
                                        result_146_B_0,
                                        java.lang.Object::<created>))
                 \else (boolean::select(anon_heap_getInstance<<anonHeapFunction>>,
                                        result_146_B_0,
                                        java.lang.Object::<created>))
           = java_lang_Object_created__3_B_0<<selectSK>>
         & (  java_lang_Object_created__3_B_0<<selectSK>> = TRUE
            |   boolean::select(anon_heap_getBytes<<anonHeapFunction>>,
                                result_146_B_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_getBytes_0<<anonHeapFunction>>,
                                result_146_B_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_getBytes_1<<anonHeapFunction>>,
                                result_146_B_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_update<<anonHeapFunction>>,
                                result_146_B_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_update_0<<anonHeapFunction>>,
                                result_146_B_0,
                                java.lang.Object::<created>)
              = TRUE)
         & RELATED_BY_getBytes_485683870(sv_s3_7_B#38,
                                         heapAfter_update_0_B_0,
                                         sv_s3_7_B#38,
                                         result_146_B_0,
                                         exc_166_B_0,
                                         heapAfter_getBytes_1_B_0)
         & wellFormed(heapAfter_update_0_B_0)
         & wellFormed(anon_heap_update_1<<anonHeapFunction>>)
         &   anon(heapAfter_getBytes_1_B_0,
                  empty,
                  anon_heap_update_1<<anonHeapFunction>>)
           = heapAfter_update_1_B_0
         & exc_167_B_0 = null
         & RELATED_BY_update_34813653(result_143_B_0,
                                      result_146_B_0,
                                      heapAfter_getBytes_1_B_0,
                                      result_143_B_0,
                                      exc_167_B_0,
                                      heapAfter_update_1_B_0)
         & wellFormed(heapAfter_getBytes_1_B_0)
         & wellFormed(anon_heap_digest<<anonHeapFunction>>)
         &   anon(heapAfter_update_1_B_0,
                  empty,
                  anon_heap_digest<<anonHeapFunction>>)
           = heapAfter_digest_B_0
         &   \if (  boolean::select(heap,
                                    result_147_B_0,
                                    java.lang.Object::<created>)
                  = TRUE)
                 \then (boolean::select(heap,
                                        result_147_B_0,
                                        java.lang.Object::<created>))
                 \else (boolean::select(anon_heap_getInstance<<anonHeapFunction>>,
                                        result_147_B_0,
                                        java.lang.Object::<created>))
           = java_lang_Object_created__4_B_0<<selectSK>>
         & (  java_lang_Object_created__4_B_0<<selectSK>> = TRUE
            |   boolean::select(anon_heap_digest<<anonHeapFunction>>,
                                result_147_B_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_getBytes<<anonHeapFunction>>,
                                result_147_B_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_getBytes_0<<anonHeapFunction>>,
                                result_147_B_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_getBytes_1<<anonHeapFunction>>,
                                result_147_B_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_update<<anonHeapFunction>>,
                                result_147_B_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_update_0<<anonHeapFunction>>,
                                result_147_B_0,
                                java.lang.Object::<created>)
              = TRUE
            |   boolean::select(anon_heap_update_1<<anonHeapFunction>>,
                                result_147_B_0,
                                java.lang.Object::<created>)
              = TRUE)
         & (exc_168_B_0 = null)<<impl>>
         & RELATED_BY_digest_1395628877(result_143_B_0,
                                        heapAfter_update_1_B_0,
                                        result_143_B_0,
                                        result_147_B_0,
                                        exc_168_B_0,
                                        heapAfter_digest_B_0)
         & wellFormed(heapAfter_update_1_B_0)
         & !result_147_B_0 = null
         & !result_146_B_0 = null
         & !result_145_B_0 = null
         & !result_144_B_0 = null
         & !boolean::select(heap, h_2_B_0, java.lang.Object::<created>) = TRUE
         & !  boolean::select(anon_heap_getInstance<<anonHeapFunction>>,
                              h_2_B_0,
                              java.lang.Object::<created>)
            = TRUE
         & !h_2_B_0 = null
         & !result_143_B_0 = null
         & !  strPool(seqConcat(seqSingleton(C(3(8(#)))),
                                seqConcat(seqSingleton(C(2(7(#)))),
                                          seqConcat(seqSingleton(C(5(6(#)))),
                                                    seqConcat(seqSingleton(C(5(4(#)))),
                                                              seqConcat(seqSingleton(C(3(5(#)))),
                                                                        seqConcat(seqSingleton(C(9(4(#)))),
                                                                                  seqSingleton(C(0(5(#)))))))))))
            = null
         & !  strPool(seqConcat(seqSingleton(C(5(6(#)))),
                                seqConcat(seqSingleton(C(6(6(#)))),
                                          seqConcat(seqSingleton(C(7(6(#)))),
                                                    seqConcat(seqSingleton(C(8(6(#)))),
                                                              seqConcat(seqSingleton(C(9(6(#)))),
                                                                        seqConcat(seqSingleton(C(0(7(#)))),
                                                                                  seqConcat(seqSingleton(C(1(7(#)))),
                                                                                            seqConcat(seqSingleton(C(2(7(#)))),
                                                                                                      seqConcat(seqSingleton(C(4(7(#)))),
                                                                                                                seqConcat(seqSingleton(C(5(7(#)))),
                                                                                                                          seqConcat(seqSingleton(C(6(7(#)))),
                                                                                                                                    seqConcat(seqSingleton(C(7(7(#)))),
                                                                                                                                              seqConcat(seqSingleton(C(8(7(#)))),
                                                                                                                                                        seqConcat(seqSingleton(C(0(8(#)))),
                                                                                                                                                                  seqConcat(seqSingleton(C(1(8(#)))),
                                                                                                                                                                            seqConcat(seqSingleton(C(2(8(#)))),
                                                                                                                                                                                      seqConcat(seqSingleton(C(3(8(#)))),
                                                                                                                                                                                                seqConcat(seqSingleton(C(4(8(#)))),
                                                                                                                                                                                                          seqConcat(seqSingleton(C(5(8(#)))),
                                                                                                                                                                                                                    seqConcat(seqSingleton(C(6(8(#)))),
                                                                                                                                                                                                                              seqConcat(seqSingleton(C(7(8(#)))),
                                                                                                                                                                                                                                        seqConcat(seqSingleton(C(8(8(#)))),
                                                                                                                                                                                                                                                  seqConcat(seqSingleton(C(9(8(#)))),
                                                                                                                                                                                                                                                            seqConcat(seqSingleton(C(0(9(#)))),
                                                                                                                                                                                                                                                                      seqConcat(seqSingleton(C(0(5(#)))),
                                                                                                                                                                                                                                                                                seqConcat(seqSingleton(C(1(5(#)))),
                                                                                                                                                                                                                                                                                          seqConcat(seqSingleton(C(2(5(#)))),
                                                                                                                                                                                                                                                                                                    seqConcat(seqSingleton(C(3(5(#)))),
                                                                                                                                                                                                                                                                                                              seqConcat(seqSingleton(C(4(5(#)))),
                                                                                                                                                                                                                                                                                                                        seqConcat(seqSingleton(C(5(5(#)))),
                                                                                                                                                                                                                                                                                                                                  seqConcat(seqSingleton(C(6(5(#)))),
                                                                                                                                                                                                                                                                                                                                            seqSingleton(C(7(5(#))))))))))))))))))))))))))))))))))))
            = null
         & !  java.security.SecureRandom::select(sv_heapAtPre_B#39,
                                                 null,
                                                 de.polyas.core3.open.cred.Crypto::$SECURE_RANDOM)
            = null
         & !  java.security.MessageDigest::select(sv_heapAtPre_B#39,
                                                  null,
                                                  de.polyas.core3.open.cred.Crypto::$SHA_256_DIGEST)
            = null
         & !{exc_160_B:=null
             || heap:=heapAfter_digest_B_0
             || result_142_B:=result_147_B_0}
              !(  result_142_B = sv_resultAtPost_142_B#41
                & exc_160_B = sv_excAtPost_160_B#42
                & sv_heapAtPost_B#43 = heap)
         & !sv_s3_7_B#38 = null
         & !sv_s2_7_B#37 = null
         & !sv_s1_7_B#36 = null)
  )
  \heuristics ( concrete )
};

Use_information_flow_contract_for_digest_1395628877 {
  \schemaVar \term Heap find_heap#113;
  \schemaVar \term java.security.MessageDigest find_m_5#110;
  \schemaVar \term byte[] find_result_147#111;
  \schemaVar \term java.lang.Throwable find_exc_168#112;
  \schemaVar \term Heap find_heapAfter_digest#114;
  \schemaVar \term Heap assumes_heap#118;
  \schemaVar \term java.security.MessageDigest assumes_m_5#115;
  \schemaVar \term byte[] assumes_result_147#116;
  \schemaVar \term java.lang.Throwable assumes_exc_168#117;
  \schemaVar \term Heap assumes_heapAfter_digest#119;
  
  \assumes ( RELATED_BY_digest_1395628877(assumes_m_5#115,
                                          assumes_heap#118,
                                          assumes_m_5#115,
                                          assumes_result_147#116,
                                          assumes_exc_168#117,
                                          assumes_heapAfter_digest#119)
            ⟹
             
  )
  \find (
    RELATED_BY_digest_1395628877(find_m_5#110,
                                 find_heap#113,
                                 find_m_5#110,
                                 find_result_147#111,
                                 find_exc_168#112,
                                 find_heapAfter_digest#114)
  )
  \antecedentPolarity
  \replacewith (
    RELATED_BY_digest_1395628877(find_m_5#110,
                                 find_heap#113,
                                 find_m_5#110,
                                 find_result_147#111,
                                 find_exc_168#112,
                                 find_heapAfter_digest#114)
  )
  \add (      java.lang.Object::<inv>(find_heap#113, find_m_5#110)<<impl>>
            & java.lang.Object::<inv>(assumes_heap#118, assumes_m_5#115)<<impl>>
         -> (find_result_147#111 = assumes_result_147#116)<<postCondition>>
        ⟹
         
  )
  \heuristics ( information_flow_contract_appl )
};

Use_information_flow_contract_for_update_34813653_1 {
  \schemaVar \term byte[] find_var_8#101;
  \schemaVar \term Heap find_heap#103;
  \schemaVar \term java.security.MessageDigest find_var_7#100;
  \schemaVar \term java.lang.Throwable find_exc_167#102;
  \schemaVar \term Heap find_heapAfter_update_1#104;
  \schemaVar \term byte[] assumes_var_8#106;
  \schemaVar \term Heap assumes_heap#108;
  \schemaVar \term java.security.MessageDigest assumes_var_7#105;
  \schemaVar \term java.lang.Throwable assumes_exc_167#107;
  \schemaVar \term Heap assumes_heapAfter_update_1#109;
  
  \assumes ( RELATED_BY_update_34813653(assumes_var_7#105,
                                        assumes_var_8#106,
                                        assumes_heap#108,
                                        assumes_var_7#105,
                                        assumes_exc_167#107,
                                        assumes_heapAfter_update_1#109)
            ⟹
             
  )
  \find (
    RELATED_BY_update_34813653(find_var_7#100,
                               find_var_8#101,
                               find_heap#103,
                               find_var_7#100,
                               find_exc_167#102,
                               find_heapAfter_update_1#104)
  )
  \antecedentPolarity
  \replacewith (
    RELATED_BY_update_34813653(find_var_7#100,
                               find_var_8#101,
                               find_heap#103,
                               find_var_7#100,
                               find_exc_167#102,
                               find_heapAfter_update_1#104)
  )
  \add (true ⟹  )
  \heuristics ( information_flow_contract_appl )
};

Use_information_flow_contract_for_getBytes_485683870_1 {
  \schemaVar \term Heap find_heap#93;
  \schemaVar \term java.lang.String find_string_2#90;
  \schemaVar \term byte[] find_result_146#91;
  \schemaVar \term java.lang.Throwable find_exc_166#92;
  \schemaVar \term Heap find_heapAfter_getBytes_1#94;
  \schemaVar \term Heap assumes_heap#98;
  \schemaVar \term java.lang.String assumes_string_2#95;
  \schemaVar \term byte[] assumes_result_146#96;
  \schemaVar \term java.lang.Throwable assumes_exc_166#97;
  \schemaVar \term Heap assumes_heapAfter_getBytes_1#99;
  
  \assumes ( RELATED_BY_getBytes_485683870(assumes_string_2#95,
                                           assumes_heap#98,
                                           assumes_string_2#95,
                                           assumes_result_146#96,
                                           assumes_exc_166#97,
                                           assumes_heapAfter_getBytes_1#99)
            ⟹
             
  )
  \find (
    RELATED_BY_getBytes_485683870(find_string_2#90,
                                  find_heap#93,
                                  find_string_2#90,
                                  find_result_146#91,
                                  find_exc_166#92,
                                  find_heapAfter_getBytes_1#94)
  )
  \antecedentPolarity
  \replacewith (
    RELATED_BY_getBytes_485683870(find_string_2#90,
                                  find_heap#93,
                                  find_string_2#90,
                                  find_result_146#91,
                                  find_exc_166#92,
                                  find_heapAfter_getBytes_1#94)
  )
  \add (      java.lang.Object::<inv>(find_heap#93, find_string_2#90)<<impl>>
            & java.lang.Object::<inv>(assumes_heap#98, assumes_string_2#95)<<impl>>
         -> find_string_2#90 = assumes_string_2#95
         -> (allFields(find_result_146#91) = allFields(assumes_result_146#96))<<postCondition>>
        ⟹
         
  )
  \heuristics ( information_flow_contract_appl )
};

Use_information_flow_contract_for_update_34813653_0 {
  \schemaVar \term byte[] find_var_6#78;
  \schemaVar \term Heap find_heap#80;
  \schemaVar \term java.security.MessageDigest find_var_5#77;
  \schemaVar \term java.lang.Throwable find_exc_165#79;
  \schemaVar \term Heap find_heapAfter_update_0#81;
  \schemaVar \term byte[] assumes_var_6#83;
  \schemaVar \term Heap assumes_heap#85;
  \schemaVar \term java.security.MessageDigest assumes_var_5#82;
  \schemaVar \term java.lang.Throwable assumes_exc_165#84;
  \schemaVar \term Heap assumes_heapAfter_update_0#86;
  
  \assumes ( RELATED_BY_update_34813653(assumes_var_5#82,
                                        assumes_var_6#83,
                                        assumes_heap#85,
                                        assumes_var_5#82,
                                        assumes_exc_165#84,
                                        assumes_heapAfter_update_0#86)
            ⟹
             
  )
  \find (
    RELATED_BY_update_34813653(find_var_5#77,
                               find_var_6#78,
                               find_heap#80,
                               find_var_5#77,
                               find_exc_165#79,
                               find_heapAfter_update_0#81)
  )
  \antecedentPolarity
  \replacewith (
    RELATED_BY_update_34813653(find_var_5#77,
                               find_var_6#78,
                               find_heap#80,
                               find_var_5#77,
                               find_exc_165#79,
                               find_heapAfter_update_0#81)
  )
  \add (true ⟹  )
  \heuristics ( information_flow_contract_appl )
};

Use_information_flow_contract_for_getBytes_485683870_0 {
  \schemaVar \term Heap find_heap#70;
  \schemaVar \term java.lang.String find_string_1#67;
  \schemaVar \term byte[] find_result_145#68;
  \schemaVar \term java.lang.Throwable find_exc_164#69;
  \schemaVar \term Heap find_heapAfter_getBytes_0#71;
  \schemaVar \term Heap assumes_heap#75;
  \schemaVar \term java.lang.String assumes_string_1#72;
  \schemaVar \term byte[] assumes_result_145#73;
  \schemaVar \term java.lang.Throwable assumes_exc_164#74;
  \schemaVar \term Heap assumes_heapAfter_getBytes_0#76;
  
  \assumes ( RELATED_BY_getBytes_485683870(assumes_string_1#72,
                                           assumes_heap#75,
                                           assumes_string_1#72,
                                           assumes_result_145#73,
                                           assumes_exc_164#74,
                                           assumes_heapAfter_getBytes_0#76)
            ⟹
             
  )
  \find (
    RELATED_BY_getBytes_485683870(find_string_1#67,
                                  find_heap#70,
                                  find_string_1#67,
                                  find_result_145#68,
                                  find_exc_164#69,
                                  find_heapAfter_getBytes_0#71)
  )
  \antecedentPolarity
  \replacewith (
    RELATED_BY_getBytes_485683870(find_string_1#67,
                                  find_heap#70,
                                  find_string_1#67,
                                  find_result_145#68,
                                  find_exc_164#69,
                                  find_heapAfter_getBytes_0#71)
  )
  \add (      java.lang.Object::<inv>(find_heap#70, find_string_1#67)<<impl>>
            & java.lang.Object::<inv>(assumes_heap#75, assumes_string_1#72)<<impl>>
         -> find_string_1#67 = assumes_string_1#72
         -> (allFields(find_result_145#68) = allFields(assumes_result_145#73))<<postCondition>>
        ⟹
         
  )
  \heuristics ( information_flow_contract_appl )
};

Use_information_flow_contract_for_update_34813653 {
  \schemaVar \term byte[] find_var_4#55;
  \schemaVar \term Heap find_heap#57;
  \schemaVar \term java.security.MessageDigest find_var_3#54;
  \schemaVar \term java.lang.Throwable find_exc_163#56;
  \schemaVar \term Heap find_heapAfter_update#58;
  \schemaVar \term byte[] assumes_var_4#60;
  \schemaVar \term Heap assumes_heap#62;
  \schemaVar \term java.security.MessageDigest assumes_var_3#59;
  \schemaVar \term java.lang.Throwable assumes_exc_163#61;
  \schemaVar \term Heap assumes_heapAfter_update#63;
  
  \assumes ( RELATED_BY_update_34813653(assumes_var_3#59,
                                        assumes_var_4#60,
                                        assumes_heap#62,
                                        assumes_var_3#59,
                                        assumes_exc_163#61,
                                        assumes_heapAfter_update#63)
            ⟹
             
  )
  \find (
    RELATED_BY_update_34813653(find_var_3#54,
                               find_var_4#55,
                               find_heap#57,
                               find_var_3#54,
                               find_exc_163#56,
                               find_heapAfter_update#58)
  )
  \antecedentPolarity
  \replacewith (
    RELATED_BY_update_34813653(find_var_3#54,
                               find_var_4#55,
                               find_heap#57,
                               find_var_3#54,
                               find_exc_163#56,
                               find_heapAfter_update#58)
  )
  \add (true ⟹  )
  \heuristics ( information_flow_contract_appl )
};

Use_information_flow_contract_for_getBytes_485683870 {
  \schemaVar \term Heap find_heap#47;
  \schemaVar \term java.lang.String find_string#44;
  \schemaVar \term byte[] find_result_144#45;
  \schemaVar \term java.lang.Throwable find_exc_162#46;
  \schemaVar \term Heap find_heapAfter_getBytes#48;
  \schemaVar \term Heap assumes_heap#52;
  \schemaVar \term java.lang.String assumes_string#49;
  \schemaVar \term byte[] assumes_result_144#50;
  \schemaVar \term java.lang.Throwable assumes_exc_162#51;
  \schemaVar \term Heap assumes_heapAfter_getBytes#53;
  
  \assumes ( RELATED_BY_getBytes_485683870(assumes_string#49,
                                           assumes_heap#52,
                                           assumes_string#49,
                                           assumes_result_144#50,
                                           assumes_exc_162#51,
                                           assumes_heapAfter_getBytes#53)
            ⟹
             
  )
  \find (
    RELATED_BY_getBytes_485683870(find_string#44,
                                  find_heap#47,
                                  find_string#44,
                                  find_result_144#45,
                                  find_exc_162#46,
                                  find_heapAfter_getBytes#48)
  )
  \antecedentPolarity
  \replacewith (
    RELATED_BY_getBytes_485683870(find_string#44,
                                  find_heap#47,
                                  find_string#44,
                                  find_result_144#45,
                                  find_exc_162#46,
                                  find_heapAfter_getBytes#48)
  )
  \add (      java.lang.Object::<inv>(find_heap#47, find_string#44)<<impl>>
            & java.lang.Object::<inv>(assumes_heap#52, assumes_string#49)<<impl>>
         -> find_string#44 = assumes_string#49
         -> (allFields(find_result_144#45) = allFields(assumes_result_144#50))<<postCondition>>
        ⟹
         
  )
  \heuristics ( information_flow_contract_appl )
};

Use_information_flow_contract_for_getInstance_205199169 {
  \schemaVar \term java.lang.String find_var_1#30;
  \schemaVar \term Heap find_heap#33;
  \schemaVar \term java.security.MessageDigest find_result_143#31;
  \schemaVar \term java.lang.Throwable find_exc_161#32;
  \schemaVar \term Heap find_heapAfter_getInstance#34;
  \schemaVar \term java.lang.String assumes_var_1#35;
  \schemaVar \term Heap assumes_heap#38;
  \schemaVar \term java.security.MessageDigest assumes_result_143#36;
  \schemaVar \term java.lang.Throwable assumes_exc_161#37;
  \schemaVar \term Heap assumes_heapAfter_getInstance#39;
  
  \assumes ( RELATED_BY_getInstance_205199169(assumes_var_1#35,
                                              assumes_heap#38,
                                              assumes_result_143#36,
                                              assumes_exc_161#37,
                                              assumes_heapAfter_getInstance#39)
            ⟹
             
  )
  \find (
    RELATED_BY_getInstance_205199169(find_var_1#30,
                                     find_heap#33,
                                     find_result_143#31,
                                     find_exc_161#32,
                                     find_heapAfter_getInstance#34)
  )
  \antecedentPolarity
  \replacewith (
    RELATED_BY_getInstance_205199169(find_var_1#30,
                                     find_heap#33,
                                     find_result_143#31,
                                     find_exc_161#32,
                                     find_heapAfter_getInstance#34)
  )
  \add (      (!(find_var_1#30 = null)<<origin("requires @ file MessageDigest.java @ line 9","[]")>>)<<impl,
                                                                                                       origin("requires @ file MessageDigest.java @ line 9","[]")>>
            & (!(assumes_var_1#35 = null)<<origin("requires @ file MessageDigest.java @ line 9","[]")>>)<<impl,
                                                                                                          origin("requires @ file MessageDigest.java @ line 9","[]")>>
         -> find_var_1#30 = assumes_var_1#35
         -> (find_result_143#31 = assumes_result_143#36)<<postCondition>>
        ⟹
         
  )
  \heuristics ( information_flow_contract_appl )
};
}

\problem {
     {heap:=heapAtPre_A<<anonHeapFunction>>}
       (  wellFormed(heapAtPre_A<<anonHeapFunction>>)
        & heap = heapAtPre_A<<anonHeapFunction>>
        & (  ((  s1_7_A = null
               |   boolean::select(heapAtPre_A<<anonHeapFunction>>,
                                   s1_7_A,
                                   java.lang.Object::<created>)
                 = TRUE)<<SC>>)
           & ((  s2_7_A = null
               |   boolean::select(heapAtPre_A<<anonHeapFunction>>,
                                   s2_7_A,
                                   java.lang.Object::<created>)
                 = TRUE)<<SC>>)
           & ((  s3_7_A = null
               |   boolean::select(heapAtPre_A<<anonHeapFunction>>,
                                   s3_7_A,
                                   java.lang.Object::<created>)
                 = TRUE)<<SC>>))
        & ((  de.polyas.core3.open.cred.Crypto::<$inv>(heapAtPre_A<<anonHeapFunction>>)
            & ((  (!(s1_7_A = null)<<origin("requires @ file Hashes.java @ line 35","[]")>>)<<impl,
                                                                                              origin("requires @ file Hashes.java @ line 35","[]")>>
                & ((  (!(s2_7_A = null)<<origin("requires @ file Hashes.java @ line 35","[]")>>)<<impl,
                                                                                                  origin("requires @ file Hashes.java @ line 35","[]")>>
                    & (!(s3_7_A = null)<<origin("requires @ file Hashes.java @ line 35","[]")>>)<<impl,
                                                                                                  origin("requires @ file Hashes.java @ line 35","[]")>>)<<SC>>))<<SC>>))<<SC>>)
        & {_s1_7_A:=s1_7_A
           || _s2_7_A:=s2_7_A
           || _s3_7_A:=s3_7_A}
            \[{
                exc_160_A=null;try {
                  result_142_A=de.polyas.core3.open.crypto.basic.Hashes.hash512(_s1_7_A,_s2_7_A,_s3_7_A)@de.polyas.core3.open.crypto.basic.Hashes;
                }   catch (java.lang.Throwable e) {
                  exc_160_A=e;
                }
              }\] (  resultAtPost_142_A = result_142_A
                   & excAtPost_160_A = exc_160_A
                   & heapAtPost_A = heap))
   & {heap:=heapAtPre_B<<anonHeapFunction>>}
       (  wellFormed(heapAtPre_B<<anonHeapFunction>>)
        & heap = heapAtPre_B<<anonHeapFunction>>
        & (  ((  s1_7_B = null
               |   boolean::select(heapAtPre_B<<anonHeapFunction>>,
                                   s1_7_B,
                                   java.lang.Object::<created>)
                 = TRUE)<<SC>>)
           & ((  s2_7_B = null
               |   boolean::select(heapAtPre_B<<anonHeapFunction>>,
                                   s2_7_B,
                                   java.lang.Object::<created>)
                 = TRUE)<<SC>>)
           & ((  s3_7_B = null
               |   boolean::select(heapAtPre_B<<anonHeapFunction>>,
                                   s3_7_B,
                                   java.lang.Object::<created>)
                 = TRUE)<<SC>>))
        & ((  de.polyas.core3.open.cred.Crypto::<$inv>(heapAtPre_B<<anonHeapFunction>>)
            & ((  (!s1_7_B = null)<<impl>>
                & ((  (!s2_7_B = null)<<impl>>
                    & (!s3_7_B = null)<<impl>>)<<SC>>))<<SC>>))<<SC>>)
        & {_s1_7_B:=s1_7_B
           || _s2_7_B:=s2_7_B
           || _s3_7_B:=s3_7_B}
            \[{
                exc_160_B=null;try {
                  result_142_B=de.polyas.core3.open.crypto.basic.Hashes.hash512(_s1_7_B,_s2_7_B,_s3_7_B)@de.polyas.core3.open.crypto.basic.Hashes;
                }   catch (java.lang.Throwable e) {
                  exc_160_B=e;
                }
              }\] (  resultAtPost_142_B = result_142_B
                   & excAtPost_160_B = exc_160_B
                   & heapAtPost_B = heap))
-> (resultAtPost_142_A = resultAtPost_142_B)<<postCondition>>

}

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "1036")

(branch "dummy ID"
(rule "unfold_computed_formula_1_of_hash512_1536541658" (formula "1") (term "0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
 (builtin "One Step Simplification" (formula "2"))
 (builtin "One Step Simplification" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "8"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "8"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "17"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "18"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "19"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "21"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "21"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "23"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "24"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "25"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "25"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "26"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "27"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "28"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "29"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "30"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "32"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "33"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "34"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "35"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "35"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "36"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "37"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "38"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "39"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "40"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "41"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "41"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "42"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "43"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "44"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "45"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "46"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "46"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "47"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "48"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "49"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "49"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "50"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "51"))
(rule "andLeft" (formula "1"))
(rule "Use_information_flow_contract_for_getInstance_205199169" (formula "63") (ifseqformula "11"))
(rule "doubleImpLeft" (formula "63"))
(branch "pre_A & pre_B getInstance_205199169 (information flow)"
   (rule "andRight" (formula "111"))
   (branch
      (rule "notRight" (formula "111"))
      (rule "close" (formula "128") (ifseqformula "1"))
   )
   (branch
      (rule "notRight" (formula "111"))
      (rule "close" (formula "128") (ifseqformula "1"))
   )
)
(branch "pre getInstance_205199169 (information flow)"
    (builtin "One Step Simplification" (formula "111"))
   (rule "closeTrue" (formula "111"))
)
(branch "post getInstance_205199169 (information flow)"
   (rule "Use_information_flow_contract_for_getBytes_485683870" (formula "71") (ifseqformula "17"))
   (rule "Use_information_flow_contract_for_getBytes_485683870_0" (formula "72") (ifseqformula "17"))
   (rule "Use_information_flow_contract_for_getBytes_485683870_1" (formula "72") (ifseqformula "17"))
   (rule "Use_information_flow_contract_for_update_34813653" (formula "77") (ifseqformula "21"))
   (rule "Use_information_flow_contract_for_update_34813653_1" (formula "78") (ifseqformula "21"))
   (rule "Use_information_flow_contract_for_update_34813653_0" (formula "78") (ifseqformula "21"))
   (rule "Use_information_flow_contract_for_digest_1395628877" (formula "109") (ifseqformula "47"))
   (rule "true_left" (formula "77"))
   (rule "eqSymm" (formula "112"))
   (rule "eqSymm" (formula "142"))
   (rule "eqSymm" (formula "50"))
   (rule "allFieldsEq" (formula "71") (term "1,1"))
   (rule "applyEq" (formula "45") (term "1,0,1,0,0") (ifseqformula "49"))
   (rule "applyEq" (formula "114") (term "0") (ifseqformula "49"))
   (rule "applyEq" (formula "45") (term "1,0,1,0,0,0,0,0,0") (ifseqformula "49"))
   (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "49"))
   (rule "applyEq" (formula "105") (term "1,2,0") (ifseqformula "111"))
   (rule "applyEq" (formula "108") (term "1,0,0") (ifseqformula "63"))
   (rule "applyEq" (formula "106") (term "1,0,1,0,0,0,0") (ifseqformula "111"))
   (rule "applyEq" (formula "115") (term "0") (ifseqformula "111"))
   (rule "applyEq" (formula "61") (term "1,0,0") (ifseqformula "63"))
   (rule "applyEq" (formula "77") (term "0") (ifseqformula "63"))
   (rule "applyEq" (formula "106") (term "1,0,1,0") (ifseqformula "111"))
   (rule "applyEq" (formula "61") (term "1,0,1") (ifseqformula "63"))
   (rule "applyEq" (formula "109") (term "0") (ifseqformula "63"))
   (rule "applyEq" (formula "109") (term "3") (ifseqformula "111"))
   (rule "applyEq" (formula "109") (term "4") (ifseqformula "107"))
   (rule "applyEq" (formula "109") (term "2") (ifseqformula "63"))
   (rule "applyEq" (formula "77") (term "3") (ifseqformula "63"))
   (rule "applyEq" (formula "37") (term "4") (ifseqformula "34"))
   (rule "applyEq" (formula "31") (term "4") (ifseqformula "30"))
   (rule "applyEq" (formula "77") (term "4") (ifseqformula "76"))
   (rule "applyEq" (formula "108") (term "1,1") (ifseqformula "49"))
   (rule "applyEq" (formula "108") (term "0,1") (ifseqformula "111"))
   (rule "replace_known_right" (formula "108") (term "1") (ifseqformula "142"))
    (builtin "One Step Simplification" (formula "108"))
   (rule "notLeft" (formula "108"))
   (rule "applyEq" (formula "41") (term "4") (ifseqformula "40"))
   (rule "applyEq" (formula "73") (term "3,0,0") (ifseqformula "63"))
   (rule "applyEq" (formula "67") (term "3,0,0,0") (ifseqformula "63"))
   (rule "applyEq" (formula "106") (term "1,0,1,0,0,0,0,0") (ifseqformula "110"))
   (rule "applyEq" (formula "101") (term "0") (ifseqformula "63"))
   (rule "applyEq" (formula "106") (term "1,0,1,0,0") (ifseqformula "110"))
   (rule "applyEq" (formula "21") (term "4") (ifseqformula "20"))
   (rule "applyEq" (formula "101") (term "3") (ifseqformula "63"))
   (rule "applyEq" (formula "129") (term "0") (ifseqformula "63"))
   (rule "applyEq" (formula "101") (term "4") (ifseqformula "100"))
   (rule "applyEq" (formula "27") (term "4") (ifseqformula "24"))
   (rule "applyEq" (formula "105") (term "1,0,0,0") (ifseqformula "110"))
   (rule "applyEq" (formula "45") (term "1,0,1,0,0,0") (ifseqformula "49"))
   (rule "applyEq" (formula "72") (term "3,0,1") (ifseqformula "63"))
   (rule "applyEq" (formula "72") (term "4") (ifseqformula "68"))
   (rule "applyEq" (formula "84") (term "4") (ifseqformula "81"))
   (rule "applyEq" (formula "106") (term "1,0,1,0,0,0,0,0,0") (ifseqformula "110"))
   (rule "applyEq" (formula "44") (term "1,0,0,0") (ifseqformula "49"))
   (rule "applyEq" (formula "47") (term "4") (ifseqformula "46"))
   (rule "applyEq" (formula "45") (term "1,0,1") (ifseqformula "49"))
   (rule "applyEq" (formula "106") (term "1,0,1,0,0,0") (ifseqformula "110"))
   (rule "applyEq" (formula "45") (term "1,0,1,0,0,0,0,0") (ifseqformula "49"))
   (rule "applyEq" (formula "106") (term "1,0,1") (ifseqformula "110"))
   (rule "applyEq" (formula "44") (term "1,2,0") (ifseqformula "49"))
   (rule "applyEq" (formula "96") (term "4") (ifseqformula "93"))
   (rule "applyEq" (formula "47") (term "3") (ifseqformula "49"))
   (rule "applyEq" (formula "71") (term "3,0,0,0,0") (ifseqformula "63"))
   (rule "applyEq" (formula "105") (term "1,1,0") (ifseqformula "110"))
   (rule "applyEq" (formula "45") (term "1,0,1,0,0,0,0") (ifseqformula "49"))
   (rule "applyEq" (formula "89") (term "0") (ifseqformula "63"))
   (rule "applyEq" (formula "17") (term "4") (ifseqformula "14"))
   (rule "applyEq" (formula "89") (term "3") (ifseqformula "63"))
   (rule "applyEq" (formula "45") (term "1,0,1,0") (ifseqformula "49"))
   (rule "applyEq" (formula "64") (term "2") (ifseqformula "63"))
   (rule "applyEq" (formula "89") (term "4") (ifseqformula "88"))
   (rule "applyEq" (formula "11") (term "3") (ifseqformula "10"))
   (rule "applyEq" (formula "64") (term "3") (ifseqformula "62"))
   (rule "Class_invariant_axiom_for_java_lang_String" (formula "71") (term "1,0"))
    (builtin "One Step Simplification" (formula "71"))
   (rule "commute_or" (formula "9"))
   (rule "commute_or" (formula "61"))
   (rule "Class_invariant_axiom_for_java_security_MessageDigest" (formula "113") (term "1"))
    (builtin "One Step Simplification" (formula "113"))
   (rule "Class_invariant_axiom_for_java_lang_String" (formula "71") (term "0"))
    (builtin "One Step Simplification" (formula "71"))
   (rule "Class_invariant_axiom_for_java_security_MessageDigest" (formula "113"))
   (rule "closeTrue" (formula "113"))
)
)
}
