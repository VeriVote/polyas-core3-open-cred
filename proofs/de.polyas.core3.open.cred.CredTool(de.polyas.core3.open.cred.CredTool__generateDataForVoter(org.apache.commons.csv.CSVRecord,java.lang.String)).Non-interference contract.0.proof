\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Nov 20 01:57:51 CET 2019
[Labels]UseOriginLabels=false
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , permissions-permissions\\:off , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:off , runtimeExceptions-runtimeExceptions\\:allow , programRules-programRules\\:Java , intRules-intRules\\:javaSemantics , initialisation-initialisation\\:disableStaticInitialisation , assertions-assertions\\:on
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Wed Nov 20 01:57:51 CET 2019
contract=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:generateDataForVoter(org.apache.commons.csv.CSVRecord,java.lang.String)].Non-interference contract.0
name=de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool\\:\\:generateDataForVoter(org.apache.commons.csv.CSVRecord,java.lang.String)].Non-interference contract.0
class=de.uka.ilkd.key.informationflow.po.InfFlowContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "57d504cc0f"))

(autoModeTime "698220")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1") (userinteraction))
(rule "andLeft" (formula "1") (userinteraction))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "11"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "13"))
(rule "notLeft" (formula "13"))
(rule "exLeft" (formula "11") (inst "sk=i_0"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "11"))
(rule "eqSymm" (formula "15") (term "1,0,0,1"))
(rule "eqSymm" (formula "15") (term "0,0,0,0,1"))
(rule "eqSymm" (formula "15") (term "1,0,0,0,1"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "17"))
 (builtin "One Step Simplification" (formula "5"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "18"))
 (builtin "One Step Simplification" (formula "4"))
(rule "castedGetAny" (formula "14") (term "0,0,0,0,1,0,1,1,0"))
(rule "castedGetAny" (formula "14") (term "0,0,1,1,0,0,1,1,0"))
(rule "castedGetAny" (formula "14") (term "0,0,1,0"))
(rule "castedGetAny" (formula "13") (term "0"))
(rule "castedGetAny" (formula "14") (term "0,1,0,1,1,0"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,1,0"))
(rule "inEqSimp_commuteLeq" (formula "11"))
(rule "assignment" (formula "15") (term "1"))
 (builtin "One Step Simplification" (formula "15"))
(rule "boxToDiamond" (formula "15") (term "1"))
 (builtin "One Step Simplification" (formula "15"))
(rule "notLeft" (formula "15"))
(rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "9") (inst "i=i") (inst "i_0=i_0"))
(rule "expand_inInt" (formula "9") (term "1,0,0,1,0"))
(rule "expand_inInt" (formula "9") (term "1,0,0,1"))
(rule "replace_int_MAX" (formula "9") (term "1,0,1,0,0,1,0"))
(rule "replace_int_MIN" (formula "9") (term "0,1,1,0,0,1,0"))
(rule "replace_int_MIN" (formula "9") (term "0,1,1,0,0,1"))
(rule "replace_int_MAX" (formula "9") (term "1,0,1,0,0,1"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "eqSymm" (formula "9"))
(rule "castedGetAny" (formula "11") (term "0,0,1,0"))
(rule "castedGetAny" (formula "10") (term "0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "1,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "1,1,0,0"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "12") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
 (builtin "One Step Simplification" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "14"))
(rule "notLeft" (formula "13"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "13"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "14"))
(rule "notLeft" (formula "13"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "13"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "13"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "14"))
(rule "notLeft" (formula "13"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "14"))
(rule "notLeft" (formula "13"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "13"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "13"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "13"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "14"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "14"))
(rule "notLeft" (formula "13"))
(rule "notLeft" (formula "12"))
(rule "exLeft" (formula "17") (inst "sk=i_1"))
(rule "andLeft" (formula "17"))
(rule "andLeft" (formula "17"))
(rule "exLeft" (formula "14") (inst "sk=i_2_0"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "14"))
(rule "castedGetAny" (formula "18") (term "0,0,1,0"))
(rule "castedGetAny" (formula "17") (term "0,0,1,0"))
(rule "castedGetAny" (formula "13") (term "0,0,1,0"))
(rule "castedGetAny" (formula "21") (term "0"))
(rule "castedGetAny" (formula "16") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "19"))
(rule "inEqSimp_commuteLeq" (formula "14"))
(rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "12"))
(rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "8"))
(rule "true_left" (formula "8"))
(rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "commute_and" (formula "25") (term "0,0"))
(rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "7"))
(rule "true_left" (formula "7"))
(rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "7"))
(rule "true_left" (formula "7"))
(rule "commute_and_2" (formula "23") (term "0,1,1,0"))
(rule "commute_and" (formula "9") (term "0,0,0"))
(rule "commute_and" (formula "9") (term "1,0,0"))
(rule "commute_and" (formula "8") (term "0,0,0"))
(rule "commute_and" (formula "8") (term "1,0,0"))
(rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_generateDataForVoter,savedHeapBefore_generateDataForVoter"))
 (builtin "One Step Simplification" (formula "55"))
(rule "commute_and" (formula "16") (term "0,0"))
(rule "commute_and" (formula "15") (term "0,0"))
(rule "commute_and" (formula "11") (term "0,0"))
(rule "shift_paren_and" (formula "9") (term "0,0"))
(rule "commute_and_2" (formula "9") (term "0,0,0"))
(rule "shift_paren_and" (formula "8") (term "0,0"))
(rule "commute_and_2" (formula "8") (term "0,0,0"))
(rule "commute_and" (formula "23") (term "0,0,1,1,0"))
(rule "commute_and_2" (formula "23") (term "0,1,1,0"))
(rule "charLiteral_to_int" (formula "23") (term "1,0,0,0,1,1,0"))
(rule "lenNonNegative" (formula "21") (term "1"))
(rule "inEqSimp_commuteLeq" (formula "21"))
(rule "seqGetAlphaCast" (formula "23") (term "0"))
(rule "castedGetAny" (formula "23") (term "0"))
 (builtin "One Step Simplification" (formula "23"))
(rule "true_left" (formula "23"))
 (builtin "Use Operation Contract" (formula "56") (newnames "heapBefore_printStatus,exc_134,heapAfter_printStatus,anon_heap_printStatus") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::printStatus()].JML normal_behavior operation contract.0"))
(branch "Post (printStatus)"
    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "1")))
    (builtin "One Step Simplification" (formula "27"))
    (builtin "One Step Simplification" (formula "28"))
    (builtin "One Step Simplification" (formula "60"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "28"))
   (rule "andLeft" (formula "29"))
   (rule "notLeft" (formula "29"))
   (rule "variableDeclarationFinalAssign" (formula "62") (term "1"))
   (rule "variableDeclarationFinal" (formula "62") (term "1") (newnames "voterId_9"))
   (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_print_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "31") (term "0"))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "30") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
    (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "35")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")) (ifInst ""  (formula "42")) (ifInst ""  (formula "43")) (ifInst ""  (formula "44")) (ifInst ""  (formula "45")) (ifInst ""  (formula "46")) (ifInst ""  (formula "47")) (ifInst ""  (formula "48")) (ifInst ""  (formula "49")) (ifInst ""  (formula "50")) (ifInst ""  (formula "51")) (ifInst ""  (formula "52")) (ifInst ""  (formula "53")) (ifInst ""  (formula "54")) (ifInst ""  (formula "55")) (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "30"))
   (rule "notLeft" (formula "30"))
   (rule "exLeft" (formula "34") (inst "sk=i_2"))
   (rule "andLeft" (formula "34"))
   (rule "andLeft" (formula "34"))
   (rule "exLeft" (formula "31") (inst "sk=i_2_1"))
   (rule "andLeft" (formula "31"))
   (rule "andLeft" (formula "31"))
   (rule "castedGetAny" (formula "35") (term "0,0,1,0"))
   (rule "castedGetAny" (formula "34") (term "0,0,1,0"))
   (rule "castedGetAny" (formula "30") (term "0,0,1,0"))
   (rule "castedGetAny" (formula "38") (term "0"))
   (rule "castedGetAny" (formula "33") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "36"))
   (rule "inEqSimp_commuteLeq" (formula "31"))
   (rule "commute_and" (formula "35") (term "0,0"))
   (rule "commute_and" (formula "34") (term "0,0"))
   (rule "commute_and" (formula "30") (term "0,0"))
   (rule "lenNonNegative" (formula "7") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "7"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "69") (term "1"))
   (rule "variableDeclarationAssign" (formula "69") (term "1"))
   (rule "variableDeclaration" (formula "69") (term "1") (newnames "var"))
   (rule "assignment" (formula "69") (term "1"))
    (builtin "One Step Simplification" (formula "69"))
   (rule "variableDeclarationAssign" (formula "69") (term "1"))
   (rule "variableDeclaration" (formula "69") (term "1") (newnames "var_1"))
   (rule "assignment_read_attribute_this" (formula "69") (term "1"))
    (builtin "One Step Simplification" (formula "69"))
   (rule "pullOutSelect" (formula "69") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")) (ifInst ""  (formula "3")))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_4" (formula "69") (term "0,1,0"))
    (builtin "Use Operation Contract" (formula "69") (newnames "heapBefore_get,result_104,exc_135") (contract "org.apache.commons.csv.CSVRecord[org.apache.commons.csv.CSVRecord::get(java.lang.String)].JML normal_behavior operation contract.0"))
   (branch "Post (get)"
       (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "56")) (ifInst ""  (formula "56")))
       (builtin "One Step Simplification" (formula "73"))
       (builtin "One Step Simplification" (formula "39"))
       (builtin "One Step Simplification" (formula "38"))
      (rule "insert_constant_string_value" (formula "50") (term "0") (ifseqformula "37"))
       (builtin "One Step Simplification" (formula "50"))
      (rule "insert_constant_string_value" (formula "49") (term "0") (ifseqformula "37"))
       (builtin "One Step Simplification" (formula "49"))
      (rule "insert_constant_string_value" (formula "68") (term "0") (ifseqformula "37"))
       (builtin "One Step Simplification" (formula "68"))
      (rule "insert_constant_string_value" (formula "51") (term "0") (ifseqformula "37"))
       (builtin "One Step Simplification" (formula "51"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "1,1") (ifseqformula "28"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "1,1,0") (ifseqformula "28"))
      (rule "castDel" (formula "50") (term "0,0"))
      (rule "castDel" (formula "49") (term "0,0"))
      (rule "castDel" (formula "68") (term "0,0"))
      (rule "castDel" (formula "51") (term "0,0"))
      (rule "andLeft" (formula "40"))
      (rule "andLeft" (formula "38"))
      (rule "andLeft" (formula "42"))
      (rule "andLeft" (formula "41"))
      (rule "andLeft" (formula "38"))
      (rule "andLeft" (formula "40"))
      (rule "andLeft" (formula "40"))
      (rule "andLeft" (formula "41"))
      (rule "notLeft" (formula "41"))
      (rule "exLeft" (formula "42") (inst "sk=i_3"))
      (rule "andLeft" (formula "42"))
      (rule "andLeft" (formula "42"))
      (rule "exLeft" (formula "40") (inst "sk=i_4"))
      (rule "andLeft" (formula "40"))
      (rule "andLeft" (formula "41"))
      (rule "andLeft" (formula "40"))
      (rule "replace_known_right" (formula "39") (term "0") (ifseqformula "51"))
       (builtin "One Step Simplification" (formula "39"))
      (rule "castedGetAny" (formula "47") (term "0"))
      (rule "castedGetAny" (formula "42") (term "0"))
      (rule "castedGetAny" (formula "43") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "45"))
      (rule "inEqSimp_commuteLeq" (formula "40"))
      (rule "assignment" (formula "84") (term "1"))
       (builtin "One Step Simplification" (formula "84"))
      (rule "blockEmpty" (formula "84") (term "1"))
      (rule "pullOutSelect" (formula "46") (term "0,1") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_0"))
      (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "28"))
       (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "87")) (ifInst ""  (formula "4")))
      (rule "replaceKnownSelect_taclet00_6" (formula "41") (term "0,1"))
      (rule "replaceKnownSelect_taclet00_6" (formula "42") (term "0,0"))
      (rule "replaceKnownSelect_taclet00_6" (formula "48") (term "0,0"))
      (rule "elementOfSingleton" (formula "46") (term "0,0"))
       (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "87")))
      (rule "hideAuxiliaryEq" (formula "46"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "41") (term "0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "47") (term "0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "42") (term "0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "46") (term "0,1"))
      (rule "pullOutSelect" (formula "43") (term "0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_0"))
      (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "28"))
       (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "87")) (ifInst ""  (formula "4")))
      (rule "elementOfSingleton" (formula "43") (term "0,0"))
       (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "87")))
      (rule "hideAuxiliaryEq" (formula "43"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "43") (term "0,0"))
      (rule "commute_or" (formula "50"))
      (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "48") (inst "i=i") (inst "i_0=i_0"))
      (rule "replaceKnownSelect_taclet00_8" (formula "48") (term "0,1,0,0"))
      (rule "replaceKnownSelect_taclet00_6" (formula "48") (term "0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "48") (term "0,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "48") (term "0,0,0,0"))
      (rule "replaceKnownSelect_taclet00_8" (formula "48") (term "0,0,0,0,1,0,1"))
      (rule "replaceKnownSelect_taclet00_8" (formula "48") (term "0,1,1,0,0,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "48") (term "0,0,0,0,1,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "48") (term "0,1,1,0,0,0,1"))
      (rule "replaceKnownSelect_taclet00_6" (formula "48") (term "0,1,1,0,0,0,1,0"))
      (rule "replaceKnownSelect_taclet00_6" (formula "48") (term "0,0,0,0,1,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "48") (term "0,1,1,0,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "48") (term "0,0,0,0,1,0,1,0"))
      (rule "expand_inInt" (formula "48") (term "1,0,0,1"))
      (rule "expand_inInt" (formula "48") (term "1,0,0,1,0"))
      (rule "replace_int_MIN" (formula "48") (term "0,1,1,0,0,1"))
      (rule "replace_int_MAX" (formula "48") (term "1,0,1,0,0,1"))
      (rule "replace_int_MAX" (formula "48") (term "1,0,1,0,0,1,0"))
      (rule "replace_int_MIN" (formula "48") (term "0,1,1,0,0,1,0"))
      (rule "andLeft" (formula "48"))
      (rule "andLeft" (formula "48"))
      (rule "eqSymm" (formula "48"))
      (rule "castedGetAny" (formula "49") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "48") (term "0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "49") (term "1,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "48") (term "1,1,0,0"))
      (rule "commute_or" (formula "39"))
      (rule "commute_and" (formula "49") (term "0,0,0"))
      (rule "commute_and" (formula "49") (term "1,0,0"))
      (rule "commute_and" (formula "48") (term "0,0,0"))
      (rule "commute_and" (formula "48") (term "1,0,0"))
      (rule "shift_paren_and" (formula "49") (term "0,0"))
      (rule "commute_and_2" (formula "49") (term "0,0,0"))
      (rule "shift_paren_and" (formula "48") (term "0,0"))
      (rule "commute_and_2" (formula "48") (term "0,0,0"))
      (rule "lenNonNegative" (formula "19") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "19"))
      (rule "lenNonNegative" (formula "14") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "14"))
      (rule "seqGetAlphaCast" (formula "22") (term "0"))
      (rule "castedGetAny" (formula "22") (term "0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "true_left" (formula "22"))
      (rule "seqGetAlphaCast" (formula "16") (term "0"))
      (rule "castedGetAny" (formula "16") (term "0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "lenNonNegative" (formula "18") (term "1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "18"))
       (builtin "Use Operation Contract" (formula "86") (newnames "heapBefore_exitIfIdInvalid,exc_136,heapAfter_exitIfIdInvalid,anon_heap_exitIfIdInvalid") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::exitIfIdInvalid(java.lang.String)].JML normal_behavior operation contract.0"))
      (branch "Post (exitIfIdInvalid)"
          (builtin "One Step Simplification" (formula "54"))
          (builtin "One Step Simplification" (formula "90"))
          (builtin "One Step Simplification" (formula "55"))
          (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "57")) (ifInst ""  (formula "51")) (ifInst ""  (formula "57")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "1") (ifseqformula "31"))
         (rule "andLeft" (formula "54"))
         (rule "andLeft" (formula "57"))
         (rule "exLeft" (formula "57") (inst "sk=j_0"))
         (rule "andLeft" (formula "57"))
         (rule "andLeft" (formula "57"))
         (rule "castedGetAny" (formula "59") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "57"))
         (rule "commute_or" (formula "60"))
         (rule "returnUnfold" (formula "93") (term "1") (inst "#v0=g"))
         (rule "variableDeclarationAssign" (formula "93") (term "1"))
         (rule "variableDeclaration" (formula "93") (term "1") (newnames "g"))
         (rule "charLiteral_to_int" (formula "59") (term "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "1,0,1,0") (ifseqformula "1"))
         (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "77"))
          (builtin "One Step Simplification" (formula "28"))
         (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "28"))
          (builtin "One Step Simplification" (formula "53"))
         (rule "true_left" (formula "53"))
         (rule "seqGetAlphaCast" (formula "40") (term "0"))
         (rule "castedGetAny" (formula "40") (term "0"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "true_left" (formula "40"))
         (rule "seqGetAlphaCast" (formula "37") (term "0"))
         (rule "castedGetAny" (formula "37") (term "0"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "true_left" (formula "37"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "1"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "91"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "88") (term "0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "89"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "1,0") (ifseqformula "3"))
         (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "95"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "92") (term "0") (ifseqformula "3"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "93"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "0") (ifseqformula "4"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "5"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "91"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "92") (term "0") (ifseqformula "6"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "93"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "1") (ifseqformula "7"))
         (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "80"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0") (ifseqformula "7"))
         (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "70"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "applyEqRigid" (formula "19") (term "1,0") (ifseqformula "20"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "92") (term "0") (ifseqformula "7"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "93"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "76") (term "0") (ifseqformula "8"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "77"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "78") (term "0") (ifseqformula "9"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "79"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "84") (term "0") (ifseqformula "10"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "85"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "0") (ifseqformula "11"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "0") (ifseqformula "12"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "88") (term "0") (ifseqformula "13"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "89"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "14"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "91"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "96") (term "0") (ifseqformula "15"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "97"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "0") (ifseqformula "16"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "0") (ifseqformula "17"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "96"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "100") (term "0") (ifseqformula "18"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "101"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "99") (term "0") (ifseqformula "19"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "100"))
          (builtin "One Step Simplification" (formula "1"))
          (builtin "Use Operation Contract" (formula "114") (newnames "heapBefore_generateDataForVoter_0,result_105,exc_137,heapAfter_generateDataForVoter,anon_heap_generateDataForVoter") (contract "de.polyas.core3.open.cred.CredentialGenerator[de.polyas.core3.open.cred.CredentialGenerator::generateDataForVoter(java.lang.String,java.lang.String)].JML normal_behavior operation contract.0"))
         (branch "Post (generateDataForVoter)"
             (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "85")) (ifInst ""  (formula "119")) (ifInst ""  (formula "85")) (ifInst ""  (formula "119")))
             (builtin "One Step Simplification" (formula "118"))
             (builtin "One Step Simplification" (formula "83"))
             (builtin "One Step Simplification" (formula "82"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "1,1") (ifseqformula "75"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,1,1") (ifseqformula "53"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "1,0,1") (ifseqformula "75"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,1,0,1") (ifseqformula "53"))
            (rule "andLeft" (formula "82"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "1,1,0") (ifseqformula "82"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "0,1,1,0") (ifseqformula "75"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "0,0,1,1,0") (ifseqformula "53"))
            (rule "andLeft" (formula "85"))
            (rule "andLeft" (formula "83"))
            (rule "andLeft" (formula "86"))
            (rule "andLeft" (formula "88"))
            (rule "andLeft" (formula "84"))
            (rule "andLeft" (formula "83"))
            (rule "andLeft" (formula "88"))
            (rule "andLeft" (formula "90"))
            (rule "andLeft" (formula "84"))
            (rule "andLeft" (formula "85"))
            (rule "notLeft" (formula "86"))
            (rule "replace_known_left" (formula "93") (term "0,0") (ifseqformula "24"))
             (builtin "One Step Simplification" (formula "93"))
            (rule "true_left" (formula "93"))
            (rule "replace_known_right" (formula "83") (term "0") (ifseqformula "93"))
             (builtin "One Step Simplification" (formula "83"))
            (rule "assignment" (formula "127") (term "1"))
             (builtin "One Step Simplification" (formula "127"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "88"))
            (rule "insert_constant_string_value" (formula "88") (term "0,0,0,0") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "88"))
            (rule "castDel" (formula "88") (term "0,0,0,0,0"))
            (rule "andLeft" (formula "88"))
            (rule "andLeft" (formula "88"))
            (rule "notLeft" (formula "90"))
            (rule "notLeft" (formula "88"))
            (rule "notLeft" (formula "88"))
            (rule "pullOutSelect" (formula "93") (term "0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SHA_256_DIGEST_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_14" (formula "93") (term "0"))
            (rule "pullOutSelect" (formula "92") (term "0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SECURE_RANDOM_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_17" (formula "92") (term "0"))
            (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "88"))
            (rule "andLeft" (formula "88"))
            (rule "notLeft" (formula "88"))
            (rule "pullOutSelect" (formula "88") (term "0") (inst "selectSK=java_math_BigInteger_value_0"))
            (rule "simplifySelectOfAnonEQ" (formula "88") (ifseqformula "75"))
             (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "93")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "88") (term "0,0,0") (ifseqformula "53"))
            (rule "ifthenelse_negated" (formula "88") (term "0"))
            (rule "applyEqRigid" (formula "88") (term "1") (ifseqformula "89"))
            (rule "ifEqualsInteger" (formula "88"))
            (rule "pullOutSelect" (formula "93") (term "0") (inst "selectSK=java_math_BigInteger_ZERO_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replaceKnownSelect_taclet0000_19" (formula "89") (term "1,0,1,0"))
            (rule "replaceKnownSelect_taclet0000_19" (formula "89") (term "1,0,1,1"))
            (rule "replaceKnownSelect_taclet0000_19" (formula "89") (term "1,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_19" (formula "89") (term "1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet0000_19" (formula "89") (term "1,0,1,0,0,1"))
            (rule "replaceKnownSelect_taclet0000_19" (formula "89") (term "1,0,0,0,0,1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_21" (formula "93") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_21" (formula "88") (term "1,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_21" (formula "88") (term "1,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_21" (formula "88") (term "1,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_21" (formula "88") (term "1,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_21" (formula "88") (term "1,0,1,0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_21" (formula "88") (term "1,0,0,0,0,1"))
            (rule "replace_known_left" (formula "88") (term "0,0,0,1") (ifseqformula "25"))
             (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "25")))
            (rule "pullOutSelect" (formula "88") (term "0") (inst "selectSK=java_math_BigInteger_value_1"))
            (rule "simplifySelectOfAnonEQ" (formula "88") (ifseqformula "53"))
             (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "127")) (ifInst ""  (formula "25")))
            (rule "elementOfSingleton" (formula "88") (term "0,0"))
             (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "127")))
            (rule "hideAuxiliaryEq" (formula "88"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_23" (formula "88") (term "0"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "89"))
            (rule "andLeft" (formula "89"))
            (rule "andLeft" (formula "89"))
            (rule "andLeft" (formula "89"))
            (rule "notLeft" (formula "90"))
            (rule "notLeft" (formula "89"))
            (rule "pullOutSelect" (formula "90") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_RANDOM_0"))
            (rule "simplifySelectOfAnonEQ" (formula "90") (ifseqformula "75"))
             (builtin "One Step Simplification" (formula "90"))
            (rule "replaceKnownSelect_taclet0000_24" (formula "95") (term "0"))
            (rule "simplifySelectOfAnonEQ" (formula "90") (ifseqformula "53"))
             (builtin "One Step Simplification" (formula "90"))
            (rule "elementOfSingleton" (formula "90") (term "0,0"))
             (builtin "One Step Simplification" (formula "90"))
            (rule "hideAuxiliaryEq" (formula "90"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_26" (formula "94") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_26" (formula "90") (term "1"))
            (rule "pullOutSelect" (formula "89") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GROUP_0"))
            (rule "simplifySelectOfAnonEQ" (formula "89") (ifseqformula "75"))
             (builtin "One Step Simplification" (formula "89"))
            (rule "replaceKnownSelect_taclet0000_27" (formula "94") (term "0"))
            (rule "simplifySelectOfAnonEQ" (formula "89") (ifseqformula "53"))
             (builtin "One Step Simplification" (formula "89"))
            (rule "elementOfSingleton" (formula "89") (term "0,0"))
             (builtin "One Step Simplification" (formula "89"))
            (rule "hideAuxiliaryEq" (formula "89"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_29" (formula "93") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_29" (formula "89") (term "1"))
            (rule "commute_or_2" (formula "92"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "84"))
            (rule "andLeft" (formula "84"))
            (rule "andLeft" (formula "84"))
            (rule "notLeft" (formula "86"))
            (rule "notLeft" (formula "85"))
            (rule "notLeft" (formula "84"))
            (rule "pullOutSelect" (formula "94") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "83"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "96")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "76"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "54"))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "94") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "84"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "77"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "55"))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "94") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "85"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "98")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "78"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "56"))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_1"))
            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "79"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "99")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "57"))
            (rule "ifthenelse_negated" (formula "3") (term "0"))
            (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_1"))
            (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "80"))
             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "100")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "58"))
            (rule "ifthenelse_negated" (formula "2") (term "0"))
            (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "81"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "101")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "59"))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_2"))
            (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "60"))
             (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "102")))
            (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "102")))
            (rule "ifthenelse_negated" (formula "5") (term "0"))
            (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_2"))
            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "61"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "103")))
            (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "103")))
            (rule "ifthenelse_negated" (formula "3") (term "0"))
            (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "104")))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "104")))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "93"))
            (rule "andLeft" (formula "93"))
            (rule "andLeft" (formula "93"))
            (rule "andLeft" (formula "93"))
            (rule "notLeft" (formula "94"))
            (rule "notLeft" (formula "93"))
            (rule "pullOutSelect" (formula "94") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_RANDOM_1"))
            (rule "simplifySelectOfAnonEQ" (formula "94") (ifseqformula "91"))
             (builtin "One Step Simplification" (formula "94"))
            (rule "replaceKnownSelect_taclet0000_39" (formula "104") (term "0"))
            (rule "replaceKnownSelect_taclet0000_24" (formula "94") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_26" (formula "94") (term "0"))
            (rule "hideAuxiliaryEq" (formula "94"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_40" (formula "94") (term "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_40" (formula "103") (term "0"))
            (rule "pullOutSelect" (formula "93") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GROUP_1"))
            (rule "simplifySelectOfAnonEQ" (formula "93") (ifseqformula "91"))
             (builtin "One Step Simplification" (formula "93"))
            (rule "replaceKnownSelect_taclet0000_41" (formula "103") (term "0"))
            (rule "replaceKnownSelect_taclet0000_27" (formula "93") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_29" (formula "93") (term "0"))
            (rule "hideAuxiliaryEq" (formula "93"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_42" (formula "93") (term "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_42" (formula "102") (term "0"))
            (rule "commute_or_2" (formula "92") (term "0"))
            (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "99"))
            (rule "true_left" (formula "99"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "98"))
            (rule "andLeft" (formula "98"))
            (rule "andLeft" (formula "98"))
            (rule "andLeft" (formula "100"))
            (rule "notLeft" (formula "99"))
            (rule "notLeft" (formula "98"))
            (rule "pullOutSelect" (formula "99") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_0"))
            (rule "simplifySelectOfAnonEQ" (formula "99") (ifseqformula "84"))
             (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "140")))
            (rule "replaceKnownSelect_taclet0000_43" (formula "104") (term "0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0") (ifseqformula "62"))
            (rule "replace_known_left" (formula "99") (term "0,0,0,0") (ifseqformula "25"))
             (builtin "One Step Simplification" (formula "99"))
            (rule "simplifySelectOfAnonEQ" (formula "99") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "140")) (ifInst ""  (formula "25")))
            (rule "elementOfSingleton" (formula "99") (term "0,0"))
             (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "140")))
            (rule "hideAuxiliaryEq" (formula "99"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_45" (formula "99") (term "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_45" (formula "103") (term "0"))
            (rule "pullOutSelect" (formula "98") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_0"))
            (rule "simplifySelectOfAnonEQ" (formula "98") (ifseqformula "84"))
             (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "139")))
            (rule "replaceKnownSelect_taclet0000_46" (formula "103") (term "0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "0,0,0") (ifseqformula "62"))
            (rule "replace_known_left" (formula "98") (term "0,0,0,0") (ifseqformula "25"))
             (builtin "One Step Simplification" (formula "98"))
            (rule "simplifySelectOfAnonEQ" (formula "98") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "139")) (ifInst ""  (formula "25")))
            (rule "elementOfSingleton" (formula "98") (term "0,0"))
             (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "139")))
            (rule "hideAuxiliaryEq" (formula "98"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_48" (formula "98") (term "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_48" (formula "102") (term "0"))
            (rule "commute_or" (formula "101") (term "0"))
            (rule "commute_or_2" (formula "9") (term "0,0"))
            (rule "methodCallReturn" (formula "139") (term "1"))
            (rule "assignment" (formula "139") (term "1"))
             (builtin "One Step Simplification" (formula "139"))
            (rule "commute_or_2" (formula "6") (term "0,0"))
            (rule "seqGetAlphaCast" (formula "81") (term "0"))
            (rule "castedGetAny" (formula "81") (term "0"))
             (builtin "One Step Simplification" (formula "81"))
            (rule "true_left" (formula "81"))
            (rule "seqGetAlphaCast" (formula "76") (term "0"))
            (rule "castedGetAny" (formula "76") (term "0"))
             (builtin "One Step Simplification" (formula "76"))
            (rule "true_left" (formula "76"))
            (rule "commute_or_2" (formula "3") (term "0,0"))
            (rule "commute_or" (formula "8") (term "0,0"))
            (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "94"))
            (rule "true_left" (formula "94"))
            (rule "seqGetAlphaCast" (formula "77") (term "0"))
            (rule "castedGetAny" (formula "77") (term "0"))
             (builtin "One Step Simplification" (formula "77"))
            (rule "true_left" (formula "77"))
            (rule "commute_or" (formula "5") (term "0,0"))
            (rule "commute_or" (formula "2") (term "0,0"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "93"))
            (rule "andLeft" (formula "93"))
            (rule "andLeft" (formula "93"))
            (rule "andLeft" (formula "95"))
            (rule "notLeft" (formula "94"))
            (rule "notLeft" (formula "93"))
            (rule "pullOutSelect" (formula "93") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_1"))
            (rule "simplifySelectOfAnonEQ" (formula "93") (ifseqformula "91"))
             (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "140")))
            (rule "replaceKnownSelect_taclet0000_49" (formula "103") (term "0"))
            (rule "replaceKnownSelect_taclet0000_46" (formula "93") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_48" (formula "93") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "0,0,0") (ifseqformula "84"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "93") (term "0,0,0,0") (ifseqformula "62"))
            (rule "replace_known_left" (formula "93") (term "0,0,0,0,0") (ifseqformula "25"))
             (builtin "One Step Simplification" (formula "93"))
            (rule "hideAuxiliaryEq" (formula "93"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_50" (formula "93") (term "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_50" (formula "102") (term "0"))
            (rule "pullOutSelect" (formula "94") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_1"))
            (rule "simplifySelectOfAnonEQ" (formula "94") (ifseqformula "91"))
             (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "139")))
            (rule "replaceKnownSelect_taclet0000_51" (formula "103") (term "0"))
            (rule "replaceKnownSelect_taclet0000_43" (formula "94") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_45" (formula "94") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "94") (term "0,0,0") (ifseqformula "84"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "94") (term "0,0,0,0") (ifseqformula "62"))
            (rule "replace_known_left" (formula "94") (term "0,0,0,0,0") (ifseqformula "25"))
             (builtin "One Step Simplification" (formula "94"))
            (rule "hideAuxiliaryEq" (formula "94"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_52" (formula "94") (term "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_52" (formula "102") (term "0"))
            (rule "commute_or_2" (formula "92"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "99"))
            (rule "andLeft" (formula "99"))
            (rule "notLeft" (formula "99"))
            (rule "pullOutSelect" (formula "99") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_0"))
            (rule "simplifySelectOfAnonEQ" (formula "99") (ifseqformula "84"))
             (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "112")))
            (rule "replaceKnownSelect_taclet0000_53" (formula "103") (term "0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0") (ifseqformula "62"))
            (rule "ifthenelse_negated" (formula "99") (term "0"))
            (rule "pullOutSelect" (formula "99") (term "1,0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_1"))
            (rule "simplifySelectOfAnonEQ" (formula "99") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "113")))
            (rule "elementOfSingleton" (formula "99") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "113")))
            (rule "ifthenelse_negated" (formula "99") (term "0"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "115") (term "0") (ifseqformula "29"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "116"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "99"))
            (rule "true_left" (formula "99"))
            (rule "commute_or_2" (formula "103"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "113") (term "0") (ifseqformula "30"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "114"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replace_known_left" (formula "100") (term "0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "100"))
            (rule "hideAuxiliaryEq" (formula "100"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_55" (formula "100") (term "1,0"))
            (rule "replace_known_left" (formula "100") (term "0,0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "100"))
            (rule "hideAuxiliaryEq" (formula "100"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_56" (formula "100") (term "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_56" (formula "103") (term "0"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "110") (term "0") (ifseqformula "31"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "111"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "113") (term "0") (ifseqformula "32"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "114"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "lenNonNegative" (formula "92") (term "1"))
            (rule "inEqSimp_commuteLeq" (formula "92"))
            (rule "seqGetAlphaCast" (formula "94") (term "0"))
            (rule "castedGetAny" (formula "94") (term "0"))
             (builtin "One Step Simplification" (formula "94"))
            (rule "true_left" (formula "94"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "112") (term "0") (ifseqformula "65"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "113"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "99"))
            (rule "true_left" (formula "99"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "99"))
            (rule "andLeft" (formula "99"))
            (rule "notLeft" (formula "99"))
            (rule "pullOutSelect" (formula "99") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_2"))
            (rule "simplifySelectOfAnonEQ" (formula "99") (ifseqformula "97"))
             (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "116")))
            (rule "replaceKnownSelect_taclet0000_57" (formula "107") (term "0"))
            (rule "replaceKnownSelect_taclet0000_53" (formula "99") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_56" (formula "99") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0") (ifseqformula "89"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,0") (ifseqformula "67"))
            (rule "replace_known_left" (formula "99") (term "0,0,0,0,0") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "99"))
            (rule "hideAuxiliaryEq" (formula "99"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_58" (formula "99") (term "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_58" (formula "106") (term "0"))
            (rule "commute_or" (formula "14") (term "0,0,0"))
            (rule "commute_or" (formula "11") (term "0,0,0"))
            (rule "commute_or" (formula "8") (term "0,0,0"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "103"))
            (rule "true_left" (formula "103"))
            (rule "commute_or" (formula "98") (term "0,0"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "99"))
            (rule "true_left" (formula "99"))
            (rule "commute_or_2" (formula "98") (term "0"))
            (rule "commute_or_2" (formula "98"))
            (rule "methodCallEmpty" (formula "141") (term "1"))
            (rule "commute_or_2" (formula "14") (term "0,0"))
            (rule "commute_or_2" (formula "11") (term "0,0"))
            (rule "commute_or_2" (formula "8") (term "0,0"))
            (rule "tryEmpty" (formula "141") (term "1"))
            (rule "emptyModality" (formula "141") (term "1"))
             (builtin "One Step Simplification" (formula "141"))
            (rule "notRight" (formula "141"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "eqSymm" (formula "3"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "2,0") (ifseqformula "70"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "1,0") (ifseqformula "39"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "2,0") (ifseqformula "72"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1,0") (ifseqformula "41"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "2,0") (ifseqformula "96"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "2,0") (ifseqformula "97"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "2,0") (ifseqformula "98"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "2,0") (ifseqformula "107"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "2,0") (ifseqformula "108"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "2,0") (ifseqformula "109"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1,0") (ifseqformula "48"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "2,0") (ifseqformula "81"))
            (rule "Use_information_flow_contract_for_printStatus_1406103914" (formula "85") (ifseqformula "85"))
             (builtin "One Step Simplification" (formula "85"))
            (rule "true_left" (formula "85"))
            (rule "Use_information_flow_contract_for_get_1066055272" (formula "99") (inst "i#33=i#33") (ifseqformula "99"))
             (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "141")) (ifInst ""  (formula "141")))
            (rule "true_left" (formula "99"))
            (rule "Use_information_flow_contract_for_exitIfIdInvalid_1120899757" (formula "107") (inst "j#45=j#45") (ifseqformula "107"))
             (builtin "One Step Simplification" (formula "107") (ifInst ""  (formula "125")) (ifInst ""  (formula "125")))
            (rule "true_left" (formula "107"))
            (rule "Use_information_flow_contract_for_generateDataForVoter_2065185875" (formula "116") (ifseqformula "116"))
             (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "125")) (ifInst ""  (formula "158")) (ifInst ""  (formula "125")) (ifInst ""  (formula "158")))
            (rule "true_left" (formula "116"))
            (rule "andLeft" (formula "81"))
            (rule "andLeft" (formula "81"))
            (rule "andLeft" (formula "82"))
            (rule "andLeft" (formula "81"))
            (rule "andLeft" (formula "84"))
            (rule "andLeft" (formula "81"))
            (rule "andLeft" (formula "83"))
            (rule "andLeft" (formula "87"))
            (rule "andLeft" (formula "81"))
            (rule "andLeft" (formula "89"))
            (rule "andLeft" (formula "81"))
            (rule "andLeft" (formula "91"))
            (rule "notLeft" (formula "82"))
            (rule "andLeft" (formula "91"))
            (rule "andLeft" (formula "92"))
            (rule "andLeft" (formula "93"))
            (rule "notLeft" (formula "93"))
            (rule "notLeft" (formula "93"))
            (rule "exLeft" (formula "91") (inst "sk=i_5"))
            (rule "andLeft" (formula "91"))
            (rule "andLeft" (formula "91"))
            (rule "eqSymm" (formula "95") (term "1,0,0,0,1"))
            (rule "eqSymm" (formula "95") (term "1,0,0,1"))
            (rule "eqSymm" (formula "95") (term "0,0,0,0,1"))
            (rule "replace_known_right" (formula "84") (term "0") (ifseqformula "135"))
             (builtin "One Step Simplification" (formula "84"))
            (rule "replace_known_right" (formula "85") (term "0") (ifseqformula "134"))
             (builtin "One Step Simplification" (formula "85"))
            (rule "castedGetAny" (formula "94") (term "0,0,0,0,1,0,1,1,0"))
            (rule "castedGetAny" (formula "94") (term "0,0,1,1,0,0,1,1,0"))
            (rule "castedGetAny" (formula "94") (term "0,0,1,0"))
            (rule "castedGetAny" (formula "93") (term "0"))
            (rule "castedGetAny" (formula "94") (term "0,1,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "94") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "94") (term "0,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "91"))
            (rule "assignment" (formula "95") (term "1"))
             (builtin "One Step Simplification" (formula "95"))
            (rule "boxToDiamond" (formula "95") (term "1"))
             (builtin "One Step Simplification" (formula "95"))
            (rule "notLeft" (formula "95"))
            (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "86"))
            (rule "andLeft" (formula "86"))
            (rule "notLeft" (formula "86"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "87"))
            (rule "andLeft" (formula "87"))
            (rule "andLeft" (formula "87"))
            (rule "andLeft" (formula "87"))
            (rule "notLeft" (formula "87"))
            (rule "notLeft" (formula "87"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "89"))
            (rule "insert_constant_string_value" (formula "89") (term "0,0,0,0") (ifseqformula "106"))
             (builtin "One Step Simplification" (formula "89"))
            (rule "castDel" (formula "89") (term "0,0,0,0,0"))
            (rule "andLeft" (formula "89"))
            (rule "andLeft" (formula "89"))
            (rule "notLeft" (formula "91"))
            (rule "notLeft" (formula "89"))
            (rule "notLeft" (formula "89"))
            (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "89") (inst "i=i") (inst "i_0=i_0"))
            (rule "expand_inInt" (formula "89") (term "1,0,0,1"))
            (rule "expand_inInt" (formula "89") (term "1,0,0,1,0"))
            (rule "replace_int_MIN" (formula "89") (term "0,1,1,0,0,1"))
            (rule "replace_int_MAX" (formula "89") (term "1,0,1,0,0,1"))
            (rule "replace_int_MIN" (formula "89") (term "0,1,1,0,0,1,0"))
            (rule "replace_int_MAX" (formula "89") (term "1,0,1,0,0,1,0"))
            (rule "andLeft" (formula "89"))
            (rule "andLeft" (formula "89"))
            (rule "eqSymm" (formula "89"))
            (rule "castedGetAny" (formula "91") (term "0,0,1,0"))
            (rule "castedGetAny" (formula "90") (term "0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "91") (term "1,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "91") (term "0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "90") (term "0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "90") (term "1,1,0,0"))
            (rule "applyEq" (formula "91") (term "1,1,0,0,0") (ifseqformula "89"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "92") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
             (builtin "One Step Simplification" (formula "92"))
            (rule "insert_constant_string_value" (formula "92") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "107"))
             (builtin "One Step Simplification" (formula "92"))
            (rule "insert_constant_string_value" (formula "92") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "107"))
             (builtin "One Step Simplification" (formula "92"))
            (rule "insert_constant_string_value" (formula "92") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "107"))
             (builtin "One Step Simplification" (formula "92"))
            (rule "castDel" (formula "92") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "castDel" (formula "92") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "castDel" (formula "92") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "andLeft" (formula "92"))
            (rule "andLeft" (formula "92"))
            (rule "andLeft" (formula "92"))
            (rule "andLeft" (formula "92"))
            (rule "andLeft" (formula "92"))
            (rule "andLeft" (formula "92"))
            (rule "andLeft" (formula "92"))
            (rule "andLeft" (formula "92"))
            (rule "notLeft" (formula "94"))
            (rule "notLeft" (formula "93"))
            (rule "andLeft" (formula "92"))
            (rule "andLeft" (formula "92"))
            (rule "notLeft" (formula "94"))
            (rule "andLeft" (formula "92"))
            (rule "notLeft" (formula "94"))
            (rule "notLeft" (formula "93"))
            (rule "andLeft" (formula "92"))
            (rule "andLeft" (formula "92"))
            (rule "notLeft" (formula "94"))
            (rule "notLeft" (formula "93"))
            (rule "andLeft" (formula "92"))
            (rule "notLeft" (formula "93"))
            (rule "andLeft" (formula "92"))
            (rule "andLeft" (formula "92"))
            (rule "notLeft" (formula "94"))
            (rule "andLeft" (formula "92"))
            (rule "notLeft" (formula "94"))
            (rule "andLeft" (formula "92"))
            (rule "notLeft" (formula "94"))
            (rule "andLeft" (formula "92"))
            (rule "notLeft" (formula "94"))
            (rule "andLeft" (formula "92"))
            (rule "notLeft" (formula "94"))
            (rule "andLeft" (formula "92"))
            (rule "notLeft" (formula "94"))
            (rule "notLeft" (formula "93"))
            (rule "andLeft" (formula "92"))
            (rule "notLeft" (formula "93"))
            (rule "andLeft" (formula "92"))
            (rule "andLeft" (formula "92"))
            (rule "notLeft" (formula "94"))
            (rule "notLeft" (formula "93"))
            (rule "andLeft" (formula "92"))
            (rule "andLeft" (formula "92"))
            (rule "notLeft" (formula "94"))
            (rule "notLeft" (formula "92"))
            (rule "notLeft" (formula "92"))
            (rule "exLeft" (formula "97") (inst "sk=i_6"))
            (rule "andLeft" (formula "97"))
            (rule "andLeft" (formula "97"))
            (rule "exLeft" (formula "94") (inst "sk=i_2_2"))
            (rule "andLeft" (formula "94"))
            (rule "andLeft" (formula "94"))
            (rule "castedGetAny" (formula "98") (term "0,0,1,0"))
            (rule "castedGetAny" (formula "97") (term "0,0,1,0"))
            (rule "castedGetAny" (formula "93") (term "0,0,1,0"))
            (rule "castedGetAny" (formula "101") (term "0"))
            (rule "castedGetAny" (formula "96") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "98") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "97") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "93") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "99"))
            (rule "inEqSimp_commuteLeq" (formula "94"))
            (rule "applyEq" (formula "147") (term "0") (ifseqformula "92"))
            (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "88"))
            (rule "true_left" (formula "88"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "87"))
            (rule "andLeft" (formula "87"))
            (rule "andLeft" (formula "87"))
            (rule "andLeft" (formula "89"))
            (rule "notLeft" (formula "87"))
            (rule "notLeft" (formula "87"))
            (rule "commute_and" (formula "105") (term "0,0"))
            (rule "commute_and_2" (formula "105") (term "0,1,1,0"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "88"))
            (rule "andLeft" (formula "88"))
            (rule "notLeft" (formula "88"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "87"))
            (rule "true_left" (formula "87"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "87"))
            (rule "true_left" (formula "87"))
            (rule "commute_and" (formula "89") (term "1,0,0"))
            (rule "commute_and" (formula "88") (term "0,0,0"))
            (rule "commute_and" (formula "88") (term "1,0,0"))
            (rule "commute_and" (formula "89") (term "0,0,0"))
            (rule "methodBodyExpand" (formula "168") (term "1") (newnames "heapBefore_generateDataForVoter_1,savedHeapBefore_generateDataForVoter_0"))
             (builtin "One Step Simplification" (formula "168"))
            (rule "commute_and" (formula "96") (term "0,0"))
            (rule "commute_and" (formula "95") (term "0,0"))
            (rule "commute_and" (formula "91") (term "0,0"))
            (rule "shift_paren_and" (formula "88") (term "0,0"))
            (rule "commute_and_2" (formula "88") (term "0,0,0"))
            (rule "commute_and" (formula "103") (term "0,0,1,1,0"))
            (rule "commute_and_2" (formula "103") (term "0,1,1,0"))
            (rule "shift_paren_and" (formula "89") (term "0,0"))
            (rule "commute_and_2" (formula "89") (term "0,0,0"))
            (rule "charLiteral_to_int" (formula "103") (term "1,0,0,0,1,1,0"))
            (rule "lenNonNegative" (formula "101") (term "1"))
            (rule "inEqSimp_commuteLeq" (formula "101"))
            (rule "seqGetAlphaCast" (formula "103") (term "0"))
            (rule "castedGetAny" (formula "103") (term "0"))
             (builtin "One Step Simplification" (formula "103"))
            (rule "true_left" (formula "103"))
             (builtin "Use Operation Contract" (formula "169") (newnames "heapBefore_printStatus_0,exc_138,heapAfter_printStatus_0,anon_heap_printStatus_0") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::printStatus()].JML normal_behavior operation contract.0"))
            (branch "Post (printStatus)"
                (builtin "One Step Simplification" (formula "145"))
                (builtin "One Step Simplification" (formula "173"))
                (builtin "One Step Simplification" (formula "144"))
                (builtin "One Step Simplification" (formula "146") (ifInst ""  (formula "81")))
               (rule "andLeft" (formula "144"))
               (rule "andLeft" (formula "145"))
               (rule "andLeft" (formula "146"))
               (rule "notLeft" (formula "146"))
               (rule "variableDeclarationFinalAssign" (formula "175") (term "1"))
               (rule "variableDeclarationFinal" (formula "175") (term "1") (newnames "voterId_10"))
               (rule "applyEq" (formula "146") (term "3") (ifseqformula "145"))
               (rule "pullOutSelect" (formula "148") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_print_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "145"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "149") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "147") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
                (builtin "One Step Simplification" (formula "147") (ifInst ""  (formula "153")) (ifInst ""  (formula "152")) (ifInst ""  (formula "154")) (ifInst ""  (formula "156")) (ifInst ""  (formula "157")) (ifInst ""  (formula "158")) (ifInst ""  (formula "159")) (ifInst ""  (formula "160")) (ifInst ""  (formula "161")) (ifInst ""  (formula "162")) (ifInst ""  (formula "163")) (ifInst ""  (formula "164")) (ifInst ""  (formula "165")) (ifInst ""  (formula "166")) (ifInst ""  (formula "167")) (ifInst ""  (formula "168")) (ifInst ""  (formula "169")) (ifInst ""  (formula "90")) (ifInst ""  (formula "90")))
               (rule "insert_constant_string_value" (formula "147") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "115"))
                (builtin "One Step Simplification" (formula "147"))
               (rule "insert_constant_string_value" (formula "147") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "115"))
                (builtin "One Step Simplification" (formula "147"))
               (rule "insert_constant_string_value" (formula "147") (term "0,0,0,0,0,0,0,0,0,0") (ifseqformula "115"))
                (builtin "One Step Simplification" (formula "147"))
               (rule "castDel" (formula "147") (term "0,0,0,1,0,0,0,0,0,0"))
               (rule "castDel" (formula "147") (term "0,0,0,1,0,0,0,0,0,0,0"))
               (rule "castDel" (formula "147") (term "0,0,0,0,0,0,0,0,0,0,0"))
               (rule "andLeft" (formula "147"))
               (rule "andLeft" (formula "147"))
               (rule "andLeft" (formula "147"))
               (rule "andLeft" (formula "147"))
               (rule "andLeft" (formula "147"))
               (rule "andLeft" (formula "147"))
               (rule "notLeft" (formula "148"))
               (rule "andLeft" (formula "147"))
               (rule "andLeft" (formula "147"))
               (rule "notLeft" (formula "149"))
               (rule "notLeft" (formula "148"))
               (rule "notLeft" (formula "147"))
               (rule "exLeft" (formula "151") (inst "sk=i_7"))
               (rule "andLeft" (formula "151"))
               (rule "andLeft" (formula "151"))
               (rule "exLeft" (formula "148") (inst "sk=i_2_3"))
               (rule "andLeft" (formula "148"))
               (rule "andLeft" (formula "148"))
               (rule "castedGetAny" (formula "152") (term "0,0,1,0"))
               (rule "castedGetAny" (formula "151") (term "0,0,1,0"))
               (rule "castedGetAny" (formula "147") (term "0,0,1,0"))
               (rule "castedGetAny" (formula "155") (term "0"))
               (rule "castedGetAny" (formula "150") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "152") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "151") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "147") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "153"))
               (rule "inEqSimp_commuteLeq" (formula "148"))
               (rule "applyEqRigid" (formula "156") (term "0") (ifseqformula "90"))
               (rule "commute_and" (formula "152") (term "0,0"))
               (rule "commute_and" (formula "151") (term "0,0"))
               (rule "commute_and" (formula "147") (term "0,0"))
               (rule "lenNonNegative" (formula "87") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "87"))
               (rule "applyEq" (formula "87") (term "0") (ifseqformula "88"))
               (rule "methodCallWithAssignmentUnfoldArguments" (formula "180") (term "1"))
               (rule "variableDeclarationAssign" (formula "180") (term "1"))
               (rule "variableDeclaration" (formula "180") (term "1") (newnames "var_2"))
               (rule "assignment" (formula "180") (term "1"))
                (builtin "One Step Simplification" (formula "180"))
               (rule "variableDeclarationAssign" (formula "180") (term "1"))
               (rule "variableDeclaration" (formula "180") (term "1") (newnames "var_3"))
               (rule "assignment_read_attribute_this" (formula "180") (term "1"))
                (builtin "One Step Simplification" (formula "180"))
               (rule "pullOutSelect" (formula "180") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "145"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "184")) (ifInst ""  (formula "83")))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "184")))
               (rule "applyEqReverse" (formula "181") (term "0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "lenNonNegative" (formula "98") (term "1"))
               (rule "inEqSimp_commuteLeq" (formula "98"))
               (rule "lenNonNegative" (formula "93") (term "1"))
               (rule "inEqSimp_commuteLeq" (formula "93"))
               (rule "seqGetAlphaCast" (formula "101") (term "0"))
               (rule "castedGetAny" (formula "101") (term "0"))
                (builtin "One Step Simplification" (formula "101"))
               (rule "true_left" (formula "101"))
               (rule "seqGetAlphaCast" (formula "95") (term "0"))
               (rule "castedGetAny" (formula "95") (term "0"))
                (builtin "One Step Simplification" (formula "95"))
               (rule "true_left" (formula "95"))
                (builtin "Use Operation Contract" (formula "182") (newnames "heapBefore_get_0,result_106,exc_139") (contract "org.apache.commons.csv.CSVRecord[org.apache.commons.csv.CSVRecord::get(java.lang.String)].JML normal_behavior operation contract.0"))
               (branch "Post (get)"
                   (builtin "One Step Simplification" (formula "185"))
                   (builtin "One Step Simplification" (formula "156"))
                   (builtin "One Step Simplification" (formula "157") (ifInst ""  (formula "169")) (ifInst ""  (formula "169")))
                   (builtin "One Step Simplification" (formula "155"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "157") (term "1,1") (ifseqformula "146"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "155") (term "1,1,0") (ifseqformula "146"))
                  (rule "andLeft" (formula "157"))
                  (rule "andLeft" (formula "155"))
                  (rule "andLeft" (formula "158"))
                  (rule "andLeft" (formula "160"))
                  (rule "andLeft" (formula "156"))
                  (rule "andLeft" (formula "155"))
                  (rule "andLeft" (formula "156"))
                  (rule "andLeft" (formula "157"))
                  (rule "notLeft" (formula "157"))
                  (rule "exLeft" (formula "159") (inst "sk=i_8"))
                  (rule "andLeft" (formula "159"))
                  (rule "andLeft" (formula "159"))
                  (rule "exLeft" (formula "156") (inst "sk=i_9"))
                  (rule "andLeft" (formula "156"))
                  (rule "andLeft" (formula "156"))
                  (rule "andLeft" (formula "158"))
                  (rule "replace_known_right" (formula "155") (term "0") (ifseqformula "168"))
                   (builtin "One Step Simplification" (formula "155"))
                  (rule "castedGetAny" (formula "164") (term "0"))
                  (rule "castedGetAny" (formula "158") (term "0"))
                  (rule "castedGetAny" (formula "159") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "162"))
                  (rule "inEqSimp_commuteLeq" (formula "156"))
                  (rule "assignment" (formula "196") (term "1"))
                   (builtin "One Step Simplification" (formula "196"))
                  (rule "blockEmpty" (formula "196") (term "1"))
                  (rule "applyEq" (formula "161") (term "5") (ifseqformula "160"))
                  (rule "pullOutSelect" (formula "163") (term "0,1") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                  (rule "applyEq" (formula "158") (term "0,0") (ifseqformula "163"))
                  (rule "applyEq" (formula "157") (term "0,1") (ifseqformula "163"))
                  (rule "applyEq" (formula "165") (term "0,0") (ifseqformula "163"))
                  (rule "simplifySelectOfAnonEQ" (formula "163") (ifseqformula "146"))
                   (builtin "One Step Simplification" (formula "163") (ifInst ""  (formula "199")) (ifInst ""  (formula "84")))
                  (rule "elementOfSingleton" (formula "163") (term "0,0"))
                   (builtin "One Step Simplification" (formula "163") (ifInst ""  (formula "199")))
                  (rule "applyEqReverse" (formula "165") (term "0,0") (ifseqformula "163"))
                  (rule "applyEqReverse" (formula "157") (term "0,1") (ifseqformula "163"))
                  (rule "applyEqReverse" (formula "164") (term "0,1") (ifseqformula "163"))
                  (rule "applyEqReverse" (formula "158") (term "0,0") (ifseqformula "163"))
                  (rule "hideAuxiliaryEq" (formula "163"))
                  (rule "pullOutSelect" (formula "159") (term "0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "159") (ifseqformula "146"))
                   (builtin "One Step Simplification" (formula "159") (ifInst ""  (formula "199")) (ifInst ""  (formula "84")))
                  (rule "elementOfSingleton" (formula "159") (term "0,0"))
                   (builtin "One Step Simplification" (formula "159") (ifInst ""  (formula "199")))
                  (rule "applyEqReverse" (formula "160") (term "0,0") (ifseqformula "159"))
                  (rule "hideAuxiliaryEq" (formula "159"))
                  (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "165") (inst "i=i") (inst "i_0=i_0"))
                  (rule "replaceKnownSelect_taclet000000_65" (formula "165") (term "0,0,0,0"))
                  (rule "replaceKnownSelect_taclet000000_67" (formula "165") (term "0,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "165") (term "0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "165") (term "0,1,0,0"))
                  (rule "replaceKnownSelect_taclet000000_67" (formula "165") (term "0,1,1,0,0,0,1"))
                  (rule "replaceKnownSelect_taclet000000_67" (formula "165") (term "0,0,0,0,1,0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "165") (term "0,1,1,0,0,0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "165") (term "0,0,0,0,1,0,1"))
                  (rule "replaceKnownSelect_taclet000000_65" (formula "165") (term "0,1,1,0,0,0,1,0"))
                  (rule "replaceKnownSelect_taclet000000_65" (formula "165") (term "0,0,0,0,1,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "165") (term "0,1,1,0,0,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "165") (term "0,0,0,0,1,0,1,0"))
                  (rule "expand_inInt" (formula "165") (term "1,0,0,1"))
                  (rule "expand_inInt" (formula "165") (term "1,0,0,1,0"))
                  (rule "replace_int_MIN" (formula "165") (term "0,1,1,0,0,1"))
                  (rule "replace_int_MAX" (formula "165") (term "1,0,1,0,0,1"))
                  (rule "replace_int_MIN" (formula "165") (term "0,1,1,0,0,1,0"))
                  (rule "replace_int_MAX" (formula "165") (term "1,0,1,0,0,1,0"))
                  (rule "andLeft" (formula "165"))
                  (rule "andLeft" (formula "165"))
                  (rule "eqSymm" (formula "165"))
                  (rule "castedGetAny" (formula "166") (term "0,0,1,0"))
                  (rule "castedGetAny" (formula "165") (term "0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "166") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "166") (term "1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "165") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "165") (term "1,1,0,0"))
                  (rule "applyEq" (formula "166") (term "1,1,0,0,0") (ifseqformula "87"))
                  (rule "commute_or" (formula "168"))
                  (rule "commute_or" (formula "155"))
                  (rule "commute_and" (formula "166") (term "1,0,0"))
                  (rule "commute_and" (formula "165") (term "0,0,0"))
                  (rule "commute_and" (formula "165") (term "1,0,0"))
                  (rule "commute_and" (formula "166") (term "0,0,0"))
                  (rule "shift_paren_and" (formula "165") (term "0,0"))
                  (rule "commute_and_2" (formula "165") (term "0,0,0"))
                  (rule "shift_paren_and" (formula "165") (term "0,0"))
                  (rule "commute_and_2" (formula "165") (term "0,0,0"))
                  (rule "lenNonNegative" (formula "97") (term "1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "97"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "106") (term "1") (ifseqformula "81"))
                  (rule "replace_known_right" (formula "106") (term "0") (ifseqformula "181"))
                   (builtin "One Step Simplification" (formula "106"))
                  (rule "replace_known_left" (formula "168") (term "1") (ifseqformula "106"))
                   (builtin "One Step Simplification" (formula "168"))
                  (rule "true_left" (formula "168"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "86") (term "1,0") (ifseqformula "81"))
                  (rule "replace_known_right" (formula "86") (term "0") (ifseqformula "196"))
                   (builtin "One Step Simplification" (formula "86"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "195") (term "0") (ifseqformula "81"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "196"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "195") (term "0") (ifseqformula "82"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "196"))
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "Use Operation Contract" (formula "199") (newnames "heapBefore_exitIfIdInvalid_0,exc_140,heapAfter_exitIfIdInvalid_0,anon_heap_exitIfIdInvalid_0") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::exitIfIdInvalid(java.lang.String)].JML normal_behavior operation contract.0"))
                  (branch "Post (exitIfIdInvalid)"
                      (builtin "One Step Simplification" (formula "203"))
                      (builtin "One Step Simplification" (formula "172"))
                      (builtin "One Step Simplification" (formula "174") (ifInst ""  (formula "175")) (ifInst ""  (formula "170")) (ifInst ""  (formula "175")))
                      (builtin "One Step Simplification" (formula "173"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "174") (term "1") (ifseqformula "151"))
                     (rule "andLeft" (formula "172"))
                     (rule "andLeft" (formula "175"))
                     (rule "exLeft" (formula "175") (inst "sk=j_1"))
                     (rule "andLeft" (formula "175"))
                     (rule "andLeft" (formula "175"))
                     (rule "castedGetAny" (formula "177") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "175"))
                     (rule "applyEq" (formula "174") (term "4") (ifseqformula "173"))
                     (rule "commute_or" (formula "178"))
                     (rule "returnUnfold" (formula "206") (term "1") (inst "#v0=g"))
                     (rule "variableDeclarationAssign" (formula "206") (term "1"))
                     (rule "variableDeclaration" (formula "206") (term "1") (newnames "g_1"))
                     (rule "charLiteral_to_int" (formula "177") (term "1"))
                     (rule "seqGetAlphaCast" (formula "159") (term "0"))
                     (rule "castedGetAny" (formula "159") (term "0"))
                      (builtin "One Step Simplification" (formula "159"))
                     (rule "true_left" (formula "159"))
                     (rule "seqGetAlphaCast" (formula "156") (term "0"))
                     (rule "castedGetAny" (formula "156") (term "0"))
                      (builtin "One Step Simplification" (formula "156"))
                     (rule "true_left" (formula "156"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "202") (term "0") (ifseqformula "83"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "203"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "202") (term "0") (ifseqformula "84"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "203"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "199") (term "0") (ifseqformula "85"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "200"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "202") (term "0") (ifseqformula "86"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "203"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "202") (term "0") (ifseqformula "87"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "203"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "98") (term "1") (ifseqformula "88"))
                     (rule "replace_known_right" (formula "98") (term "0") (ifseqformula "192"))
                      (builtin "One Step Simplification" (formula "98"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "99") (term "0") (ifseqformula "88"))
                     (rule "applyEqRigid" (formula "99") (term "0,0") (ifseqformula "100"))
                     (rule "replace_known_right" (formula "99") (term "0") (ifseqformula "193"))
                      (builtin "One Step Simplification" (formula "99"))
                     (rule "applyEq" (formula "99") (term "1,0") (ifseqformula "100"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "206") (term "0") (ifseqformula "88"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "207"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "194") (term "0") (ifseqformula "89"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "195"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "192") (term "0") (ifseqformula "90"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "193"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "194") (term "0") (ifseqformula "91"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "195"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "199") (term "0") (ifseqformula "92"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "200"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "202") (term "0") (ifseqformula "93"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "203"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "204") (term "0") (ifseqformula "94"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "205"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "206") (term "0") (ifseqformula "95"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "207"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "209") (term "0") (ifseqformula "96"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "210"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "198") (term "0") (ifseqformula "97"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "199"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "204") (term "0") (ifseqformula "98"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "205"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "121") (term "1,0,1") (ifseqformula "99"))
                     (rule "replace_known_right" (formula "121") (term "0") (ifseqformula "212"))
                      (builtin "One Step Simplification" (formula "121"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "214") (term "0") (ifseqformula "99"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "215"))
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "Use Operation Contract" (formula "225") (newnames "heapBefore_generateDataForVoter_2,result_107,exc_141,heapAfter_generateDataForVoter_0,anon_heap_generateDataForVoter_0") (contract "de.polyas.core3.open.cred.CredentialGenerator[de.polyas.core3.open.cred.CredentialGenerator::generateDataForVoter(java.lang.String,java.lang.String)].JML normal_behavior operation contract.0"))
                     (branch "Post (generateDataForVoter)"
                         (builtin "One Step Simplification" (formula "199"))
                         (builtin "One Step Simplification" (formula "200") (ifInst ""  (formula "201")) (ifInst ""  (formula "230")) (ifInst ""  (formula "201")) (ifInst ""  (formula "230")))
                         (builtin "One Step Simplification" (formula "229"))
                         (builtin "One Step Simplification" (formula "198"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "200") (term "1,1") (ifseqformula "191"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "200") (term "0,1,1") (ifseqformula "170"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "200") (term "1,0,1") (ifseqformula "191"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "200") (term "0,1,0,1") (ifseqformula "170"))
                        (rule "andLeft" (formula "198"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "199") (term "1,1,0") (ifseqformula "198"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "199") (term "0,1,1,0") (ifseqformula "191"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "199") (term "0,0,1,1,0") (ifseqformula "170"))
                        (rule "andLeft" (formula "201"))
                        (rule "andLeft" (formula "199"))
                        (rule "andLeft" (formula "202"))
                        (rule "andLeft" (formula "204"))
                        (rule "andLeft" (formula "199"))
                        (rule "andLeft" (formula "201"))
                        (rule "andLeft" (formula "204"))
                        (rule "andLeft" (formula "206"))
                        (rule "andLeft" (formula "201"))
                        (rule "andLeft" (formula "202"))
                        (rule "notLeft" (formula "203"))
                        (rule "replace_known_left" (formula "209") (term "0,0") (ifseqformula "104"))
                         (builtin "One Step Simplification" (formula "209"))
                        (rule "true_left" (formula "209"))
                        (rule "replace_known_right" (formula "200") (term "0") (ifseqformula "209"))
                         (builtin "One Step Simplification" (formula "200"))
                        (rule "assignment" (formula "238") (term "1"))
                         (builtin "One Step Simplification" (formula "238"))
                        (rule "applyEq" (formula "203") (term "4") (ifseqformula "199"))
                        (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "204"))
                        (rule "insert_constant_string_value" (formula "204") (term "0,0,0,0") (ifseqformula "141"))
                         (builtin "One Step Simplification" (formula "204"))
                        (rule "castDel" (formula "204") (term "0,0,0,0,0"))
                        (rule "andLeft" (formula "204"))
                        (rule "notLeft" (formula "205"))
                        (rule "andLeft" (formula "204"))
                        (rule "notLeft" (formula "204"))
                        (rule "notLeft" (formula "204"))
                        (rule "pullOutSelect" (formula "209") (term "0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SHA_256_DIGEST_1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "192"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "171"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "210") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "208") (term "0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SECURE_RANDOM_1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "192"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "171"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "209") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "204"))
                        (rule "andLeft" (formula "204"))
                        (rule "notLeft" (formula "204"))
                        (rule "pullOutSelect" (formula "204") (term "1,0") (inst "selectSK=java_math_BigInteger_ZERO_1"))
                        (rule "applyEq" (formula "209") (term "0") (ifseqformula "204"))
                        (rule "simplifySelectOfAnonEQ" (formula "204") (ifseqformula "191"))
                         (builtin "One Step Simplification" (formula "204"))
                        (rule "simplifySelectOfAnonEQ" (formula "204") (ifseqformula "170"))
                         (builtin "One Step Simplification" (formula "204"))
                        (rule "elementOfSingleton" (formula "204") (term "0,0"))
                         (builtin "One Step Simplification" (formula "204"))
                        (rule "applyEqReverse" (formula "209") (term "0") (ifseqformula "204"))
                        (rule "applyEqReverse" (formula "205") (term "1,0") (ifseqformula "204"))
                        (rule "hideAuxiliaryEq" (formula "204"))
                        (rule "pullOutSelect" (formula "204") (term "0") (inst "selectSK=java_math_BigInteger_value_2"))
                        (rule "simplifySelectOfAnonEQ" (formula "204") (ifseqformula "191"))
                         (builtin "One Step Simplification" (formula "204") (ifInst ""  (formula "237")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "204") (term "0,0,0") (ifseqformula "170"))
                        (rule "replace_known_left" (formula "204") (term "0,0,0,0") (ifseqformula "105"))
                         (builtin "One Step Simplification" (formula "204"))
                        (rule "simplifySelectOfAnonEQ" (formula "204") (ifseqformula "170"))
                         (builtin "One Step Simplification" (formula "204") (ifInst ""  (formula "237")) (ifInst ""  (formula "105")))
                        (rule "elementOfSingleton" (formula "204") (term "0,0"))
                         (builtin "One Step Simplification" (formula "204") (ifInst ""  (formula "237")))
                        (rule "applyEqReverse" (formula "205") (term "0") (ifseqformula "204"))
                        (rule "hideAuxiliaryEq" (formula "204"))
                        (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "204"))
                        (rule "andLeft" (formula "204"))
                        (rule "andLeft" (formula "204"))
                        (rule "andLeft" (formula "204"))
                        (rule "notLeft" (formula "204"))
                        (rule "notLeft" (formula "204"))
                        (rule "pullOutSelect" (formula "205") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_RANDOM_2"))
                        (rule "applyEq" (formula "209") (term "0") (ifseqformula "205"))
                        (rule "simplifySelectOfAnonEQ" (formula "205") (ifseqformula "191"))
                         (builtin "One Step Simplification" (formula "205"))
                        (rule "simplifySelectOfAnonEQ" (formula "205") (ifseqformula "170"))
                         (builtin "One Step Simplification" (formula "205"))
                        (rule "elementOfSingleton" (formula "205") (term "0,0"))
                         (builtin "One Step Simplification" (formula "205"))
                        (rule "applyEqReverse" (formula "206") (term "1") (ifseqformula "205"))
                        (rule "applyEqReverse" (formula "209") (term "0") (ifseqformula "205"))
                        (rule "hideAuxiliaryEq" (formula "205"))
                        (rule "pullOutSelect" (formula "204") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GROUP_2"))
                        (rule "applyEq" (formula "209") (term "0") (ifseqformula "204"))
                        (rule "simplifySelectOfAnonEQ" (formula "204") (ifseqformula "191"))
                         (builtin "One Step Simplification" (formula "204"))
                        (rule "simplifySelectOfAnonEQ" (formula "204") (ifseqformula "170"))
                         (builtin "One Step Simplification" (formula "204"))
                        (rule "elementOfSingleton" (formula "204") (term "0,0"))
                         (builtin "One Step Simplification" (formula "204"))
                        (rule "applyEqReverse" (formula "209") (term "0") (ifseqformula "204"))
                        (rule "applyEqReverse" (formula "205") (term "1") (ifseqformula "204"))
                        (rule "hideAuxiliaryEq" (formula "204"))
                        (rule "commute_or_2" (formula "207"))
                        (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter" (formula "201"))
                        (rule "andLeft" (formula "201"))
                        (rule "notLeft" (formula "202"))
                        (rule "andLeft" (formula "201"))
                        (rule "notLeft" (formula "202"))
                        (rule "notLeft" (formula "201"))
                        (rule "pullOutSelect" (formula "209") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_3"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "199"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "211")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "192"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "171"))
                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "209") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_3"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "200"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "212")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "193"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "172"))
                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "209") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_3"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "201"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "213")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "194"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "173"))
                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_4"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "195"))
                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "214")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "174"))
                        (rule "ifthenelse_negated" (formula "3") (term "0"))
                        (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_4"))
                        (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "196"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "215")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "175"))
                        (rule "ifthenelse_negated" (formula "2") (term "0"))
                        (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_4"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "197"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "216")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "176"))
                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_5"))
                        (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "177"))
                         (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "217")))
                        (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "217")))
                        (rule "ifthenelse_negated" (formula "5") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_5"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "178"))
                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "218")))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "218")))
                        (rule "ifthenelse_negated" (formula "3") (term "0"))
                        (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_password_5"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "179"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "219")))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "219")))
                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                        (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "210"))
                        (rule "andLeft" (formula "210"))
                        (rule "andLeft" (formula "210"))
                        (rule "andLeft" (formula "210"))
                        (rule "notLeft" (formula "211"))
                        (rule "notLeft" (formula "210"))
                        (rule "pullOutSelect" (formula "211") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_RANDOM_3"))
                        (rule "applyEq" (formula "219") (term "0") (ifseqformula "211"))
                        (rule "simplifySelectOfAnonEQ" (formula "211") (ifseqformula "207"))
                         (builtin "One Step Simplification" (formula "211"))
                        (rule "replaceKnownSelect_taclet00000000_83" (formula "211") (term "0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000000_85" (formula "211") (term "0"))
                        (rule "applyEqReverse" (formula "219") (term "0") (ifseqformula "211"))
                        (rule "applyEqReverse" (formula "212") (term "1") (ifseqformula "211"))
                        (rule "hideAuxiliaryEq" (formula "211"))
                        (rule "pullOutSelect" (formula "210") (term "1") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GROUP_3"))
                        (rule "applyEq" (formula "218") (term "0") (ifseqformula "210"))
                        (rule "simplifySelectOfAnonEQ" (formula "210") (ifseqformula "207"))
                         (builtin "One Step Simplification" (formula "210"))
                        (rule "replaceKnownSelect_taclet00000000_86" (formula "210") (term "0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000000_88" (formula "210") (term "0"))
                        (rule "applyEqReverse" (formula "218") (term "0") (ifseqformula "210"))
                        (rule "applyEqReverse" (formula "211") (term "1") (ifseqformula "210"))
                        (rule "hideAuxiliaryEq" (formula "210"))
                        (rule "commute_or_2" (formula "209") (term "0"))
                        (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "214"))
                        (rule "true_left" (formula "214"))
                        (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "213"))
                        (rule "andLeft" (formula "213"))
                        (rule "andLeft" (formula "213"))
                        (rule "andLeft" (formula "215"))
                        (rule "notLeft" (formula "214"))
                        (rule "notLeft" (formula "213"))
                        (rule "pullOutSelect" (formula "213") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_2"))
                        (rule "applyEq" (formula "218") (term "0") (ifseqformula "213"))
                        (rule "simplifySelectOfAnonEQ" (formula "213") (ifseqformula "200"))
                         (builtin "One Step Simplification" (formula "213") (ifInst ""  (formula "250")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "213") (term "0,0,0") (ifseqformula "179"))
                        (rule "replace_known_left" (formula "213") (term "0,0,0,0") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "213"))
                        (rule "simplifySelectOfAnonEQ" (formula "213") (ifseqformula "179"))
                         (builtin "One Step Simplification" (formula "213") (ifInst ""  (formula "250")) (ifInst ""  (formula "28")))
                        (rule "elementOfSingleton" (formula "213") (term "0,0"))
                         (builtin "One Step Simplification" (formula "213") (ifInst ""  (formula "250")))
                        (rule "applyEqReverse" (formula "218") (term "0") (ifseqformula "213"))
                        (rule "applyEqReverse" (formula "214") (term "1") (ifseqformula "213"))
                        (rule "hideAuxiliaryEq" (formula "213"))
                        (rule "pullOutSelect" (formula "214") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_2"))
                        (rule "applyEq" (formula "218") (term "0") (ifseqformula "214"))
                        (rule "simplifySelectOfAnonEQ" (formula "214") (ifseqformula "200"))
                         (builtin "One Step Simplification" (formula "214") (ifInst ""  (formula "249")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "214") (term "0,0,0") (ifseqformula "179"))
                        (rule "replace_known_left" (formula "214") (term "0,0,0,0") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "214"))
                        (rule "simplifySelectOfAnonEQ" (formula "214") (ifseqformula "179"))
                         (builtin "One Step Simplification" (formula "214") (ifInst ""  (formula "249")) (ifInst ""  (formula "28")))
                        (rule "elementOfSingleton" (formula "214") (term "0,0"))
                         (builtin "One Step Simplification" (formula "214") (ifInst ""  (formula "249")))
                        (rule "applyEqReverse" (formula "218") (term "0") (ifseqformula "214"))
                        (rule "applyEqReverse" (formula "215") (term "1") (ifseqformula "214"))
                        (rule "hideAuxiliaryEq" (formula "214"))
                        (rule "commute_or" (formula "216") (term "0"))
                        (rule "commute_or_2" (formula "9") (term "0,0"))
                        (rule "commute_or_2" (formula "6") (term "0,0"))
                        (rule "commute_or_2" (formula "3") (term "0,0"))
                        (rule "methodCallReturn" (formula "249") (term "1"))
                        (rule "assignment" (formula "249") (term "1"))
                         (builtin "One Step Simplification" (formula "249"))
                        (rule "commute_or" (formula "8") (term "0,0"))
                        (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "211"))
                        (rule "true_left" (formula "211"))
                        (rule "commute_or" (formula "5") (term "0,0"))
                        (rule "commute_or" (formula "2") (term "0,0"))
                        (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "210"))
                        (rule "andLeft" (formula "210"))
                        (rule "andLeft" (formula "210"))
                        (rule "andLeft" (formula "212"))
                        (rule "notLeft" (formula "211"))
                        (rule "notLeft" (formula "210"))
                        (rule "pullOutSelect" (formula "210") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_3"))
                        (rule "applyEq" (formula "218") (term "0") (ifseqformula "210"))
                        (rule "simplifySelectOfAnonEQ" (formula "210") (ifseqformula "207"))
                         (builtin "One Step Simplification" (formula "210") (ifInst ""  (formula "250")))
                        (rule "replaceKnownSelect_taclet00000000_102" (formula "210") (term "2,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000000_104" (formula "210") (term "2,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "210") (term "0,0,0") (ifseqformula "200"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "210") (term "0,0,0,0") (ifseqformula "179"))
                        (rule "replace_known_left" (formula "210") (term "0,0,0,0,0") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "210"))
                        (rule "applyEqReverse" (formula "211") (term "1") (ifseqformula "210"))
                        (rule "applyEqReverse" (formula "218") (term "0") (ifseqformula "210"))
                        (rule "hideAuxiliaryEq" (formula "210"))
                        (rule "pullOutSelect" (formula "211") (term "1") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_3"))
                        (rule "applyEq" (formula "218") (term "0") (ifseqformula "211"))
                        (rule "simplifySelectOfAnonEQ" (formula "211") (ifseqformula "207"))
                         (builtin "One Step Simplification" (formula "211") (ifInst ""  (formula "249")))
                        (rule "replaceKnownSelect_taclet00000000_105" (formula "211") (term "2,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000000_107" (formula "211") (term "2,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "211") (term "0,0,0") (ifseqformula "200"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "211") (term "0,0,0,0") (ifseqformula "179"))
                        (rule "replace_known_left" (formula "211") (term "0,0,0,0,0") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "211"))
                        (rule "applyEqReverse" (formula "212") (term "1") (ifseqformula "211"))
                        (rule "applyEqReverse" (formula "218") (term "0") (ifseqformula "211"))
                        (rule "hideAuxiliaryEq" (formula "211"))
                        (rule "seqGetAlphaCast" (formula "197") (term "0"))
                        (rule "castedGetAny" (formula "197") (term "0"))
                         (builtin "One Step Simplification" (formula "197"))
                        (rule "true_left" (formula "197"))
                        (rule "commute_or_2" (formula "209"))
                        (rule "seqGetAlphaCast" (formula "191") (term "0"))
                        (rule "castedGetAny" (formula "191") (term "0"))
                         (builtin "One Step Simplification" (formula "191"))
                        (rule "true_left" (formula "191"))
                        (rule "seqGetAlphaCast" (formula "192") (term "0"))
                        (rule "castedGetAny" (formula "192") (term "0"))
                         (builtin "One Step Simplification" (formula "192"))
                        (rule "true_left" (formula "192"))
                        (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "213"))
                        (rule "true_left" (formula "213"))
                        (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "213"))
                        (rule "andLeft" (formula "213"))
                        (rule "notLeft" (formula "213"))
                        (rule "pullOutSelect" (formula "213") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_3"))
                        (rule "applyEq" (formula "217") (term "0") (ifseqformula "213"))
                        (rule "simplifySelectOfAnonEQ" (formula "213") (ifseqformula "200"))
                         (builtin "One Step Simplification" (formula "213") (ifInst ""  (formula "225")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "213") (term "0,0,0") (ifseqformula "179"))
                        (rule "ifthenelse_negated" (formula "213") (term "0"))
                        (rule "pullOutSelect" (formula "213") (term "1,0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_4"))
                        (rule "simplifySelectOfAnonEQ" (formula "213") (ifseqformula "179"))
                         (builtin "One Step Simplification" (formula "213") (ifInst ""  (formula "226")))
                        (rule "elementOfSingleton" (formula "213") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "213") (ifInst ""  (formula "226")))
                        (rule "ifthenelse_negated" (formula "213") (term "0"))
                        (rule "commute_or_2" (formula "217"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "225") (term "0") (ifseqformula "109"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "226"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "226") (term "1,0") (ifseqformula "110"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "228"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "replace_known_left" (formula "215") (term "0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "215"))
                        (rule "applyEqReverse" (formula "216") (term "1,0") (ifseqformula "215"))
                        (rule "hideAuxiliaryEq" (formula "215"))
                        (rule "replace_known_left" (formula "215") (term "0,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "215"))
                        (rule "applyEqReverse" (formula "216") (term "1") (ifseqformula "215"))
                        (rule "applyEqReverse" (formula "219") (term "0") (ifseqformula "215"))
                        (rule "hideAuxiliaryEq" (formula "215"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "226") (term "0") (ifseqformula "111"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "227"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "213"))
                        (rule "true_left" (formula "213"))
                        (rule "lenNonNegative" (formula "207") (term "1"))
                        (rule "inEqSimp_commuteLeq" (formula "207"))
                        (rule "seqGetAlphaCast" (formula "209") (term "0"))
                        (rule "castedGetAny" (formula "209") (term "0"))
                         (builtin "One Step Simplification" (formula "209"))
                        (rule "true_left" (formula "209"))
                        (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "214"))
                        (rule "andLeft" (formula "214"))
                        (rule "notLeft" (formula "214"))
                        (rule "pullOutSelect" (formula "214") (term "1") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_5"))
                        (rule "applyEq" (formula "220") (term "0") (ifseqformula "214"))
                        (rule "simplifySelectOfAnonEQ" (formula "214") (ifseqformula "211"))
                         (builtin "One Step Simplification" (formula "214") (ifInst ""  (formula "228")))
                        (rule "replaceKnownSelect_taclet00000000_112" (formula "214") (term "2,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000000_115" (formula "214") (term "2,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "214") (term "0,0,0") (ifseqformula "203"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "214") (term "0,0,0,0") (ifseqformula "182"))
                        (rule "replace_known_left" (formula "214") (term "0,0,0,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "214"))
                        (rule "applyEqReverse" (formula "215") (term "1") (ifseqformula "214"))
                        (rule "applyEqReverse" (formula "220") (term "0") (ifseqformula "214"))
                        (rule "hideAuxiliaryEq" (formula "214"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "224") (term "0") (ifseqformula "181"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "225"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "commute_or" (formula "13") (term "0,0,0"))
                        (rule "commute_or" (formula "10") (term "0,0,0"))
                        (rule "commute_or" (formula "7") (term "0,0,0"))
                        (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "217"))
                        (rule "true_left" (formula "217"))
                        (rule "commute_or" (formula "214") (term "0,0"))
                        (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "215"))
                        (rule "true_left" (formula "215"))
                        (rule "commute_or_2" (formula "214") (term "0"))
                        (rule "commute_or_2" (formula "214"))
                        (rule "methodCallEmpty" (formula "250") (term "1"))
                        (rule "commute_or_2" (formula "13") (term "0,0"))
                        (rule "commute_or_2" (formula "10") (term "0,0"))
                        (rule "commute_or_2" (formula "7") (term "0,0"))
                        (rule "tryEmpty" (formula "250") (term "1"))
                        (rule "emptyModality" (formula "250") (term "1"))
                        (rule "Use_information_flow_contract_for_printStatus_1406103914" (formula "185") (ifseqformula "147"))
                        (rule "Use_information_flow_contract_for_printStatus_1406103914_0" (formula "186") (ifseqformula "147"))
                        (rule "Use_information_flow_contract_for_get_1066055272_0" (formula "199") (inst "i#79=i#79") (ifseqformula "161"))
                        (rule "Use_information_flow_contract_for_get_1066055272" (formula "200") (inst "i#33=i#33") (ifseqformula "161"))
                        (rule "Use_information_flow_contract_for_exitIfIdInvalid_1120899757" (formula "208") (inst "j#45=j#45") (ifseqformula "169"))
                        (rule "Use_information_flow_contract_for_exitIfIdInvalid_1120899757_0" (formula "209") (inst "j#91=j#91") (ifseqformula "169"))
                        (rule "Use_information_flow_contract_for_generateDataForVoter_2065185875" (formula "218") (ifseqformula "178"))
                        (rule "Use_information_flow_contract_for_generateDataForVoter_2065185875_0" (formula "219") (ifseqformula "178"))
                         (builtin "One Step Simplification" (formula "218") (ifInst ""  (formula "226")) (ifInst ""  (formula "255")) (ifInst ""  (formula "262")) (ifInst ""  (formula "295")))
                        (rule "impLeft" (formula "218") (userinteraction))
                        (branch "Case 1"
                           (rule "andRight" (formula "221"))
                           (branch "Case 1"
                              (rule "andRight" (formula "221"))
                              (branch
                                  (builtin "One Step Simplification" (formula "254"))
                                 (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,0,1"))
                                 (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "1,0,0,0,1"))
                                 (rule "replaceKnownSelect_taclet000000_67" (formula "199") (term "0,1,0,0,1"))
                                 (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "1,1,0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "1,0,0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "199") (term "0,1,0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "1,1,0,0,1"))
                                 (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                 (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                 (rule "notRight" (formula "254"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "eqSymm" (formula "301") (term "0,1"))
                                 (rule "eqSymm" (formula "301") (term "1,0"))
                                 (rule "eqSymm" (formula "301") (term "1,1"))
                                 (rule "eqSymm" (formula "301") (term "0,0"))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "replace_known_right" (formula "212") (term "0,1,0,0") (ifseqformula "230"))
                                  (builtin "One Step Simplification" (formula "212") (ifInst ""  (formula "265")))
                                 (rule "replace_known_right" (formula "203") (term "0,1,1,1,0") (ifseqformula "281"))
                                  (builtin "One Step Simplification" (formula "203") (ifInst ""  (formula "242")))
                                 (rule "inEqSimp_ltToLeq" (formula "144"))
                                 (rule "polySimp_mulComm0" (formula "144") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "144") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "140"))
                                 (rule "polySimp_mulComm0" (formula "140") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "140") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "109"))
                                 (rule "polySimp_mulComm0" (formula "109") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "109") (term "0"))
                                 (rule "inEqSimp_gtToGeq" (formula "177"))
                                 (rule "mul_literals" (formula "177") (term "1,0,0"))
                                 (rule "add_literals" (formula "177") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "136") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "136") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "125") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "147") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "147") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "147") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "96") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "147") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "132"))
                                 (rule "polySimp_mulComm0" (formula "132") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "132") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "113"))
                                 (rule "polySimp_mulComm0" (formula "113") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "113") (term "0"))
                                 (rule "inEqSimp_gtToGeq" (formula "116") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "116") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "116") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "162"))
                                 (rule "polySimp_mulComm0" (formula "162") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "162") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "199"))
                                 (rule "polySimp_mulComm0" (formula "199") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "199") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "167"))
                                 (rule "polySimp_mulComm0" (formula "167") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "167") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "104") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "116") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "116") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "192"))
                                 (rule "polySimp_mulComm0" (formula "192") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "134") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "134") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "102"))
                                 (rule "polySimp_mulComm0" (formula "102") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "126") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "126") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "206"))
                                 (rule "polySimp_mulComm0" (formula "206") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "147") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "153"))
                                 (rule "polySimp_mulComm0" (formula "153") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "129") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "129") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "216"))
                                 (rule "polySimp_mulComm0" (formula "216") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "176"))
                                 (rule "polySimp_mulComm0" (formula "176") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "156"))
                                 (rule "polySimp_mulComm0" (formula "156") (term "1,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "217"))
                                 (rule "mul_literals" (formula "217") (term "1,0,0"))
                                 (rule "add_literals" (formula "217") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "95") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "106") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "106") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "195"))
                                 (rule "polySimp_mulComm0" (formula "195") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "192") (term "0"))
                                 (rule "polySimp_addComm1" (formula "102") (term "0"))
                                 (rule "castedGetAny" (formula "212") (term "0,1,0,0,0"))
                                 (rule "castedGetAny" (formula "212") (term "0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "206") (term "0"))
                                 (rule "castedGetAny" (formula "203") (term "0,1,0,0,1,0"))
                                 (rule "castedGetAny" (formula "203") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "153") (term "0"))
                                 (rule "polySimp_addComm1" (formula "216") (term "0"))
                                 (rule "polySimp_addComm1" (formula "176") (term "0"))
                                 (rule "polySimp_addComm1" (formula "156") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "212") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "212") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "195") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "203") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "203") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "203") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "203") (term "1,0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "212") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "212") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "203") (term "0,0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "203") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "212") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "212") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,1,0"))
                                 (rule "applyEq" (formula "203") (term "1,1,1,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "221") (term "1,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "104") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "203") (term "1,0,1,1,0,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "154") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "195") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "68") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "72") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "203") (term "1,1,1,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "291") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "180") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "10") (term "1,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "196") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "57") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "110") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "245") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "99") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "106") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "157") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "138") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "168") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "249") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "200") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "129") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "60") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "196") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "204") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "71") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "46") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "14") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "221") (term "1,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "52") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "281") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "288") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "132") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "301") (term "0,1,1,0") (ifseqformula "40"))
                                 (rule "applyEqRigid" (formula "301") (term "0,0,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "154") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "136") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "46") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "248") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "93") (term "0") (ifseqformula "94"))
                                 (rule "applyEq" (formula "51") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "202") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "300") (term "0,1,0,0") (ifseqformula "40"))
                                 (rule "applyEq" (formula "250") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "53") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "283") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "115") (term "1,1,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "146") (term "1,1,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "66") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "132") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "155") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "133") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "150") (term "0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "81") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "15") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "299") (term "0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "133") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "246") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "12") (term "1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "281") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "220") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "179") (term "1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "69") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "103") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "284") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "98") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "57") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "14") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "179") (term "1,0,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "17") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "277") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "240") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "88") (term "0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "251") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "289") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "172") (term "0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "242") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "286") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "140") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "59") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "16") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "206") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "10") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "55") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "113") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "188") (term "1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "52") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "288") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "263") (term "0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "139") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "66") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "164") (term "5") (ifseqformula "158"))
                                 (rule "applyEq" (formula "47") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "48") (term "1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "58") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "55") (term "1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "152") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "128") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "138") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "100") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "70") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "189") (term "2") (ifseqformula "1"))
                                 (rule "applyEq" (formula "114") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "102") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "145") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "300") (term "0,1,0,1,1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "13") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "74") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "80") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "11") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "11") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "101") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "132") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "212") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "144") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "140") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "59") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "278") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "265") (term "0") (ifseqformula "97"))
                                 (rule "applyEq" (formula "245") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "51") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "59") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "130") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "75") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "58") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "191") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "54") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "10") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "50") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "164") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "60") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "172") (term "3") (ifseqformula "37"))
                                 (rule "applyEqRigid" (formula "299") (term "0,1,1,1,1") (ifseqformula "40"))
                                 (rule "applyEq" (formula "299") (term "0,0,1,1") (ifseqformula "4"))
                                 (rule "eqSymm" (formula "299") (term "1,1"))
                                 (rule "applyEq" (formula "61") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "117") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "102") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "50") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "9") (term "1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "73") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "63") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "56") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "192") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "189") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "192") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "220") (term "1,0,1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "228") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "109") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "15") (term "1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "64") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "66") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "65") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "16") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "150") (term "2") (ifseqformula "37"))
                                 (rule "applyEq" (formula "53") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "249") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "181") (term "4") (ifseqformula "180"))
                                 (rule "applyEq" (formula "49") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "259") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "56") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "66") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "17") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "243") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "59") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "135") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "54") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "87") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "64") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "150") (term "3") (ifseqformula "149"))
                                 (rule "applyEq" (formula "65") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "134") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "162") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "118") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "9") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "278") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "221") (term "3") (ifseqformula "2"))
                                 (rule "applyEq" (formula "76") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "52") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "188") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "61") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "50") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "172") (term "4") (ifseqformula "171"))
                                 (rule "applyEq" (formula "241") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "284") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "11") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "48") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "17") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "63") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "156") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "179") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "104") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "62") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "57") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "105") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "79") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "14") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "181") (term "3") (ifseqformula "38"))
                                 (rule "applyEq" (formula "13") (term "1,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "64") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "108") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "49") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "281") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "238") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "239") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "212") (term "3") (ifseqformula "1"))
                                 (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "16") (term "1,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "299") (term "0,0,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "67") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "62") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "107") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "11") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "52") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "62") (term "1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "95") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "93"))
                                 (rule "applyEqRigid" (formula "299") (term "0,0,1,1") (ifseqformula "40"))
                                 (rule "eqSymm" (formula "299") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "143"))
                                 (rule "polySimp_mulLiterals" (formula "143") (term "0"))
                                 (rule "polySimp_elimOne" (formula "143") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "176"))
                                 (rule "mul_literals" (formula "176") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "124") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "124") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "124") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "146") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "146") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "146") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "146") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "146") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "146") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "146") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "146") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "112"))
                                 (rule "polySimp_mulLiterals" (formula "112") (term "0"))
                                 (rule "polySimp_elimOne" (formula "112") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "115") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "161"))
                                 (rule "polySimp_mulLiterals" (formula "161") (term "0"))
                                 (rule "polySimp_elimOne" (formula "161") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "198"))
                                 (rule "polySimp_mulLiterals" (formula "198") (term "0"))
                                 (rule "polySimp_elimOne" (formula "198") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "166"))
                                 (rule "polySimp_mulLiterals" (formula "166") (term "0"))
                                 (rule "polySimp_elimOne" (formula "166") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "115") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "115") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "115") (term "1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "115") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "115") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "115") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "115") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "115") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "115") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "125") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "125") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "125") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "125") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "125") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "146") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "146") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "146") (term "1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "146") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "146") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "146") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "216"))
                                 (rule "mul_literals" (formula "216") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "205"))
                                 (rule "polySimp_mulLiterals" (formula "205") (term "0"))
                                 (rule "polySimp_elimOne" (formula "205") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "215"))
                                 (rule "polySimp_mulLiterals" (formula "215") (term "0"))
                                 (rule "polySimp_elimOne" (formula "215") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "175"))
                                 (rule "polySimp_mulLiterals" (formula "175") (term "0"))
                                 (rule "polySimp_elimOne" (formula "175") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "211") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "211") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "211") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "211") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "211") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "211") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "202") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "202") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "202") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "202") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "202") (term "1,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "202") (term "1,1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "202") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "202") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "202") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "202") (term "0,1,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "202") (term "1,1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "202") (term "1,1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "211") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "211") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "211") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "211") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "211") (term "1,1,0,1,0"))
                                 (rule "mul_literals" (formula "211") (term "0,1,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "194"))
                                 (rule "polySimp_mulLiterals" (formula "194") (term "0"))
                                 (rule "polySimp_elimOne" (formula "194") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "105") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "105") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "131"))
                                 (rule "polySimp_mulLiterals" (formula "131") (term "0"))
                                 (rule "polySimp_elimOne" (formula "131") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "135") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "135") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "135") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "135") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "135") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "135") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "155"))
                                 (rule "polySimp_mulLiterals" (formula "155") (term "0"))
                                 (rule "polySimp_elimOne" (formula "155") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "133") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "133") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "133") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "133") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "133") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "133") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "103") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "103") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "103") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "103") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "103") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "103") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "98") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "98") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "139"))
                                 (rule "polySimp_mulLiterals" (formula "139") (term "0"))
                                 (rule "polySimp_elimOne" (formula "139") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "152"))
                                 (rule "polySimp_mulLiterals" (formula "152") (term "0"))
                                 (rule "polySimp_elimOne" (formula "152") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "128") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "128") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "128") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "128") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "128") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "128") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "101"))
                                 (rule "polySimp_mulLiterals" (formula "101") (term "0"))
                                 (rule "polySimp_elimOne" (formula "101") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "191"))
                                 (rule "polySimp_mulLiterals" (formula "191") (term "0"))
                                 (rule "polySimp_elimOne" (formula "191") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "108"))
                                 (rule "polySimp_mulLiterals" (formula "108") (term "0"))
                                 (rule "polySimp_elimOne" (formula "108") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "95") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0,0,0,0"))
                                 (rule "pullOutSelect" (formula "188") (term "1,1,1") (inst "selectSK=java_util_Collection_seq_0"))
                                 (rule "applyEq" (formula "212") (term "1,0,1") (ifseqformula "188"))
                                 (rule "simplifySelectOfAnonEQ" (formula "188") (ifseqformula "148"))
                                  (builtin "One Step Simplification" (formula "188"))
                                 (rule "elementOfSingleton" (formula "188") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "188"))
                                 (rule "pullOutSelect" (formula "189") (term "1,0,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                                 (rule "applyEq" (formula "213") (term "1,0,0,1") (ifseqformula "189"))
                                 (rule "simplifySelectOfAnonEQ" (formula "189") (ifseqformula "186"))
                                  (builtin "One Step Simplification" (formula "189"))
                                 (rule "elementOfSingleton" (formula "189") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "189"))
                                 (rule "applyEqReverse" (formula "190") (term "1,0,1,1") (ifseqformula "189"))
                                 (rule "applyEqReverse" (formula "213") (term "1,0,0,1") (ifseqformula "189"))
                                 (rule "hideAuxiliaryEq" (formula "189"))
                                 (rule "pullOutSelect" (formula "212") (term "1,1,1") (inst "selectSK=java_util_Collection_seq_1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "212") (ifseqformula "170"))
                                  (builtin "One Step Simplification" (formula "212"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "212") (term "0,1,0,0") (ifseqformula "148"))
                                 (rule "pullOutSelect" (formula "213") (term "1,0,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "213") (ifseqformula "210"))
                                  (builtin "One Step Simplification" (formula "213"))
                                 (rule "replaceKnownSelect_taclet00000000000_119" (formula "213") (term "0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00000000000_120" (formula "213") (term "0"))
                                 (rule "applyEqReverse" (formula "214") (term "1,0,1,1") (ifseqformula "213"))
                                 (rule "hideAuxiliaryEq" (formula "213"))
                                 (rule "pullOutSelect" (formula "301") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_6"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "179"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "266")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "171"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "149"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "302") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_7"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "222"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "232")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "212"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "188"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "303") (term "1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_6"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "181"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "268")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "173"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "151"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "304") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_7"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "224"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "234")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "214"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "190"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "305") (term "1,1,1") (inst "selectSK=java_util_Collection_seq_2"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "183"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "175"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "153"))
                                 (rule "pullOutSelect" (formula "306") (term "1,0,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "226"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "replaceKnownSelect_taclet00000000000_122" (formula "1") (term "0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00000000000_123" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "307") (term "1,0,1,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "193") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_3"))
                                 (rule "applyEq" (formula "194") (term "0,0,0,0,0") (ifseqformula "193"))
                                 (rule "applyEq" (formula "194") (term "1,2,0") (ifseqformula "193"))
                                 (rule "applyEq" (formula "194") (term "1,0,0,1,0,0") (ifseqformula "193"))
                                 (rule "simplifySelectOfAnonEQ" (formula "193") (ifseqformula "153"))
                                  (builtin "One Step Simplification" (formula "193"))
                                 (rule "elementOfSingleton" (formula "193") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "193"))
                                 (rule "applyEqReverse" (formula "194") (term "0,0,0,0,0") (ifseqformula "193"))
                                 (rule "applyEqReverse" (formula "194") (term "1,1,0") (ifseqformula "193"))
                                 (rule "applyEqReverse" (formula "194") (term "1,0,0,1,0,0") (ifseqformula "193"))
                                 (rule "applyEqReverse" (formula "194") (term "1,2,0") (ifseqformula "193"))
                                 (rule "hideAuxiliaryEq" (formula "193"))
                                 (rule "replace_known_left" (formula "193") (term "0,1,0,0") (ifseqformula "83"))
                                  (builtin "One Step Simplification" (formula "193") (ifInst ""  (formula "277")))
                                 (rule "applyEqReverse" (formula "218") (term "1,0,1") (ifseqformula "193"))
                                 (rule "applyEqReverse" (formula "194") (term "1,1,1") (ifseqformula "193"))
                                 (rule "hideAuxiliaryEq" (formula "193"))
                                 (rule "pullOutSelect" (formula "193") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_3"))
                                 (rule "applyEq" (formula "218") (term "0,0,1") (ifseqformula "193"))
                                 (rule "simplifySelectOfAnonEQ" (formula "193") (ifseqformula "191"))
                                  (builtin "One Step Simplification" (formula "193") (ifInst ""  (formula "241")) (ifInst ""  (formula "25")))
                                 (rule "eqSymm" (formula "194") (term "1,1"))
                                 (rule "eqSymm" (formula "218") (term "0,1"))
                                 (rule "elementOfSingleton" (formula "193") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "193") (ifInst ""  (formula "241")))
                                 (rule "applyEqReverse" (formula "218") (term "1,0,1") (ifseqformula "193"))
                                 (rule "applyEqReverse" (formula "194") (term "1,1,1") (ifseqformula "193"))
                                 (rule "hideAuxiliaryEq" (formula "193"))
                                 (rule "eqSymm" (formula "217") (term "0,1"))
                                 (rule "eqSymm" (formula "193") (term "1,1"))
                                  (builtin "One Step Simplification" (formula "193"))
                                 (rule "true_left" (formula "193"))
                                 (rule "pullOutSelect" (formula "215") (term "0,0,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_4"))
                                 (rule "applyEq" (formula "216") (term "1,2,0") (ifseqformula "215"))
                                 (rule "applyEq" (formula "216") (term "1,1,0") (ifseqformula "215"))
                                 (rule "applyEq" (formula "216") (term "1,0,1,0,1,0,0") (ifseqformula "215"))
                                 (rule "applyEq" (formula "216") (term "1,0,0,0,1,0,0") (ifseqformula "215"))
                                 (rule "simplifySelectOfAnonEQ" (formula "215") (ifseqformula "175"))
                                  (builtin "One Step Simplification" (formula "215"))
                                 (rule "replaceKnownSelect_taclet00000000000_131" (formula "215") (term "0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00000000000_132" (formula "215") (term "0"))
                                 (rule "applyEqReverse" (formula "216") (term "1,2,0") (ifseqformula "215"))
                                 (rule "applyEqReverse" (formula "216") (term "1,1,0") (ifseqformula "215"))
                                 (rule "applyEqReverse" (formula "216") (term "1,0,1,0,1,0,0") (ifseqformula "215"))
                                 (rule "applyEqReverse" (formula "216") (term "0,0,0,0,0") (ifseqformula "215"))
                                 (rule "applyEqReverse" (formula "216") (term "1,0,0,0,1,0,0") (ifseqformula "215"))
                                 (rule "hideAuxiliaryEq" (formula "215"))
                                 (rule "replace_known_left" (formula "215") (term "0,0,1,0,0") (ifseqformula "83"))
                                  (builtin "One Step Simplification" (formula "215") (ifInst ""  (formula "275")))
                                 (rule "simplifySelectOfAnonEQ" (formula "215") (ifseqformula "153"))
                                  (builtin "One Step Simplification" (formula "215") (ifInst ""  (formula "275")) (ifInst ""  (formula "83")))
                                 (rule "elementOfSingleton" (formula "215") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "215") (ifInst ""  (formula "275")))
                                 (rule "applyEqReverse" (formula "216") (term "1,1,1") (ifseqformula "215"))
                                 (rule "hideAuxiliaryEq" (formula "215"))
                                 (rule "pullOutSelect" (formula "215") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_4"))
                                 (rule "simplifySelectOfAnonEQ" (formula "215") (ifseqformula "213"))
                                  (builtin "One Step Simplification" (formula "215") (ifInst ""  (formula "239")))
                                 (rule "replaceKnownSelect_taclet00000000000_134" (formula "215") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00000000000_135" (formula "215") (term "2,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "215") (term "0,0,0") (ifseqformula "191"))
                                 (rule "eqSymm" (formula "216") (term "1,1"))
                                 (rule "replace_known_left" (formula "215") (term "0,0,0,0") (ifseqformula "25"))
                                  (builtin "One Step Simplification" (formula "215"))
                                 (rule "applyEqReverse" (formula "216") (term "1,1,1") (ifseqformula "215"))
                                 (rule "hideAuxiliaryEq" (formula "215"))
                                 (rule "eqSymm" (formula "215") (term "1,1"))
                                  (builtin "One Step Simplification" (formula "215"))
                                 (rule "true_left" (formula "215"))
                                 (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_8"))
                                 (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "176"))
                                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "267")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "0,0,0") (ifseqformula "154"))
                                 (rule "ifthenelse_negated" (formula "5") (term "0"))
                                 (rule "pullOutSelect" (formula "4") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_9"))
                                 (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "215"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "233")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0") (ifseqformula "193"))
                                 (rule "ifthenelse_negated" (formula "4") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_8"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "178"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "269")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "156"))
                                 (rule "ifthenelse_negated" (formula "3") (term "0"))
                                 (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_9"))
                                 (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "217"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "235")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "195"))
                                 (rule "ifthenelse_negated" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "1") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_5"))
                                 (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "188"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "replaceKnownSelect_taclet00000000000_136" (formula "1") (term "0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00000000000_137" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "87"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "277")))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "179"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "277")))
                                 (rule "replaceKnownSelect_taclet00000000000_138" (formula "1") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00000000000_139" (formula "1") (term "2,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "157"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "87"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "306") (term "1,1,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "305") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_5"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "225"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "241")))
                                 (rule "replaceKnownSelect_taclet00000000000_140" (formula "1") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00000000000_141" (formula "1") (term "2,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "217"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "195"))
                                 (rule "eqSymm" (formula "306") (term "1,1"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "29"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "306") (term "1,1,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "eqSymm" (formula "305") (term "1,1"))
                                  (builtin "One Step Simplification" (formula "305"))
                                 (rule "pullOutSelect" (formula "7") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_10"))
                                 (rule "simplifySelectOfAnonEQ" (formula "7") (ifseqformula "157"))
                                  (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "270")))
                                 (rule "elementOfSingleton" (formula "7") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "270")))
                                 (rule "ifthenelse_negated" (formula "7") (term "0"))
                                 (rule "applyEq" (formula "7") (term "0") (ifseqformula "71"))
                                 (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_11"))
                                 (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "195"))
                                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "235")))
                                 (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "235")))
                                 (rule "ifthenelse_negated" (formula "5") (term "0"))
                                 (rule "applyEq" (formula "5") (term "0") (ifseqformula "24"))
                                 (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_10"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "157"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "270")))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "270")))
                                 (rule "ifthenelse_negated" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "64"))
                                 (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_11"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "195"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "235")))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "235")))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "21"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "inEqSimp_and_subsumption3" (formula "132") (term "0,0,0"))
                                 (rule "leq_literals" (formula "132") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "132"))
                                 (rule "inEqSimp_and_subsumption3" (formula "133") (term "0,0,0"))
                                 (rule "leq_literals" (formula "133") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "133"))
                                 (rule "inEqSimp_and_subsumption3" (formula "102") (term "0,0,0"))
                                 (rule "leq_literals" (formula "102") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "102"))
                                 (rule "inEqSimp_and_subsumption3" (formula "103") (term "0,0,0"))
                                 (rule "leq_literals" (formula "103") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "103"))
                                 (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "230"))
                                 (rule "replaceKnownSelect_taclet00000000_71" (formula "230") (term "0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00000000_73" (formula "230") (term "0,0,1"))
                                 (rule "replaceKnownSelect_taclet00000000_74" (formula "230") (term "0,0,1,0"))
                                 (rule "insert_constant_string_value" (formula "230") (term "0,0,0,0") (ifseqformula "165"))
                                  (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "259")))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00000000_76" (formula "230") (term "0,0,1"))
                                 (rule "castDel" (formula "230") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "230") (term "0,0") (ifseqformula "297"))
                                  (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "258")))
                                 (rule "closeTrue" (formula "230"))
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "221"))
                                 (branch
                                     (builtin "One Step Simplification" (formula "254"))
                                    (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,0,1"))
                                    (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "1,0,0,0,1"))
                                    (rule "replaceKnownSelect_taclet000000_67" (formula "199") (term "0,1,0,0,1"))
                                    (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "1,1,0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "1,0,0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "199") (term "0,1,0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "1,1,0,0,1"))
                                    (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                    (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                    (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                    (rule "notRight" (formula "254"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "eqSymm" (formula "301") (term "0,1"))
                                    (rule "eqSymm" (formula "301") (term "0,0"))
                                    (rule "eqSymm" (formula "301") (term "1,1"))
                                    (rule "eqSymm" (formula "301") (term "1,0"))
                                    (rule "eqSymm" (formula "3"))
                                    (rule "replace_known_right" (formula "212") (term "0,1,1,0") (ifseqformula "265"))
                                     (builtin "One Step Simplification" (formula "212") (ifInst ""  (formula "230")))
                                    (rule "replace_known_right" (formula "203") (term "0,1,1,1,0") (ifseqformula "281"))
                                     (builtin "One Step Simplification" (formula "203") (ifInst ""  (formula "242")))
                                    (rule "inEqSimp_gtToGeq" (formula "217"))
                                    (rule "mul_literals" (formula "217") (term "1,0,0"))
                                    (rule "add_literals" (formula "217") (term "0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "116") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "116") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "116") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "195"))
                                    (rule "polySimp_mulComm0" (formula "195") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "195") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "136") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "136") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "109"))
                                    (rule "polySimp_mulComm0" (formula "109") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "109") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "167"))
                                    (rule "polySimp_mulComm0" (formula "167") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "167") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "104") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "129") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "129") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "95") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "176"))
                                    (rule "polySimp_mulComm0" (formula "176") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "176") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "199"))
                                    (rule "polySimp_mulComm0" (formula "199") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "199") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "162"))
                                    (rule "polySimp_mulComm0" (formula "162") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "162") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "144"))
                                    (rule "polySimp_mulComm0" (formula "144") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "144") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "216"))
                                    (rule "polySimp_mulComm0" (formula "216") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "216") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "192"))
                                    (rule "polySimp_mulComm0" (formula "192") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "192") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "96") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "126") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "126") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "106") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "106") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "206"))
                                    (rule "polySimp_mulComm0" (formula "206") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "206") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "147") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "147") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "147") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "156"))
                                    (rule "polySimp_mulComm0" (formula "156") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "116") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "132"))
                                    (rule "polySimp_mulComm0" (formula "132") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "134") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "134") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "177"))
                                    (rule "mul_literals" (formula "177") (term "1,0,0"))
                                    (rule "add_literals" (formula "177") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "147") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "116") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "153"))
                                    (rule "polySimp_mulComm0" (formula "153") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "113"))
                                    (rule "polySimp_mulComm0" (formula "113") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "125") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "102"))
                                    (rule "polySimp_mulComm0" (formula "102") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "140"))
                                    (rule "polySimp_mulComm0" (formula "140") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "147") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "156") (term "0"))
                                    (rule "castedGetAny" (formula "212") (term "0,1,0,1,0"))
                                    (rule "castedGetAny" (formula "212") (term "0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "132") (term "0"))
                                    (rule "castedGetAny" (formula "203") (term "0,1,0,0,0,0"))
                                    (rule "castedGetAny" (formula "203") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "153") (term "0"))
                                    (rule "polySimp_addComm1" (formula "113") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "212") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "212") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "102") (term "0"))
                                    (rule "polySimp_addComm1" (formula "140") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "203") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "203") (term "1,0,0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "203") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "203") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "212") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "212") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "203") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "203") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "212") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,1,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "212") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,0,0"))
                                    (rule "applyEq" (formula "140") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "131") (term "1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "59") (term "1,2,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "300") (term "0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "104") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "286") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "190") (term "2") (ifseqformula "1"))
                                    (rule "applyEq" (formula "114") (term "1,1") (ifseqformula "37"))
                                    (rule "applyEq" (formula "65") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "173") (term "3") (ifseqformula "37"))
                                    (rule "applyEq" (formula "132") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "134") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "14") (term "1,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "301") (term "0,1,1,0") (ifseqformula "40"))
                                    (rule "applyEq" (formula "173") (term "0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "136") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "301") (term "0,0,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "157") (term "1,1,0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "241") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "46") (term "1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "163") (term "1,1") (ifseqformula "37"))
                                    (rule "applyEq" (formula "290") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "55") (term "1,2,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "87") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "247") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "260") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "50") (term "1,0,1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "66") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "213") (term "3") (ifseqformula "1"))
                                    (rule "applyEq" (formula "59") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "14") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "48") (term "1,2,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "102") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "280") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "156") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "72") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "168") (term "1,1") (ifseqformula "37"))
                                    (rule "applyEq" (formula "203") (term "1,1,1,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "53") (term "1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "203") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "203") (term "1,0,1,1,0,1") (ifseqformula "37"))
                                    (rule "applyEq" (formula "52") (term "1,0,1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "289") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "60") (term "1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "151") (term "3") (ifseqformula "150"))
                                    (rule "applyEq" (formula "58") (term "1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "56") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "64") (term "1,0,1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "264") (term "0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "106") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "154") (term "1,1") (ifseqformula "37"))
                                    (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "279") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "66") (term "1,0,1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "180") (term "1,0,1,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "145") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "57") (term "1,2,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "50") (term "1,2,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "133") (term "1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "182") (term "3") (ifseqformula "38"))
                                    (rule "applyEq" (formula "67") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "58") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "104") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "213") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "15") (term "1,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "195") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "66") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "99") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "301") (term "0,1,1,1,1") (ifseqformula "40"))
                                    (rule "applyEq" (formula "64") (term "1,2,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "252") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "250") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "63") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "63") (term "1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "10") (term "1,0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "200") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "222") (term "3") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "301") (term "0,1,1,1") (ifseqformula "40"))
                                    (rule "applyEq" (formula "69") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "229") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "301") (term "0,0,1,1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "62") (term "1,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "244") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "249") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "52") (term "1,2,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "193") (term "1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "88") (term "0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "103") (term "1,1,0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "193") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "56") (term "1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "278") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "52") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "81") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "282") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "139") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "13") (term "1,0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "284") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "93") (term "0") (ifseqformula "94"))
                                    (rule "applyEq" (formula "64") (term "1,0,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "280") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "105") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "79") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "247") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "48") (term "1,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "140") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "191") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "17") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "150") (term "2") (ifseqformula "37"))
                                    (rule "applyEq" (formula "54") (term "1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "238") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "150") (term "0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "104") (term "1,1,0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "172") (term "4") (ifseqformula "171"))
                                    (rule "applyEq" (formula "109") (term "1,1") (ifseqformula "37"))
                                    (rule "applyEq" (formula "10") (term "1,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "241") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "14") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "102") (term "1,1") (ifseqformula "37"))
                                    (rule "applyEq" (formula "107") (term "1,1,0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "181") (term "4") (ifseqformula "180"))
                                    (rule "applyEq" (formula "202") (term "1,1,1,0,0,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "62") (term "1,2,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "57") (term "1,0,1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "188") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "57") (term "1,0,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "152") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "108") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "16") (term "1,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "156") (term "1,1") (ifseqformula "37"))
                                    (rule "applyEq" (formula "250") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "265") (term "0") (ifseqformula "97"))
                                    (rule "applyEq" (formula "134") (term "1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "9") (term "1,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "153") (term "1,1,0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "80") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "114") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "220") (term "1,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "75") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "51") (term "1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "206") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "11") (term "1,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "68") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "164") (term "1,1") (ifseqformula "37"))
                                    (rule "applyEq" (formula "16") (term "1,0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "53") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "62") (term "1,1,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "66") (term "1,2,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "179") (term "1,0,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "98") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "128") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "46") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "244") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "74") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "9") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "203") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "70") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "54") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "289") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "140") (term "1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "59") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "135") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "47") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "179") (term "1,0,1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "164") (term "5") (ifseqformula "158"))
                                    (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "117") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "220") (term "1,0,1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "133") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "71") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "146") (term "1,1,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "12") (term "1,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "51") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "118") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "188") (term "1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "50") (term "1,0,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "145") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "115") (term "1,1,0,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "65") (term "1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "128") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "281") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "10") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "11") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "179") (term "1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "220") (term "1,0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "286") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEqRigid" (formula "299") (term "0,1,0,1,1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "299") (term "0,1,0,0") (ifseqformula "40"))
                                    (rule "applyEq" (formula "15") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "299") (term "0,0,0,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "189") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "61") (term "1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "76") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "49") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "195") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "61") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "195") (term "1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "132") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "17") (term "1,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "283") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "60") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "16") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "11") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "285") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "73") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "11") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "17") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "109") (term "1,1,0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "13") (term "1,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "245") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "239") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "100") (term "1,1,0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "52") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "55") (term "1,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "59") (term "1,0,1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "49") (term "1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "220") (term "1,0,1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "137") (term "1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "242") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "95") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "93"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "216"))
                                    (rule "mul_literals" (formula "216") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "115") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "166"))
                                    (rule "polySimp_mulLiterals" (formula "166") (term "0"))
                                    (rule "polySimp_elimOne" (formula "166") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "175"))
                                    (rule "polySimp_mulLiterals" (formula "175") (term "0"))
                                    (rule "polySimp_elimOne" (formula "175") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "198"))
                                    (rule "polySimp_mulLiterals" (formula "198") (term "0"))
                                    (rule "polySimp_elimOne" (formula "198") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "161"))
                                    (rule "polySimp_mulLiterals" (formula "161") (term "0"))
                                    (rule "polySimp_elimOne" (formula "161") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "143"))
                                    (rule "polySimp_mulLiterals" (formula "143") (term "0"))
                                    (rule "polySimp_elimOne" (formula "143") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "215"))
                                    (rule "polySimp_mulLiterals" (formula "215") (term "0"))
                                    (rule "polySimp_elimOne" (formula "215") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "125") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "125") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "125") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "125") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "125") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "205"))
                                    (rule "polySimp_mulLiterals" (formula "205") (term "0"))
                                    (rule "polySimp_elimOne" (formula "205") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "146") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "146") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "115") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "115") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "115") (term "1,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "115") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "115") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "176"))
                                    (rule "mul_literals" (formula "176") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "146") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "146") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "146") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "146") (term "1,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "146") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "146") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "115") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "115") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "115") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "115") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "124") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "124") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "124") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "146") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "146") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "146") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "146") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "146") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "146") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "112"))
                                    (rule "polySimp_mulLiterals" (formula "112") (term "0"))
                                    (rule "polySimp_elimOne" (formula "112") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "211") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "211") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "211") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "211") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "211") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "211") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "202") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "202") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "202") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "202") (term "0,1,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "202") (term "1,1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "202") (term "1,1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "202") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "202") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "202") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "202") (term "0,1,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "202") (term "1,1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "202") (term "1,1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "211") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "211") (term "1,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,1,0"))
                                    (rule "mul_literals" (formula "211") (term "0,1,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "211") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "211") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "211") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "139"))
                                    (rule "polySimp_mulLiterals" (formula "139") (term "0"))
                                    (rule "polySimp_elimOne" (formula "139") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "103") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "103") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "103") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "103") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "103") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "103") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "131"))
                                    (rule "polySimp_mulLiterals" (formula "131") (term "0"))
                                    (rule "polySimp_elimOne" (formula "131") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "133") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "133") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "133") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "133") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "133") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "133") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "101"))
                                    (rule "polySimp_mulLiterals" (formula "101") (term "0"))
                                    (rule "polySimp_elimOne" (formula "101") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "155"))
                                    (rule "polySimp_mulLiterals" (formula "155") (term "0"))
                                    (rule "polySimp_elimOne" (formula "155") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "194"))
                                    (rule "polySimp_mulLiterals" (formula "194") (term "0"))
                                    (rule "polySimp_elimOne" (formula "194") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "105") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "105") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "191"))
                                    (rule "polySimp_mulLiterals" (formula "191") (term "0"))
                                    (rule "polySimp_elimOne" (formula "191") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "152"))
                                    (rule "polySimp_mulLiterals" (formula "152") (term "0"))
                                    (rule "polySimp_elimOne" (formula "152") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "108"))
                                    (rule "polySimp_mulLiterals" (formula "108") (term "0"))
                                    (rule "polySimp_elimOne" (formula "108") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "98") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "98") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "135") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "135") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "135") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "135") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "135") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "135") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "128") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "128") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "128") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "128") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "128") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "128") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "95") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0,0,0,0"))
                                    (rule "pullOutSelect" (formula "188") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_0"))
                                    (rule "applyEq" (formula "212") (term "0,0,1") (ifseqformula "188"))
                                    (rule "simplifySelectOfAnonEQ" (formula "188") (ifseqformula "186"))
                                     (builtin "One Step Simplification" (formula "188"))
                                    (rule "eqSymm" (formula "189") (term "1,1"))
                                    (rule "eqSymm" (formula "212") (term "0,1"))
                                    (rule "elementOfSingleton" (formula "188") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "188"))
                                    (rule "pullOutSelect" (formula "212") (term "1,1,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "212") (ifseqformula "170"))
                                     (builtin "One Step Simplification" (formula "212"))
                                    (rule "applyEq" (formula "189") (term "1,0,1,1") (ifseqformula "212"))
                                    (rule "applyEq" (formula "213") (term "1,0,0,1") (ifseqformula "212"))
                                    (rule "simplifySelectOfAnonEQ" (formula "212") (ifseqformula "148"))
                                     (builtin "One Step Simplification" (formula "212"))
                                    (rule "elementOfSingleton" (formula "212") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "212"))
                                    (rule "applyEqReverse" (formula "213") (term "1,1,1,1") (ifseqformula "212"))
                                    (rule "applyEqReverse" (formula "189") (term "1,0,1,1") (ifseqformula "212"))
                                    (rule "applyEqReverse" (formula "213") (term "1,0,0,1") (ifseqformula "212"))
                                    (rule "hideAuxiliaryEq" (formula "212"))
                                    (rule "pullOutSelect" (formula "212") (term "1,0,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "212") (ifseqformula "210"))
                                     (builtin "One Step Simplification" (formula "212"))
                                    (rule "applyEq" (formula "188") (term "1,1,0") (ifseqformula "212"))
                                    (rule "applyEq" (formula "188") (term "0,0,0,0,0") (ifseqformula "212"))
                                    (rule "applyEq" (formula "188") (term "1,0,0,1,0,0") (ifseqformula "212"))
                                    (rule "applyEq" (formula "188") (term "1,2,0") (ifseqformula "212"))
                                    (rule "simplifySelectOfAnonEQ" (formula "212") (ifseqformula "186"))
                                     (builtin "One Step Simplification" (formula "212"))
                                    (rule "elementOfSingleton" (formula "212") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "212"))
                                    (rule "applyEqReverse" (formula "188") (term "1,1,0") (ifseqformula "212"))
                                    (rule "applyEqReverse" (formula "188") (term "1,2,0") (ifseqformula "212"))
                                    (rule "applyEqReverse" (formula "213") (term "1,0,1,1") (ifseqformula "212"))
                                    (rule "applyEqReverse" (formula "188") (term "1,0,0,1,0,0") (ifseqformula "212"))
                                    (rule "applyEqReverse" (formula "188") (term "0,0,0,0,0") (ifseqformula "212"))
                                    (rule "hideAuxiliaryEq" (formula "212"))
                                    (rule "replace_known_right" (formula "188") (term "0,0,0,0") (ifseqformula "235"))
                                     (builtin "One Step Simplification" (formula "188") (ifInst ""  (formula "20")))
                                    (rule "applyEqReverse" (formula "212") (term "1,0,1") (ifseqformula "188"))
                                    (rule "applyEqReverse" (formula "189") (term "1,1,1") (ifseqformula "188"))
                                    (rule "hideAuxiliaryEq" (formula "188"))
                                    (rule "pullOutSelect" (formula "299") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_6"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "179"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "264")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "171"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "149"))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "300") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_7"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "220"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "230")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "211"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "188"))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "301") (term "1,1,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "181"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "replaceKnownSelect_taclet010000000000_119" (formula "1") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet010000000000_121" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "302") (term "1,1,1,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "301") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "221"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "212"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "189"))
                                    (rule "eqSymm" (formula "302") (term "1,1"))
                                    (rule "pullOutSelect" (formula "302") (term "1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_6"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "182"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "267")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "174"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "152"))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "303") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_7"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "223"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "233")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "214"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "191"))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "216") (term "1,1,1") (inst "selectSK=java_util_Collection_seq_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "216") (ifseqformula "175"))
                                     (builtin "One Step Simplification" (formula "216") (ifInst ""  (formula "276")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "216") (term "0,0,0") (ifseqformula "153"))
                                    (rule "replace_known_left" (formula "216") (term "0,0,0,0") (ifseqformula "83"))
                                     (builtin "One Step Simplification" (formula "216"))
                                    (rule "applyEq" (formula "217") (term "0,0,1") (ifseqformula "216"))
                                    (rule "applyEq" (formula "193") (term "0,1,1") (ifseqformula "216"))
                                    (rule "simplifySelectOfAnonEQ" (formula "216") (ifseqformula "153"))
                                     (builtin "One Step Simplification" (formula "216") (ifInst ""  (formula "276")) (ifInst ""  (formula "83")))
                                    (rule "eqSymm" (formula "217") (term "0,1"))
                                    (rule "eqSymm" (formula "193") (term "1,1"))
                                    (rule "elementOfSingleton" (formula "216") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "216") (ifInst ""  (formula "276")))
                                    (rule "applyEqReverse" (formula "217") (term "1,0,1") (ifseqformula "216"))
                                    (rule "applyEqReverse" (formula "217") (term "1,1,1") (ifseqformula "216"))
                                    (rule "applyEqReverse" (formula "193") (term "1,1,1") (ifseqformula "216"))
                                     (builtin "One Step Simplification" (formula "193"))
                                    (rule "true_left" (formula "193"))
                                    (rule "hideAuxiliaryEq" (formula "215"))
                                    (rule "pullOutSelect" (formula "215") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_3"))
                                    (rule "simplifySelectOfAnonEQ" (formula "215") (ifseqformula "213"))
                                     (builtin "One Step Simplification" (formula "215") (ifInst ""  (formula "239")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "215") (term "0,0,0") (ifseqformula "191"))
                                    (rule "eqSymm" (formula "216") (term "1,1"))
                                    (rule "replace_known_left" (formula "215") (term "0,0,0,0") (ifseqformula "25"))
                                     (builtin "One Step Simplification" (formula "215"))
                                    (rule "simplifySelectOfAnonEQ" (formula "215") (ifseqformula "191"))
                                     (builtin "One Step Simplification" (formula "215") (ifInst ""  (formula "239")) (ifInst ""  (formula "25")))
                                    (rule "elementOfSingleton" (formula "215") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "215") (ifInst ""  (formula "239")))
                                    (rule "applyEqReverse" (formula "216") (term "1,1,1") (ifseqformula "215"))
                                    (rule "hideAuxiliaryEq" (formula "215"))
                                    (rule "eqSymm" (formula "215") (term "1,1"))
                                     (builtin "One Step Simplification" (formula "215"))
                                    (rule "true_left" (formula "215"))
                                    (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_8"))
                                    (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "176"))
                                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "267")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "0,0,0") (ifseqformula "154"))
                                    (rule "ifthenelse_negated" (formula "5") (term "0"))
                                    (rule "pullOutSelect" (formula "4") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_9"))
                                    (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "215"))
                                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "233")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0") (ifseqformula "193"))
                                    (rule "ifthenelse_negated" (formula "4") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "1,2,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_3"))
                                    (rule "applyEq" (formula "4") (term "1,0,1,0,0,1,0,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "4") (term "1,0,0,0,0,1,0,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "4") (term "0,0,0,0,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "4") (term "1,0,1,0,1,0,0") (ifseqformula "3"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "224"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "replaceKnownSelect_taclet010000000000_122" (formula "3") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet010000000000_124" (formula "3") (term "0"))
                                    (rule "applyEqReverse" (formula "4") (term "1,0,1,0,0,1,0,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "1,2,0") (ifseqformula "3"))
                                    (rule "replaceKnownSelect_taclet010000000000_136" (formula "4") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet010000000000_138" (formula "4") (term "2,0"))
                                    (rule "applyEqReverse" (formula "4") (term "1,0,0,0,0,1,0,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "1,0,1,0,1,0,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_left" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "27"))
                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "239")))
                                    (rule "applyEqReverse" (formula "304") (term "1,1,1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "pullOutSelect" (formula "303") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_4"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "185"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "275")))
                                    (rule "replaceKnownSelect_taclet010000000000_133" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet010000000000_135" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "177"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "155"))
                                    (rule "eqSymm" (formula "304") (term "1,1"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "85"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "304") (term "1,1,1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "304"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_8"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "177"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "268")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "155"))
                                    (rule "ifthenelse_negated" (formula "2") (term "0"))
                                    (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_9"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "216"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "234")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "194"))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "7") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_10"))
                                    (rule "simplifySelectOfAnonEQ" (formula "7") (ifseqformula "157"))
                                     (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "270")))
                                    (rule "elementOfSingleton" (formula "7") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "270")))
                                    (rule "ifthenelse_negated" (formula "7") (term "0"))
                                    (rule "applyEq" (formula "7") (term "0") (ifseqformula "71"))
                                    (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_11"))
                                    (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "195"))
                                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "235")))
                                    (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "235")))
                                    (rule "ifthenelse_negated" (formula "5") (term "0"))
                                    (rule "applyEq" (formula "5") (term "0") (ifseqformula "24"))
                                    (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_10"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "157"))
                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "270")))
                                    (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "270")))
                                    (rule "ifthenelse_negated" (formula "3") (term "0"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "64"))
                                    (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_11"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "195"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "235")))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "235")))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "21"))
                                    (rule "hideAuxiliaryEq" (formula "21"))
                                    (rule "inEqSimp_and_subsumption3" (formula "102") (term "0,0,0"))
                                    (rule "leq_literals" (formula "102") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "102"))
                                    (rule "inEqSimp_and_subsumption3" (formula "133") (term "0,0,0"))
                                    (rule "leq_literals" (formula "133") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "133"))
                                    (rule "inEqSimp_and_subsumption3" (formula "132") (term "0,0,0"))
                                    (rule "leq_literals" (formula "132") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "132"))
                                    (rule "inEqSimp_and_subsumption3" (formula "103") (term "0,0,0"))
                                    (rule "leq_literals" (formula "103") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "103"))
                                    (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "230"))
                                    (rule "replaceKnownSelect_taclet00000000_77" (formula "230") (term "1,0,1"))
                                    (rule "replaceKnownSelect_taclet00000000_77" (formula "230") (term "0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00000000_79" (formula "230") (term "1,0,1"))
                                    (rule "replaceKnownSelect_taclet00000000_80" (formula "230") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00000000_82" (formula "230") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00000000_79" (formula "230") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "230") (term "1") (ifseqformula "130"))
                                     (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "262")))
                                    (rule "closeTrue" (formula "230"))
                                 )
                                 (branch "Case 2"
                                    (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "221") (userinteraction))
                                    (rule "andRight" (formula "221"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "221"))
                                       (branch
                                          (rule "andRight" (formula "221"))
                                          (branch
                                              (builtin "One Step Simplification" (formula "254"))
                                             (rule "replaceKnownSelect_taclet00000000_86" (formula "221") (term "0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00000000_88" (formula "221") (term "0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,0,1"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "1,0,0,0,1"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "199") (term "0,1,0,0,1"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "1,1,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "1,0,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "199") (term "0,1,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "1,1,0,0,1"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                             (rule "notRight" (formula "254"))
                                             (rule "notRight" (formula "222"))
                                             (rule "close" (formula "253") (ifseqformula "1"))
                                          )
                                          (branch
                                              (builtin "One Step Simplification" (formula "254"))
                                             (rule "replaceKnownSelect_taclet00000000_83" (formula "221") (term "0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00000000_85" (formula "221") (term "0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,0,1"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "1,0,0,0,1"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "199") (term "0,1,0,0,1"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "1,1,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "1,0,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "199") (term "0,1,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "1,1,0,0,1"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                             (rule "notRight" (formula "254"))
                                             (rule "notRight" (formula "222"))
                                             (rule "close" (formula "252") (ifseqformula "1"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "221") (userinteraction))
                                          (rule "andRight" (formula "221"))
                                          (branch
                                             (rule "andRight" (formula "221"))
                                             (branch
                                                 (builtin "One Step Simplification" (formula "254"))
                                                (rule "replaceKnownSelect_taclet00000000_86" (formula "221") (term "1,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00000000_88" (formula "221") (term "1,0,0"))
                                                (rule "replaceKnownSelect_taclet00000000_102" (formula "221") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00000000_104" (formula "221") (term "0,0"))
                                                (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,0,1"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "1,0,0,0,1"))
                                                (rule "replaceKnownSelect_taclet000000_67" (formula "199") (term "0,1,0,0,1"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "1,1,0,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "1,0,0,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "199") (term "0,1,0,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "1,1,0,0,1"))
                                                (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                                (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                                (rule "notRight" (formula "254"))
                                                (rule "notRight" (formula "222"))
                                                (rule "close" (formula "231") (ifseqformula "1"))
                                             )
                                             (branch
                                                 (builtin "One Step Simplification" (formula "254"))
                                                (rule "replaceKnownSelect_taclet00000000_86" (formula "221") (term "1,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00000000_88" (formula "221") (term "1,0,0"))
                                                (rule "replaceKnownSelect_taclet00000000_105" (formula "221") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00000000_107" (formula "221") (term "0,0"))
                                                (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,0,1"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "1,0,0,0,1"))
                                                (rule "replaceKnownSelect_taclet000000_67" (formula "199") (term "0,1,0,0,1"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "1,1,0,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "1,0,0,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "199") (term "0,1,0,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "1,1,0,0,1"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                                (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                                (rule "notRight" (formula "254"))
                                                (rule "notRight" (formula "222"))
                                                (rule "close" (formula "230") (ifseqformula "1"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "221"))
                                             (branch
                                                 (builtin "One Step Simplification" (formula "254"))
                                                (rule "replaceKnownSelect_taclet00000000_86" (formula "221") (term "1,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00000000_88" (formula "221") (term "1,1"))
                                                (rule "replaceKnownSelect_taclet00000000_102" (formula "221") (term "1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00000000_104" (formula "221") (term "1"))
                                                (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,0,1"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "1,0,0,0,1"))
                                                (rule "replaceKnownSelect_taclet000000_67" (formula "199") (term "0,1,0,0,1"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "1,1,0,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "1,0,0,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "199") (term "0,1,0,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "1,1,0,0,1"))
                                                (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                                (rule "notRight" (formula "254"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "eqSymm" (formula "301") (term "1,1"))
                                                (rule "eqSymm" (formula "301") (term "0,1"))
                                                (rule "eqSymm" (formula "301") (term "0,0"))
                                                (rule "eqSymm" (formula "301") (term "1,0"))
                                                (rule "eqSymm" (formula "3"))
                                                (rule "replace_known_right" (formula "212") (term "0,1,1,0") (ifseqformula "265"))
                                                 (builtin "One Step Simplification" (formula "212") (ifInst ""  (formula "230")))
                                                (rule "replace_known_right" (formula "203") (term "0,1,1,0,0") (ifseqformula "242"))
                                                 (builtin "One Step Simplification" (formula "203") (ifInst ""  (formula "281")))
                                                (rule "inEqSimp_gtToGeq" (formula "217"))
                                                (rule "mul_literals" (formula "217") (term "1,0,0"))
                                                (rule "add_literals" (formula "217") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "134") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "134") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "156"))
                                                (rule "polySimp_mulComm0" (formula "156") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "156") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "95") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "96") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "116") (term "0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "116") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "109"))
                                                (rule "polySimp_mulComm0" (formula "109") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "109") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "116") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "195"))
                                                (rule "polySimp_mulComm0" (formula "195") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "195") (term "0"))
                                                (rule "inEqSimp_gtToGeq" (formula "147") (term "0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "147") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "147") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "132"))
                                                (rule "polySimp_mulComm0" (formula "132") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "132") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "126") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "126") (term "1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "162"))
                                                (rule "polySimp_mulComm0" (formula "162") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "162") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "176"))
                                                (rule "polySimp_mulComm0" (formula "176") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "176") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "144"))
                                                (rule "polySimp_mulComm0" (formula "144") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "144") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "206"))
                                                (rule "polySimp_mulComm0" (formula "206") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "206") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "129") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "129") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "116") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "216"))
                                                (rule "polySimp_mulComm0" (formula "216") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "199"))
                                                (rule "polySimp_mulComm0" (formula "199") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "106") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "106") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "147") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "136") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "136") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "177"))
                                                (rule "mul_literals" (formula "177") (term "1,0,0"))
                                                (rule "add_literals" (formula "177") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "104") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "147") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "140"))
                                                (rule "polySimp_mulComm0" (formula "140") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "153"))
                                                (rule "polySimp_mulComm0" (formula "153") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "125") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "192"))
                                                (rule "polySimp_mulComm0" (formula "192") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "167"))
                                                (rule "polySimp_mulComm0" (formula "167") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "102"))
                                                (rule "polySimp_mulComm0" (formula "102") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "113"))
                                                (rule "polySimp_mulComm0" (formula "113") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "216") (term "0"))
                                                (rule "polySimp_addComm1" (formula "199") (term "0"))
                                                (rule "castedGetAny" (formula "212") (term "0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "212") (term "0,1,0,0,0"))
                                                (rule "castedGetAny" (formula "203") (term "0,1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "203") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "140") (term "0"))
                                                (rule "polySimp_addComm1" (formula "153") (term "0"))
                                                (rule "polySimp_addComm1" (formula "192") (term "0"))
                                                (rule "polySimp_addComm1" (formula "167") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "212") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "102") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "212") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "113") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "203") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "203") (term "1,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "203") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "203") (term "1,0,0,1,0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "212") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "212") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "203") (term "0,0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "203") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "212") (term "1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "212") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,0,0"))
                                                (rule "applyEq" (formula "88") (term "0,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "252") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "192") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "80") (term "1,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "133") (term "1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "301") (term "0,0,1,1") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "301") (term "1,1"))
                                                (rule "applyEq" (formula "241") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "300") (term "0") (ifseqformula "37"))
                                                (rule "applyEqRigid" (formula "301") (term "0,0,1,0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "301") (term "1,0"))
                                                (rule "applyEq" (formula "301") (term "0,1,0,0") (ifseqformula "40"))
                                                (rule "applyEq" (formula "173") (term "0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "57") (term "1,0,1,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "16") (term "1,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "49") (term "1,1,0,1") (ifseqformula "38"))
                                                (rule "applyEq" (formula "99") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "14") (term "1,2,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "136") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "59") (term "1,0,1,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "62") (term "1,0,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "87") (term "1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "195") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "260") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "182") (term "3") (ifseqformula "38"))
                                                (rule "applyEq" (formula "52") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "280") (term "1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "154") (term "1,1") (ifseqformula "37"))
                                                (rule "applyEq" (formula "11") (term "1,2,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "151") (term "2") (ifseqformula "37"))
                                                (rule "applyEq" (formula "151") (term "0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "66") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "193") (term "1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "229") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "247") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "53") (term "1,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "79") (term "1,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "17") (term "1,2,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "57") (term "1,0,0,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "54") (term "1,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "135") (term "1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "129") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "76") (term "1,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "116") (term "1,1,0,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "66") (term "1,0,1,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "81") (term "1,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "153") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "203") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "221") (term "1,0,0,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "203") (term "1,1,1,0,0,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "64") (term "1,0,1,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "221") (term "1,0,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "180") (term "1,0,0,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "105") (term "1,1,0,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "53") (term "1,1,0,1") (ifseqformula "38"))
                                                (rule "applyEq" (formula "106") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "140") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "133") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "63") (term "1,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "15") (term "1,0,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "193") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "71") (term "1,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "101") (term "1,1,0,0") (ifseqformula "37"))
                                                (rule "applyEqRigid" (formula "301") (term "0,0,0,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "58") (term "1,1,0,1") (ifseqformula "38"))
                                                (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "221") (term "1,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "16") (term "1,2,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "221") (term "1,0,1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "139") (term "1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "10") (term "1,0,0,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "114") (term "1,1") (ifseqformula "37"))
                                                (rule "applyEq" (formula "99") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "104") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "132") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "165") (term "1,1") (ifseqformula "37"))
                                                (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "59") (term "1,2,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "66") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "204") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "287") (term "1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "69") (term "1,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "156") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "163") (term "1,1") (ifseqformula "37"))
                                                (rule "applyEq" (formula "103") (term "1,1,0,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "11") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "246") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "62") (term "1,2,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "180") (term "1,0,1,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "291") (term "1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "58") (term "1,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "190") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "250") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "108") (term "1,1,0,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "103") (term "1,1") (ifseqformula "37"))
                                                (rule "applyEq" (formula "9") (term "1,2,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "11") (term "1,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "73") (term "1,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "75") (term "1,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "52") (term "1,0,1,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "288") (term "1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "13") (term "1,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "13") (term "1,0,0,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "157") (term "1,1,0,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "61") (term "1,1,0,1") (ifseqformula "38"))
                                                (rule "applyEq" (formula "50") (term "1,2,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "141") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "196") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "281") (term "1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "189") (term "1,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "50") (term "1,0,1,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "245") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "145") (term "1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "157") (term "1,1") (ifseqformula "37"))
                                                (rule "applyEq" (formula "56") (term "1,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "17") (term "1,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "222") (term "3") (ifseqformula "2"))
                                                (rule "applyEq" (formula "51") (term "1,1,0,1") (ifseqformula "38"))
                                                (rule "applyEq" (formula "115") (term "1,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "16") (term "1,0,0,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "62") (term "1,1,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "59") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "180") (term "1,0,1,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "282") (term "1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "67") (term "1,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "64") (term "1,0,0,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "146") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "249") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "239") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "266") (term "0") (ifseqformula "98"))
                                                (rule "applyEq" (formula "54") (term "1,1,0,1") (ifseqformula "38"))
                                                (rule "applyEq" (formula "277") (term "1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "189") (term "1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "17") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "50") (term "1,0,0,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "200") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "15") (term "1,2,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "48") (term "1,2,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "147") (term "1,1,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "129") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "55") (term "1,2,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "248") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "119") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "65") (term "1,1,0,1") (ifseqformula "38"))
                                                (rule "applyEq" (formula "9") (term "1,0,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "104") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "134") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "173") (term "3") (ifseqformula "37"))
                                                (rule "applyEq" (formula "182") (term "4") (ifseqformula "181"))
                                                (rule "applyEq" (formula "196") (term "1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "51") (term "1,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "12") (term "1,0,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "136") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "283") (term "1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "47") (term "1,1,0,1") (ifseqformula "38"))
                                                (rule "applyEq" (formula "48") (term "1,0,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "264") (term "0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "93") (term "0") (ifseqformula "94"))
                                                (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "117") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "281") (term "1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "11") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "242") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "153") (term "1,1,0,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "130") (term "1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "277") (term "1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "133") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "72") (term "1,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "56") (term "1,1,0,1") (ifseqformula "38"))
                                                (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "60") (term "1,1,0,1") (ifseqformula "38"))
                                                (rule "applyEq" (formula "239") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "57") (term "1,2,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "284") (term "1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "64") (term "1,2,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "140") (term "1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "101") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "105") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "109") (term "1,1,0,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "60") (term "1,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "287") (term "1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "288") (term "1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "283") (term "1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "212") (term "3") (ifseqformula "1"))
                                                (rule "applyEq" (formula "52") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "206") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "46") (term "1,1,0,1") (ifseqformula "38"))
                                                (rule "applyEq" (formula "14") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "46") (term "1,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "55") (term "1,0,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "167") (term "1,1") (ifseqformula "37"))
                                                (rule "applyEq" (formula "243") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "52") (term "1,2,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "70") (term "1,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "150") (term "3") (ifseqformula "149"))
                                                (rule "applyEq" (formula "250") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "137") (term "1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "189") (term "2") (ifseqformula "1"))
                                                (rule "applyEq" (formula "59") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "66") (term "1,2,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "68") (term "1,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "108") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "202") (term "1,1,1,0,0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "172") (term "4") (ifseqformula "171"))
                                                (rule "applyEq" (formula "241") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "49") (term "1,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "212") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "65") (term "1,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "179") (term "1,0,1") (ifseqformula "38"))
                                                (rule "applyEq" (formula "74") (term "1,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "14") (term "1,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "202") (term "1,0,1,1,0,1") (ifseqformula "37"))
                                                (rule "applyEq" (formula "109") (term "1,1") (ifseqformula "37"))
                                                (rule "applyEq" (formula "61") (term "1,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "10") (term "1,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "63") (term "1,1,0,1") (ifseqformula "38"))
                                                (rule "applyEq" (formula "10") (term "1,2,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "164") (term "5") (ifseqformula "158"))
                                                (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "95") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "93"))
                                                (rule "applyEqRigid" (formula "299") (term "0,0,1,0") (ifseqformula "40"))
                                                (rule "eqSymm" (formula "299") (term "1,0"))
                                                (rule "applyEq" (formula "299") (term "0,0,1,1") (ifseqformula "40"))
                                                (rule "eqSymm" (formula "299") (term "1,1"))
                                                (rule "applyEqRigid" (formula "299") (term "0,1,1,1,1") (ifseqformula "40"))
                                                (rule "applyEq" (formula "299") (term "0,1,0,1,1") (ifseqformula "4"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "216"))
                                                (rule "mul_literals" (formula "216") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "115") (term "1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "115") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "115") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "115") (term "1,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "115") (term "0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "115") (term "1,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "146") (term "0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "146") (term "1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "125") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "125") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "125") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "125") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "125") (term "1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "161"))
                                                (rule "polySimp_mulLiterals" (formula "161") (term "0"))
                                                (rule "polySimp_elimOne" (formula "161") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "175"))
                                                (rule "polySimp_mulLiterals" (formula "175") (term "0"))
                                                (rule "polySimp_elimOne" (formula "175") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "143"))
                                                (rule "polySimp_mulLiterals" (formula "143") (term "0"))
                                                (rule "polySimp_elimOne" (formula "143") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "205"))
                                                (rule "polySimp_mulLiterals" (formula "205") (term "0"))
                                                (rule "polySimp_elimOne" (formula "205") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "115") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "115") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "115") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "115") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "146") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "146") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "146") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "146") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "146") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "146") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "176"))
                                                (rule "mul_literals" (formula "176") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "146") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "146") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "146") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "146") (term "1,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "146") (term "0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "146") (term "1,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "124") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "124") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "124") (term "1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "215"))
                                                (rule "polySimp_mulLiterals" (formula "215") (term "0"))
                                                (rule "polySimp_elimOne" (formula "215") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "198"))
                                                (rule "polySimp_mulLiterals" (formula "198") (term "0"))
                                                (rule "polySimp_elimOne" (formula "198") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "166"))
                                                (rule "polySimp_mulLiterals" (formula "166") (term "0"))
                                                (rule "polySimp_elimOne" (formula "166") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "211") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "211") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "211") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "211") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "211") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "211") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "112"))
                                                (rule "polySimp_mulLiterals" (formula "112") (term "0"))
                                                (rule "polySimp_elimOne" (formula "112") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "202") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "202") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "202") (term "1,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "202") (term "0,1,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "202") (term "1,1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "202") (term "1,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "202") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "202") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "202") (term "1,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "202") (term "0,1,1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "202") (term "1,1,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "202") (term "1,1,1,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "211") (term "1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "211") (term "1,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,1,0"))
                                                (rule "mul_literals" (formula "211") (term "0,1,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "211") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "211") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "211") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "191"))
                                                (rule "polySimp_mulLiterals" (formula "191") (term "0"))
                                                (rule "polySimp_elimOne" (formula "191") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "135") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "135") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "135") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "135") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "135") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "135") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "194"))
                                                (rule "polySimp_mulLiterals" (formula "194") (term "0"))
                                                (rule "polySimp_elimOne" (formula "194") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "152"))
                                                (rule "polySimp_mulLiterals" (formula "152") (term "0"))
                                                (rule "polySimp_elimOne" (formula "152") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "105") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "105") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "139"))
                                                (rule "polySimp_mulLiterals" (formula "139") (term "0"))
                                                (rule "polySimp_elimOne" (formula "139") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "98") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "98") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "103") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "103") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "103") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "103") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "103") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "103") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "131"))
                                                (rule "polySimp_mulLiterals" (formula "131") (term "0"))
                                                (rule "polySimp_elimOne" (formula "131") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "155"))
                                                (rule "polySimp_mulLiterals" (formula "155") (term "0"))
                                                (rule "polySimp_elimOne" (formula "155") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "128") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "128") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "128") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "128") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "128") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "128") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "133") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "133") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "133") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "133") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "133") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "133") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "101"))
                                                (rule "polySimp_mulLiterals" (formula "101") (term "0"))
                                                (rule "polySimp_elimOne" (formula "101") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "108"))
                                                (rule "polySimp_mulLiterals" (formula "108") (term "0"))
                                                (rule "polySimp_elimOne" (formula "108") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "95") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0,0,0,0"))
                                                (rule "pullOutSelect" (formula "188") (term "1,1,1") (inst "selectSK=java_util_Collection_seq_0"))
                                                (rule "applyEq" (formula "212") (term "1,0,1") (ifseqformula "188"))
                                                (rule "simplifySelectOfAnonEQ" (formula "188") (ifseqformula "148"))
                                                 (builtin "One Step Simplification" (formula "188"))
                                                (rule "elementOfSingleton" (formula "188") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "188"))
                                                (rule "pullOutSelect" (formula "189") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_1"))
                                                (rule "applyEq" (formula "213") (term "0,0,1") (ifseqformula "189"))
                                                (rule "simplifySelectOfAnonEQ" (formula "189") (ifseqformula "186"))
                                                 (builtin "One Step Simplification" (formula "189"))
                                                (rule "elementOfSingleton" (formula "189") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "189"))
                                                (rule "pullOutSelect" (formula "213") (term "1,0,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                                                (rule "simplifySelectOfAnonEQ" (formula "213") (ifseqformula "211"))
                                                 (builtin "One Step Simplification" (formula "213"))
                                                (rule "applyEq" (formula "189") (term "0,0,0,0,0") (ifseqformula "213"))
                                                (rule "applyEq" (formula "189") (term "1,2,0") (ifseqformula "213"))
                                                (rule "applyEq" (formula "189") (term "1,0,0,1,0,0") (ifseqformula "213"))
                                                (rule "applyEq" (formula "189") (term "1,1,0") (ifseqformula "213"))
                                                (rule "simplifySelectOfAnonEQ" (formula "213") (ifseqformula "186"))
                                                 (builtin "One Step Simplification" (formula "213"))
                                                (rule "elementOfSingleton" (formula "213") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "213"))
                                                (rule "applyEqReverse" (formula "189") (term "1,1,0") (ifseqformula "213"))
                                                (rule "applyEqReverse" (formula "189") (term "0,0,0,0,0") (ifseqformula "213"))
                                                (rule "applyEqReverse" (formula "189") (term "1,0,0,1,0,0") (ifseqformula "213"))
                                                (rule "applyEqReverse" (formula "214") (term "1,0,1,1") (ifseqformula "213"))
                                                (rule "applyEqReverse" (formula "189") (term "1,2,0") (ifseqformula "213"))
                                                (rule "hideAuxiliaryEq" (formula "213"))
                                                (rule "replace_known_left" (formula "189") (term "0,1,0,0") (ifseqformula "20"))
                                                 (builtin "One Step Simplification" (formula "189") (ifInst ""  (formula "236")))
                                                (rule "applyEqReverse" (formula "190") (term "0,1,1") (ifseqformula "189"))
                                                (rule "applyEqReverse" (formula "213") (term "0,0,1") (ifseqformula "189"))
                                                (rule "hideAuxiliaryEq" (formula "189"))
                                                (rule "pullOutSelect" (formula "212") (term "1,1,1") (inst "selectSK=java_util_Collection_seq_2"))
                                                (rule "simplifySelectOfAnonEQ" (formula "212") (ifseqformula "170"))
                                                 (builtin "One Step Simplification" (formula "212"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "212") (term "0,1,0,0") (ifseqformula "148"))
                                                (rule "pullOutSelect" (formula "301") (term "1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "179"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "266")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "171"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "149"))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "302") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_7"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "222"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "232")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "212"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "188"))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "303") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "181"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "268")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "173"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "151"))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "304") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_7"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "224"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "234")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "214"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "190"))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "305") (term "1,1,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "183"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEq" (formula "217") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "217") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "217") (term "1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "217") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "217") (term "0,0,0,0,0") (ifseqformula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "175"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEq" (formula "193") (term "1,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "193") (term "0,0,0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "193") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "193") (term "1,1,0") (ifseqformula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "153"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "306") (term "1,1,1,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "217") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "193") (term "0,0,0,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "193") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "217") (term "0,0,0,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "217") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "193") (term "1,1,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "193") (term "1,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "217") (term "1,1,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "217") (term "1,2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_right" (formula "216") (term "0,0,0,0") (ifseqformula "276"))
                                                 (builtin "One Step Simplification" (formula "216") (ifInst ""  (formula "82")))
                                                (rule "simplifySelectOfAnonEQ" (formula "216") (ifseqformula "152"))
                                                 (builtin "One Step Simplification" (formula "216") (ifInst ""  (formula "276")) (ifInst ""  (formula "82")))
                                                (rule "replace_known_left" (formula "192") (term "0,1,0,0") (ifseqformula "82"))
                                                 (builtin "One Step Simplification" (formula "192") (ifInst ""  (formula "276")))
                                                (rule "applyEqReverse" (formula "193") (term "1,1,1") (ifseqformula "192"))
                                                 (builtin "One Step Simplification" (formula "193"))
                                                (rule "true_left" (formula "193"))
                                                (rule "applyEqReverse" (formula "216") (term "1,0,1") (ifseqformula "192"))
                                                (rule "hideAuxiliaryEq" (formula "192"))
                                                (rule "elementOfSingleton" (formula "214") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "214") (ifInst ""  (formula "274")))
                                                (rule "applyEqReverse" (formula "215") (term "1,1,1") (ifseqformula "214"))
                                                (rule "hideAuxiliaryEq" (formula "214"))
                                                (rule "pullOutSelect" (formula "302") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "222"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "213"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "191"))
                                                (rule "eqSymm" (formula "303") (term "1,1"))
                                                (rule "pullOutSelect" (formula "215") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_4"))
                                                (rule "simplifySelectOfAnonEQ" (formula "215") (ifseqformula "213"))
                                                 (builtin "One Step Simplification" (formula "215") (ifInst ""  (formula "239")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "215") (term "0,0,0") (ifseqformula "191"))
                                                (rule "eqSymm" (formula "216") (term "1,1"))
                                                (rule "replace_known_left" (formula "215") (term "0,0,0,0") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "215"))
                                                (rule "simplifySelectOfAnonEQ" (formula "215") (ifseqformula "191"))
                                                 (builtin "One Step Simplification" (formula "215") (ifInst ""  (formula "239")) (ifInst ""  (formula "25")))
                                                (rule "elementOfSingleton" (formula "215") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "215") (ifInst ""  (formula "239")))
                                                (rule "applyEqReverse" (formula "216") (term "1,1,1") (ifseqformula "215"))
                                                (rule "hideAuxiliaryEq" (formula "215"))
                                                (rule "eqSymm" (formula "215") (term "1,1"))
                                                 (builtin "One Step Simplification" (formula "215"))
                                                (rule "true_left" (formula "215"))
                                                (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_8"))
                                                (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "176"))
                                                 (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "267")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "0,0,0") (ifseqformula "154"))
                                                (rule "ifthenelse_negated" (formula "5") (term "0"))
                                                (rule "pullOutSelect" (formula "4") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_9"))
                                                (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "215"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "233")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0") (ifseqformula "193"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_8"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "178"))
                                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "269")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "156"))
                                                (rule "ifthenelse_negated" (formula "3") (term "0"))
                                                (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_9"))
                                                (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "217"))
                                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "235")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "195"))
                                                (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_util_Collection_seq_5"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "218"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "196"))
                                                (rule "pullOutSelect" (formula "2") (term "0,0,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                                                (rule "applyEq" (formula "3") (term "1,0,1,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "2"))
                                                (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "227"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "replaceKnownSelect_taclet0110110000000000_120" (formula "2") (term "0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0110110000000000_122" (formula "2") (term "0"))
                                                (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,1,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                                (rule "replaceKnownSelect_taclet0110110000000000_138" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0110110000000000_139" (formula "1") (term "2,0"))
                                                (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "242"))
                                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "30")))
                                                (rule "applyEqReverse" (formula "307") (term "1,1,1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "29"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "241")))
                                                (rule "applyEqReverse" (formula "306") (term "1,1,1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "pullOutSelect" (formula "305") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "187"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "277")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "179"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "157"))
                                                (rule "eqSymm" (formula "306") (term "1,1"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "87"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "179"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "277")))
                                                (rule "replaceKnownSelect_taclet0110110000000000_133" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0110110000000000_135" (formula "1") (term "2,0"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "157"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "87"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "306") (term "1,1,1") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "306"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "pullOutSelect" (formula "7") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_10"))
                                                (rule "simplifySelectOfAnonEQ" (formula "7") (ifseqformula "157"))
                                                 (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "270")))
                                                (rule "elementOfSingleton" (formula "7") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "270")))
                                                (rule "ifthenelse_negated" (formula "7") (term "0"))
                                                (rule "applyEq" (formula "7") (term "0") (ifseqformula "64"))
                                                (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_11"))
                                                (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "195"))
                                                 (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "235")))
                                                (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "235")))
                                                (rule "ifthenelse_negated" (formula "5") (term "0"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "21"))
                                                (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_10"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "157"))
                                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "270")))
                                                (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "270")))
                                                (rule "ifthenelse_negated" (formula "3") (term "0"))
                                                (rule "applyEq" (formula "71") (term "0") (ifseqformula "3"))
                                                (rule "applyEqReverse" (formula "73") (term "1,0") (ifseqformula "71"))
                                                (rule "hideAuxiliaryEq" (formula "71"))
                                                (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_11"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "195"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "235")))
                                                (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "235")))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "applyEq" (formula "1") (term "0") (ifseqformula "25"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "inEqSimp_and_subsumption3" (formula "102") (term "0,0,0"))
                                                (rule "leq_literals" (formula "102") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "102"))
                                                (rule "inEqSimp_and_subsumption3" (formula "133") (term "0,0,0"))
                                                (rule "leq_literals" (formula "133") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "133"))
                                                (rule "inEqSimp_and_subsumption3" (formula "132") (term "0,0,0"))
                                                (rule "leq_literals" (formula "132") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "132"))
                                                (rule "inEqSimp_and_subsumption3" (formula "103") (term "0,0,0"))
                                                (rule "leq_literals" (formula "103") (term "0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "103"))
                                                (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "230"))
                                                (rule "closeTrue" (formula "230"))
                                             )
                                             (branch "Case 2"
                                                (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "221") (userinteraction))
                                                (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "221") (term "1") (userinteraction))
                                                 (builtin "One Step Simplification" (formula "254"))
                                                 (builtin "One Step Simplification" (formula "221"))
                                                (rule "replaceKnownSelect_taclet00000000_86" (formula "221") (term "1,1,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00000000_88" (formula "221") (term "1,1,0,0"))
                                                (rule "replaceKnownSelect_taclet00000000_105" (formula "221") (term "1,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00000000_107" (formula "221") (term "1,0,0"))
                                                (rule "replaceKnownSelect_taclet00000000_112" (formula "221") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00000000_115" (formula "221") (term "0,0"))
                                                (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,0,1"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "1,0,0,0,1"))
                                                (rule "replaceKnownSelect_taclet000000_67" (formula "199") (term "0,1,0,0,1"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "1,1,0,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "1,0,0,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "199") (term "0,1,0,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "1,1,0,0,1"))
                                                (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                                (rule "notRight" (formula "254"))
                                                (rule "notRight" (formula "222"))
                                                (rule "close" (formula "229") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch
                                        (builtin "One Step Simplification" (formula "254"))
                                       (rule "replaceKnownSelect_taclet00000000_83" (formula "221") (term "1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00000000_85" (formula "221") (term "1"))
                                       (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,0,1"))
                                       (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "1,0,0,0,1"))
                                       (rule "replaceKnownSelect_taclet000000_67" (formula "199") (term "0,1,0,0,1"))
                                       (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "1,1,0,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "1,0,0,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "199") (term "0,1,0,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "1,1,0,0,1"))
                                       (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                       (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                       (rule "notRight" (formula "254"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "eqSymm" (formula "301") (term "0,0"))
                                       (rule "eqSymm" (formula "301") (term "1,0"))
                                       (rule "eqSymm" (formula "301") (term "0,1"))
                                       (rule "eqSymm" (formula "301") (term "1,1"))
                                       (rule "eqSymm" (formula "3"))
                                       (rule "replace_known_right" (formula "212") (term "0,1,0,0") (ifseqformula "230"))
                                        (builtin "One Step Simplification" (formula "212") (ifInst ""  (formula "265")))
                                       (rule "replace_known_right" (formula "203") (term "0,1,1,0,0") (ifseqformula "242"))
                                        (builtin "One Step Simplification" (formula "203") (ifInst ""  (formula "281")))
                                       (rule "inEqSimp_ltToLeq" (formula "126") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "126") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "104") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "113"))
                                       (rule "polySimp_mulComm0" (formula "113") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "113") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "96") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "199"))
                                       (rule "polySimp_mulComm0" (formula "199") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "199") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "132"))
                                       (rule "polySimp_mulComm0" (formula "132") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "132") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "192"))
                                       (rule "polySimp_mulComm0" (formula "192") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "192") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "136") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "136") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "176"))
                                       (rule "polySimp_mulComm0" (formula "176") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "176") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "147") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "102"))
                                       (rule "polySimp_mulComm0" (formula "102") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "102") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "217"))
                                       (rule "mul_literals" (formula "217") (term "1,0,0"))
                                       (rule "add_literals" (formula "217") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "109"))
                                       (rule "polySimp_mulComm0" (formula "109") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "109") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "156"))
                                       (rule "polySimp_mulComm0" (formula "156") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "156") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "116") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "140"))
                                       (rule "polySimp_mulComm0" (formula "140") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "140") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "144"))
                                       (rule "polySimp_mulComm0" (formula "144") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "144") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "134") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "134") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "106") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "106") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "162"))
                                       (rule "polySimp_mulComm0" (formula "162") (term "1,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "147") (term "0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "147") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "147") (term "0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "177"))
                                       (rule "mul_literals" (formula "177") (term "1,0,0"))
                                       (rule "add_literals" (formula "177") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "206"))
                                       (rule "polySimp_mulComm0" (formula "206") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "195"))
                                       (rule "polySimp_mulComm0" (formula "195") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "129") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "129") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "167"))
                                       (rule "polySimp_mulComm0" (formula "167") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "147") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "216"))
                                       (rule "polySimp_mulComm0" (formula "216") (term "1,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "116") (term "0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "116") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "116") (term "0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "116") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "153"))
                                       (rule "polySimp_mulComm0" (formula "153") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "95") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "125") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "162") (term "0"))
                                       (rule "castedGetAny" (formula "212") (term "0,1,0,0,0"))
                                       (rule "castedGetAny" (formula "212") (term "0,1,0,1,0"))
                                       (rule "castedGetAny" (formula "203") (term "0,1,0,0,1,0"))
                                       (rule "castedGetAny" (formula "203") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "206") (term "0"))
                                       (rule "polySimp_addComm1" (formula "195") (term "0"))
                                       (rule "polySimp_addComm1" (formula "167") (term "0"))
                                       (rule "polySimp_addComm1" (formula "216") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "212") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "212") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "153") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "203") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "203") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "203") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "203") (term "1,0,0,1,0,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "212") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "212") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "203") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "203") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "212") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "212") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,1,0"))
                                       (rule "applyEq" (formula "301") (term "0,1,0,1,1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "13") (term "1,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "192") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "154") (term "1,1") (ifseqformula "37"))
                                       (rule "applyEq" (formula "110") (term "1,1") (ifseqformula "37"))
                                       (rule "applyEq" (formula "291") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "99") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "79") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "283") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "106") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "278") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "243") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "229") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "64") (term "1,0,0,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "204") (term "1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "53") (term "1,1,0,1") (ifseqformula "38"))
                                       (rule "applyEq" (formula "16") (term "1,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "63") (term "1,1,0,1") (ifseqformula "38"))
                                       (rule "applyEq" (formula "12") (term "1,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "16") (term "1,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "46") (term "1,1,0,1") (ifseqformula "38"))
                                       (rule "applyEq" (formula "118") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "165") (term "1,1") (ifseqformula "37"))
                                       (rule "applyEq" (formula "129") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "14") (term "1,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "289") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "250") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "110") (term "1,1,0,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "63") (term "1,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "151") (term "0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "15") (term "1,2,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "180") (term "1,0,1,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "281") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "190") (term "2") (ifseqformula "1"))
                                       (rule "applyEq" (formula "67") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "284") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "103") (term "1,1,0,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "203") (term "1,1,1,0,0,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "60") (term "1,1,0,1") (ifseqformula "38"))
                                       (rule "applyEq" (formula "11") (term "1,2,0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "301") (term "0,0,1,0") (ifseqformula "4"))
                                       (rule "eqSymm" (formula "301") (term "1,0"))
                                       (rule "applyEq" (formula "104") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "105") (term "1,1,0,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "180") (term "1,0,1,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "62") (term "1,0,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "200") (term "1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "279") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "195") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "221") (term "1,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "249") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "74") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "11") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "72") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "141") (term "1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "16") (term "1,2,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "47") (term "1,1,0,1") (ifseqformula "38"))
                                       (rule "applyEq" (formula "203") (term "1,1,1,0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "193") (term "1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "173") (term "4") (ifseqformula "172"))
                                       (rule "applyEq" (formula "54") (term "1,0,0") (ifseqformula "38"))
                                       (rule "applyEqRigid" (formula "301") (term "0,1,1,1") (ifseqformula "40"))
                                       (rule "applyEq" (formula "138") (term "1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "246") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "46") (term "1,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "133") (term "1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "52") (term "1,0,1,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "157") (term "1,1") (ifseqformula "37"))
                                       (rule "applyEq" (formula "221") (term "1,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "165") (term "5") (ifseqformula "159"))
                                       (rule "applyEq" (formula "239") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "60") (term "1,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "119") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "203") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "15") (term "1,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "59") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "300") (term "0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "103") (term "1,1") (ifseqformula "37"))
                                       (rule "applyEq" (formula "106") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "260") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "140") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "135") (term "1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "58") (term "1,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "116") (term "1,1,0,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "114") (term "1,1") (ifseqformula "37"))
                                       (rule "applyEq" (formula "248") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "64") (term "1,2,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "290") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "49") (term "1,1,0,1") (ifseqformula "38"))
                                       (rule "applyEq" (formula "189") (term "1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "240") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "88") (term "0,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "247") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "80") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "57") (term "1,0,1,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "153") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "17") (term "1,2,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "99") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "50") (term "1,2,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "301") (term "0,0,1,1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "17") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "213") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "14") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "136") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "59") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "66") (term "1,2,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "64") (term "1,0,1,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "57") (term "1,2,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "221") (term "1,0,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "115") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "62") (term "1,1,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "73") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "145") (term "1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "203") (term "1,0,1,1,0,1") (ifseqformula "37"))
                                       (rule "applyEq" (formula "147") (term "1,1,0,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "252") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "182") (term "4") (ifseqformula "181"))
                                       (rule "applyEq" (formula "136") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "14") (term "1,2,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "52") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "69") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "301") (term "0,1,0,0") (ifseqformula "40"))
                                       (rule "applyEq" (formula "190") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "65") (term "1,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "52") (term "1,2,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "61") (term "1,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "68") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "108") (term "1,1,0,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "288") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "264") (term "0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "10") (term "1,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "59") (term "1,0,1,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "151") (term "2") (ifseqformula "37"))
                                       (rule "applyEq" (formula "245") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "196") (term "1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "196") (term "1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "62") (term "1,2,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "151") (term "3") (ifseqformula "150"))
                                       (rule "applyEq" (formula "59") (term "1,2,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "51") (term "1,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "134") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "102") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "180") (term "1,0,0,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "207") (term "1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "52") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "56") (term "1,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "139") (term "1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "301") (term "0,1,1,1,1") (ifseqformula "40"))
                                       (rule "applyEq" (formula "57") (term "1,0,0,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "193") (term "1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "286") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "133") (term "1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "81") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "173") (term "3") (ifseqformula "37"))
                                       (rule "applyEq" (formula "109") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "56") (term "1,1,0,1") (ifseqformula "38"))
                                       (rule "applyEq" (formula "189") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "213") (term "3") (ifseqformula "1"))
                                       (rule "applyEq" (formula "71") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "54") (term "1,1,0,1") (ifseqformula "38"))
                                       (rule "applyEq" (formula "48") (term "1,0,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "48") (term "1,2,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "266") (term "0") (ifseqformula "98"))
                                       (rule "applyEq" (formula "134") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "51") (term "1,1,0,1") (ifseqformula "38"))
                                       (rule "applyEq" (formula "154") (term "1,1,0,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "221") (term "1,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "173") (term "0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "284") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "279") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "50") (term "1,0,1,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "141") (term "1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "242") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "244") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "163") (term "1,1") (ifseqformula "37"))
                                       (rule "applyEq" (formula "66") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "11") (term "1,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "58") (term "1,1,0,1") (ifseqformula "38"))
                                       (rule "applyEq" (formula "300") (term "0,0,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "222") (term "3") (ifseqformula "2"))
                                       (rule "applyEq" (formula "101") (term "1,1,0,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "281") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "241") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "50") (term "1,0,0,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "182") (term "3") (ifseqformula "38"))
                                       (rule "applyEq" (formula "10") (term "1,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "104") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "9") (term "1,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "70") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "132") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "286") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "55") (term "1,0,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "49") (term "1,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "168") (term "1,1") (ifseqformula "37"))
                                       (rule "applyEq" (formula "75") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "65") (term "1,1,0,1") (ifseqformula "38"))
                                       (rule "applyEq" (formula "93") (term "0") (ifseqformula "94"))
                                       (rule "applyEq" (formula "130") (term "1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "9") (term "1,2,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "13") (term "1,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "55") (term "1,2,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "76") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "179") (term "1,0,1") (ifseqformula "38"))
                                       (rule "applyEq" (formula "145") (term "1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "155") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "66") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "17") (term "1,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "87") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "10") (term "1,2,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "250") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "61") (term "1,1,0,1") (ifseqformula "38"))
                                       (rule "applyEq" (formula "156") (term "1,1,0,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "11") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "66") (term "1,0,1,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "53") (term "1,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "128") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "95") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "93"))
                                       (rule "applyEqRigid" (formula "299") (term "0,0,1,0") (ifseqformula "40"))
                                       (rule "eqSymm" (formula "299") (term "1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "125") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "125") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "125") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "125") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "125") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "112"))
                                       (rule "polySimp_mulLiterals" (formula "112") (term "0"))
                                       (rule "polySimp_elimOne" (formula "112") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "198"))
                                       (rule "polySimp_mulLiterals" (formula "198") (term "0"))
                                       (rule "polySimp_elimOne" (formula "198") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "175"))
                                       (rule "polySimp_mulLiterals" (formula "175") (term "0"))
                                       (rule "polySimp_elimOne" (formula "175") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "146") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "146") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "146") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "146") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "146") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "146") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "216"))
                                       (rule "mul_literals" (formula "216") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "115") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "115") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "115") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "115") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "143"))
                                       (rule "polySimp_mulLiterals" (formula "143") (term "0"))
                                       (rule "polySimp_elimOne" (formula "143") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "146") (term "0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "146") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "176"))
                                       (rule "mul_literals" (formula "176") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "146") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "146") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "146") (term "1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "146") (term "0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "146") (term "1,1,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "146") (term "1,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "115") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "115") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "115") (term "1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "115") (term "0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "115") (term "1,1,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "115") (term "1,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "124") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "124") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "124") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "161"))
                                       (rule "polySimp_mulLiterals" (formula "161") (term "0"))
                                       (rule "polySimp_elimOne" (formula "161") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "205"))
                                       (rule "polySimp_mulLiterals" (formula "205") (term "0"))
                                       (rule "polySimp_elimOne" (formula "205") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "166"))
                                       (rule "polySimp_mulLiterals" (formula "166") (term "0"))
                                       (rule "polySimp_elimOne" (formula "166") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "215"))
                                       (rule "polySimp_mulLiterals" (formula "215") (term "0"))
                                       (rule "polySimp_elimOne" (formula "215") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "211") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "211") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "211") (term "0,1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "211") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "211") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "211") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "202") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "202") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "202") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "202") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "202") (term "1,1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "202") (term "1,1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "202") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "202") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "202") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "202") (term "0,1,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "202") (term "1,1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "202") (term "1,1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "211") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "211") (term "1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "211") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "211") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "211") (term "1,1,0,1,0"))
                                       (rule "mul_literals" (formula "211") (term "0,1,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "191"))
                                       (rule "polySimp_mulLiterals" (formula "191") (term "0"))
                                       (rule "polySimp_elimOne" (formula "191") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "128") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "128") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "128") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "128") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "128") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "128") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "194"))
                                       (rule "polySimp_mulLiterals" (formula "194") (term "0"))
                                       (rule "polySimp_elimOne" (formula "194") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "105") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "105") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "139"))
                                       (rule "polySimp_mulLiterals" (formula "139") (term "0"))
                                       (rule "polySimp_elimOne" (formula "139") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "152"))
                                       (rule "polySimp_mulLiterals" (formula "152") (term "0"))
                                       (rule "polySimp_elimOne" (formula "152") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "98") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "98") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "135") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "135") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "135") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "135") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "135") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "135") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "133") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "133") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "133") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "133") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "133") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "133") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "101"))
                                       (rule "polySimp_mulLiterals" (formula "101") (term "0"))
                                       (rule "polySimp_elimOne" (formula "101") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "108"))
                                       (rule "polySimp_mulLiterals" (formula "108") (term "0"))
                                       (rule "polySimp_elimOne" (formula "108") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "103") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "103") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "103") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "103") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "103") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "103") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "131"))
                                       (rule "polySimp_mulLiterals" (formula "131") (term "0"))
                                       (rule "polySimp_elimOne" (formula "131") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "155"))
                                       (rule "polySimp_mulLiterals" (formula "155") (term "0"))
                                       (rule "polySimp_elimOne" (formula "155") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "95") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0,0,0,0"))
                                       (rule "pullOutSelect" (formula "188") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_0"))
                                       (rule "applyEq" (formula "212") (term "0,0,1") (ifseqformula "188"))
                                       (rule "simplifySelectOfAnonEQ" (formula "188") (ifseqformula "186"))
                                        (builtin "One Step Simplification" (formula "188"))
                                       (rule "eqSymm" (formula "189") (term "1,1"))
                                       (rule "eqSymm" (formula "212") (term "0,1"))
                                       (rule "elementOfSingleton" (formula "188") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "188"))
                                       (rule "pullOutSelect" (formula "212") (term "1,1,1") (inst "selectSK=java_util_Collection_seq_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "212") (ifseqformula "170"))
                                        (builtin "One Step Simplification" (formula "212"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "212") (term "0,1,0,0") (ifseqformula "148"))
                                       (rule "pullOutSelect" (formula "213") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "213") (ifseqformula "210"))
                                        (builtin "One Step Simplification" (formula "213"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "213") (term "0,1,0,0") (ifseqformula "186"))
                                       (rule "pullOutSelect" (formula "302") (term "1,0,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "222"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEq" (formula "214") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "214") (term "0,0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "214") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "214") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "214") (term "1,1,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "211"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEq" (formula "189") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "189") (term "0,0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "189") (term "1,0,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "189") (term "1,1,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "187"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "189") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "214") (term "1,1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "189") (term "1,0,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "189") (term "0,0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "214") (term "0,0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "214") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "214") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "214") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "303") (term "1,0,1,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "189") (term "1,1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "replace_known_left" (formula "188") (term "0,1,0,0") (ifseqformula "20"))
                                        (builtin "One Step Simplification" (formula "188") (ifInst ""  (formula "237")))
                                       (rule "applyEqReverse" (formula "189") (term "1,1,1") (ifseqformula "188"))
                                       (rule "applyEqReverse" (formula "214") (term "1,0,1") (ifseqformula "188"))
                                       (rule "hideAuxiliaryEq" (formula "188"))
                                       (rule "replace_known_right" (formula "212") (term "0,0,0,0") (ifseqformula "236"))
                                        (builtin "One Step Simplification" (formula "212") (ifInst ""  (formula "20")))
                                       (rule "simplifySelectOfAnonEQ" (formula "212") (ifseqformula "186"))
                                        (builtin "One Step Simplification" (formula "212") (ifInst ""  (formula "236")) (ifInst ""  (formula "20")))
                                       (rule "elementOfSingleton" (formula "212") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "212") (ifInst ""  (formula "236")))
                                       (rule "applyEqReverse" (formula "213") (term "0,1,1") (ifseqformula "212"))
                                       (rule "hideAuxiliaryEq" (formula "212"))
                                       (rule "pullOutSelect" (formula "300") (term "1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_6"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "179"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "265")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "171"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "149"))
                                       (rule "ifthenelse_negated" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "301") (term "1,1,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "180"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEq" (formula "213") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "213") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "213") (term "1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "213") (term "0,0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "213") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "172"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEq" (formula "214") (term "1,0,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "190") (term "1,0,1,1") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "150"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "302") (term "1,1,1,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "213") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "213") (term "1,1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "190") (term "1,0,1,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "214") (term "1,0,0,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "213") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "213") (term "0,0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "213") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "replace_known_left" (formula "212") (term "0,0,1,0,0") (ifseqformula "79"))
                                        (builtin "One Step Simplification" (formula "212") (ifInst ""  (formula "272")))
                                       (rule "applyEq" (formula "213") (term "0,0,1") (ifseqformula "212"))
                                       (rule "applyEq" (formula "189") (term "0,1,1") (ifseqformula "212"))
                                       (rule "simplifySelectOfAnonEQ" (formula "212") (ifseqformula "149"))
                                        (builtin "One Step Simplification" (formula "212") (ifInst ""  (formula "272")) (ifInst ""  (formula "79")))
                                       (rule "eqSymm" (formula "213") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "213"))
                                       (rule "true_left" (formula "213"))
                                       (rule "eqSymm" (formula "189") (term "1,1"))
                                       (rule "elementOfSingleton" (formula "212") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "212") (ifInst ""  (formula "271")))
                                       (rule "applyEqReverse" (formula "189") (term "1,1,1") (ifseqformula "212"))
                                        (builtin "One Step Simplification" (formula "189"))
                                       (rule "true_left" (formula "189"))
                                       (rule "hideAuxiliaryEq" (formula "211"))
                                       (rule "pullOutSelect" (formula "298") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_7"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "218"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "228")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "210"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "188"))
                                       (rule "ifthenelse_negated" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "299") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_6"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "181"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "264")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "173"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "151"))
                                       (rule "ifthenelse_negated" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "300") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_7"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "220"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "230")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "212"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "190"))
                                       (rule "ifthenelse_negated" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "301") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "221"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "237")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "213"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "191"))
                                       (rule "eqSymm" (formula "302") (term "1,1"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "25"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "213"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "237")))
                                       (rule "replaceKnownSelect_taclet1110000000000_126" (formula "1") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet1110000000000_127" (formula "1") (term "2,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "191"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "25"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "302") (term "1,1,1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "4") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_8"))
                                       (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "175"))
                                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "266")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0") (ifseqformula "153"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_9"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "214"))
                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "232")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "192"))
                                       (rule "ifthenelse_negated" (formula "3") (term "0"))
                                       (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_8"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "177"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "268")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "155"))
                                       (rule "ifthenelse_negated" (formula "2") (term "0"))
                                       (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_9"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "216"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "234")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "194"))
                                       (rule "ifthenelse_negated" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "305") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_4"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "187"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "277")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "179"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "157"))
                                       (rule "eqSymm" (formula "306") (term "1,1"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "87"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "179"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "277")))
                                       (rule "replaceKnownSelect_taclet1110000000000_133" (formula "1") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet1110000000000_134" (formula "1") (term "2,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "157"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "87"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "306") (term "1,1,1") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "306"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "7") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_10"))
                                       (rule "simplifySelectOfAnonEQ" (formula "7") (ifseqformula "157"))
                                        (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "270")))
                                       (rule "elementOfSingleton" (formula "7") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "270")))
                                       (rule "ifthenelse_negated" (formula "7") (term "0"))
                                       (rule "applyEq" (formula "7") (term "0") (ifseqformula "64"))
                                       (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_11"))
                                       (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "195"))
                                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "235")))
                                       (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "235")))
                                       (rule "ifthenelse_negated" (formula "5") (term "0"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "21"))
                                       (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_10"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "157"))
                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "270")))
                                       (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "270")))
                                       (rule "ifthenelse_negated" (formula "3") (term "0"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "71"))
                                       (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_11"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "195"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "235")))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "235")))
                                       (rule "ifthenelse_negated" (formula "1") (term "0"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "24"))
                                       (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "inEqSimp_and_subsumption3" (formula "133") (term "0,0,0"))
                                       (rule "leq_literals" (formula "133") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "133"))
                                       (rule "inEqSimp_and_subsumption3" (formula "102") (term "0,0,0"))
                                       (rule "leq_literals" (formula "102") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "102"))
                                       (rule "inEqSimp_and_subsumption3" (formula "132") (term "0,0,0"))
                                       (rule "leq_literals" (formula "132") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "132"))
                                       (rule "inEqSimp_and_subsumption3" (formula "103") (term "0,0,0"))
                                       (rule "leq_literals" (formula "103") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "103"))
                                       (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "230"))
                                       (rule "closeTrue" (formula "230"))
                                    )
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "221"))
                              (branch
                                  (builtin "One Step Simplification" (formula "254"))
                                 (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,0,1"))
                                 (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "1,0,0,0,1"))
                                 (rule "replaceKnownSelect_taclet000000_67" (formula "199") (term "0,1,0,0,1"))
                                 (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "1,1,0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "1,0,0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "199") (term "0,1,0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "1,1,0,0,1"))
                                 (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                 (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                 (rule "notRight" (formula "254"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "eqSymm" (formula "301") (term "0,1"))
                                 (rule "eqSymm" (formula "301") (term "1,0"))
                                 (rule "eqSymm" (formula "301") (term "1,1"))
                                 (rule "eqSymm" (formula "301") (term "0,0"))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "replace_known_right" (formula "212") (term "0,1,0,0") (ifseqformula "230"))
                                  (builtin "One Step Simplification" (formula "212") (ifInst ""  (formula "265")))
                                 (rule "replace_known_right" (formula "203") (term "0,1,1,1,0") (ifseqformula "281"))
                                  (builtin "One Step Simplification" (formula "203") (ifInst ""  (formula "242")))
                                 (rule "inEqSimp_ltToLeq" (formula "144"))
                                 (rule "polySimp_mulComm0" (formula "144") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "144") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "140"))
                                 (rule "polySimp_mulComm0" (formula "140") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "140") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "109"))
                                 (rule "polySimp_mulComm0" (formula "109") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "109") (term "0"))
                                 (rule "inEqSimp_gtToGeq" (formula "177"))
                                 (rule "mul_literals" (formula "177") (term "1,0,0"))
                                 (rule "add_literals" (formula "177") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "136") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "136") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "125") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "147") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "147") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "147") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "96") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "147") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "132"))
                                 (rule "polySimp_mulComm0" (formula "132") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "132") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "113"))
                                 (rule "polySimp_mulComm0" (formula "113") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "113") (term "0"))
                                 (rule "inEqSimp_gtToGeq" (formula "116") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "116") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "116") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "162"))
                                 (rule "polySimp_mulComm0" (formula "162") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "162") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "199"))
                                 (rule "polySimp_mulComm0" (formula "199") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "199") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "167"))
                                 (rule "polySimp_mulComm0" (formula "167") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "167") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "104") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "116") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "116") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "192"))
                                 (rule "polySimp_mulComm0" (formula "192") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "134") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "134") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "102"))
                                 (rule "polySimp_mulComm0" (formula "102") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "126") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "126") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "206"))
                                 (rule "polySimp_mulComm0" (formula "206") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "147") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "153"))
                                 (rule "polySimp_mulComm0" (formula "153") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "129") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "129") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "216"))
                                 (rule "polySimp_mulComm0" (formula "216") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "176"))
                                 (rule "polySimp_mulComm0" (formula "176") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "156"))
                                 (rule "polySimp_mulComm0" (formula "156") (term "1,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "217"))
                                 (rule "mul_literals" (formula "217") (term "1,0,0"))
                                 (rule "add_literals" (formula "217") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "95") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "106") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "106") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "195"))
                                 (rule "polySimp_mulComm0" (formula "195") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "192") (term "0"))
                                 (rule "polySimp_addComm1" (formula "102") (term "0"))
                                 (rule "castedGetAny" (formula "212") (term "0,1,0,0,0"))
                                 (rule "castedGetAny" (formula "212") (term "0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "206") (term "0"))
                                 (rule "castedGetAny" (formula "203") (term "0,1,0,0,1,0"))
                                 (rule "castedGetAny" (formula "203") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "153") (term "0"))
                                 (rule "polySimp_addComm1" (formula "216") (term "0"))
                                 (rule "polySimp_addComm1" (formula "176") (term "0"))
                                 (rule "polySimp_addComm1" (formula "156") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "212") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "212") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "195") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "203") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "203") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "203") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "203") (term "1,0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "212") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "212") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "203") (term "0,0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "203") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "212") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "212") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,1,0"))
                                 (rule "applyEq" (formula "203") (term "1,1,1,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "221") (term "1,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "104") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "203") (term "1,0,1,1,0,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "154") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "195") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "68") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "72") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "203") (term "1,1,1,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "291") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "180") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "10") (term "1,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "196") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "57") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "110") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "245") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "99") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "106") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "157") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "138") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "168") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "249") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "200") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "129") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "60") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "196") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "204") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "71") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "46") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "14") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "221") (term "1,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "52") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "281") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "288") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "132") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "301") (term "0,1,1,0") (ifseqformula "40"))
                                 (rule "applyEqRigid" (formula "301") (term "0,0,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "154") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "136") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "46") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "248") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "93") (term "0") (ifseqformula "94"))
                                 (rule "applyEq" (formula "51") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "202") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "300") (term "0,1,0,0") (ifseqformula "40"))
                                 (rule "applyEq" (formula "250") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "53") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "283") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "115") (term "1,1,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "146") (term "1,1,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "66") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "132") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "155") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "133") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "150") (term "0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "81") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "15") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "299") (term "0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "133") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "246") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "12") (term "1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "281") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "220") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "179") (term "1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "69") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "103") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "284") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "98") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "57") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "14") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "179") (term "1,0,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "17") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "277") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "240") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "88") (term "0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "251") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "289") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "172") (term "0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "242") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "286") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "140") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "59") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "16") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "206") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "10") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "55") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "113") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "188") (term "1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "52") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "288") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "263") (term "0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "139") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "66") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "164") (term "5") (ifseqformula "158"))
                                 (rule "applyEq" (formula "47") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "48") (term "1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "58") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "55") (term "1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "152") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "128") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "138") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "100") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "70") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "189") (term "2") (ifseqformula "1"))
                                 (rule "applyEq" (formula "114") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "102") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "145") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "300") (term "0,1,0,1,1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "13") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "74") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "80") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "11") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "11") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "101") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "132") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "212") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "144") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "140") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "59") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "278") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "265") (term "0") (ifseqformula "97"))
                                 (rule "applyEq" (formula "245") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "51") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "59") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "130") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "75") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "58") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "191") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "54") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "10") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "50") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "164") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "60") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "172") (term "3") (ifseqformula "37"))
                                 (rule "applyEqRigid" (formula "299") (term "0,1,1,1,1") (ifseqformula "40"))
                                 (rule "applyEq" (formula "299") (term "0,0,1,1") (ifseqformula "4"))
                                 (rule "eqSymm" (formula "299") (term "1,1"))
                                 (rule "applyEq" (formula "61") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "117") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "102") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "50") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "9") (term "1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "73") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "63") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "56") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "192") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "189") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "192") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "220") (term "1,0,1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "228") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "109") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "15") (term "1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "64") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "66") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "65") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "16") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "150") (term "2") (ifseqformula "37"))
                                 (rule "applyEq" (formula "53") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "249") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "181") (term "4") (ifseqformula "180"))
                                 (rule "applyEq" (formula "49") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "259") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "56") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "66") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "17") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "243") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "59") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "135") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "54") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "87") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "64") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "150") (term "3") (ifseqformula "149"))
                                 (rule "applyEq" (formula "65") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "134") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "162") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "118") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "9") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "278") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "221") (term "3") (ifseqformula "2"))
                                 (rule "applyEq" (formula "76") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "52") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "188") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "61") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "50") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "172") (term "4") (ifseqformula "171"))
                                 (rule "applyEq" (formula "241") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "284") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "11") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "48") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "17") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "63") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "156") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "179") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "104") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "62") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "57") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "105") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "79") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "14") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "181") (term "3") (ifseqformula "38"))
                                 (rule "applyEq" (formula "13") (term "1,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "64") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "108") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "49") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "281") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "238") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "239") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "212") (term "3") (ifseqformula "1"))
                                 (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "16") (term "1,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "299") (term "0,0,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "67") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "62") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "107") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "11") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "52") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "62") (term "1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "95") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "93"))
                                 (rule "applyEq" (formula "299") (term "0,0,1,1") (ifseqformula "40"))
                                 (rule "eqSymm" (formula "299") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "143"))
                                 (rule "polySimp_mulLiterals" (formula "143") (term "0"))
                                 (rule "polySimp_elimOne" (formula "143") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "176"))
                                 (rule "mul_literals" (formula "176") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "124") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "124") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "124") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "146") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "146") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "146") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "146") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "146") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "146") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "146") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "146") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "112"))
                                 (rule "polySimp_mulLiterals" (formula "112") (term "0"))
                                 (rule "polySimp_elimOne" (formula "112") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "115") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "161"))
                                 (rule "polySimp_mulLiterals" (formula "161") (term "0"))
                                 (rule "polySimp_elimOne" (formula "161") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "198"))
                                 (rule "polySimp_mulLiterals" (formula "198") (term "0"))
                                 (rule "polySimp_elimOne" (formula "198") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "166"))
                                 (rule "polySimp_mulLiterals" (formula "166") (term "0"))
                                 (rule "polySimp_elimOne" (formula "166") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "115") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "115") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "115") (term "1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "115") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "115") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "115") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "115") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "115") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "115") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "125") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "125") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "125") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "125") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "125") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "146") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "146") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "146") (term "1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "146") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "146") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "146") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "216"))
                                 (rule "mul_literals" (formula "216") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "205"))
                                 (rule "polySimp_mulLiterals" (formula "205") (term "0"))
                                 (rule "polySimp_elimOne" (formula "205") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "215"))
                                 (rule "polySimp_mulLiterals" (formula "215") (term "0"))
                                 (rule "polySimp_elimOne" (formula "215") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "175"))
                                 (rule "polySimp_mulLiterals" (formula "175") (term "0"))
                                 (rule "polySimp_elimOne" (formula "175") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "211") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "211") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "211") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "211") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "211") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "211") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "202") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "202") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "202") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "202") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "202") (term "1,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "202") (term "1,1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "202") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "202") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "202") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "202") (term "0,1,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "202") (term "1,1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "202") (term "1,1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "211") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "211") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "211") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "211") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "211") (term "1,1,0,1,0"))
                                 (rule "mul_literals" (formula "211") (term "0,1,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "194"))
                                 (rule "polySimp_mulLiterals" (formula "194") (term "0"))
                                 (rule "polySimp_elimOne" (formula "194") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "105") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "105") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "131"))
                                 (rule "polySimp_mulLiterals" (formula "131") (term "0"))
                                 (rule "polySimp_elimOne" (formula "131") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "135") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "135") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "135") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "135") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "135") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "135") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "155"))
                                 (rule "polySimp_mulLiterals" (formula "155") (term "0"))
                                 (rule "polySimp_elimOne" (formula "155") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "133") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "133") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "133") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "133") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "133") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "133") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "103") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "103") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "103") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "103") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "103") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "103") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "98") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "98") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "139"))
                                 (rule "polySimp_mulLiterals" (formula "139") (term "0"))
                                 (rule "polySimp_elimOne" (formula "139") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "152"))
                                 (rule "polySimp_mulLiterals" (formula "152") (term "0"))
                                 (rule "polySimp_elimOne" (formula "152") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "128") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "128") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "128") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "128") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "128") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "128") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "101"))
                                 (rule "polySimp_mulLiterals" (formula "101") (term "0"))
                                 (rule "polySimp_elimOne" (formula "101") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "191"))
                                 (rule "polySimp_mulLiterals" (formula "191") (term "0"))
                                 (rule "polySimp_elimOne" (formula "191") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "108"))
                                 (rule "polySimp_mulLiterals" (formula "108") (term "0"))
                                 (rule "polySimp_elimOne" (formula "108") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "95") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0,0,0,0"))
                                 (rule "pullOutSelect" (formula "188") (term "1,1,1") (inst "selectSK=java_util_Collection_seq_0"))
                                 (rule "applyEq" (formula "212") (term "1,0,1") (ifseqformula "188"))
                                 (rule "simplifySelectOfAnonEQ" (formula "188") (ifseqformula "148"))
                                  (builtin "One Step Simplification" (formula "188"))
                                 (rule "elementOfSingleton" (formula "188") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "188"))
                                 (rule "pullOutSelect" (formula "189") (term "1,0,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                                 (rule "applyEq" (formula "213") (term "1,0,0,1") (ifseqformula "189"))
                                 (rule "simplifySelectOfAnonEQ" (formula "189") (ifseqformula "186"))
                                  (builtin "One Step Simplification" (formula "189"))
                                 (rule "elementOfSingleton" (formula "189") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "189"))
                                 (rule "applyEqReverse" (formula "190") (term "1,0,1,1") (ifseqformula "189"))
                                 (rule "applyEqReverse" (formula "213") (term "1,0,0,1") (ifseqformula "189"))
                                 (rule "hideAuxiliaryEq" (formula "189"))
                                 (rule "pullOutSelect" (formula "212") (term "1,1,1") (inst "selectSK=java_util_Collection_seq_1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "212") (ifseqformula "170"))
                                  (builtin "One Step Simplification" (formula "212"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "212") (term "0,1,0,0") (ifseqformula "148"))
                                 (rule "pullOutSelect" (formula "213") (term "1,0,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "213") (ifseqformula "210"))
                                  (builtin "One Step Simplification" (formula "213"))
                                 (rule "replaceKnownSelect_taclet01000000000_119" (formula "213") (term "0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet01000000000_120" (formula "213") (term "0"))
                                 (rule "applyEqReverse" (formula "214") (term "1,0,1,1") (ifseqformula "213"))
                                 (rule "hideAuxiliaryEq" (formula "213"))
                                 (rule "pullOutSelect" (formula "301") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_6"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "179"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "266")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "171"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "149"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "302") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_7"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "222"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "232")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "212"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "188"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "303") (term "1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_6"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "181"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "268")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "173"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "151"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "304") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_7"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "224"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "234")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "214"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "190"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "305") (term "1,1,1") (inst "selectSK=java_util_Collection_seq_2"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "183"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "175"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "153"))
                                 (rule "pullOutSelect" (formula "306") (term "1,0,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "226"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "replaceKnownSelect_taclet01000000000_122" (formula "1") (term "0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet01000000000_123" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "307") (term "1,0,1,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "193") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_3"))
                                 (rule "applyEq" (formula "194") (term "1,0,0,1,0,0") (ifseqformula "193"))
                                 (rule "applyEq" (formula "194") (term "1,2,0") (ifseqformula "193"))
                                 (rule "applyEq" (formula "194") (term "0,0,0,0,0") (ifseqformula "193"))
                                 (rule "simplifySelectOfAnonEQ" (formula "193") (ifseqformula "153"))
                                  (builtin "One Step Simplification" (formula "193"))
                                 (rule "elementOfSingleton" (formula "193") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "193"))
                                 (rule "applyEqReverse" (formula "194") (term "1,0,0,1,0,0") (ifseqformula "193"))
                                 (rule "applyEqReverse" (formula "194") (term "1,1,0") (ifseqformula "193"))
                                 (rule "applyEqReverse" (formula "194") (term "0,0,0,0,0") (ifseqformula "193"))
                                 (rule "applyEqReverse" (formula "194") (term "1,2,0") (ifseqformula "193"))
                                 (rule "hideAuxiliaryEq" (formula "193"))
                                 (rule "replace_known_right" (formula "193") (term "0,0,0,0") (ifseqformula "277"))
                                  (builtin "One Step Simplification" (formula "193") (ifInst ""  (formula "83")))
                                 (rule "applyEqReverse" (formula "218") (term "1,0,1") (ifseqformula "193"))
                                 (rule "applyEqReverse" (formula "194") (term "1,1,1") (ifseqformula "193"))
                                 (rule "hideAuxiliaryEq" (formula "193"))
                                 (rule "pullOutSelect" (formula "193") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_3"))
                                 (rule "applyEq" (formula "218") (term "0,0,1") (ifseqformula "193"))
                                 (rule "simplifySelectOfAnonEQ" (formula "193") (ifseqformula "191"))
                                  (builtin "One Step Simplification" (formula "193") (ifInst ""  (formula "241")) (ifInst ""  (formula "25")))
                                 (rule "eqSymm" (formula "194") (term "1,1"))
                                 (rule "eqSymm" (formula "218") (term "0,1"))
                                 (rule "elementOfSingleton" (formula "193") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "193") (ifInst ""  (formula "241")))
                                 (rule "applyEqReverse" (formula "218") (term "1,0,1") (ifseqformula "193"))
                                 (rule "applyEqReverse" (formula "194") (term "1,1,1") (ifseqformula "193"))
                                 (rule "hideAuxiliaryEq" (formula "193"))
                                 (rule "eqSymm" (formula "217") (term "0,1"))
                                 (rule "eqSymm" (formula "193") (term "1,1"))
                                  (builtin "One Step Simplification" (formula "193"))
                                 (rule "true_left" (formula "193"))
                                 (rule "pullOutSelect" (formula "215") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_4"))
                                 (rule "applyEq" (formula "216") (term "1,0,1,0,1,0,0") (ifseqformula "215"))
                                 (rule "applyEq" (formula "216") (term "1,0,0,0,1,0,0") (ifseqformula "215"))
                                 (rule "applyEq" (formula "216") (term "0,0,0,0,0") (ifseqformula "215"))
                                 (rule "applyEq" (formula "216") (term "1,2,0") (ifseqformula "215"))
                                 (rule "simplifySelectOfAnonEQ" (formula "215") (ifseqformula "175"))
                                  (builtin "One Step Simplification" (formula "215"))
                                 (rule "replaceKnownSelect_taclet01000000000_131" (formula "215") (term "0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet01000000000_132" (formula "215") (term "0"))
                                 (rule "applyEqReverse" (formula "216") (term "1,1,0") (ifseqformula "215"))
                                 (rule "applyEqReverse" (formula "216") (term "1,0,1,0,1,0,0") (ifseqformula "215"))
                                 (rule "applyEqReverse" (formula "216") (term "1,0,0,0,1,0,0") (ifseqformula "215"))
                                 (rule "applyEqReverse" (formula "216") (term "0,0,0,0,0") (ifseqformula "215"))
                                 (rule "applyEqReverse" (formula "216") (term "1,2,0") (ifseqformula "215"))
                                 (rule "hideAuxiliaryEq" (formula "215"))
                                 (rule "replace_known_right" (formula "215") (term "0,0,0,0") (ifseqformula "275"))
                                  (builtin "One Step Simplification" (formula "215") (ifInst ""  (formula "83")))
                                 (rule "simplifySelectOfAnonEQ" (formula "215") (ifseqformula "153"))
                                  (builtin "One Step Simplification" (formula "215") (ifInst ""  (formula "275")) (ifInst ""  (formula "83")))
                                 (rule "elementOfSingleton" (formula "215") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "215") (ifInst ""  (formula "275")))
                                 (rule "applyEqReverse" (formula "216") (term "1,1,1") (ifseqformula "215"))
                                 (rule "hideAuxiliaryEq" (formula "215"))
                                 (rule "pullOutSelect" (formula "215") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_4"))
                                 (rule "simplifySelectOfAnonEQ" (formula "215") (ifseqformula "213"))
                                  (builtin "One Step Simplification" (formula "215") (ifInst ""  (formula "239")))
                                 (rule "replaceKnownSelect_taclet01000000000_134" (formula "215") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet01000000000_135" (formula "215") (term "2,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "215") (term "0,0,0") (ifseqformula "191"))
                                 (rule "eqSymm" (formula "216") (term "1,1"))
                                 (rule "replace_known_left" (formula "215") (term "0,0,0,0") (ifseqformula "25"))
                                  (builtin "One Step Simplification" (formula "215"))
                                 (rule "applyEqReverse" (formula "216") (term "1,1,1") (ifseqformula "215"))
                                 (rule "hideAuxiliaryEq" (formula "215"))
                                 (rule "eqSymm" (formula "215") (term "1,1"))
                                  (builtin "One Step Simplification" (formula "215"))
                                 (rule "true_left" (formula "215"))
                                 (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_8"))
                                 (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "176"))
                                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "267")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "0,0,0") (ifseqformula "154"))
                                 (rule "ifthenelse_negated" (formula "5") (term "0"))
                                 (rule "pullOutSelect" (formula "4") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_9"))
                                 (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "215"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "233")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0") (ifseqformula "193"))
                                 (rule "ifthenelse_negated" (formula "4") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_8"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "178"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "269")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "156"))
                                 (rule "ifthenelse_negated" (formula "3") (term "0"))
                                 (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_9"))
                                 (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "217"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "235")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "195"))
                                 (rule "ifthenelse_negated" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "1") (term "1,2,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_5"))
                                 (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "188"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "replaceKnownSelect_taclet01000000000_136" (formula "1") (term "0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet01000000000_137" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "87"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "277")))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "179"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "277")))
                                 (rule "replaceKnownSelect_taclet01000000000_138" (formula "1") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet01000000000_139" (formula "1") (term "2,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "157"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "87"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "306") (term "1,1,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "305") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_5"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "225"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "241")))
                                 (rule "replaceKnownSelect_taclet01000000000_140" (formula "1") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet01000000000_141" (formula "1") (term "2,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "217"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "195"))
                                 (rule "eqSymm" (formula "306") (term "1,1"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "29"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "306") (term "1,1,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "eqSymm" (formula "305") (term "1,1"))
                                  (builtin "One Step Simplification" (formula "305"))
                                 (rule "pullOutSelect" (formula "7") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_10"))
                                 (rule "simplifySelectOfAnonEQ" (formula "7") (ifseqformula "157"))
                                  (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "270")))
                                 (rule "elementOfSingleton" (formula "7") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "270")))
                                 (rule "ifthenelse_negated" (formula "7") (term "0"))
                                 (rule "applyEq" (formula "7") (term "0") (ifseqformula "71"))
                                 (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_11"))
                                 (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "195"))
                                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "235")))
                                 (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "235")))
                                 (rule "ifthenelse_negated" (formula "5") (term "0"))
                                 (rule "applyEq" (formula "5") (term "0") (ifseqformula "24"))
                                 (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_10"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "157"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "270")))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "270")))
                                 (rule "ifthenelse_negated" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "64"))
                                 (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_11"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "195"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "235")))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "235")))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "21"))
                                 (rule "hideAuxiliaryEq" (formula "21"))
                                 (rule "inEqSimp_and_subsumption3" (formula "132") (term "0,0,0"))
                                 (rule "leq_literals" (formula "132") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "132"))
                                 (rule "inEqSimp_and_subsumption3" (formula "133") (term "0,0,0"))
                                 (rule "leq_literals" (formula "133") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "133"))
                                 (rule "inEqSimp_and_subsumption3" (formula "102") (term "0,0,0"))
                                 (rule "leq_literals" (formula "102") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "102"))
                                 (rule "inEqSimp_and_subsumption3" (formula "103") (term "0,0,0"))
                                 (rule "leq_literals" (formula "103") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "103"))
                                 (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "230"))
                                 (rule "replaceKnownSelect_taclet0000_12" (formula "230") (term "0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000_14" (formula "230") (term "0,0,1"))
                                 (rule "replaceKnownSelect_taclet0000_15" (formula "230") (term "0,0,1,0"))
                                 (rule "insert_constant_string_value" (formula "230") (term "0,0,0,0") (ifseqformula "165"))
                                  (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "298")))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000_17" (formula "230") (term "0,0,1"))
                                 (rule "castDel" (formula "230") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "230") (term "0,0") (ifseqformula "297"))
                                  (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "296")))
                                 (rule "closeTrue" (formula "230"))
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "221"))
                                 (branch
                                     (builtin "One Step Simplification" (formula "254"))
                                    (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,0,1"))
                                    (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "1,0,0,0,1"))
                                    (rule "replaceKnownSelect_taclet000000_67" (formula "199") (term "0,1,0,0,1"))
                                    (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "1,1,0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "1,0,0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "199") (term "0,1,0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "1,1,0,0,1"))
                                    (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                    (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                    (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                    (rule "notRight" (formula "254"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "eqSymm" (formula "301") (term "0,1"))
                                    (rule "eqSymm" (formula "301") (term "1,0"))
                                    (rule "eqSymm" (formula "301") (term "1,1"))
                                    (rule "eqSymm" (formula "301") (term "0,0"))
                                    (rule "eqSymm" (formula "3"))
                                    (rule "replace_known_right" (formula "212") (term "0,1,0,0") (ifseqformula "230"))
                                     (builtin "One Step Simplification" (formula "212") (ifInst ""  (formula "265")))
                                    (rule "replace_known_right" (formula "203") (term "0,1,1,1,0") (ifseqformula "281"))
                                     (builtin "One Step Simplification" (formula "203") (ifInst ""  (formula "242")))
                                    (rule "inEqSimp_ltToLeq" (formula "144"))
                                    (rule "polySimp_mulComm0" (formula "144") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "144") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "140"))
                                    (rule "polySimp_mulComm0" (formula "140") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "140") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "109"))
                                    (rule "polySimp_mulComm0" (formula "109") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "109") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "177"))
                                    (rule "mul_literals" (formula "177") (term "1,0,0"))
                                    (rule "add_literals" (formula "177") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "136") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "136") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "125") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "147") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "147") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "147") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "96") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "147") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "132"))
                                    (rule "polySimp_mulComm0" (formula "132") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "132") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "113"))
                                    (rule "polySimp_mulComm0" (formula "113") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "113") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "116") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "116") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "116") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "162"))
                                    (rule "polySimp_mulComm0" (formula "162") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "162") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "199"))
                                    (rule "polySimp_mulComm0" (formula "199") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "199") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "167"))
                                    (rule "polySimp_mulComm0" (formula "167") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "167") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "104") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "116") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "116") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "192"))
                                    (rule "polySimp_mulComm0" (formula "192") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "134") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "134") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "102"))
                                    (rule "polySimp_mulComm0" (formula "102") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "126") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "126") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "206"))
                                    (rule "polySimp_mulComm0" (formula "206") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "147") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "153"))
                                    (rule "polySimp_mulComm0" (formula "153") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "129") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "129") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "216"))
                                    (rule "polySimp_mulComm0" (formula "216") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "176"))
                                    (rule "polySimp_mulComm0" (formula "176") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "156"))
                                    (rule "polySimp_mulComm0" (formula "156") (term "1,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "217"))
                                    (rule "mul_literals" (formula "217") (term "1,0,0"))
                                    (rule "add_literals" (formula "217") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "95") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "106") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "106") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "195"))
                                    (rule "polySimp_mulComm0" (formula "195") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "192") (term "0"))
                                    (rule "polySimp_addComm1" (formula "102") (term "0"))
                                    (rule "castedGetAny" (formula "212") (term "0,1,0,0,0"))
                                    (rule "castedGetAny" (formula "212") (term "0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "206") (term "0"))
                                    (rule "castedGetAny" (formula "203") (term "0,1,0,0,1,0"))
                                    (rule "castedGetAny" (formula "203") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "153") (term "0"))
                                    (rule "polySimp_addComm1" (formula "216") (term "0"))
                                    (rule "polySimp_addComm1" (formula "176") (term "0"))
                                    (rule "polySimp_addComm1" (formula "156") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "212") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "212") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "195") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "203") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "203") (term "1,0,0,1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "203") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "203") (term "1,0,0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "212") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "212") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "203") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "203") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "212") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "212") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,1,0"))
                                    (rule "applyEq" (formula "203") (term "1,1,1,0,0,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "221") (term "1,0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "104") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "203") (term "1,0,1,1,0,1") (ifseqformula "37"))
                                    (rule "applyEq" (formula "154") (term "1,1") (ifseqformula "37"))
                                    (rule "applyEq" (formula "195") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "68") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "72") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "203") (term "1,1,1,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "291") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "180") (term "1,0,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "10") (term "1,0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "196") (term "1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "57") (term "1,0,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "110") (term "1,1,0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "245") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "99") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "106") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "157") (term "1,1") (ifseqformula "37"))
                                    (rule "applyEq" (formula "138") (term "1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "168") (term "1,1") (ifseqformula "37"))
                                    (rule "applyEq" (formula "249") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "200") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "129") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "60") (term "1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "196") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "204") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "71") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "46") (term "1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "14") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "221") (term "1,0,1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "52") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "281") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "288") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "132") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "301") (term "0,1,1,0") (ifseqformula "40"))
                                    (rule "applyEqRigid" (formula "301") (term "0,0,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "154") (term "1,1,0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "136") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "46") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "248") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "93") (term "0") (ifseqformula "94"))
                                    (rule "applyEq" (formula "51") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "202") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "300") (term "0,1,0,0") (ifseqformula "40"))
                                    (rule "applyEq" (formula "250") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "53") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "283") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "115") (term "1,1,0,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "146") (term "1,1,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "66") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "132") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "155") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "133") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "150") (term "0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "81") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "15") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "299") (term "0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "133") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "246") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "12") (term "1,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "281") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "220") (term "1,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "179") (term "1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "69") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "103") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "284") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "98") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "57") (term "1,0,1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "14") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "179") (term "1,0,1,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "17") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "277") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "240") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "88") (term "0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "251") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "289") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "172") (term "0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "242") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "286") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "140") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "59") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "16") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "206") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "10") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "55") (term "1,2,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "113") (term "1,1") (ifseqformula "37"))
                                    (rule "applyEq" (formula "188") (term "1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "52") (term "1,2,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "288") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "263") (term "0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "139") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "66") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "164") (term "5") (ifseqformula "158"))
                                    (rule "applyEq" (formula "47") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "48") (term "1,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "58") (term "1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "55") (term "1,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "152") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "128") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "138") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "100") (term "1,1,0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "70") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "189") (term "2") (ifseqformula "1"))
                                    (rule "applyEq" (formula "114") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "102") (term "1,1,0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "145") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "300") (term "0,1,0,1,1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "13") (term "1,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "74") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "80") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "11") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "11") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "101") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "132") (term "1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "212") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "144") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "140") (term "1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "59") (term "1,2,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "278") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "265") (term "0") (ifseqformula "97"))
                                    (rule "applyEq" (formula "245") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "51") (term "1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "59") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "130") (term "1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "75") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "58") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "191") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "54") (term "1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "10") (term "1,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "50") (term "1,0,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "164") (term "1,1") (ifseqformula "37"))
                                    (rule "applyEq" (formula "60") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "172") (term "3") (ifseqformula "37"))
                                    (rule "applyEqRigid" (formula "299") (term "0,1,1,1,1") (ifseqformula "40"))
                                    (rule "applyEq" (formula "299") (term "0,0,1,1") (ifseqformula "4"))
                                    (rule "eqSymm" (formula "299") (term "1,1"))
                                    (rule "applyEq" (formula "61") (term "1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "117") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "102") (term "1,1") (ifseqformula "37"))
                                    (rule "applyEq" (formula "50") (term "1,0,1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "9") (term "1,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "73") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "63") (term "1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "56") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "192") (term "1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "189") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "192") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "220") (term "1,0,1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "228") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "109") (term "1,1") (ifseqformula "37"))
                                    (rule "applyEq" (formula "15") (term "1,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "64") (term "1,2,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "66") (term "1,0,1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "65") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "16") (term "1,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "150") (term "2") (ifseqformula "37"))
                                    (rule "applyEq" (formula "53") (term "1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "249") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "181") (term "4") (ifseqformula "180"))
                                    (rule "applyEq" (formula "49") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "259") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "56") (term "1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "66") (term "1,2,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "17") (term "1,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "243") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "59") (term "1,0,1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "135") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "54") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "87") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "64") (term "1,0,1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "150") (term "3") (ifseqformula "149"))
                                    (rule "applyEq" (formula "65") (term "1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "134") (term "1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "162") (term "1,1") (ifseqformula "37"))
                                    (rule "applyEq" (formula "118") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "9") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "278") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "221") (term "3") (ifseqformula "2"))
                                    (rule "applyEq" (formula "76") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "52") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "188") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "61") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "50") (term "1,2,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "172") (term "4") (ifseqformula "171"))
                                    (rule "applyEq" (formula "241") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "284") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "11") (term "1,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "48") (term "1,2,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "17") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "63") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "applyEq" (formula "156") (term "1,1,0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "179") (term "1,0,1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "104") (term "1,1,0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "62") (term "1,2,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "57") (term "1,2,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "105") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "79") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "14") (term "1,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "181") (term "3") (ifseqformula "38"))
                                    (rule "applyEq" (formula "13") (term "1,0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "64") (term "1,0,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "108") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "49") (term "1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "281") (term "1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "238") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "239") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "212") (term "3") (ifseqformula "1"))
                                    (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "1,0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "299") (term "0,0,0,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "67") (term "1,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "62") (term "1,1,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "107") (term "1,1,0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "11") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "52") (term "1,0,1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "62") (term "1,0,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "95") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "93"))
                                    (rule "applyEq" (formula "299") (term "0,0,1,1") (ifseqformula "40"))
                                    (rule "eqSymm" (formula "299") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "143"))
                                    (rule "polySimp_mulLiterals" (formula "143") (term "0"))
                                    (rule "polySimp_elimOne" (formula "143") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "176"))
                                    (rule "mul_literals" (formula "176") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "124") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "124") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "124") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "146") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "146") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "146") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "146") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "146") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "146") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "146") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "146") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "112"))
                                    (rule "polySimp_mulLiterals" (formula "112") (term "0"))
                                    (rule "polySimp_elimOne" (formula "112") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "115") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "161"))
                                    (rule "polySimp_mulLiterals" (formula "161") (term "0"))
                                    (rule "polySimp_elimOne" (formula "161") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "198"))
                                    (rule "polySimp_mulLiterals" (formula "198") (term "0"))
                                    (rule "polySimp_elimOne" (formula "198") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "166"))
                                    (rule "polySimp_mulLiterals" (formula "166") (term "0"))
                                    (rule "polySimp_elimOne" (formula "166") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "115") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "115") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "115") (term "1,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "115") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "115") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "115") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "115") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "115") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "115") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "125") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "125") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "125") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "125") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "125") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "146") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "146") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "146") (term "1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "146") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "146") (term "1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "146") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "216"))
                                    (rule "mul_literals" (formula "216") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "205"))
                                    (rule "polySimp_mulLiterals" (formula "205") (term "0"))
                                    (rule "polySimp_elimOne" (formula "205") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "215"))
                                    (rule "polySimp_mulLiterals" (formula "215") (term "0"))
                                    (rule "polySimp_elimOne" (formula "215") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "175"))
                                    (rule "polySimp_mulLiterals" (formula "175") (term "0"))
                                    (rule "polySimp_elimOne" (formula "175") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "211") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "211") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "211") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "211") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "211") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "211") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "202") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "202") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "202") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "202") (term "0,1,1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "202") (term "1,1,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "202") (term "1,1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "202") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "202") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "202") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "202") (term "0,1,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "202") (term "1,1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "202") (term "1,1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "211") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "211") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "211") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "211") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "211") (term "1,1,0,1,0"))
                                    (rule "mul_literals" (formula "211") (term "0,1,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "194"))
                                    (rule "polySimp_mulLiterals" (formula "194") (term "0"))
                                    (rule "polySimp_elimOne" (formula "194") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "105") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "105") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "131"))
                                    (rule "polySimp_mulLiterals" (formula "131") (term "0"))
                                    (rule "polySimp_elimOne" (formula "131") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "135") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "135") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "135") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "135") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "135") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "135") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "155"))
                                    (rule "polySimp_mulLiterals" (formula "155") (term "0"))
                                    (rule "polySimp_elimOne" (formula "155") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "133") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "133") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "133") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "133") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "133") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "133") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "103") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "103") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "103") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "103") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "103") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "103") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "98") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "98") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "139"))
                                    (rule "polySimp_mulLiterals" (formula "139") (term "0"))
                                    (rule "polySimp_elimOne" (formula "139") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "152"))
                                    (rule "polySimp_mulLiterals" (formula "152") (term "0"))
                                    (rule "polySimp_elimOne" (formula "152") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "128") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "128") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "128") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "128") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "128") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "128") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "101"))
                                    (rule "polySimp_mulLiterals" (formula "101") (term "0"))
                                    (rule "polySimp_elimOne" (formula "101") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "191"))
                                    (rule "polySimp_mulLiterals" (formula "191") (term "0"))
                                    (rule "polySimp_elimOne" (formula "191") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "108"))
                                    (rule "polySimp_mulLiterals" (formula "108") (term "0"))
                                    (rule "polySimp_elimOne" (formula "108") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "95") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0,0,0,0"))
                                    (rule "pullOutSelect" (formula "188") (term "1,1,1") (inst "selectSK=java_util_Collection_seq_0"))
                                    (rule "applyEq" (formula "212") (term "1,0,1") (ifseqformula "188"))
                                    (rule "simplifySelectOfAnonEQ" (formula "188") (ifseqformula "148"))
                                     (builtin "One Step Simplification" (formula "188"))
                                    (rule "elementOfSingleton" (formula "188") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "188"))
                                    (rule "pullOutSelect" (formula "189") (term "1,0,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                                    (rule "applyEq" (formula "213") (term "1,0,0,1") (ifseqformula "189"))
                                    (rule "simplifySelectOfAnonEQ" (formula "189") (ifseqformula "186"))
                                     (builtin "One Step Simplification" (formula "189"))
                                    (rule "elementOfSingleton" (formula "189") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "189"))
                                    (rule "applyEqReverse" (formula "190") (term "1,0,1,1") (ifseqformula "189"))
                                    (rule "applyEqReverse" (formula "213") (term "1,0,0,1") (ifseqformula "189"))
                                    (rule "hideAuxiliaryEq" (formula "189"))
                                    (rule "pullOutSelect" (formula "212") (term "1,1,1") (inst "selectSK=java_util_Collection_seq_1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "212") (ifseqformula "170"))
                                     (builtin "One Step Simplification" (formula "212"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "212") (term "0,1,0,0") (ifseqformula "148"))
                                    (rule "pullOutSelect" (formula "213") (term "1,0,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "213") (ifseqformula "210"))
                                     (builtin "One Step Simplification" (formula "213"))
                                    (rule "replaceKnownSelect_taclet011000000000_119" (formula "213") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011000000000_120" (formula "213") (term "0"))
                                    (rule "applyEqReverse" (formula "214") (term "1,0,1,1") (ifseqformula "213"))
                                    (rule "hideAuxiliaryEq" (formula "213"))
                                    (rule "pullOutSelect" (formula "301") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_6"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "179"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "266")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "171"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "149"))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "302") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_7"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "222"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "232")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "212"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "188"))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "303") (term "1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_6"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "181"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "268")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "173"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "151"))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "304") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_7"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "224"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "234")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "214"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "190"))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "305") (term "1,1,1") (inst "selectSK=java_util_Collection_seq_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "183"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "175"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "153"))
                                    (rule "pullOutSelect" (formula "306") (term "1,0,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "226"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "replaceKnownSelect_taclet011000000000_122" (formula "1") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011000000000_123" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "307") (term "1,0,1,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "193") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_3"))
                                    (rule "applyEq" (formula "194") (term "1,0,0,1,0,0") (ifseqformula "193"))
                                    (rule "applyEq" (formula "194") (term "1,2,0") (ifseqformula "193"))
                                    (rule "applyEq" (formula "194") (term "0,0,0,0,0") (ifseqformula "193"))
                                    (rule "simplifySelectOfAnonEQ" (formula "193") (ifseqformula "153"))
                                     (builtin "One Step Simplification" (formula "193"))
                                    (rule "elementOfSingleton" (formula "193") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "193"))
                                    (rule "applyEqReverse" (formula "194") (term "1,0,0,1,0,0") (ifseqformula "193"))
                                    (rule "applyEqReverse" (formula "194") (term "1,1,0") (ifseqformula "193"))
                                    (rule "applyEqReverse" (formula "194") (term "0,0,0,0,0") (ifseqformula "193"))
                                    (rule "applyEqReverse" (formula "194") (term "1,2,0") (ifseqformula "193"))
                                    (rule "hideAuxiliaryEq" (formula "193"))
                                    (rule "replace_known_right" (formula "193") (term "0,0,0,0") (ifseqformula "277"))
                                     (builtin "One Step Simplification" (formula "193") (ifInst ""  (formula "83")))
                                    (rule "applyEqReverse" (formula "218") (term "1,0,1") (ifseqformula "193"))
                                    (rule "applyEqReverse" (formula "194") (term "1,1,1") (ifseqformula "193"))
                                    (rule "hideAuxiliaryEq" (formula "193"))
                                    (rule "pullOutSelect" (formula "193") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_3"))
                                    (rule "applyEq" (formula "218") (term "0,0,1") (ifseqformula "193"))
                                    (rule "simplifySelectOfAnonEQ" (formula "193") (ifseqformula "191"))
                                     (builtin "One Step Simplification" (formula "193") (ifInst ""  (formula "241")) (ifInst ""  (formula "25")))
                                    (rule "eqSymm" (formula "194") (term "1,1"))
                                    (rule "eqSymm" (formula "218") (term "0,1"))
                                    (rule "elementOfSingleton" (formula "193") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "193") (ifInst ""  (formula "241")))
                                    (rule "applyEqReverse" (formula "218") (term "1,0,1") (ifseqformula "193"))
                                    (rule "applyEqReverse" (formula "194") (term "1,1,1") (ifseqformula "193"))
                                    (rule "hideAuxiliaryEq" (formula "193"))
                                    (rule "eqSymm" (formula "217") (term "0,1"))
                                    (rule "eqSymm" (formula "193") (term "1,1"))
                                     (builtin "One Step Simplification" (formula "193"))
                                    (rule "true_left" (formula "193"))
                                    (rule "pullOutSelect" (formula "215") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_4"))
                                    (rule "applyEq" (formula "216") (term "1,0,1,0,1,0,0") (ifseqformula "215"))
                                    (rule "applyEq" (formula "216") (term "1,0,0,0,1,0,0") (ifseqformula "215"))
                                    (rule "applyEq" (formula "216") (term "0,0,0,0,0") (ifseqformula "215"))
                                    (rule "applyEq" (formula "216") (term "1,2,0") (ifseqformula "215"))
                                    (rule "simplifySelectOfAnonEQ" (formula "215") (ifseqformula "175"))
                                     (builtin "One Step Simplification" (formula "215"))
                                    (rule "replaceKnownSelect_taclet011000000000_131" (formula "215") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011000000000_132" (formula "215") (term "0"))
                                    (rule "applyEqReverse" (formula "216") (term "1,1,0") (ifseqformula "215"))
                                    (rule "applyEqReverse" (formula "216") (term "1,0,1,0,1,0,0") (ifseqformula "215"))
                                    (rule "applyEqReverse" (formula "216") (term "1,0,0,0,1,0,0") (ifseqformula "215"))
                                    (rule "applyEqReverse" (formula "216") (term "0,0,0,0,0") (ifseqformula "215"))
                                    (rule "applyEqReverse" (formula "216") (term "1,2,0") (ifseqformula "215"))
                                    (rule "hideAuxiliaryEq" (formula "215"))
                                    (rule "replace_known_right" (formula "215") (term "0,0,0,0") (ifseqformula "275"))
                                     (builtin "One Step Simplification" (formula "215") (ifInst ""  (formula "83")))
                                    (rule "simplifySelectOfAnonEQ" (formula "215") (ifseqformula "153"))
                                     (builtin "One Step Simplification" (formula "215") (ifInst ""  (formula "275")) (ifInst ""  (formula "83")))
                                    (rule "elementOfSingleton" (formula "215") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "215") (ifInst ""  (formula "275")))
                                    (rule "applyEqReverse" (formula "216") (term "1,1,1") (ifseqformula "215"))
                                    (rule "hideAuxiliaryEq" (formula "215"))
                                    (rule "pullOutSelect" (formula "215") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_4"))
                                    (rule "simplifySelectOfAnonEQ" (formula "215") (ifseqformula "213"))
                                     (builtin "One Step Simplification" (formula "215") (ifInst ""  (formula "239")))
                                    (rule "replaceKnownSelect_taclet011000000000_134" (formula "215") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011000000000_135" (formula "215") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "215") (term "0,0,0") (ifseqformula "191"))
                                    (rule "eqSymm" (formula "216") (term "1,1"))
                                    (rule "replace_known_left" (formula "215") (term "0,0,0,0") (ifseqformula "25"))
                                     (builtin "One Step Simplification" (formula "215"))
                                    (rule "applyEqReverse" (formula "216") (term "1,1,1") (ifseqformula "215"))
                                    (rule "hideAuxiliaryEq" (formula "215"))
                                    (rule "eqSymm" (formula "215") (term "1,1"))
                                     (builtin "One Step Simplification" (formula "215"))
                                    (rule "true_left" (formula "215"))
                                    (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_8"))
                                    (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "176"))
                                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "267")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "0,0,0") (ifseqformula "154"))
                                    (rule "ifthenelse_negated" (formula "5") (term "0"))
                                    (rule "pullOutSelect" (formula "4") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_9"))
                                    (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "215"))
                                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "233")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0") (ifseqformula "193"))
                                    (rule "ifthenelse_negated" (formula "4") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_8"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "178"))
                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "269")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "156"))
                                    (rule "ifthenelse_negated" (formula "3") (term "0"))
                                    (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_9"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "217"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "235")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "195"))
                                    (rule "ifthenelse_negated" (formula "2") (term "0"))
                                    (rule "pullOutSelect" (formula "1") (term "1,2,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_5"))
                                    (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "188"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "replaceKnownSelect_taclet011000000000_136" (formula "1") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011000000000_137" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,1,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "87"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "277")))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "179"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "277")))
                                    (rule "replaceKnownSelect_taclet011000000000_138" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011000000000_139" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "157"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "87"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "306") (term "1,1,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "305") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_5"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "225"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "241")))
                                    (rule "replaceKnownSelect_taclet011000000000_140" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011000000000_141" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "217"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "195"))
                                    (rule "eqSymm" (formula "306") (term "1,1"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "29"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "306") (term "1,1,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "eqSymm" (formula "305") (term "1,1"))
                                     (builtin "One Step Simplification" (formula "305"))
                                    (rule "pullOutSelect" (formula "7") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_10"))
                                    (rule "simplifySelectOfAnonEQ" (formula "7") (ifseqformula "157"))
                                     (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "270")))
                                    (rule "elementOfSingleton" (formula "7") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "270")))
                                    (rule "ifthenelse_negated" (formula "7") (term "0"))
                                    (rule "applyEq" (formula "7") (term "0") (ifseqformula "71"))
                                    (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_11"))
                                    (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "195"))
                                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "235")))
                                    (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "235")))
                                    (rule "ifthenelse_negated" (formula "5") (term "0"))
                                    (rule "applyEq" (formula "5") (term "0") (ifseqformula "24"))
                                    (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_10"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "157"))
                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "270")))
                                    (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "270")))
                                    (rule "ifthenelse_negated" (formula "3") (term "0"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "64"))
                                    (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_11"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "195"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "235")))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "235")))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "21"))
                                    (rule "hideAuxiliaryEq" (formula "21"))
                                    (rule "inEqSimp_and_subsumption3" (formula "132") (term "0,0,0"))
                                    (rule "leq_literals" (formula "132") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "132"))
                                    (rule "inEqSimp_and_subsumption3" (formula "133") (term "0,0,0"))
                                    (rule "leq_literals" (formula "133") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "133"))
                                    (rule "inEqSimp_and_subsumption3" (formula "102") (term "0,0,0"))
                                    (rule "leq_literals" (formula "102") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "102"))
                                    (rule "inEqSimp_and_subsumption3" (formula "103") (term "0,0,0"))
                                    (rule "leq_literals" (formula "103") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "103"))
                                    (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "230"))
                                    (rule "replaceKnownSelect_taclet0000_18" (formula "230") (term "0,1"))
                                    (rule "replaceKnownSelect_taclet0000_19" (formula "230") (term "0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0000_21" (formula "230") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "230") (term "0,0") (ifseqformula "301"))
                                     (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "190")))
                                    (rule "closeTrue" (formula "230"))
                                 )
                                 (branch "Case 2"
                                    (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "221") (userinteraction))
                                    (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "221") (term "1") (userinteraction))
                                    (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "221") (term "1,0") (userinteraction))
                                     (builtin "One Step Simplification" (formula "221"))
                                    (rule "andRight" (formula "221"))
                                    (branch
                                       (rule "andRight" (formula "221"))
                                       (branch
                                           (builtin "One Step Simplification" (formula "254"))
                                          (rule "replaceKnownSelect_taclet0000_27" (formula "221") (term "0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000_29" (formula "221") (term "0,0"))
                                          (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,0,1"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "1,0,0,0,1"))
                                          (rule "replaceKnownSelect_taclet000000_67" (formula "199") (term "0,1,0,0,1"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "1,1,0,0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "1,0,0,0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "199") (term "0,1,0,0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "1,1,0,0,1"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                          (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                          (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                          (rule "notRight" (formula "254"))
                                          (rule "notRight" (formula "222"))
                                          (rule "close" (formula "293") (ifseqformula "1"))
                                       )
                                       (branch
                                           (builtin "One Step Simplification" (formula "254"))
                                          (rule "replaceKnownSelect_taclet0000_24" (formula "221") (term "0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000_26" (formula "221") (term "0,0"))
                                          (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,0,1"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "1,0,0,0,1"))
                                          (rule "replaceKnownSelect_taclet000000_67" (formula "199") (term "0,1,0,0,1"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "1,1,0,0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "1,0,0,0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "199") (term "0,1,0,0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "1,1,0,0,1"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                          (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                          (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                          (rule "notRight" (formula "254"))
                                          (rule "notRight" (formula "222"))
                                          (rule "close" (formula "292") (ifseqformula "1"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "andRight" (formula "221"))
                                       (branch
                                          (rule "andRight" (formula "221"))
                                          (branch
                                              (builtin "One Step Simplification" (formula "254"))
                                             (rule "replaceKnownSelect_taclet0000_27" (formula "221") (term "1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000_29" (formula "221") (term "1,0,0"))
                                             (rule "replaceKnownSelect_taclet0000_46" (formula "221") (term "0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000_48" (formula "221") (term "0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,0,1"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "1,0,0,0,1"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "199") (term "0,1,0,0,1"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "1,1,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "1,0,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "199") (term "0,1,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "1,1,0,0,1"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                             (rule "notRight" (formula "254"))
                                             (rule "notRight" (formula "222"))
                                             (rule "close" (formula "267") (ifseqformula "1"))
                                          )
                                          (branch
                                              (builtin "One Step Simplification" (formula "254"))
                                             (rule "replaceKnownSelect_taclet0000_27" (formula "221") (term "1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000_29" (formula "221") (term "1,0,0"))
                                             (rule "replaceKnownSelect_taclet0000_43" (formula "221") (term "0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000_45" (formula "221") (term "0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,0,1"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "1,0,0,0,1"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "199") (term "0,1,0,0,1"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "1,1,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "1,0,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "199") (term "0,1,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "1,1,0,0,1"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                             (rule "notRight" (formula "254"))
                                             (rule "notRight" (formula "222"))
                                             (rule "close" (formula "266") (ifseqformula "1"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "221"))
                                          (branch
                                              (builtin "One Step Simplification" (formula "254"))
                                             (rule "replaceKnownSelect_taclet0000_27" (formula "221") (term "1,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000_29" (formula "221") (term "1,1"))
                                             (rule "replaceKnownSelect_taclet0000_46" (formula "221") (term "1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000_48" (formula "221") (term "1"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,0,1"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "1,0,0,0,1"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "199") (term "0,1,0,0,1"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "1,1,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "1,0,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "199") (term "0,1,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "1,1,0,0,1"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                             (rule "notRight" (formula "254"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "eqSymm" (formula "301") (term "1,1"))
                                             (rule "eqSymm" (formula "301") (term "0,1"))
                                             (rule "eqSymm" (formula "301") (term "0,0"))
                                             (rule "eqSymm" (formula "301") (term "1,0"))
                                             (rule "eqSymm" (formula "3"))
                                             (rule "replace_known_right" (formula "212") (term "0,1,1,0") (ifseqformula "265"))
                                              (builtin "One Step Simplification" (formula "212") (ifInst ""  (formula "230")))
                                             (rule "replace_known_right" (formula "203") (term "0,1,1,0,0") (ifseqformula "242"))
                                              (builtin "One Step Simplification" (formula "203") (ifInst ""  (formula "281")))
                                             (rule "inEqSimp_gtToGeq" (formula "217"))
                                             (rule "mul_literals" (formula "217") (term "1,0,0"))
                                             (rule "add_literals" (formula "217") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "134") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "134") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "156"))
                                             (rule "polySimp_mulComm0" (formula "156") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "156") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "95") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "96") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "116") (term "0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "116") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "109"))
                                             (rule "polySimp_mulComm0" (formula "109") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "109") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "116") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "195"))
                                             (rule "polySimp_mulComm0" (formula "195") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "195") (term "0"))
                                             (rule "inEqSimp_gtToGeq" (formula "147") (term "0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "147") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "147") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "132"))
                                             (rule "polySimp_mulComm0" (formula "132") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "132") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "126") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "126") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "162"))
                                             (rule "polySimp_mulComm0" (formula "162") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "162") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "176"))
                                             (rule "polySimp_mulComm0" (formula "176") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "176") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "144"))
                                             (rule "polySimp_mulComm0" (formula "144") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "144") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "206"))
                                             (rule "polySimp_mulComm0" (formula "206") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "206") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "129") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "129") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "116") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "216"))
                                             (rule "polySimp_mulComm0" (formula "216") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "199"))
                                             (rule "polySimp_mulComm0" (formula "199") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "106") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "106") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "147") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "136") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "136") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "177"))
                                             (rule "mul_literals" (formula "177") (term "1,0,0"))
                                             (rule "add_literals" (formula "177") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "104") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "147") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "140"))
                                             (rule "polySimp_mulComm0" (formula "140") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "153"))
                                             (rule "polySimp_mulComm0" (formula "153") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "125") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "192"))
                                             (rule "polySimp_mulComm0" (formula "192") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "167"))
                                             (rule "polySimp_mulComm0" (formula "167") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "102"))
                                             (rule "polySimp_mulComm0" (formula "102") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "113"))
                                             (rule "polySimp_mulComm0" (formula "113") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "216") (term "0"))
                                             (rule "polySimp_addComm1" (formula "199") (term "0"))
                                             (rule "castedGetAny" (formula "212") (term "0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "212") (term "0,1,0,0,0"))
                                             (rule "castedGetAny" (formula "203") (term "0,1,0,0,0,0"))
                                             (rule "castedGetAny" (formula "203") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "140") (term "0"))
                                             (rule "polySimp_addComm1" (formula "153") (term "0"))
                                             (rule "polySimp_addComm1" (formula "192") (term "0"))
                                             (rule "polySimp_addComm1" (formula "167") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "212") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "102") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "212") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "113") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "203") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "203") (term "1,0,0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "203") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "203") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "212") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "212") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "203") (term "0,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "203") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "212") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "212") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,0,0"))
                                             (rule "applyEq" (formula "88") (term "0,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "252") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "192") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "80") (term "1,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "133") (term "1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "301") (term "0,0,1,1") (ifseqformula "4"))
                                             (rule "eqSymm" (formula "301") (term "1,1"))
                                             (rule "applyEq" (formula "241") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "300") (term "0") (ifseqformula "37"))
                                             (rule "applyEqRigid" (formula "301") (term "0,0,1,0") (ifseqformula "4"))
                                             (rule "eqSymm" (formula "301") (term "1,0"))
                                             (rule "applyEq" (formula "301") (term "0,1,0,0") (ifseqformula "40"))
                                             (rule "applyEq" (formula "173") (term "0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "57") (term "1,0,1,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "16") (term "1,0,1,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "49") (term "1,1,0,1") (ifseqformula "38"))
                                             (rule "applyEq" (formula "99") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "14") (term "1,2,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "136") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "59") (term "1,0,1,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "62") (term "1,0,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "87") (term "1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "195") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "260") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "182") (term "3") (ifseqformula "38"))
                                             (rule "applyEq" (formula "52") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "280") (term "1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "154") (term "1,1") (ifseqformula "37"))
                                             (rule "applyEq" (formula "11") (term "1,2,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "151") (term "2") (ifseqformula "37"))
                                             (rule "applyEq" (formula "151") (term "0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "66") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "193") (term "1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "229") (term "0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "247") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "53") (term "1,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "79") (term "1,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "17") (term "1,2,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "57") (term "1,0,0,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "54") (term "1,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "135") (term "1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "129") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "76") (term "1,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "116") (term "1,1,0,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "66") (term "1,0,1,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "81") (term "1,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "153") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "203") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "221") (term "1,0,0,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "203") (term "1,1,1,0,0,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "64") (term "1,0,1,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "221") (term "1,0,1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "180") (term "1,0,0,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "105") (term "1,1,0,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "53") (term "1,1,0,1") (ifseqformula "38"))
                                             (rule "applyEq" (formula "106") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "140") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "133") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "63") (term "1,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "15") (term "1,0,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "193") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "71") (term "1,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "101") (term "1,1,0,0") (ifseqformula "37"))
                                             (rule "applyEqRigid" (formula "301") (term "0,0,0,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "58") (term "1,1,0,1") (ifseqformula "38"))
                                             (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "221") (term "1,0,1,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "16") (term "1,2,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "221") (term "1,0,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "139") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "10") (term "1,0,0,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "114") (term "1,1") (ifseqformula "37"))
                                             (rule "applyEq" (formula "99") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "104") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "132") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "165") (term "1,1") (ifseqformula "37"))
                                             (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "59") (term "1,2,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "66") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "204") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "287") (term "1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "69") (term "1,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "156") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "163") (term "1,1") (ifseqformula "37"))
                                             (rule "applyEq" (formula "103") (term "1,1,0,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "11") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "246") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "62") (term "1,2,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "180") (term "1,0,1,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "291") (term "1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "58") (term "1,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "190") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "250") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "108") (term "1,1,0,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "103") (term "1,1") (ifseqformula "37"))
                                             (rule "applyEq" (formula "9") (term "1,2,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "11") (term "1,0,1,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "73") (term "1,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "75") (term "1,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "52") (term "1,0,1,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "288") (term "1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "13") (term "1,0,1,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "13") (term "1,0,0,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "157") (term "1,1,0,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "61") (term "1,1,0,1") (ifseqformula "38"))
                                             (rule "applyEq" (formula "50") (term "1,2,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "141") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "196") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "281") (term "1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "189") (term "1,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "50") (term "1,0,1,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "245") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "145") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "157") (term "1,1") (ifseqformula "37"))
                                             (rule "applyEq" (formula "56") (term "1,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "17") (term "1,0,1,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "222") (term "3") (ifseqformula "2"))
                                             (rule "applyEq" (formula "51") (term "1,1,0,1") (ifseqformula "38"))
                                             (rule "applyEq" (formula "115") (term "1,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "16") (term "1,0,0,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "62") (term "1,1,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "59") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "180") (term "1,0,1,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "282") (term "1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "67") (term "1,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "64") (term "1,0,0,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "146") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "249") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "239") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "54") (term "1,1,0,1") (ifseqformula "38"))
                                             (rule "applyEq" (formula "278") (term "1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "189") (term "1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "118") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "52") (term "1,2,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "70") (term "1,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "283") (term "1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "11") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "243") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "154") (term "1,1,0,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "131") (term "1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "109") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "74") (term "1,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "168") (term "1,1") (ifseqformula "37"))
                                             (rule "applyEq" (formula "244") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "279") (term "1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "64") (term "1,2,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "242") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "49") (term "1,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "180") (term "1,0,1") (ifseqformula "38"))
                                             (rule "applyEq" (formula "61") (term "1,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "10") (term "1,0,1,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "10") (term "1,2,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "165") (term "5") (ifseqformula "159"))
                                             (rule "applyEq" (formula "203") (term "1,1,1,0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "65") (term "1,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "213") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "203") (term "1,0,1,1,0,1") (ifseqformula "37"))
                                             (rule "applyEq" (formula "110") (term "1,1") (ifseqformula "37"))
                                             (rule "applyEq" (formula "63") (term "1,1,0,1") (ifseqformula "38"))
                                             (rule "applyEq" (formula "56") (term "1,1,0,1") (ifseqformula "38"))
                                             (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "57") (term "1,2,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "286") (term "1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "141") (term "1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "102") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "106") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "110") (term "1,1,0,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "134") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "72") (term "1,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "173") (term "4") (ifseqformula "172"))
                                             (rule "applyEq" (formula "207") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "285") (term "1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "60") (term "1,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "289") (term "1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "213") (term "3") (ifseqformula "1"))
                                             (rule "applyEq" (formula "52") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "251") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "190") (term "2") (ifseqformula "1"))
                                             (rule "applyEq" (formula "17") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "50") (term "1,0,0,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "147") (term "1,1,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "173") (term "3") (ifseqformula "37"))
                                             (rule "applyEq" (formula "119") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "248") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "134") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "182") (term "4") (ifseqformula "181"))
                                             (rule "applyEq" (formula "266") (term "0") (ifseqformula "98"))
                                             (rule "applyEq" (formula "196") (term "1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "51") (term "1,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "65") (term "1,1,0,1") (ifseqformula "38"))
                                             (rule "applyEq" (formula "104") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "9") (term "1,0,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "12") (term "1,0,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "129") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "47") (term "1,1,0,1") (ifseqformula "38"))
                                             (rule "applyEq" (formula "48") (term "1,0,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "93") (term "0") (ifseqformula "94"))
                                             (rule "applyEq" (formula "263") (term "0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "55") (term "1,0,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "55") (term "1,2,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "135") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "282") (term "1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "199") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "48") (term "1,2,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "15") (term "1,2,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "137") (term "1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "288") (term "1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "150") (term "3") (ifseqformula "149"))
                                             (rule "applyEq" (formula "46") (term "1,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "60") (term "1,1,0,1") (ifseqformula "38"))
                                             (rule "applyEq" (formula "239") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "59") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "14") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "46") (term "1,1,0,1") (ifseqformula "38"))
                                             (rule "applyEq" (formula "66") (term "1,2,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "14") (term "1,0,1,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "68") (term "1,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "95") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "93"))
                                             (rule "applyEq" (formula "299") (term "0,0,1,0") (ifseqformula "40"))
                                             (rule "eqSymm" (formula "299") (term "1,0"))
                                             (rule "applyEqRigid" (formula "299") (term "0,1,1,1,1") (ifseqformula "4"))
                                             (rule "applyEq" (formula "299") (term "0,1,0,1,1") (ifseqformula "40"))
                                             (rule "applyEqRigid" (formula "299") (term "0,0,1,1") (ifseqformula "40"))
                                             (rule "eqSymm" (formula "299") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "216"))
                                             (rule "mul_literals" (formula "216") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "115") (term "1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "115") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "115") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "115") (term "1,1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "115") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "115") (term "1,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "146") (term "0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "146") (term "1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "125") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "125") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "125") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "125") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "125") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "161"))
                                             (rule "polySimp_mulLiterals" (formula "161") (term "0"))
                                             (rule "polySimp_elimOne" (formula "161") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "175"))
                                             (rule "polySimp_mulLiterals" (formula "175") (term "0"))
                                             (rule "polySimp_elimOne" (formula "175") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "143"))
                                             (rule "polySimp_mulLiterals" (formula "143") (term "0"))
                                             (rule "polySimp_elimOne" (formula "143") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "205"))
                                             (rule "polySimp_mulLiterals" (formula "205") (term "0"))
                                             (rule "polySimp_elimOne" (formula "205") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "115") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "115") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "115") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "115") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "146") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "146") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "146") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "146") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "146") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "146") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "176"))
                                             (rule "mul_literals" (formula "176") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "146") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "146") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "146") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "146") (term "1,1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "146") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "146") (term "1,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "124") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "124") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "124") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "215"))
                                             (rule "polySimp_mulLiterals" (formula "215") (term "0"))
                                             (rule "polySimp_elimOne" (formula "215") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "198"))
                                             (rule "polySimp_mulLiterals" (formula "198") (term "0"))
                                             (rule "polySimp_elimOne" (formula "198") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "166"))
                                             (rule "polySimp_mulLiterals" (formula "166") (term "0"))
                                             (rule "polySimp_elimOne" (formula "166") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "211") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "211") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "211") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "211") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "211") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "211") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "112"))
                                             (rule "polySimp_mulLiterals" (formula "112") (term "0"))
                                             (rule "polySimp_elimOne" (formula "112") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "202") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "202") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "202") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "202") (term "0,1,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "202") (term "1,1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "202") (term "1,1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "202") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "202") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "202") (term "1,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "202") (term "0,1,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "202") (term "1,1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "202") (term "1,1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "211") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "211") (term "1,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,1,0"))
                                             (rule "mul_literals" (formula "211") (term "0,1,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "211") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "211") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "211") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "191"))
                                             (rule "polySimp_mulLiterals" (formula "191") (term "0"))
                                             (rule "polySimp_elimOne" (formula "191") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "135") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "135") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "135") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "135") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "135") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "135") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "194"))
                                             (rule "polySimp_mulLiterals" (formula "194") (term "0"))
                                             (rule "polySimp_elimOne" (formula "194") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "152"))
                                             (rule "polySimp_mulLiterals" (formula "152") (term "0"))
                                             (rule "polySimp_elimOne" (formula "152") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "105") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "105") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "139"))
                                             (rule "polySimp_mulLiterals" (formula "139") (term "0"))
                                             (rule "polySimp_elimOne" (formula "139") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "98") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "98") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "103") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "103") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "103") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "103") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "103") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "103") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "131"))
                                             (rule "polySimp_mulLiterals" (formula "131") (term "0"))
                                             (rule "polySimp_elimOne" (formula "131") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "155"))
                                             (rule "polySimp_mulLiterals" (formula "155") (term "0"))
                                             (rule "polySimp_elimOne" (formula "155") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "108"))
                                             (rule "polySimp_mulLiterals" (formula "108") (term "0"))
                                             (rule "polySimp_elimOne" (formula "108") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "101"))
                                             (rule "polySimp_mulLiterals" (formula "101") (term "0"))
                                             (rule "polySimp_elimOne" (formula "101") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "133") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "133") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "133") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "133") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "133") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "133") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "128") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "128") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "128") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "128") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "128") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "128") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "95") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0,0,0,0"))
                                             (rule "pullOutSelect" (formula "188") (term "1,1,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                                             (rule "applyEq" (formula "212") (term "1,1,0,1") (ifseqformula "188"))
                                             (rule "simplifySelectOfAnonEQ" (formula "188") (ifseqformula "148"))
                                              (builtin "One Step Simplification" (formula "188"))
                                             (rule "elementOfSingleton" (formula "188") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "188"))
                                             (rule "applyEqReverse" (formula "212") (term "1,1,0,1") (ifseqformula "188"))
                                             (rule "applyEqReverse" (formula "189") (term "1,1,1,1") (ifseqformula "188"))
                                             (rule "hideAuxiliaryEq" (formula "188"))
                                             (rule "pullOutSelect" (formula "188") (term "1,0,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                                             (rule "applyEq" (formula "212") (term "1,0,0,1") (ifseqformula "188"))
                                             (rule "simplifySelectOfAnonEQ" (formula "188") (ifseqformula "186"))
                                              (builtin "One Step Simplification" (formula "188"))
                                             (rule "elementOfSingleton" (formula "188") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "188"))
                                             (rule "applyEqReverse" (formula "212") (term "1,0,0,1") (ifseqformula "188"))
                                             (rule "applyEqReverse" (formula "189") (term "1,0,1,1") (ifseqformula "188"))
                                             (rule "hideAuxiliaryEq" (formula "188"))
                                             (rule "pullOutSelect" (formula "211") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "211") (ifseqformula "209"))
                                              (builtin "One Step Simplification" (formula "211"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "211") (term "0,1,0,0") (ifseqformula "186"))
                                             (rule "eqSymm" (formula "212") (term "1,1"))
                                             (rule "pullOutSelect" (formula "300") (term "1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_6"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "179"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "265")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "171"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "149"))
                                             (rule "ifthenelse_negated" (formula "1") (term "0"))
                                             (rule "pullOutSelect" (formula "301") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_7"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "221"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "231")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "211"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "188"))
                                             (rule "ifthenelse_negated" (formula "1") (term "0"))
                                             (rule "pullOutSelect" (formula "302") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_6"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "222"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "232")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "212"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "189"))
                                             (rule "eqSymm" (formula "303") (term "1,0"))
                                             (rule "ifthenelse_negated" (formula "1") (term "0"))
                                             (rule "pullOutSelect" (formula "303") (term "1,1,1") (inst "selectSK=java_util_Collection_seq_1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "182"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "174"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "152"))
                                             (rule "pullOutSelect" (formula "304") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "224"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "214"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "191"))
                                             (rule "pullOutSelect" (formula "217") (term "1,0,1") (inst "selectSK=java_util_Collection_seq_3"))
                                             (rule "applyEq" (formula "193") (term "1,1,1") (ifseqformula "217"))
                                             (rule "simplifySelectOfAnonEQ" (formula "217") (ifseqformula "153"))
                                              (builtin "One Step Simplification" (formula "217") (ifInst ""  (formula "277")) (ifInst ""  (formula "83")))
                                             (rule "elementOfSingleton" (formula "217") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "217") (ifInst ""  (formula "277")))
                                             (rule "applyEqReverse" (formula "193") (term "1,1,1") (ifseqformula "217"))
                                             (rule "applyEqReverse" (formula "218") (term "1,0,1") (ifseqformula "217"))
                                             (rule "hideAuxiliaryEq" (formula "217"))
                                             (rule "pullOutSelect" (formula "217") (term "0,0,1") (inst "selectSK=java_util_Collection_seq_4"))
                                             (rule "applyEq" (formula "193") (term "0,1,1") (ifseqformula "217"))
                                             (rule "simplifySelectOfAnonEQ" (formula "217") (ifseqformula "191"))
                                              (builtin "One Step Simplification" (formula "217") (ifInst ""  (formula "241")) (ifInst ""  (formula "25")))
                                             (rule "eqSymm" (formula "218") (term "0,1"))
                                             (rule "eqSymm" (formula "193") (term "1,1"))
                                             (rule "elementOfSingleton" (formula "217") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "217") (ifInst ""  (formula "241")))
                                             (rule "applyEqReverse" (formula "218") (term "1,0,1") (ifseqformula "217"))
                                             (rule "applyEqReverse" (formula "193") (term "1,1,1") (ifseqformula "217"))
                                             (rule "hideAuxiliaryEq" (formula "217"))
                                             (rule "eqSymm" (formula "217") (term "0,1"))
                                             (rule "eqSymm" (formula "193") (term "1,1"))
                                              (builtin "One Step Simplification" (formula "193"))
                                             (rule "true_left" (formula "193"))
                                             (rule "pullOutSelect" (formula "215") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                                             (rule "applyEq" (formula "216") (term "1,0,1,0,1,0,0") (ifseqformula "215"))
                                             (rule "applyEq" (formula "216") (term "1,0,0,0,1,0,0") (ifseqformula "215"))
                                             (rule "applyEq" (formula "216") (term "1,2,0") (ifseqformula "215"))
                                             (rule "applyEq" (formula "216") (term "0,0,0,0,0") (ifseqformula "215"))
                                             (rule "simplifySelectOfAnonEQ" (formula "215") (ifseqformula "213"))
                                              (builtin "One Step Simplification" (formula "215"))
                                             (rule "replaceKnownSelect_taclet011111000000000_120" (formula "215") (term "0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet011111000000000_121" (formula "215") (term "0"))
                                             (rule "applyEqReverse" (formula "216") (term "1,0,1,0,1,0,0") (ifseqformula "215"))
                                             (rule "applyEqReverse" (formula "216") (term "1,1,0") (ifseqformula "215"))
                                             (rule "applyEqReverse" (formula "216") (term "1,0,0,0,1,0,0") (ifseqformula "215"))
                                             (rule "applyEqReverse" (formula "216") (term "1,2,0") (ifseqformula "215"))
                                             (rule "replaceKnownSelect_taclet011111000000000_130" (formula "216") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet011111000000000_131" (formula "216") (term "2,0"))
                                             (rule "applyEqReverse" (formula "216") (term "0,0,0,0,0") (ifseqformula "215"))
                                             (rule "hideAuxiliaryEq" (formula "215"))
                                             (rule "replace_known_right" (formula "215") (term "0,0,0,0") (ifseqformula "239"))
                                              (builtin "One Step Simplification" (formula "215") (ifInst ""  (formula "25")))
                                             (rule "applyEqReverse" (formula "216") (term "1,1,1") (ifseqformula "215"))
                                             (rule "hideAuxiliaryEq" (formula "215"))
                                             (rule "pullOutSelect" (formula "215") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_5"))
                                             (rule "simplifySelectOfAnonEQ" (formula "215") (ifseqformula "175"))
                                              (builtin "One Step Simplification" (formula "215"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "215") (term "0,1,0,0") (ifseqformula "153"))
                                             (rule "eqSymm" (formula "216") (term "1,1"))
                                             (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_8"))
                                             (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "176"))
                                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "269")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "0,0,0") (ifseqformula "154"))
                                             (rule "ifthenelse_negated" (formula "5") (term "0"))
                                             (rule "pullOutSelect" (formula "4") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_9"))
                                             (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "215"))
                                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "235")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0") (ifseqformula "193"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "pullOutSelect" (formula "306") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_7"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "186"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "271")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "178"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "156"))
                                             (rule "ifthenelse_negated" (formula "1") (term "0"))
                                             (rule "pullOutSelect" (formula "4") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_8"))
                                             (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "237")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0") (ifseqformula "195"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "1,2,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_3"))
                                             (rule "applyEq" (formula "4") (term "1,0,1,0,1,0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "4") (term "0,0,0,0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "4") (term "1,0,1,0,0,1,0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "4") (term "1,0,0,0,0,1,0,0") (ifseqformula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "188"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEq" (formula "220") (term "0,0,0,0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "220") (term "1,0,0,0,1,0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "220") (term "1,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "220") (term "1,0,1,0,1,0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "220") (term "1,2,0") (ifseqformula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "180"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replaceKnownSelect_taclet011111000000000_118" (formula "3") (term "0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet011111000000000_119" (formula "3") (term "0"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0,1,0,1,0,0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "1,2,0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0,1,0,0,1,0,0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0,0,0,0,1,0,0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "220") (term "0,0,0,0,0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "220") (term "1,0,0,0,1,0,0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "220") (term "1,1,0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "220") (term "1,0,1,0,1,0,0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "220") (term "1,2,0") (ifseqformula "3"))
                                             (rule "replaceKnownSelect_taclet011111000000000_128" (formula "220") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet011111000000000_129" (formula "220") (term "2,0"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "279"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "87")))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "179"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "279")))
                                             (rule "replaceKnownSelect_taclet011111000000000_128" (formula "3") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet011111000000000_129" (formula "3") (term "2,0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "157"))
                                             (rule "replace_known_right" (formula "219") (term "0,0,0,0") (ifseqformula "279"))
                                              (builtin "One Step Simplification" (formula "219") (ifInst ""  (formula "87")))
                                             (rule "applyEqReverse" (formula "220") (term "1,1,1") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "220"))
                                             (rule "true_left" (formula "220"))
                                             (rule "hideAuxiliaryEq" (formula "219"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "87"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "306") (term "1,1,1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "eqSymm" (formula "305") (term "1,1"))
                                             (rule "pullOutSelect" (formula "2") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_4"))
                                             (rule "applyEq" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "3") (term "1,0,1,0,0,1,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "3") (term "1,0,0,0,0,1,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "replaceKnownSelect_taclet011111000000000_132" (formula "2") (term "0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet011111000000000_133" (formula "2") (term "0"))
                                             (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0,1,0,0,1,0,0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0,0,0,0,1,0,0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "28"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "240")))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "216"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "240")))
                                             (rule "replaceKnownSelect_taclet011111000000000_130" (formula "2") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet011111000000000_131" (formula "2") (term "2,0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "194"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "28"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "305") (term "1,1,1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "eqSymm" (formula "304") (term "1,1"))
                                              (builtin "One Step Simplification" (formula "304"))
                                             (rule "pullOutSelect" (formula "6") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_10"))
                                             (rule "simplifySelectOfAnonEQ" (formula "6") (ifseqformula "156"))
                                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "269")))
                                             (rule "elementOfSingleton" (formula "6") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "269")))
                                             (rule "ifthenelse_negated" (formula "6") (term "0"))
                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "63"))
                                             (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "pullOutSelect" (formula "4") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_11"))
                                             (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "194"))
                                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "234")))
                                             (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "234")))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_9"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "178"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "269")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "156"))
                                             (rule "ifthenelse_negated" (formula "1") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_10"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "195"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "235")))
                                             (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "235")))
                                             (rule "ifthenelse_negated" (formula "3") (term "0"))
                                             (rule "applyEq" (formula "24") (term "0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "24"))
                                             (rule "hideAuxiliaryEq" (formula "24"))
                                             (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_11"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "157"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "270")))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "270")))
                                             (rule "ifthenelse_negated" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "71") (term "0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "73") (term "1,0") (ifseqformula "71"))
                                             (rule "hideAuxiliaryEq" (formula "71"))
                                             (rule "inEqSimp_and_subsumption3" (formula "102") (term "0,0,0"))
                                             (rule "leq_literals" (formula "102") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "102"))
                                             (rule "inEqSimp_and_subsumption3" (formula "133") (term "0,0,0"))
                                             (rule "leq_literals" (formula "133") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "133"))
                                             (rule "inEqSimp_and_subsumption3" (formula "132") (term "0,0,0"))
                                             (rule "leq_literals" (formula "132") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "132"))
                                             (rule "inEqSimp_and_subsumption3" (formula "103") (term "0,0,0"))
                                             (rule "leq_literals" (formula "103") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "103"))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "230"))
                                             (rule "closeTrue" (formula "230"))
                                          )
                                          (branch "Case 2"
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "221") (userinteraction))
                                             (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "221") (term "1") (userinteraction))
                                              (builtin "One Step Simplification" (formula "254"))
                                              (builtin "One Step Simplification" (formula "221"))
                                             (rule "replaceKnownSelect_taclet0000_27" (formula "221") (term "1,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000_29" (formula "221") (term "1,1,0,0"))
                                             (rule "replaceKnownSelect_taclet0000_43" (formula "221") (term "1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000_45" (formula "221") (term "1,0,0"))
                                             (rule "replaceKnownSelect_taclet0000_53" (formula "221") (term "0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000_56" (formula "221") (term "0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,0,1"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "1,0,0,0,1"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "199") (term "0,1,0,0,1"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "1,1,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "1,0,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "199") (term "0,1,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "1,1,0,0,1"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                             (rule "notRight" (formula "254"))
                                             (rule "notRight" (formula "222"))
                                             (rule "close" (formula "265") (ifseqformula "1"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "andLeft" (formula "218") (userinteraction))
                           (rule "impLeft" (formula "219") (userinteraction))
                           (branch "Case 1"
                               (builtin "One Step Simplification" (formula "255"))
                              (rule "replaceKnownSelect_taclet0000_27" (formula "222") (term "1,1,1,1"))
                              (rule "replaceKnownSelect_taclet00000000_86" (formula "222") (term "1,1,0,1"))
                              (rule "replaceKnownSelect_taclet00000000_90" (formula "218") (term "0,0,1,0"))
                              (rule "replaceKnownSelect_taclet0000_31" (formula "218") (term "1,0,1,0"))
                              (rule "replaceKnownSelect_taclet00000000_89" (formula "218") (term "0,1,1,0"))
                              (rule "replaceKnownSelect_taclet0000_30" (formula "218") (term "1,1,1,0"))
                              (rule "replaceKnownSelect_taclet00000000_91" (formula "218") (term "0,0,1,1"))
                              (rule "replaceKnownSelect_taclet0000_32" (formula "218") (term "0,1,1,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000_29" (formula "222") (term "1,1,1,1"))
                              (rule "replaceKnownSelect_taclet0000_46" (formula "222") (term "1,1,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000_48" (formula "222") (term "1,1,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000000_88" (formula "222") (term "1,1,0,1"))
                              (rule "replaceKnownSelect_taclet00000000_102" (formula "222") (term "1,0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000000_104" (formula "222") (term "1,0,1"))
                              (rule "replaceKnownSelect_taclet00000000_91" (formula "218") (term "0,1,1,0,0"))
                              (rule "replaceKnownSelect_taclet0000_32" (formula "218") (term "1,1,1,0,0"))
                              (rule "replaceKnownSelect_taclet0000_27" (formula "222") (term "1,1,1,1,0"))
                              (rule "replaceKnownSelect_taclet00000000_86" (formula "222") (term "1,1,1,0,0"))
                              (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,0,1"))
                              (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "1,0,0,0,1"))
                              (rule "replaceKnownSelect_taclet000000_67" (formula "199") (term "0,1,0,0,1"))
                              (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "1,1,0,0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000_29" (formula "222") (term "1,1,1,1,0"))
                              (rule "replaceKnownSelect_taclet0000_43" (formula "222") (term "1,1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000_45" (formula "222") (term "1,1,1,0"))
                              (rule "replaceKnownSelect_taclet0000_53" (formula "222") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000_56" (formula "222") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000000_88" (formula "222") (term "1,1,1,0,0"))
                              (rule "replaceKnownSelect_taclet00000000_105" (formula "222") (term "1,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000000_107" (formula "222") (term "1,1,0,0"))
                              (rule "replaceKnownSelect_taclet00000000_112" (formula "222") (term "1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000000_115" (formula "222") (term "1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "1,0,0,0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "199") (term "0,1,0,0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "1,1,0,0,1"))
                              (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,1,1,0,0,0,1,0"))
                              (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,1,0,0,1,0"))
                              (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,1,1,0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,1,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,1,1,0,0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,1,0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,1,1,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,1,0,0,0,0"))
                              (rule "notRight" (formula "255"))
                              (rule "andLeft" (formula "219"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "220"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "222"))
                              (rule "andLeft" (formula "221"))
                              (rule "andLeft" (formula "1"))
                              (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "224"))
                              (rule "applyEqReverse" (formula "268") (term "0") (ifseqformula "225"))
                              (rule "applyEqReverse" (formula "267") (term "0") (ifseqformula "224"))
                              (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "225"))
                              (rule "hideAuxiliaryEq" (formula "224"))
                              (rule "hideAuxiliaryEq" (formula "224"))
                              (rule "eqSymm" (formula "302") (term "0,0"))
                              (rule "eqSymm" (formula "302") (term "0,1"))
                              (rule "eqSymm" (formula "302") (term "1,0"))
                              (rule "eqSymm" (formula "302") (term "1,1"))
                              (rule "eqSymm" (formula "3"))
                              (rule "replace_known_right" (formula "212") (term "0,1,0,0") (ifseqformula "233"))
                               (builtin "One Step Simplification" (formula "212") (ifInst ""  (formula "266")))
                              (rule "replace_known_right" (formula "203") (term "0,1,1,1,0") (ifseqformula "282"))
                               (builtin "One Step Simplification" (formula "203") (ifInst ""  (formula "245")))
                              (rule "inEqSimp_ltToLeq" (formula "95") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "192"))
                              (rule "polySimp_mulComm0" (formula "192") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "192") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "162"))
                              (rule "polySimp_mulComm0" (formula "162") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "162") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "156"))
                              (rule "polySimp_mulComm0" (formula "156") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "156") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "129") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "129") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "177"))
                              (rule "mul_literals" (formula "177") (term "1,0,0"))
                              (rule "add_literals" (formula "177") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "195"))
                              (rule "polySimp_mulComm0" (formula "195") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "147") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "153"))
                              (rule "polySimp_mulComm0" (formula "153") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "116") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "206"))
                              (rule "polySimp_mulComm0" (formula "206") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "144"))
                              (rule "polySimp_mulComm0" (formula "144") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "102"))
                              (rule "polySimp_mulComm0" (formula "102") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "136") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "136") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "167"))
                              (rule "polySimp_mulComm0" (formula "167") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "96") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "176"))
                              (rule "polySimp_mulComm0" (formula "176") (term "1,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "116") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "116") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "116") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_gtToGeq" (formula "147") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "147") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "147") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "125") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "147") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "140"))
                              (rule "polySimp_mulComm0" (formula "140") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "132"))
                              (rule "polySimp_mulComm0" (formula "132") (term "1,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "217"))
                              (rule "mul_literals" (formula "217") (term "1,0,0"))
                              (rule "add_literals" (formula "217") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "106") (term "0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "199"))
                              (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "126") (term "0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "104") (term "0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "216"))
                              (rule "inEqSimp_ltToLeq" (formula "116") (term "0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "109"))
                              (rule "inEqSimp_ltToLeq" (formula "134") (term "0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "113"))
                              (rule "polySimp_mulComm0" (formula "106") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "199") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "195") (term "0"))
                              (rule "polySimp_mulComm0" (formula "126") (term "1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "216") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "153") (term "0"))
                              (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "109") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "134") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "113") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "206") (term "0"))
                              (rule "polySimp_addComm1" (formula "144") (term "0"))
                              (rule "polySimp_addComm1" (formula "102") (term "0"))
                              (rule "polySimp_addComm1" (formula "167") (term "0"))
                              (rule "polySimp_addComm1" (formula "176") (term "0"))
                              (rule "polySimp_addComm1" (formula "140") (term "0"))
                              (rule "polySimp_addComm1" (formula "132") (term "0"))
                              (rule "castedGetAny" (formula "212") (term "0,1,0,0,0"))
                              (rule "castedGetAny" (formula "212") (term "0,1,0,1,0"))
                              (rule "castedGetAny" (formula "203") (term "0,1,0,0,1,0"))
                              (rule "castedGetAny" (formula "203") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "199") (term "0"))
                              (rule "polySimp_addComm1" (formula "216") (term "0"))
                              (rule "polySimp_addComm1" (formula "109") (term "0"))
                              (rule "polySimp_addComm1" (formula "113") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "212") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "212") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "203") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "203") (term "1,0,0,1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "203") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "203") (term "1,0,0,1,0,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "212") (term "0,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "212") (term "0,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "203") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "203") (term "0,0,0,0,1,0"))
                              (rule "inEqSimp_gtToGeq" (formula "212") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "212") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,1,0,1,0"))
                              (rule "applyEq" (formula "132") (term "1,1,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "99") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "106") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                              (rule "applyEqRigid" (formula "302") (term "0,1,0,0") (ifseqformula "40"))
                              (rule "applyEq" (formula "47") (term "1,1,0,1") (ifseqformula "38"))
                              (rule "applyEq" (formula "136") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "133") (term "1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "145") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "222"))
                              (rule "applyEq" (formula "221") (term "1,0,1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "283") (term "1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "302") (term "0,0,0,0") (ifseqformula "4"))
                              (rule "applyEq" (formula "14") (term "1,2,0") (ifseqformula "222"))
                              (rule "applyEq" (formula "129") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "156") (term "1,1,0,0,1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "75") (term "1,1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "67") (term "1,1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "193") (term "1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "9") (term "1,0,0,0") (ifseqformula "222"))
                              (rule "applyEq" (formula "246") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "203") (term "1,0,1,1,0,1") (ifseqformula "37"))
                              (rule "applyEq" (formula "189") (term "1,1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "222"))
                              (rule "applyEq" (formula "157") (term "1,1") (ifseqformula "37"))
                              (rule "applyEq" (formula "52") (term "1,2,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "180") (term "1,0,1") (ifseqformula "38"))
                              (rule "applyEq" (formula "76") (term "1,1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "248") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "203") (term "1,0,0,1,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "57") (term "1,0,1,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "286") (term "1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "203") (term "1,1,1,0,0,1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "302") (term "0,1,1,1") (ifseqformula "40"))
                              (rule "applyEq" (formula "118") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "13") (term "1,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "267") (term "0") (ifseqformula "98"))
                              (rule "applyEq" (formula "151") (term "0") (ifseqformula "37"))
                              (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "222"))
                              (rule "applyEq" (formula "50") (term "1,2,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "16") (term "1,0,0,0,0") (ifseqformula "222"))
                              (rule "applyEq" (formula "154") (term "1,1,0,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "182") (term "3") (ifseqformula "38"))
                              (rule "applyEq" (formula "17") (term "1,0,1,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "136") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "11") (term "1,0,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "16") (term "1,2,0") (ifseqformula "222"))
                              (rule "applyEq" (formula "222") (term "1") (ifseqformula "38"))
                              (rule "applyEq" (formula "93") (term "0") (ifseqformula "94"))
                              (rule "applyEq" (formula "15") (term "1,2,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "179") (term "1,0,1,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "262") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "192") (term "1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "194") (term "1,1,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "243") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "62") (term "1,2,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "101") (term "1,1,0,0,1,0") (ifseqformula "37"))
                              (rule "applyEqRigid" (formula "300") (term "0,1,0,1,1") (ifseqformula "4"))
                              (rule "applyEq" (formula "191") (term "1,1,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "285") (term "1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "140") (term "1,1") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "300") (term "0,1,1,0") (ifseqformula "40"))
                              (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "10") (term "1,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "73") (term "1,1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "71") (term "1,1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "13") (term "1,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "264") (term "0") (ifseqformula "38"))
                              (rule "applyEq" (formula "50") (term "1,0,1,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "14") (term "1,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "60") (term "1,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "103") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "139") (term "1,1,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "195") (term "1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "282") (term "1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "87") (term "1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "130") (term "1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "280") (term "1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "49") (term "1,1,0,1") (ifseqformula "38"))
                              (rule "applyEq" (formula "279") (term "1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "145") (term "1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "74") (term "1,1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "65") (term "1,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "212") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "156") (term "1,1,0,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "290") (term "1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "48") (term "1,2,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "62") (term "1,1,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "133") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "68") (term "1,1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "12") (term "1,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "249") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "63") (term "1,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "133") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "221") (term "0") (ifseqformula "2"))
                              (rule "applyEq" (formula "164") (term "5") (ifseqformula "158"))
                              (rule "applyEq" (formula "14") (term "1,0,1,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "189") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "224") (term "3") (ifseqformula "2"))
                              (rule "applyEq" (formula "50") (term "1,0,0,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "11") (term "1,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "150") (term "3") (ifseqformula "149"))
                              (rule "applyEq" (formula "206") (term "1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "54") (term "1,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "60") (term "1,1,0,1") (ifseqformula "38"))
                              (rule "applyEq" (formula "65") (term "1,1,0,1") (ifseqformula "38"))
                              (rule "applyEq" (formula "55") (term "1,2,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "188") (term "1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "66") (term "1,0,0,0,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "199") (term "1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "46") (term "1,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "109") (term "1,1") (ifseqformula "37"))
                              (rule "applyEq" (formula "105") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "202") (term "1,1,1,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "300") (term "0,1,1,1,1") (ifseqformula "40"))
                              (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "118") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "16") (term "1,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "80") (term "1,1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "128") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "59") (term "1,0,1,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "66") (term "1,0,1,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "55") (term "1,0,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "61") (term "1,1,0,1") (ifseqformula "38"))
                              (rule "applyEq" (formula "189") (term "2") (ifseqformula "1"))
                              (rule "applyEq" (formula "52") (term "1,0,1,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "102") (term "1,1,0,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "66") (term "1,0,1,0,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "300") (term "0,0,1,1") (ifseqformula "4"))
                              (rule "applyEq" (formula "115") (term "1,1,0,1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "278") (term "1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "242") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "250") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "17") (term "1,2,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "220") (term "1,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "251") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "167") (term "1,1") (ifseqformula "37"))
                              (rule "applyEq" (formula "51") (term "1,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "66") (term "1,2,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "81") (term "1,1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "54") (term "1,1,0,1") (ifseqformula "38"))
                              (rule "applyEq" (formula "79") (term "1,1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "246") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "241") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "61") (term "1,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "172") (term "4") (ifseqformula "171"))
                              (rule "applyEq" (formula "62") (term "1,0,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "100") (term "1,1,0,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "231") (term "0") (ifseqformula "2"))
                              (rule "applyEq" (formula "134") (term "1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "9") (term "1,2,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "132") (term "1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "299") (term "0") (ifseqformula "37"))
                              (rule "applyEq" (formula "69") (term "1,1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "289") (term "1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "52") (term "1,0,0,0,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "88") (term "0,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "253") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "15") (term "1,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "11") (term "1,0,1,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "162") (term "1,1") (ifseqformula "37"))
                              (rule "applyEq" (formula "10") (term "1,2,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "277") (term "1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "109") (term "1,1,0,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "59") (term "1,2,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "172") (term "3") (ifseqformula "37"))
                              (rule "applyEq" (formula "179") (term "1,0,0,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "146") (term "1,1,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "220") (term "1,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "56") (term "1,1,0,1") (ifseqformula "38"))
                              (rule "applyEq" (formula "63") (term "1,1,0,1") (ifseqformula "38"))
                              (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "283") (term "1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "49") (term "1,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "58") (term "1,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "64") (term "1,0,1,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "72") (term "1,1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "114") (term "1,1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "248") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "138") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "46") (term "1,1,0,1") (ifseqformula "38"))
                              (rule "applyEq" (formula "102") (term "1,1") (ifseqformula "37"))
                              (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEqRigid" (formula "300") (term "0,0,1,0") (ifseqformula "4"))
                              (rule "applyEq" (formula "98") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "288") (term "1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "287") (term "1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "203") (term "1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "220") (term "1,0,1") (ifseqformula "2"))
                              (rule "applyEq" (formula "254") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "52") (term "1,0,1,0,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "152") (term "1,1,0,0,1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "56") (term "1,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "140") (term "1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "195") (term "1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "59") (term "1,0,0,0,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "104") (term "1,1,0,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "244") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "53") (term "1,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "153") (term "1,1") (ifseqformula "37"))
                              (rule "applyEq" (formula "64") (term "1,0,0,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "58") (term "1,1,0,1") (ifseqformula "38"))
                              (rule "applyEq" (formula "48") (term "1,0,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "70") (term "1,1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "53") (term "1,1,0,1") (ifseqformula "38"))
                              (rule "applyEq" (formula "64") (term "1,2,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "17") (term "1,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "286") (term "1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "57") (term "1,2,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "108") (term "1,1,0,0,1,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "113") (term "1,1") (ifseqformula "37"))
                              (rule "applyEq" (formula "172") (term "0") (ifseqformula "37"))
                              (rule "applyEq" (formula "181") (term "4") (ifseqformula "180"))
                              (rule "applyEq" (formula "164") (term "1,1") (ifseqformula "37"))
                              (rule "applyEq" (formula "137") (term "1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "10") (term "1,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "107") (term "1,1,0,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "103") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "11") (term "1,2,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "51") (term "1,1,0,1") (ifseqformula "38"))
                              (rule "applyEq" (formula "150") (term "2") (ifseqformula "37"))
                              (rule "applyEq" (formula "59") (term "1,0,1,0,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "252") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "179") (term "1,0,1,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "212") (term "3") (ifseqformula "1"))
                              (rule "applyEq" (formula "57") (term "1,0,0,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "95") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "93"))
                              (rule "applyEq" (formula "300") (term "1,0,0,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "300") (term "1,0,1,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "2") (term "1") (ifseqformula "221"))
                              (rule "applyEq" (formula "224") (term "3") (ifseqformula "221"))
                              (rule "applyEq" (formula "14") (term "1,0,1,0,0,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "11") (term "1,0,1,0,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "14") (term "1,0,1,0,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "12") (term "1,0,0,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "9") (term "1,0,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "10") (term "1,0,0,0,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "16") (term "1,0,0,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "13") (term "1,0,0,0,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "11") (term "1,0,0,0,0,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "13") (term "1,0,1,0,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "17") (term "1,0,1,0,0,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "14") (term "1,2,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "15") (term "1,2,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "16") (term "1,0,1,0,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "220") (term "1,0,1,0,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "16") (term "1,2,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "220") (term "1,0,1,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "9") (term "1,2,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "231") (term "0") (ifseqformula "221"))
                              (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "17") (term "1,2,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "15") (term "1,0,0,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "10") (term "1,2,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "11") (term "1,0,1,0,0,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "220") (term "1,0,0,0,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "220") (term "1,0,1") (ifseqformula "221"))
                              (rule "applyEq" (formula "10") (term "1,0,1,0,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "11") (term "1,2,0") (ifseqformula "221"))
                              (rule "applyEq" (formula "17") (term "1,0,1,0,0") (ifseqformula "221"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "161"))
                              (rule "polySimp_mulLiterals" (formula "161") (term "0"))
                              (rule "polySimp_elimOne" (formula "161") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "176"))
                              (rule "mul_literals" (formula "176") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "146") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "146") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "146") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "146") (term "1,1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "146") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "146") (term "1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "115") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "115") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "115") (term "1,1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "115") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "115") (term "1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "115") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "146") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "146") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "124") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "124") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "124") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "146") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "146") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "146") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "146") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "146") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "146") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "216"))
                              (rule "mul_literals" (formula "216") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "125") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "125") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "125") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "125") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "125") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "115") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "115") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "115") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "115") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "205"))
                              (rule "polySimp_mulLiterals" (formula "205") (term "0"))
                              (rule "polySimp_elimOne" (formula "205") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "143"))
                              (rule "polySimp_mulLiterals" (formula "143") (term "0"))
                              (rule "polySimp_elimOne" (formula "143") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "166"))
                              (rule "polySimp_mulLiterals" (formula "166") (term "0"))
                              (rule "polySimp_elimOne" (formula "166") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "175"))
                              (rule "polySimp_mulLiterals" (formula "175") (term "0"))
                              (rule "polySimp_elimOne" (formula "175") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "198"))
                              (rule "polySimp_mulLiterals" (formula "198") (term "0"))
                              (rule "polySimp_elimOne" (formula "198") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "215"))
                              (rule "polySimp_mulLiterals" (formula "215") (term "0"))
                              (rule "polySimp_elimOne" (formula "215") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "112"))
                              (rule "polySimp_mulLiterals" (formula "112") (term "0"))
                              (rule "polySimp_elimOne" (formula "112") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "211") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "211") (term "1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "211") (term "0,1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "211") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "211") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "211") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "202") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "202") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "202") (term "1,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "202") (term "0,1,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "202") (term "1,1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "202") (term "1,1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "202") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "202") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "202") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "202") (term "1,1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "202") (term "0,1,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "202") (term "1,1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "211") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "211") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "211") (term "0,1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "211") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "211") (term "1,1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "211") (term "1,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "211") (term "1,1,1,0,1,0"))
                              (rule "mul_literals" (formula "211") (term "0,1,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "211") (term "1,1,1,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "131"))
                              (rule "polySimp_mulLiterals" (formula "131") (term "0"))
                              (rule "polySimp_elimOne" (formula "131") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "98") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "98") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "105") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "105") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "135") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "135") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "135") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "135") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "135") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "135") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "128") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "128") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "128") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "128") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "128") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "128") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "155"))
                              (rule "polySimp_mulLiterals" (formula "155") (term "0"))
                              (rule "polySimp_elimOne" (formula "155") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "194"))
                              (rule "polySimp_mulLiterals" (formula "194") (term "0"))
                              (rule "polySimp_elimOne" (formula "194") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "101"))
                              (rule "polySimp_mulLiterals" (formula "101") (term "0"))
                              (rule "polySimp_elimOne" (formula "101") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "191"))
                              (rule "polySimp_mulLiterals" (formula "191") (term "0"))
                              (rule "polySimp_elimOne" (formula "191") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "139"))
                              (rule "polySimp_mulLiterals" (formula "139") (term "0"))
                              (rule "polySimp_elimOne" (formula "139") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "133") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "133") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "133") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "133") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "133") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "133") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "152"))
                              (rule "polySimp_mulLiterals" (formula "152") (term "0"))
                              (rule "polySimp_elimOne" (formula "152") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "108"))
                              (rule "polySimp_mulLiterals" (formula "108") (term "0"))
                              (rule "polySimp_elimOne" (formula "108") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "103") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "103") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "103") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "103") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "103") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "103") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "95") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0,0,0,0"))
                              (rule "pullOutSelect" (formula "188") (term "1,1,1") (inst "selectSK=java_util_Collection_seq_0"))
                              (rule "applyEq" (formula "212") (term "1,0,1") (ifseqformula "188"))
                              (rule "simplifySelectOfAnonEQ" (formula "188") (ifseqformula "148"))
                               (builtin "One Step Simplification" (formula "188"))
                              (rule "elementOfSingleton" (formula "188") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "188"))
                              (rule "pullOutSelect" (formula "189") (term "1,0,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                              (rule "applyEq" (formula "213") (term "1,0,0,1") (ifseqformula "189"))
                              (rule "simplifySelectOfAnonEQ" (formula "189") (ifseqformula "186"))
                               (builtin "One Step Simplification" (formula "189"))
                              (rule "elementOfSingleton" (formula "189") (term "0,0"))
                               (builtin "One Step Simplification" (formula "189"))
                              (rule "applyEqReverse" (formula "190") (term "1,0,1,1") (ifseqformula "189"))
                              (rule "applyEqReverse" (formula "213") (term "1,0,0,1") (ifseqformula "189"))
                              (rule "hideAuxiliaryEq" (formula "189"))
                              (rule "pullOutSelect" (formula "228") (term "1,1") (inst "selectSK=org_bouncycastle_math_ec_ECCurve_order_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "171"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "270")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "149"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "43"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "149"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "270")) (ifInst ""  (formula "43")))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "270")))
                              (rule "applyEqReverse" (formula "229") (term "1,1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "228") (term "0,1") (inst "selectSK=org_bouncycastle_math_ec_ECCurve_order_1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "211"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "237")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "187"))
                              (rule "eqSymm" (formula "229") (term "1"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "187"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "237")) (ifInst ""  (formula "7")))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "237")))
                              (rule "applyEqReverse" (formula "229") (term "1,1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "eqSymm" (formula "228") (term "1"))
                              (rule "pullOutSelect" (formula "228") (term "1,0") (inst "selectSK=org_bouncycastle_math_ec_ECPoint_value_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "171"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "268")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "149"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "44"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "149"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "268")) (ifInst ""  (formula "44")))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "268")))
                              (rule "applyEqReverse" (formula "229") (term "1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "228") (term "0,0") (inst "selectSK=org_bouncycastle_math_ec_ECPoint_value_1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "211"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "235")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "187"))
                              (rule "eqSymm" (formula "229") (term "0"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "187"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "235")) (ifInst ""  (formula "9")))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "235")))
                              (rule "applyEqReverse" (formula "229") (term "1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "eqSymm" (formula "228") (term "0"))
                              (rule "pullOutSelect" (formula "212") (term "1,1,1") (inst "selectSK=java_util_Collection_seq_1"))
                              (rule "simplifySelectOfAnonEQ" (formula "212") (ifseqformula "170"))
                               (builtin "One Step Simplification" (formula "212"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "212") (term "0,1,0,0") (ifseqformula "148"))
                              (rule "pullOutSelect" (formula "213") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_2"))
                              (rule "simplifySelectOfAnonEQ" (formula "213") (ifseqformula "210"))
                               (builtin "One Step Simplification" (formula "213"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "213") (term "0,1,0,0") (ifseqformula "186"))
                              (rule "pullOutSelect" (formula "302") (term "1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_6"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "179"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "267")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "171"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "149"))
                              (rule "ifthenelse_negated" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "303") (term "1,0,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "223"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEq" (formula "215") (term "1,2,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "215") (term "0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "215") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "215") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "215") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "212"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "replaceKnownSelect_taclet0100000000_121" (formula "1") (term "0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0100000000_122" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "215") (term "1,2,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "304") (term "1,0,1,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "215") (term "0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "215") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "215") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "215") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_left" (formula "214") (term "0,0,1,0,0") (ifseqformula "21"))
                               (builtin "One Step Simplification" (formula "214") (ifInst ""  (formula "240")))
                              (rule "applyEq" (formula "215") (term "0,0,1") (ifseqformula "214"))
                              (rule "applyEq" (formula "190") (term "0,1,1") (ifseqformula "214"))
                              (rule "simplifySelectOfAnonEQ" (formula "214") (ifseqformula "187"))
                               (builtin "One Step Simplification" (formula "214") (ifInst ""  (formula "240")) (ifInst ""  (formula "21")))
                              (rule "elementOfSingleton" (formula "214") (term "0,0"))
                               (builtin "One Step Simplification" (formula "214") (ifInst ""  (formula "240")))
                              (rule "applyEqReverse" (formula "190") (term "0,1,1") (ifseqformula "214"))
                              (rule "applyEqReverse" (formula "215") (term "0,0,1") (ifseqformula "214"))
                              (rule "applyEqReverse" (formula "215") (term "0,1,1") (ifseqformula "214"))
                              (rule "hideAuxiliaryEq" (formula "214"))
                              (rule "pullOutSelect" (formula "302") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_6"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "180"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "267")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "172"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "150"))
                              (rule "ifthenelse_negated" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "303") (term "1,1,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "181"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEq" (formula "215") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "215") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "215") (term "1,2,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "215") (term "0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "215") (term "1,1,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "173"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEq" (formula "191") (term "0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "191") (term "1,2,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "191") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "191") (term "1,0,0,1,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "151"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "215") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "215") (term "1,2,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "215") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "215") (term "0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "215") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "304") (term "1,1,1,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "191") (term "1,0,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "191") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "191") (term "1,2,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "191") (term "0,0,0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_left" (formula "214") (term "0,0,1,0,0") (ifseqformula "80"))
                               (builtin "One Step Simplification" (formula "214") (ifInst ""  (formula "274")))
                              (rule "simplifySelectOfAnonEQ" (formula "214") (ifseqformula "150"))
                               (builtin "One Step Simplification" (formula "214") (ifInst ""  (formula "274")) (ifInst ""  (formula "80")))
                              (rule "replace_known_right" (formula "190") (term "0,0,0,0") (ifseqformula "274"))
                               (builtin "One Step Simplification" (formula "190") (ifInst ""  (formula "80")))
                              (rule "applyEqReverse" (formula "215") (term "1,0,1") (ifseqformula "190"))
                              (rule "applyEqReverse" (formula "191") (term "1,1,1") (ifseqformula "190"))
                               (builtin "One Step Simplification" (formula "191"))
                              (rule "true_left" (formula "191"))
                              (rule "hideAuxiliaryEq" (formula "190"))
                              (rule "elementOfSingleton" (formula "212") (term "0,0"))
                               (builtin "One Step Simplification" (formula "212") (ifInst ""  (formula "272")))
                              (rule "applyEqReverse" (formula "213") (term "1,1,1") (ifseqformula "212"))
                               (builtin "One Step Simplification" (formula "213"))
                              (rule "true_left" (formula "213"))
                              (rule "hideAuxiliaryEq" (formula "212"))
                              (rule "pullOutSelect" (formula "299") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_7"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "219"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "264")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "211"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "189"))
                              (rule "ifthenelse_negated" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "300") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_7"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "220"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "265")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "212"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "190"))
                              (rule "ifthenelse_negated" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "4") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_8"))
                              (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "175"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "266")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0") (ifseqformula "153"))
                              (rule "ifthenelse_negated" (formula "4") (term "0"))
                              (rule "pullOutSelect" (formula "302") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_3"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "222"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "240")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "214"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "192"))
                              (rule "eqSymm" (formula "303") (term "1,1"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "26"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "214"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "240")))
                              (rule "replaceKnownSelect_taclet0100000000_141" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0100000000_142" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "192"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "26"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "303") (term "1,1,1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_8"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "176"))
                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "267")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "154"))
                              (rule "ifthenelse_negated" (formula "3") (term "0"))
                              (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_9"))
                              (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "215"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "268")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "193"))
                              (rule "ifthenelse_negated" (formula "2") (term "0"))
                              (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_9"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "216"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "269")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "194"))
                              (rule "ifthenelse_negated" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "7") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_10"))
                              (rule "simplifySelectOfAnonEQ" (formula "7") (ifseqformula "157"))
                               (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "270")))
                              (rule "elementOfSingleton" (formula "7") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "270")))
                              (rule "ifthenelse_negated" (formula "7") (term "0"))
                              (rule "applyEq" (formula "7") (term "0") (ifseqformula "64"))
                              (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                              (rule "hideAuxiliaryEq" (formula "7"))
                              (rule "pullOutSelect" (formula "305") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_4"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "187"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "277")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "179"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "157"))
                              (rule "eqSymm" (formula "306") (term "1,1"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "87"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "179"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "277")))
                              (rule "replaceKnownSelect_taclet0100000000_148" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0100000000_150" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "157"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "87"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "306") (term "1,1,1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "306"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_10"))
                              (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "157"))
                               (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "270")))
                              (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "270")))
                              (rule "ifthenelse_negated" (formula "5") (term "0"))
                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "71"))
                              (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_11"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "195"))
                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "270")))
                              (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "270")))
                              (rule "ifthenelse_negated" (formula "3") (term "0"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "21"))
                              (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_11"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "195"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "270")))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "270")))
                              (rule "ifthenelse_negated" (formula "1") (term "0"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "24"))
                              (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "inEqSimp_and_subsumption3" (formula "102") (term "0,0,0"))
                              (rule "leq_literals" (formula "102") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "102"))
                              (rule "inEqSimp_and_subsumption3" (formula "132") (term "0,0,0"))
                              (rule "leq_literals" (formula "132") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "132"))
                              (rule "inEqSimp_and_subsumption3" (formula "133") (term "0,0,0"))
                              (rule "leq_literals" (formula "133") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "133"))
                              (rule "inEqSimp_and_subsumption3" (formula "103") (term "0,0,0"))
                              (rule "leq_literals" (formula "103") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "103"))
                              (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "209") (term "1,0,0") (inst "i=i") (inst "i_0=i_0"))
                              (rule "replaceKnownSelect_taclet000000_67" (formula "209") (term "0,1,0,0,1,0,0"))
                              (rule "replaceKnownSelect_taclet000000_65" (formula "209") (term "0,0,0,0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "209") (term "0,1,0,0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "209") (term "0,0,0,0,1,0,0"))
                              (rule "replaceKnownSelect_taclet000000_67" (formula "209") (term "0,0,0,0,1,0,1,1,0,0"))
                              (rule "replaceKnownSelect_taclet000000_67" (formula "209") (term "0,1,1,0,0,0,1,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "209") (term "0,0,0,0,1,0,1,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "209") (term "0,1,1,0,0,0,1,1,0,0"))
                              (rule "replaceKnownSelect_taclet000000_65" (formula "209") (term "0,1,1,0,0,0,1,0,1,0,0"))
                              (rule "replaceKnownSelect_taclet000000_65" (formula "209") (term "0,0,0,0,1,0,1,0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "209") (term "0,1,1,0,0,0,1,0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "209") (term "0,0,0,0,1,0,1,0,1,0,0"))
                              (rule "expand_inInt" (formula "209") (term "1,0,0,1,1,0,0"))
                              (rule "expand_inInt" (formula "209") (term "1,0,0,1,0,1,0,0"))
                              (rule "replace_int_MIN" (formula "209") (term "0,1,1,0,0,1,1,0,0"))
                              (rule "replace_int_MAX" (formula "209") (term "1,0,1,0,0,1,1,0,0"))
                              (rule "replace_int_MAX" (formula "209") (term "1,0,1,0,0,1,0,1,0,0"))
                              (rule "replace_int_MIN" (formula "209") (term "0,1,1,0,0,1,0,1,0,0"))
                              (rule "eqSymm" (formula "209") (term "0,0,1,0,0"))
                              (rule "replace_known_left" (formula "209") (term "0,0,1,0,0") (ifseqformula "131"))
                               (builtin "One Step Simplification" (formula "209"))
                              (rule "castedGetAny" (formula "209") (term "0,0,1,0,0,1,0,0"))
                              (rule "castedGetAny" (formula "209") (term "0,0,1,0,1,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "209") (term "1,0,0,0,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "209") (term "1,0,0,1,0,0,0,1,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "209") (term "1,0,0,0,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "209") (term "1,0,0,1,0,0,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "209") (term "0,0,0,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "209") (term "1,1,0,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "209") (term "1,1,0,0,1,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "209") (term "0,0,0,0,1,1,0,0"))
                              (rule "applyEq" (formula "209") (term "0,1,0,0,1,0,0,0,1,1,0,0") (ifseqformula "131"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "209") (term "1,0,0,0,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "209") (term "1,1,0,0,0,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "209") (term "1,1,0,0,0,0,1,0,0"))
                              (rule "mul_literals" (formula "209") (term "0,1,1,0,0,0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "209") (term "1,1,1,0,0,0,0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "209") (term "1,1,1,0,0,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "209") (term "1,0,0,0,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "209") (term "1,1,0,0,0,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "209") (term "1,1,0,0,0,1,1,0,0"))
                              (rule "mul_literals" (formula "209") (term "0,1,1,0,0,0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "209") (term "1,1,1,0,0,0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "209") (term "1,1,1,0,0,0,1,1,0,0"))
                              (rule "nnf_imp2or" (formula "123") (term "1,0"))
                              (rule "nnf_imp2or" (formula "154") (term "1,0"))
                              (rule "nnf_imp2or" (formula "106") (term "0"))
                              (rule "nnf_imp2or" (formula "113") (term "0"))
                              (rule "nnf_imp2or" (formula "143") (term "0"))
                              (rule "nnf_imp2or" (formula "136") (term "0"))
                              (rule "nnf_imp2or" (formula "141") (term "0"))
                              (rule "nnf_imp2or" (formula "111") (term "0"))
                              (rule "cut_direct" (formula "229") (term "0"))
                              (branch "CUT: strContent(password_15_B) = strContent(password_15_A) TRUE"
                                  (builtin "One Step Simplification" (formula "230"))
                                 (rule "cut_direct" (formula "228") (term "0"))
                                 (branch "CUT: password_15_B = password_15_A TRUE"
                                     (builtin "One Step Simplification" (formula "229"))
                                    (rule "applyEqReverse" (formula "231") (term "0,1") (ifseqformula "229"))
                                     (builtin "One Step Simplification" (formula "231"))
                                    (rule "true_left" (formula "231"))
                                    (rule "applyEqReverse" (formula "269") (term "0") (ifseqformula "229"))
                                    (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "229"))
                                    (rule "hideAuxiliaryEq" (formula "229"))
                                    (rule "applyEq" (formula "229") (term "0,0") (ifseqformula "228"))
                                     (builtin "One Step Simplification" (formula "229"))
                                    (rule "true_left" (formula "229"))
                                    (rule "applyEq" (formula "229") (term "1") (ifseqformula "228"))
                                    (rule "applyEq" (formula "264") (term "0") (ifseqformula "228"))
                                    (rule "applyEq" (formula "128") (term "1,0") (ifseqformula "228"))
                                    (rule "ifthenelse_split" (formula "63") (term "0"))
                                    (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "64"))
                                       (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "64"))
                                       (rule "hideAuxiliaryEq" (formula "64"))
                                       (rule "replace_known_left" (formula "65") (term "1,0,0") (ifseqformula "63"))
                                        (builtin "One Step Simplification" (formula "65"))
                                       (rule "applyEqReverse" (formula "67") (term "1,0") (ifseqformula "65"))
                                       (rule "hideAuxiliaryEq" (formula "65"))
                                       (rule "replace_known_left" (formula "66") (term "1,0,0") (ifseqformula "63"))
                                        (builtin "One Step Simplification" (formula "66"))
                                       (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "66"))
                                       (rule "applyEqReverse" (formula "233") (term "0") (ifseqformula "66"))
                                       (rule "hideAuxiliaryEq" (formula "66"))
                                       (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "63"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "applyEqReverse" (formula "300") (term "1,0") (ifseqformula "8"))
                                       (rule "hideAuxiliaryEq" (formula "8"))
                                       (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "62"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "58") (term "1,0,0") (ifseqformula "61"))
                                        (builtin "One Step Simplification" (formula "58"))
                                       (rule "applyEqReverse" (formula "229") (term "0") (ifseqformula "58"))
                                       (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "58"))
                                       (rule "hideAuxiliaryEq" (formula "58"))
                                       (rule "replace_known_left" (formula "65") (term "0,0") (ifseqformula "60"))
                                        (builtin "One Step Simplification" (formula "65"))
                                       (rule "applyEqReverse" (formula "67") (term "1,0") (ifseqformula "65"))
                                       (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "65"))
                                       (rule "hideAuxiliaryEq" (formula "65"))
                                       (rule "replace_known_left" (formula "54") (term "0,0") (ifseqformula "60"))
                                        (builtin "One Step Simplification" (formula "54"))
                                       (rule "applyEqReverse" (formula "56") (term "1,0") (ifseqformula "54"))
                                       (rule "hideAuxiliaryEq" (formula "54"))
                                       (rule "replace_known_left" (formula "55") (term "1,0,0") (ifseqformula "59"))
                                        (builtin "One Step Simplification" (formula "55"))
                                       (rule "applyEqReverse" (formula "226") (term "0") (ifseqformula "55"))
                                       (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "55"))
                                       (rule "hideAuxiliaryEq" (formula "55"))
                                       (rule "replace_known_left" (formula "64") (term "1,0,0") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "64"))
                                       (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "64"))
                                       (rule "hideAuxiliaryEq" (formula "64"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "293") (term "1,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "292") (term "1,1") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "56"))
                                        (builtin "One Step Simplification" (formula "63"))
                                       (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "63"))
                                       (rule "applyEqReverse" (formula "224") (term "0") (ifseqformula "63"))
                                       (rule "hideAuxiliaryEq" (formula "63"))
                                       (rule "eqSymm" (formula "290") (term "0"))
                                       (rule "eqSymm" (formula "290") (term "1"))
                                       (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "223"))
                                        (builtin "One Step Simplification" (formula "59"))
                                       (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "222"))
                                        (builtin "One Step Simplification" (formula "55"))
                                       (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "221"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "replace_known_left" (formula "175") (term "1") (ifseqformula "56"))
                                        (builtin "One Step Simplification" (formula "175"))
                                       (rule "true_left" (formula "175"))
                                       (rule "seqGetAlphaCast" (formula "128") (term "0"))
                                       (rule "castedGetAny" (formula "128") (term "0"))
                                        (builtin "One Step Simplification" (formula "128"))
                                       (rule "true_left" (formula "128"))
                                       (rule "seqGetAlphaCast" (formula "149") (term "0"))
                                       (rule "castedGetAny" (formula "149") (term "0"))
                                        (builtin "One Step Simplification" (formula "149"))
                                       (rule "true_left" (formula "149"))
                                       (rule "commute_and" (formula "142") (term "0,0"))
                                       (rule "seqGetAlphaCast" (formula "186") (term "0"))
                                       (rule "castedGetAny" (formula "186") (term "0"))
                                        (builtin "One Step Simplification" (formula "186"))
                                       (rule "true_left" (formula "186"))
                                       (rule "commute_and" (formula "111") (term "0,0"))
                                       (rule "lenNonNegative" (formula "126") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "126"))
                                       (rule "seqGetAlphaCast" (formula "152") (term "0"))
                                       (rule "castedGetAny" (formula "152") (term "0"))
                                        (builtin "One Step Simplification" (formula "152"))
                                       (rule "true_left" (formula "152"))
                                       (rule "seqGetAlphaCast" (formula "98") (term "0"))
                                       (rule "castedGetAny" (formula "98") (term "0"))
                                        (builtin "One Step Simplification" (formula "98"))
                                       (rule "true_left" (formula "98"))
                                       (rule "ifthenelse_split" (formula "19") (term "0"))
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "20"))
                                          (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "20"))
                                          (rule "hideAuxiliaryEq" (formula "20"))
                                          (rule "replace_known_left" (formula "17") (term "1,0,0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                          (rule "hideAuxiliaryEq" (formula "17"))
                                          (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "applyEqReverse" (formula "15") (term "1,0") (ifseqformula "14"))
                                          (rule "hideAuxiliaryEq" (formula "14"))
                                          (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "287") (term "1,1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "replace_known_left" (formula "15") (term "1,0,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "286") (term "1,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "15"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "285") (term "1,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_left" (formula "11") (term "1,0,0") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "10"))
                                          (rule "hideAuxiliaryEq" (formula "10"))
                                          (rule "replace_known_left" (formula "15") (term "1,0,0") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "14"))
                                          (rule "hideAuxiliaryEq" (formula "14"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "282") (term "1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "12"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "applyEqReverse" (formula "281") (term "1,0") (ifseqformula "10"))
                                          (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "10"))
                                          (rule "hideAuxiliaryEq" (formula "10"))
                                          (rule "eqSymm" (formula "280") (term "1"))
                                          (rule "eqSymm" (formula "280") (term "0"))
                                          (rule "replace_known_left" (formula "280") (term "0") (ifseqformula "10"))
                                           (builtin "One Step Simplification" (formula "280") (ifInst ""  (formula "12")))
                                          (rule "closeTrue" (formula "280"))
                                       )
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "19"))
                                          (rule "hideAuxiliaryEq" (formula "19"))
                                          (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "218"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "218"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "applyEqReverse" (formula "14") (term "1,0") (ifseqformula "13"))
                                          (rule "hideAuxiliaryEq" (formula "13"))
                                          (rule "replace_known_right" (formula "16") (term "1,0,0") (ifseqformula "217"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "217"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "replace_known_right" (formula "19") (term "1,0,0") (ifseqformula "217"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "217"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "217"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "217"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "replace_known_right" (formula "13") (term "1,0,0") (ifseqformula "217"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "217"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "replace_known_right" (formula "14") (term "1,0,0") (ifseqformula "217"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "217"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "15"))
                                          (rule "applyEqReverse" (formula "16") (term "1,0") (ifseqformula "15"))
                                          (rule "hideAuxiliaryEq" (formula "15"))
                                          (rule "replace_known_right" (formula "210") (term "1") (ifseqformula "216"))
                                           (builtin "One Step Simplification" (formula "210"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "15"))
                                          (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                          (rule "hideAuxiliaryEq" (formula "16"))
                                          (rule "nnf_imp2or" (formula "85") (term "0"))
                                          (rule "nnf_imp2or" (formula "115") (term "0"))
                                          (rule "nnf_imp2or" (formula "116") (term "0"))
                                          (rule "nnf_imp2or" (formula "86") (term "0"))
                                          (rule "lenNonNegative" (formula "91") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "91"))
                                          (rule "lenNonNegative" (formula "125") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "125"))
                                          (rule "seqGetAlphaCast" (formula "100") (term "0"))
                                          (rule "castedGetAny" (formula "100") (term "0"))
                                           (builtin "One Step Simplification" (formula "100"))
                                          (rule "true_left" (formula "100"))
                                          (rule "nnf_notAnd" (formula "89") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "89") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "89") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "89") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "89") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "89") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "89") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "89") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "89") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "89") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0"))
                                          (rule "mul_literals" (formula "89") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "96") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "96") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "96") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "96") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "96") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "96") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "96") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "96") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "96") (term "1,0,0"))
                                          (rule "mul_literals" (formula "96") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "96") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "1,0,0"))
                                          (rule "mul_literals" (formula "96") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "126") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "126") (term "1,0,0"))
                                          (rule "mul_literals" (formula "126") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "126") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0,0"))
                                          (rule "mul_literals" (formula "126") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "126") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "126") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "126") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "126") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "126") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "119") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "119") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "119") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "119") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "1,0,0"))
                                          (rule "mul_literals" (formula "119") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "119") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "119") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "119") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "119") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "119") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "119") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "119") (term "1,0,0,0"))
                                          (rule "seqGetAlphaCast" (formula "131") (term "0"))
                                          (rule "castedGetAny" (formula "131") (term "0"))
                                           (builtin "One Step Simplification" (formula "131"))
                                          (rule "true_left" (formula "131"))
                                          (rule "nnf_notAnd" (formula "124") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "124") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "124") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "124") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "1,0,0"))
                                          (rule "mul_literals" (formula "124") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "124") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "124") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "124") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "124") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "124") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "124") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "124") (term "1,0,0,0"))
                                          (rule "seqGetAlphaCast" (formula "184") (term "0"))
                                          (rule "castedGetAny" (formula "184") (term "0"))
                                           (builtin "One Step Simplification" (formula "184"))
                                          (rule "true_left" (formula "184"))
                                          (rule "nnf_notAnd" (formula "94") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "94") (term "1,0,0"))
                                          (rule "mul_literals" (formula "94") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "94") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0"))
                                          (rule "mul_literals" (formula "94") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "94") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "94") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "94") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "94") (term "1,0,0,0"))
                                          (rule "lenNonNegative" (formula "95") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "95"))
                                          (rule "commute_and" (formula "215"))
                                          (rule "nnf_imp2or" (formula "191") (term "0,0,1,0,0"))
                                          (rule "lenNonNegative" (formula "128") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "128"))
                                          (rule "nnf_imp2or" (formula "191") (term "0,1,1,0,0"))
                                          (rule "lenNonNegative" (formula "98") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "98"))
                                          (rule "nnf_imp2or" (formula "137") (term "0"))
                                          (rule "nnf_imp2or" (formula "106") (term "0"))
                                          (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0"))
                                          (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0"))
                                          (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "115") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "115") (term "1,0,0"))
                                          (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "115") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1,0,0"))
                                          (rule "mul_literals" (formula "115") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                          (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                          (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                          (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                          (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                          (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "191") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "191") (term "0,1,0,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "191") (term "0,0,0,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "191") (term "0,1,0,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "191") (term "0,0,0,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "191") (term "0,0,0,0,1,0,1,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "191") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "191") (term "0,0,0,0,1,0,1,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "191") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "191") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "191") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "191") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "191") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                          (rule "expand_inInt" (formula "191") (term "1,0,0,1,1,1,0"))
                                          (rule "expand_inInt" (formula "191") (term "1,0,0,1,0,1,1,0"))
                                          (rule "replace_int_MAX" (formula "191") (term "1,0,1,0,0,1,1,1,0"))
                                          (rule "replace_int_MIN" (formula "191") (term "0,1,1,0,0,1,1,1,0"))
                                          (rule "replace_int_MAX" (formula "191") (term "1,0,1,0,0,1,0,1,1,0"))
                                          (rule "replace_int_MIN" (formula "191") (term "0,1,1,0,0,1,0,1,1,0"))
                                          (rule "eqSymm" (formula "191") (term "0,0,1,1,0"))
                                          (rule "replace_known_left" (formula "191") (term "0,0,1,1,0") (ifseqformula "84"))
                                           (builtin "One Step Simplification" (formula "191"))
                                          (rule "castedGetAny" (formula "191") (term "0,0,1,0,0,1,1,0"))
                                          (rule "castedGetAny" (formula "191") (term "0,0,1,0,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "191") (term "1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "191") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "191") (term "1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "191") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "191") (term "1,1,0,0,1,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "191") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "191") (term "0,0,0,0,1,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "191") (term "1,1,0,0,0,1,1,0"))
                                          (rule "applyEq" (formula "191") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "84"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "191") (term "1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "191") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "191") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "191") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "191") (term "0,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "191") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "191") (term "1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "191") (term "1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "191") (term "1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "191") (term "1,1,1,0,0,0,1,1,1,0"))
                                          (rule "mul_literals" (formula "191") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "191") (term "1,1,1,0,0,0,1,1,1,0"))
                                          (rule "nnf_notAnd" (formula "137") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "137") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "137") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "137") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "137") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "137") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "137") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "137") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "137") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "137") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "137") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "137") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "137") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "137") (term "0,0,0"))
                                          (rule "mul_literals" (formula "137") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "106") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "106") (term "0,0,0"))
                                          (rule "mul_literals" (formula "106") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "106") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "106") (term "0,0,0"))
                                          (rule "mul_literals" (formula "106") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "106") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "106") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "106") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "106") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "106") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "106") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "106") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "106") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "106") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "85") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "85") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "85") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "85") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "85") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "85") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "85") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "85") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "85") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "85") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "85") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "115") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "115") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "115") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "115") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "115") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "115") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "115") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "115") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "115") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "115") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "115") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "115") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "116") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "86") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "191") (term "0,0,1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "191") (term "0,0,0,1,0,0"))
                                          (rule "nnf_imp2or" (formula "191") (term "0,0,1,1,0"))
                                          (rule "nnf_imp2or" (formula "191") (term "0,1,1,1,0"))
                                          (rule "commute_or" (formula "3") (term "0,0"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "15"))
                                          (rule "applyEqReverse" (formula "285") (term "1,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "285"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "commute_or" (formula "2") (term "0,0"))
                                          (rule "applyEq" (formula "15") (term "0") (ifseqformula "2"))
                                          (rule "eqSymm" (formula "15"))
                                          (rule "close" (formula "284") (ifseqformula "15"))
                                       )
                                    )
                                    (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "63"))
                                       (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "63"))
                                       (rule "hideAuxiliaryEq" (formula "63"))
                                       (rule "replace_known_right" (formula "69") (term "0,0") (ifseqformula "231"))
                                        (builtin "One Step Simplification" (formula "69"))
                                       (rule "applyEqReverse" (formula "71") (term "1,0") (ifseqformula "69"))
                                       (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "69"))
                                       (rule "hideAuxiliaryEq" (formula "69"))
                                       (rule "replace_known_right" (formula "58") (term "1,0,0") (ifseqformula "230"))
                                        (builtin "One Step Simplification" (formula "58"))
                                       (rule "replace_known_right" (formula "66") (term "1,0,0") (ifseqformula "230"))
                                        (builtin "One Step Simplification" (formula "66"))
                                       (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "230"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_right" (formula "56") (term "0,0") (ifseqformula "230"))
                                        (builtin "One Step Simplification" (formula "56"))
                                       (rule "applyEqReverse" (formula "58") (term "1,0") (ifseqformula "56"))
                                       (rule "hideAuxiliaryEq" (formula "56"))
                                       (rule "replace_known_right" (formula "71") (term "1,0,0") (ifseqformula "229"))
                                        (builtin "One Step Simplification" (formula "71"))
                                       (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "229"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_right" (formula "69") (term "1,0,0") (ifseqformula "229"))
                                        (builtin "One Step Simplification" (formula "69"))
                                       (rule "replace_known_right" (formula "59") (term "1,0,0") (ifseqformula "229"))
                                        (builtin "One Step Simplification" (formula "59"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "229"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "229"))
                                        (builtin "One Step Simplification" (formula "63"))
                                       (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "229"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_right" (formula "184") (term "1") (ifseqformula "229"))
                                        (builtin "One Step Simplification" (formula "184"))
                                       (rule "applyEq" (formula "69") (term "0") (ifseqformula "5"))
                                       (rule "applyEqReverse" (formula "71") (term "1,0") (ifseqformula "69"))
                                       (rule "hideAuxiliaryEq" (formula "69"))
                                       (rule "applyEq" (formula "7") (term "0") (ifseqformula "63"))
                                       (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "seqGetAlphaCast" (formula "135") (term "0"))
                                       (rule "castedGetAny" (formula "135") (term "0"))
                                        (builtin "One Step Simplification" (formula "135"))
                                       (rule "true_left" (formula "135"))
                                       (rule "seqGetAlphaCast" (formula "156") (term "0"))
                                       (rule "castedGetAny" (formula "156") (term "0"))
                                        (builtin "One Step Simplification" (formula "156"))
                                       (rule "true_left" (formula "156"))
                                       (rule "commute_and" (formula "149") (term "0,0"))
                                       (rule "seqGetAlphaCast" (formula "194") (term "0"))
                                       (rule "castedGetAny" (formula "194") (term "0"))
                                        (builtin "One Step Simplification" (formula "194"))
                                       (rule "true_left" (formula "194"))
                                       (rule "commute_and" (formula "118") (term "0,0"))
                                       (rule "lenNonNegative" (formula "133") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "133"))
                                       (rule "seqGetAlphaCast" (formula "159") (term "0"))
                                       (rule "castedGetAny" (formula "159") (term "0"))
                                        (builtin "One Step Simplification" (formula "159"))
                                       (rule "true_left" (formula "159"))
                                       (rule "seqGetAlphaCast" (formula "105") (term "0"))
                                       (rule "castedGetAny" (formula "105") (term "0"))
                                        (builtin "One Step Simplification" (formula "105"))
                                       (rule "true_left" (formula "105"))
                                       (rule "ifthenelse_split" (formula "22") (term "0"))
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "23"))
                                          (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "23"))
                                          (rule "hideAuxiliaryEq" (formula "23"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "22"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "21"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "297") (term "0,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "eqSymm" (formula "296") (term "0"))
                                          (rule "replace_known_left" (formula "15") (term "1,0,0") (ifseqformula "20"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "applyEqReverse" (formula "16") (term "1,0") (ifseqformula "15"))
                                          (rule "hideAuxiliaryEq" (formula "15"))
                                          (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "295") (term "0,1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "replace_known_left" (formula "20") (term "1,0,0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "applyEqReverse" (formula "227") (term "0") (ifseqformula "20"))
                                          (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "20"))
                                          (rule "hideAuxiliaryEq" (formula "20"))
                                          (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "applyEqReverse" (formula "224") (term "0") (ifseqformula "14"))
                                          (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "14"))
                                          (rule "hideAuxiliaryEq" (formula "14"))
                                          (rule "replace_known_left" (formula "18") (term "1,0,0") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "225") (term "0") (ifseqformula "18"))
                                          (rule "hideAuxiliaryEq" (formula "18"))
                                          (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "applyEqReverse" (formula "291") (term "1,0") (ifseqformula "14"))
                                          (rule "applyEqReverse" (formula "15") (term "1,0") (ifseqformula "14"))
                                          (rule "hideAuxiliaryEq" (formula "14"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "290") (term "0,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "15"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "applyEqReverse" (formula "221") (term "0") (ifseqformula "14"))
                                          (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "14"))
                                          (rule "hideAuxiliaryEq" (formula "14"))
                                          (rule "replace_known_left" (formula "13") (term "1,0,0") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "13"))
                                          (rule "applyEqReverse" (formula "220") (term "0") (ifseqformula "13"))
                                          (rule "hideAuxiliaryEq" (formula "13"))
                                          (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "applyEqReverse" (formula "47") (term "1") (ifseqformula "12"))
                                          (rule "applyEqReverse" (formula "218") (term "0") (ifseqformula "12"))
                                          (rule "hideAuxiliaryEq" (formula "12"))
                                          (rule "eqSymm" (formula "286") (term "0"))
                                          (rule "replace_known_left" (formula "209") (term "1") (ifseqformula "12"))
                                           (builtin "One Step Simplification" (formula "209"))
                                          (rule "true_left" (formula "209"))
                                          (rule "nnf_imp2or" (formula "85") (term "0"))
                                          (rule "nnf_imp2or" (formula "115") (term "0"))
                                          (rule "nnf_imp2or" (formula "116") (term "0"))
                                          (rule "nnf_imp2or" (formula "86") (term "0"))
                                          (rule "lenNonNegative" (formula "91") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "91"))
                                          (rule "lenNonNegative" (formula "125") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "125"))
                                          (rule "seqGetAlphaCast" (formula "100") (term "0"))
                                          (rule "castedGetAny" (formula "100") (term "0"))
                                           (builtin "One Step Simplification" (formula "100"))
                                          (rule "true_left" (formula "100"))
                                          (rule "nnf_notAnd" (formula "89") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "89") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "89") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "89") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "89") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "89") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "89") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "89") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "89") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "89") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0"))
                                          (rule "mul_literals" (formula "89") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "96") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "96") (term "1,0,0"))
                                          (rule "mul_literals" (formula "96") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "96") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "1,0,0"))
                                          (rule "mul_literals" (formula "96") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "96") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "96") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "96") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "96") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "96") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "96") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "96") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "126") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "126") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "126") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "126") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "126") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "126") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "126") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "126") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "126") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0,0"))
                                          (rule "mul_literals" (formula "126") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "119") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "119") (term "1,0,0"))
                                          (rule "mul_literals" (formula "119") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "119") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "1,0,0"))
                                          (rule "mul_literals" (formula "119") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "119") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "119") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "119") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "119") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "119") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "119") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "119") (term "1,0,0,0"))
                                          (rule "seqGetAlphaCast" (formula "131") (term "0"))
                                          (rule "castedGetAny" (formula "131") (term "0"))
                                           (builtin "One Step Simplification" (formula "131"))
                                          (rule "true_left" (formula "131"))
                                          (rule "seqGetAlphaCast" (formula "185") (term "0"))
                                          (rule "castedGetAny" (formula "185") (term "0"))
                                           (builtin "One Step Simplification" (formula "185"))
                                          (rule "true_left" (formula "185"))
                                          (rule "nnf_notAnd" (formula "124") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "124") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "124") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "124") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "1,0,0"))
                                          (rule "mul_literals" (formula "124") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "124") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "124") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "124") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "124") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "124") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "124") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "124") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "94") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "94") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "94") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "94") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "94") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "94") (term "1,0,0"))
                                          (rule "mul_literals" (formula "94") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "94") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0"))
                                          (rule "mul_literals" (formula "94") (term "1,1,0,0"))
                                          (rule "lenNonNegative" (formula "95") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "95"))
                                          (rule "commute_and" (formula "215"))
                                          (rule "nnf_imp2or" (formula "192") (term "0,0,1,0,0"))
                                          (rule "lenNonNegative" (formula "128") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "128"))
                                          (rule "nnf_imp2or" (formula "192") (term "0,1,1,0,0"))
                                          (rule "lenNonNegative" (formula "98") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "98"))
                                          (rule "nnf_imp2or" (formula "137") (term "0"))
                                          (rule "nnf_imp2or" (formula "106") (term "0"))
                                          (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0"))
                                          (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0"))
                                          (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "115") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "115") (term "1,0,0"))
                                          (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "115") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1,0,0"))
                                          (rule "mul_literals" (formula "115") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                          (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                          (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                          (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                          (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                          (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "192") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,1,0,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,0,0,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,1,0,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,0,0,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,0,0,0,1,0,1,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,0,0,0,1,0,1,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                          (rule "expand_inInt" (formula "192") (term "1,0,0,1,0,1,1,0"))
                                          (rule "expand_inInt" (formula "192") (term "1,0,0,1,1,1,0"))
                                          (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,0,1,1,0"))
                                          (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,0,1,1,0"))
                                          (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,1,1,0"))
                                          (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,1,1,0"))
                                          (rule "eqSymm" (formula "192") (term "0,0,1,1,0"))
                                          (rule "replace_known_left" (formula "192") (term "0,0,1,1,0") (ifseqformula "84"))
                                           (builtin "One Step Simplification" (formula "192"))
                                          (rule "castedGetAny" (formula "192") (term "0,0,1,0,0,1,1,0"))
                                          (rule "castedGetAny" (formula "192") (term "0,0,1,0,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,1,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,1,1,1,0"))
                                          (rule "applyEq" (formula "192") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "84"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,1,1,1,0"))
                                          (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,1,1,1,0"))
                                          (rule "nnf_notAnd" (formula "137") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "137") (term "0,0,0"))
                                          (rule "mul_literals" (formula "137") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "137") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "137") (term "0,0,0"))
                                          (rule "mul_literals" (formula "137") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "137") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "137") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "137") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "137") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "137") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "137") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "137") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "137") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "137") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "106") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "106") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "106") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "106") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "106") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "106") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "106") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "106") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "106") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "106") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "106") (term "0,0,0"))
                                          (rule "mul_literals" (formula "106") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "106") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "106") (term "0,0,0"))
                                          (rule "mul_literals" (formula "106") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "85") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "85") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "85") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "85") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "85") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "85") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "85") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "85") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "85") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "85") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "85") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "115") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "115") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "115") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "115") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "115") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "115") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "115") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "115") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "115") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "115") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "115") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "116") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "86") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "86") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                          (rule "commute_or" (formula "3") (term "0,0"))
                                          (rule "applyEq" (formula "52") (term "0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "52"))
                                          (rule "applyEqReverse" (formula "285") (term "1,0") (ifseqformula "52"))
                                           (builtin "One Step Simplification" (formula "285"))
                                          (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "52"))
                                          (rule "hideAuxiliaryEq" (formula "52"))
                                          (rule "commute_or" (formula "2") (term "0,0"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "56"))
                                          (rule "close" (formula "284") (ifseqformula "2"))
                                       )
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "22"))
                                          (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                                          (rule "hideAuxiliaryEq" (formula "22"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "226"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "226"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "226"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "replace_known_right" (formula "20") (term "1,0,0") (ifseqformula "226"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "226"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "226"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "226"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "226"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "226"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "19"))
                                          (rule "hideAuxiliaryEq" (formula "19"))
                                          (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "225"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                          (rule "hideAuxiliaryEq" (formula "16"))
                                          (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "224"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "replace_known_right" (formula "20") (term "1,0,0") (ifseqformula "224"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "replace_known_right" (formula "218") (term "1") (ifseqformula "224"))
                                           (builtin "One Step Simplification" (formula "218"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "20"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                          (rule "hideAuxiliaryEq" (formula "17"))
                                          (rule "nnf_imp2or" (formula "92") (term "0"))
                                          (rule "nnf_imp2or" (formula "122") (term "0"))
                                          (rule "nnf_imp2or" (formula "123") (term "0"))
                                          (rule "nnf_imp2or" (formula "93") (term "0"))
                                          (rule "lenNonNegative" (formula "98") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "98"))
                                          (rule "lenNonNegative" (formula "132") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "132"))
                                          (rule "seqGetAlphaCast" (formula "107") (term "0"))
                                          (rule "castedGetAny" (formula "107") (term "0"))
                                           (builtin "One Step Simplification" (formula "107"))
                                          (rule "true_left" (formula "107"))
                                          (rule "nnf_notAnd" (formula "96") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "96") (term "1,0,0"))
                                          (rule "mul_literals" (formula "96") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "96") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "1,0,0"))
                                          (rule "mul_literals" (formula "96") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "96") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "96") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "96") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "96") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "96") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "96") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "96") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "103") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "103") (term "1,0,0"))
                                          (rule "mul_literals" (formula "103") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "103") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "103") (term "1,0,0"))
                                          (rule "mul_literals" (formula "103") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "103") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "103") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "103") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "103") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "103") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "103") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "103") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "103") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "103") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "133") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "133") (term "1,0,0"))
                                          (rule "mul_literals" (formula "133") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "133") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "133") (term "1,0,0"))
                                          (rule "mul_literals" (formula "133") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "133") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "133") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "133") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "133") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "133") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "133") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "133") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "133") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "133") (term "1,0,0,0"))
                                          (rule "seqGetAlphaCast" (formula "138") (term "0"))
                                          (rule "castedGetAny" (formula "138") (term "0"))
                                           (builtin "One Step Simplification" (formula "138"))
                                          (rule "true_left" (formula "138"))
                                          (rule "nnf_notAnd" (formula "126") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "126") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "126") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "126") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "126") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "126") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "126") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "126") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "126") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0,0"))
                                          (rule "mul_literals" (formula "126") (term "1,1,0,0"))
                                          (rule "seqGetAlphaCast" (formula "192") (term "0"))
                                          (rule "castedGetAny" (formula "192") (term "0"))
                                           (builtin "One Step Simplification" (formula "192"))
                                          (rule "true_left" (formula "192"))
                                          (rule "nnf_notAnd" (formula "131") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "131") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "131") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "131") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "131") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "131") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "131") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "131") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "131") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "131") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "131") (term "1,0,0"))
                                          (rule "mul_literals" (formula "131") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "131") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "131") (term "1,0,0"))
                                          (rule "mul_literals" (formula "131") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "101") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "101") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "101") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "101") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "101") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "101") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "101") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "101") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "101") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "101") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "101") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "101") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "101") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "101") (term "1,0,0"))
                                          (rule "mul_literals" (formula "101") (term "1,1,0,0"))
                                          (rule "lenNonNegative" (formula "102") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "102"))
                                          (rule "commute_and" (formula "224"))
                                          (rule "nnf_imp2or" (formula "199") (term "0,0,1,0,0"))
                                          (rule "lenNonNegative" (formula "135") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "135"))
                                          (rule "nnf_imp2or" (formula "199") (term "0,1,1,0,0"))
                                          (rule "lenNonNegative" (formula "105") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "105"))
                                          (rule "nnf_imp2or" (formula "144") (term "0"))
                                          (rule "nnf_imp2or" (formula "113") (term "0"))
                                          (rule "nnf_notAnd" (formula "92") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "92") (term "1,0,0"))
                                          (rule "mul_literals" (formula "92") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "92") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "92") (term "1,0,0"))
                                          (rule "mul_literals" (formula "92") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "122") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "122") (term "1,0,0"))
                                          (rule "mul_literals" (formula "122") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "122") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "122") (term "1,0,0"))
                                          (rule "mul_literals" (formula "122") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "123") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "123") (term "1,0,0"))
                                          (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "123") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "1,0,0"))
                                          (rule "mul_literals" (formula "123") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "93") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "93") (term "1,0,0"))
                                          (rule "mul_literals" (formula "93") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "93") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "1,0,0"))
                                          (rule "mul_literals" (formula "93") (term "1,1,0,0"))
                                          (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "199") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "0,1,0,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "0,1,0,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "0,0,0,0,1,0,1,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "0,0,0,0,1,0,1,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                          (rule "expand_inInt" (formula "199") (term "1,0,0,1,1,1,0"))
                                          (rule "expand_inInt" (formula "199") (term "1,0,0,1,0,1,1,0"))
                                          (rule "replace_int_MAX" (formula "199") (term "1,0,1,0,0,1,1,1,0"))
                                          (rule "replace_int_MIN" (formula "199") (term "0,1,1,0,0,1,1,1,0"))
                                          (rule "replace_int_MAX" (formula "199") (term "1,0,1,0,0,1,0,1,1,0"))
                                          (rule "replace_int_MIN" (formula "199") (term "0,1,1,0,0,1,0,1,1,0"))
                                          (rule "eqSymm" (formula "199") (term "0,0,1,1,0"))
                                          (rule "replace_known_left" (formula "199") (term "0,0,1,1,0") (ifseqformula "91"))
                                           (builtin "One Step Simplification" (formula "199"))
                                          (rule "castedGetAny" (formula "199") (term "0,0,1,0,0,1,1,0"))
                                          (rule "castedGetAny" (formula "199") (term "0,0,1,0,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "199") (term "1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "199") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "199") (term "1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "199") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "199") (term "0,0,0,0,1,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "199") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "199") (term "1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "199") (term "1,1,0,0,1,1,1,0"))
                                          (rule "applyEq" (formula "199") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "91"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "199") (term "1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "199") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "199") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "199") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "199") (term "0,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "199") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "199") (term "1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "199") (term "1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "199") (term "1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "199") (term "1,1,1,0,0,0,1,1,1,0"))
                                          (rule "mul_literals" (formula "199") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "199") (term "1,1,1,0,0,0,1,1,1,0"))
                                          (rule "nnf_notAnd" (formula "144") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "144") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "144") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "144") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "144") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "144") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "144") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "144") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "144") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "144") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "144") (term "0,0,0"))
                                          (rule "mul_literals" (formula "144") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "144") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "144") (term "0,0,0"))
                                          (rule "mul_literals" (formula "144") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "113") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "113") (term "0,0,0"))
                                          (rule "mul_literals" (formula "113") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "113") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "113") (term "0,0,0"))
                                          (rule "mul_literals" (formula "113") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "113") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "113") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "113") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "113") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "113") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "113") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "113") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "113") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "113") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "92") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "92") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "92") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "92") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "92") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "92") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "92") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "92") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "92") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "92") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "92") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "92") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "92") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "92") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "92") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "122") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "122") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "122") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "122") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "122") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "122") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "122") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "122") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "122") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "122") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "122") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "122") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "122") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "122") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "122") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "123") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "123") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "123") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "123") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "123") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "123") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "123") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "123") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "123") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "123") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "123") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "123") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "123") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "93") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "93") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "93") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "93") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "93") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "93") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "93") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "93") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "93") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "93") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "93") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "93") (term "1,0,0,0,0"))
                                          (rule "commute_or" (formula "6") (term "0,0"))
                                          (rule "applyEq" (formula "59") (term "0") (ifseqformula "6"))
                                          (rule "applyEqReverse" (formula "226") (term "0") (ifseqformula "59"))
                                          (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "59"))
                                          (rule "hideAuxiliaryEq" (formula "59"))
                                          (rule "commute_or" (formula "5") (term "0,0"))
                                          (rule "applyEq" (formula "63") (term "0") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "63"))
                                          (rule "applyEqReverse" (formula "226") (term "0") (ifseqformula "63"))
                                          (rule "hideAuxiliaryEq" (formula "63"))
                                          (rule "nnf_notAnd" (formula "197") (term "0,0,1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "197") (term "0,0,0,1,0,0"))
                                          (rule "nnf_imp2or" (formula "197") (term "0,0,1,1,0"))
                                          (rule "nnf_imp2or" (formula "197") (term "0,1,1,1,0"))
                                          (rule "commute_or" (formula "1") (term "0,0"))
                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "225") (term "0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "292") (term "1,1") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "292"))
                                          (rule "hideAuxiliaryEq" (formula "19"))
                                          (rule "commute_or" (formula "3") (term "0,0"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "17"))
                                          (rule "applyEqReverse" (formula "291") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "291"))
                                          (rule "closeTrue" (formula "291"))
                                       )
                                    )
                                 )
                                 (branch "CUT: password_15_B = password_15_A FALSE"
                                     (builtin "One Step Simplification" (formula "228"))
                                    (rule "true_left" (formula "228"))
                                    (rule "ifthenelse_split" (formula "63") (term "0"))
                                    (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "64"))
                                       (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "64"))
                                       (rule "hideAuxiliaryEq" (formula "64"))
                                       (rule "replace_known_left" (formula "65") (term "1,0,0") (ifseqformula "63"))
                                        (builtin "One Step Simplification" (formula "65"))
                                       (rule "applyEqReverse" (formula "67") (term "1,0") (ifseqformula "65"))
                                       (rule "hideAuxiliaryEq" (formula "65"))
                                       (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "63"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "62"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "304") (term "1,1") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "71") (term "1,0,0") (ifseqformula "61"))
                                        (builtin "One Step Simplification" (formula "71"))
                                       (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "71"))
                                       (rule "applyEqReverse" (formula "234") (term "0") (ifseqformula "71"))
                                       (rule "hideAuxiliaryEq" (formula "71"))
                                       (rule "replace_known_left" (formula "69") (term "1,0,0") (ifseqformula "61"))
                                        (builtin "One Step Simplification" (formula "69"))
                                       (rule "applyEqReverse" (formula "233") (term "0") (ifseqformula "69"))
                                       (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "69"))
                                       (rule "hideAuxiliaryEq" (formula "69"))
                                       (rule "replace_known_left" (formula "58") (term "1,0,0") (ifseqformula "61"))
                                        (builtin "One Step Simplification" (formula "58"))
                                       (rule "applyEqReverse" (formula "264") (term "0") (ifseqformula "58"))
                                       (rule "applyEqReverse" (formula "224") (term "0,1") (ifseqformula "58"))
                                       (rule "hideAuxiliaryEq" (formula "58"))
                                       (rule "replace_known_left" (formula "54") (term "0,0") (ifseqformula "60"))
                                        (builtin "One Step Simplification" (formula "54"))
                                       (rule "applyEqReverse" (formula "56") (term "1,0") (ifseqformula "54"))
                                       (rule "hideAuxiliaryEq" (formula "54"))
                                       (rule "replace_known_left" (formula "65") (term "0,0") (ifseqformula "59"))
                                        (builtin "One Step Simplification" (formula "65"))
                                       (rule "applyEqReverse" (formula "230") (term "0") (ifseqformula "65"))
                                       (rule "applyEqReverse" (formula "299") (term "1,1") (ifseqformula "65"))
                                       (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "65"))
                                       (rule "hideAuxiliaryEq" (formula "65"))
                                       (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "59"))
                                        (builtin "One Step Simplification" (formula "62"))
                                       (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "62"))
                                       (rule "applyEqReverse" (formula "228") (term "0") (ifseqformula "62"))
                                       (rule "hideAuxiliaryEq" (formula "62"))
                                       (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "59"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "296") (term "1,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "53") (term "1,0,0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "applyEqReverse" (formula "258") (term "0") (ifseqformula "53"))
                                       (rule "applyEqReverse" (formula "218") (term "0,1") (ifseqformula "53"))
                                       (rule "hideAuxiliaryEq" (formula "53"))
                                       (rule "eqSymm" (formula "294") (term "1"))
                                       (rule "eqSymm" (formula "294") (term "0"))
                                       (rule "eqSymm" (formula "217"))
                                       (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "257"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "224"))
                                        (builtin "One Step Simplification" (formula "55"))
                                       (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "225"))
                                        (builtin "One Step Simplification" (formula "59"))
                                       (rule "replace_known_left" (formula "175") (term "1") (ifseqformula "56"))
                                        (builtin "One Step Simplification" (formula "175"))
                                       (rule "true_left" (formula "175"))
                                       (rule "seqGetAlphaCast" (formula "128") (term "0"))
                                       (rule "castedGetAny" (formula "128") (term "0"))
                                        (builtin "One Step Simplification" (formula "128"))
                                       (rule "true_left" (formula "128"))
                                       (rule "seqGetAlphaCast" (formula "149") (term "0"))
                                       (rule "castedGetAny" (formula "149") (term "0"))
                                        (builtin "One Step Simplification" (formula "149"))
                                       (rule "true_left" (formula "149"))
                                       (rule "commute_and" (formula "142") (term "0,0"))
                                       (rule "seqGetAlphaCast" (formula "186") (term "0"))
                                       (rule "castedGetAny" (formula "186") (term "0"))
                                        (builtin "One Step Simplification" (formula "186"))
                                       (rule "true_left" (formula "186"))
                                       (rule "commute_and" (formula "111") (term "0,0"))
                                       (rule "lenNonNegative" (formula "126") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "126"))
                                       (rule "seqGetAlphaCast" (formula "152") (term "0"))
                                       (rule "castedGetAny" (formula "152") (term "0"))
                                        (builtin "One Step Simplification" (formula "152"))
                                       (rule "true_left" (formula "152"))
                                       (rule "seqGetAlphaCast" (formula "98") (term "0"))
                                       (rule "castedGetAny" (formula "98") (term "0"))
                                        (builtin "One Step Simplification" (formula "98"))
                                       (rule "true_left" (formula "98"))
                                       (rule "nnf_imp2or" (formula "90") (term "0"))
                                       (rule "ifthenelse_split" (formula "19") (term "0"))
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "20"))
                                          (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "20"))
                                          (rule "hideAuxiliaryEq" (formula "20"))
                                          (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "16"))
                                          (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                          (rule "hideAuxiliaryEq" (formula "16"))
                                          (rule "replace_known_left" (formula "16") (term "1,0,0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                          (rule "hideAuxiliaryEq" (formula "16"))
                                          (rule "replace_known_left" (formula "16") (term "1,0,0") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "291") (term "1,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "17") (term "1,0,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                          (rule "hideAuxiliaryEq" (formula "17"))
                                          (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "applyEqReverse" (formula "13") (term "1,0") (ifseqformula "12"))
                                          (rule "hideAuxiliaryEq" (formula "12"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "15"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "applyEqReverse" (formula "216") (term "0") (ifseqformula "12"))
                                          (rule "applyEqReverse" (formula "210") (term "0,1") (ifseqformula "12"))
                                          (rule "hideAuxiliaryEq" (formula "12"))
                                          (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "286") (term "1,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "285") (term "1,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "applyEqReverse" (formula "213") (term "0") (ifseqformula "9"))
                                          (rule "applyEqReverse" (formula "207") (term "0,1") (ifseqformula "9"))
                                          (rule "hideAuxiliaryEq" (formula "9"))
                                          (rule "eqSymm" (formula "283") (term "0"))
                                          (rule "eqSymm" (formula "283") (term "1"))
                                          (rule "eqSymm" (formula "206"))
                                          (rule "replace_known_left" (formula "283") (term "1") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "283") (ifInst ""  (formula "9")))
                                          (rule "closeTrue" (formula "283"))
                                       )
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "19"))
                                          (rule "hideAuxiliaryEq" (formula "19"))
                                          (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "219"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "219"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "219"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "219"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "replace_known_right" (formula "19") (term "1,0,0") (ifseqformula "219"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "219"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "14") (term "1,0,0") (ifseqformula "219"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "replace_known_right" (formula "15") (term "1,0,0") (ifseqformula "219"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "219"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "219"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                          (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "16"))
                                          (rule "hideAuxiliaryEq" (formula "16"))
                                          (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "218"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "applyEqReverse" (formula "14") (term "1,0") (ifseqformula "13"))
                                          (rule "hideAuxiliaryEq" (formula "13"))
                                          (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "217"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "replace_known_right" (formula "210") (term "1") (ifseqformula "217"))
                                           (builtin "One Step Simplification" (formula "210"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                          (rule "hideAuxiliaryEq" (formula "17"))
                                          (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
                                          (rule "applyEqReverse" (formula "16") (term "1,0") (ifseqformula "15"))
                                          (rule "hideAuxiliaryEq" (formula "15"))
                                          (rule "nnf_imp2or" (formula "115") (term "0"))
                                          (rule "nnf_imp2or" (formula "116") (term "0"))
                                          (rule "nnf_imp2or" (formula "86") (term "0"))
                                          (rule "lenNonNegative" (formula "91") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "91"))
                                          (rule "lenNonNegative" (formula "125") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "125"))
                                          (rule "seqGetAlphaCast" (formula "100") (term "0"))
                                          (rule "castedGetAny" (formula "100") (term "0"))
                                           (builtin "One Step Simplification" (formula "100"))
                                          (rule "true_left" (formula "100"))
                                          (rule "nnf_notAnd" (formula "89") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "89") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "89") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "89") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "89") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "89") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "89") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "89") (term "1,0,0"))
                                          (rule "mul_literals" (formula "89") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "89") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0"))
                                          (rule "mul_literals" (formula "89") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "96") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "96") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "96") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "96") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "96") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "96") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "96") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "96") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "96") (term "1,0,0"))
                                          (rule "mul_literals" (formula "96") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "96") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "1,0,0"))
                                          (rule "mul_literals" (formula "96") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "126") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "126") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "126") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "126") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "126") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "126") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "126") (term "1,0,0"))
                                          (rule "mul_literals" (formula "126") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "126") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0,0"))
                                          (rule "mul_literals" (formula "126") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "119") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "119") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "119") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "119") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "119") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "119") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "119") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "119") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "119") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "119") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "119") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "1,0,0"))
                                          (rule "mul_literals" (formula "119") (term "1,1,0,0"))
                                          (rule "seqGetAlphaCast" (formula "131") (term "0"))
                                          (rule "castedGetAny" (formula "131") (term "0"))
                                           (builtin "One Step Simplification" (formula "131"))
                                          (rule "true_left" (formula "131"))
                                          (rule "seqGetAlphaCast" (formula "184") (term "0"))
                                          (rule "castedGetAny" (formula "184") (term "0"))
                                           (builtin "One Step Simplification" (formula "184"))
                                          (rule "true_left" (formula "184"))
                                          (rule "nnf_notAnd" (formula "124") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "124") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "124") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "124") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "124") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "124") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "124") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "124") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "124") (term "1,0,0"))
                                          (rule "mul_literals" (formula "124") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "124") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "1,0,0"))
                                          (rule "mul_literals" (formula "124") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "94") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "94") (term "1,0,0"))
                                          (rule "mul_literals" (formula "94") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "94") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0"))
                                          (rule "mul_literals" (formula "94") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "94") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "94") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "94") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "94") (term "1,0,0,0"))
                                          (rule "lenNonNegative" (formula "95") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "95"))
                                          (rule "commute_and" (formula "217"))
                                          (rule "nnf_imp2or" (formula "191") (term "0,0,1,0,0"))
                                          (rule "lenNonNegative" (formula "128") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "128"))
                                          (rule "nnf_imp2or" (formula "191") (term "0,1,1,0,0"))
                                          (rule "lenNonNegative" (formula "98") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "98"))
                                          (rule "nnf_imp2or" (formula "137") (term "0"))
                                          (rule "nnf_imp2or" (formula "106") (term "0"))
                                          (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0"))
                                          (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0"))
                                          (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "115") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "115") (term "1,0,0"))
                                          (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "115") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1,0,0"))
                                          (rule "mul_literals" (formula "115") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                          (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                          (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                          (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                          (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                          (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "191") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "191") (term "0,1,0,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "191") (term "0,0,0,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "191") (term "0,1,0,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "191") (term "0,0,0,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "191") (term "0,0,0,0,1,0,1,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "191") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "191") (term "0,0,0,0,1,0,1,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "191") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "191") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "191") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "191") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "191") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                          (rule "expand_inInt" (formula "191") (term "1,0,0,1,1,1,0"))
                                          (rule "expand_inInt" (formula "191") (term "1,0,0,1,0,1,1,0"))
                                          (rule "replace_int_MAX" (formula "191") (term "1,0,1,0,0,1,1,1,0"))
                                          (rule "replace_int_MIN" (formula "191") (term "0,1,1,0,0,1,1,1,0"))
                                          (rule "replace_int_MIN" (formula "191") (term "0,1,1,0,0,1,0,1,1,0"))
                                          (rule "replace_int_MAX" (formula "191") (term "1,0,1,0,0,1,0,1,1,0"))
                                          (rule "eqSymm" (formula "191") (term "0,0,1,1,0"))
                                          (rule "replace_known_left" (formula "191") (term "0,0,1,1,0") (ifseqformula "84"))
                                           (builtin "One Step Simplification" (formula "191"))
                                          (rule "castedGetAny" (formula "191") (term "0,0,1,0,1,1,1,0"))
                                          (rule "castedGetAny" (formula "191") (term "0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "191") (term "1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "191") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "191") (term "1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "191") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "191") (term "0,0,0,0,1,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "191") (term "1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "191") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "191") (term "1,1,0,0,1,1,1,0"))
                                          (rule "applyEq" (formula "191") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "84"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "191") (term "1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "191") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "191") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "191") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "191") (term "0,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "191") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "191") (term "1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "191") (term "1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "191") (term "1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "191") (term "1,1,1,0,0,0,1,1,1,0"))
                                          (rule "mul_literals" (formula "191") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "191") (term "1,1,1,0,0,0,1,1,1,0"))
                                          (rule "nnf_notAnd" (formula "137") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "137") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "137") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "137") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "137") (term "0,0,0"))
                                          (rule "mul_literals" (formula "137") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "137") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "137") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "137") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "137") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "137") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "137") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "137") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "137") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "137") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "106") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "106") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "106") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "106") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "106") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "106") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "106") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "106") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "106") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "106") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "106") (term "0,0,0"))
                                          (rule "mul_literals" (formula "106") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "106") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "106") (term "0,0,0"))
                                          (rule "mul_literals" (formula "106") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "85") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "85") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "85") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "85") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "85") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "85") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "85") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "85") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "85") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "85") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "85") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "115") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "115") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "115") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "115") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "115") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "115") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "115") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "115") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "115") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "115") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "115") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "116") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "86") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "191") (term "0,0,0,1,0,0"))
                                          (rule "nnf_notAnd" (formula "191") (term "0,0,1,1,0,0"))
                                          (rule "nnf_imp2or" (formula "191") (term "0,0,1,1,0"))
                                          (rule "nnf_imp2or" (formula "191") (term "0,1,1,1,0"))
                                          (rule "commute_or" (formula "4") (term "0,0"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "15"))
                                          (rule "applyEqReverse" (formula "289") (term "1,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "289"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "commute_or" (formula "2") (term "0,0"))
                                          (rule "applyEq" (formula "15") (term "0") (ifseqformula "2"))
                                          (rule "eqSymm" (formula "15"))
                                          (rule "close" (formula "288") (ifseqformula "15"))
                                       )
                                    )
                                    (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "63"))
                                       (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "63"))
                                       (rule "hideAuxiliaryEq" (formula "63"))
                                       (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "232"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_right" (formula "73") (term "1,0,0") (ifseqformula "232"))
                                        (builtin "One Step Simplification" (formula "73"))
                                       (rule "replace_known_right" (formula "56") (term "0,0") (ifseqformula "232"))
                                        (builtin "One Step Simplification" (formula "56"))
                                       (rule "applyEqReverse" (formula "58") (term "1,0") (ifseqformula "56"))
                                       (rule "hideAuxiliaryEq" (formula "56"))
                                       (rule "replace_known_right" (formula "68") (term "0,0") (ifseqformula "231"))
                                        (builtin "One Step Simplification" (formula "68"))
                                       (rule "applyEqReverse" (formula "70") (term "1,0") (ifseqformula "68"))
                                       (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "68"))
                                       (rule "hideAuxiliaryEq" (formula "68"))
                                       (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "230"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_right" (formula "59") (term "1,0,0") (ifseqformula "230"))
                                        (builtin "One Step Simplification" (formula "59"))
                                       (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "230"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_right" (formula "65") (term "1,0,0") (ifseqformula "230"))
                                        (builtin "One Step Simplification" (formula "65"))
                                       (rule "replace_known_right" (formula "57") (term "1,0,0") (ifseqformula "230"))
                                        (builtin "One Step Simplification" (formula "57"))
                                       (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "230"))
                                        (builtin "One Step Simplification" (formula "63"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "230"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_right" (formula "69") (term "1,0,0") (ifseqformula "230"))
                                        (builtin "One Step Simplification" (formula "69"))
                                       (rule "replace_known_right" (formula "184") (term "1") (ifseqformula "230"))
                                        (builtin "One Step Simplification" (formula "184"))
                                       (rule "applyEq" (formula "63") (term "0") (ifseqformula "7"))
                                       (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "63"))
                                       (rule "hideAuxiliaryEq" (formula "63"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "68"))
                                       (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "seqGetAlphaCast" (formula "135") (term "0"))
                                       (rule "castedGetAny" (formula "135") (term "0"))
                                        (builtin "One Step Simplification" (formula "135"))
                                       (rule "true_left" (formula "135"))
                                       (rule "seqGetAlphaCast" (formula "156") (term "0"))
                                       (rule "castedGetAny" (formula "156") (term "0"))
                                        (builtin "One Step Simplification" (formula "156"))
                                       (rule "true_left" (formula "156"))
                                       (rule "commute_and" (formula "149") (term "0,0"))
                                       (rule "seqGetAlphaCast" (formula "194") (term "0"))
                                       (rule "castedGetAny" (formula "194") (term "0"))
                                        (builtin "One Step Simplification" (formula "194"))
                                       (rule "true_left" (formula "194"))
                                       (rule "commute_and" (formula "118") (term "0,0"))
                                       (rule "lenNonNegative" (formula "133") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "133"))
                                       (rule "seqGetAlphaCast" (formula "159") (term "0"))
                                       (rule "castedGetAny" (formula "159") (term "0"))
                                        (builtin "One Step Simplification" (formula "159"))
                                       (rule "true_left" (formula "159"))
                                       (rule "seqGetAlphaCast" (formula "105") (term "0"))
                                       (rule "castedGetAny" (formula "105") (term "0"))
                                        (builtin "One Step Simplification" (formula "105"))
                                       (rule "true_left" (formula "105"))
                                       (rule "nnf_imp2or" (formula "97") (term "0"))
                                       (rule "ifthenelse_split" (formula "22") (term "0"))
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "23"))
                                          (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "23"))
                                          (rule "hideAuxiliaryEq" (formula "23"))
                                          (rule "replace_known_left" (formula "21") (term "1,0,0") (ifseqformula "22"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "applyEqReverse" (formula "232") (term "0") (ifseqformula "21"))
                                          (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "21"))
                                          (rule "hideAuxiliaryEq" (formula "21"))
                                          (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "21"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "301") (term "0,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "20"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "applyEqReverse" (formula "19") (term "1,0") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "18"))
                                          (rule "hideAuxiliaryEq" (formula "18"))
                                          (rule "replace_known_left" (formula "20") (term "1,0,0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "20"))
                                          (rule "hideAuxiliaryEq" (formula "20"))
                                          (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "applyEqReverse" (formula "16") (term "1,0") (ifseqformula "15"))
                                          (rule "hideAuxiliaryEq" (formula "15"))
                                          (rule "replace_known_left" (formula "16") (term "1,0,0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "applyEqReverse" (formula "219") (term "0,0") (ifseqformula "16"))
                                          (rule "applyEqReverse" (formula "226") (term "0") (ifseqformula "16"))
                                          (rule "hideAuxiliaryEq" (formula "16"))
                                          (rule "replace_known_left" (formula "15") (term "1,0,0") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "applyEqReverse" (formula "218") (term "0,0") (ifseqformula "15"))
                                          (rule "applyEqReverse" (formula "225") (term "0") (ifseqformula "15"))
                                          (rule "hideAuxiliaryEq" (formula "15"))
                                          (rule "replace_known_left" (formula "15") (term "1,0,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "applyEqReverse" (formula "225") (term "0") (ifseqformula "15"))
                                          (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "15"))
                                          (rule "hideAuxiliaryEq" (formula "15"))
                                          (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "15"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "294") (term "0,1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "293") (term "0,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "14"))
                                          (rule "applyEqReverse" (formula "223") (term "0") (ifseqformula "14"))
                                          (rule "hideAuxiliaryEq" (formula "14"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "291") (term "0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_left" (formula "209") (term "1") (ifseqformula "12"))
                                           (builtin "One Step Simplification" (formula "209"))
                                          (rule "true_left" (formula "209"))
                                          (rule "nnf_imp2or" (formula "115") (term "0"))
                                          (rule "nnf_imp2or" (formula "116") (term "0"))
                                          (rule "nnf_imp2or" (formula "86") (term "0"))
                                          (rule "lenNonNegative" (formula "91") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "91"))
                                          (rule "lenNonNegative" (formula "125") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "125"))
                                          (rule "seqGetAlphaCast" (formula "100") (term "0"))
                                          (rule "castedGetAny" (formula "100") (term "0"))
                                           (builtin "One Step Simplification" (formula "100"))
                                          (rule "true_left" (formula "100"))
                                          (rule "nnf_notAnd" (formula "89") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "89") (term "1,0,0"))
                                          (rule "mul_literals" (formula "89") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "89") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0"))
                                          (rule "mul_literals" (formula "89") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "89") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "89") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "89") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "89") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "89") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "89") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "96") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "96") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "96") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "96") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "96") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "96") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "96") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "96") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "96") (term "1,0,0"))
                                          (rule "mul_literals" (formula "96") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "96") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "1,0,0"))
                                          (rule "mul_literals" (formula "96") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "126") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "126") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "126") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "126") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "126") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "126") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "126") (term "1,0,0"))
                                          (rule "mul_literals" (formula "126") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "126") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0,0"))
                                          (rule "mul_literals" (formula "126") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "119") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "119") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "119") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "119") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "119") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "119") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "119") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "119") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "119") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "119") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "119") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "1,0,0"))
                                          (rule "mul_literals" (formula "119") (term "1,1,0,0"))
                                          (rule "seqGetAlphaCast" (formula "131") (term "0"))
                                          (rule "castedGetAny" (formula "131") (term "0"))
                                           (builtin "One Step Simplification" (formula "131"))
                                          (rule "true_left" (formula "131"))
                                          (rule "seqGetAlphaCast" (formula "185") (term "0"))
                                          (rule "castedGetAny" (formula "185") (term "0"))
                                           (builtin "One Step Simplification" (formula "185"))
                                          (rule "true_left" (formula "185"))
                                          (rule "nnf_notAnd" (formula "124") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "124") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "124") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "124") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "1,0,0"))
                                          (rule "mul_literals" (formula "124") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "124") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "124") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "124") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "124") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "124") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "124") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "124") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "94") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "94") (term "1,0,0"))
                                          (rule "mul_literals" (formula "94") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "94") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0"))
                                          (rule "mul_literals" (formula "94") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "94") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "94") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "94") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "94") (term "1,0,0,0"))
                                          (rule "lenNonNegative" (formula "95") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "95"))
                                          (rule "commute_and" (formula "217"))
                                          (rule "nnf_imp2or" (formula "192") (term "0,0,1,0,0"))
                                          (rule "lenNonNegative" (formula "128") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "128"))
                                          (rule "nnf_imp2or" (formula "192") (term "0,1,1,0,0"))
                                          (rule "lenNonNegative" (formula "98") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "98"))
                                          (rule "nnf_imp2or" (formula "137") (term "0"))
                                          (rule "nnf_imp2or" (formula "106") (term "0"))
                                          (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0"))
                                          (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0"))
                                          (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "115") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "115") (term "1,0,0"))
                                          (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "115") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1,0,0"))
                                          (rule "mul_literals" (formula "115") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                          (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                          (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                          (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                          (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                          (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "192") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,1,0,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,0,0,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,1,0,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,0,0,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,0,0,0,1,0,1,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,0,0,0,1,0,1,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                          (rule "expand_inInt" (formula "192") (term "1,0,0,1,0,1,1,0"))
                                          (rule "expand_inInt" (formula "192") (term "1,0,0,1,1,1,0"))
                                          (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,0,1,1,0"))
                                          (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,0,1,1,0"))
                                          (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,1,1,0"))
                                          (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,1,1,0"))
                                          (rule "eqSymm" (formula "192") (term "0,0,1,1,0"))
                                          (rule "replace_known_left" (formula "192") (term "0,0,1,1,0") (ifseqformula "84"))
                                           (builtin "One Step Simplification" (formula "192"))
                                          (rule "castedGetAny" (formula "192") (term "0,0,1,0,0,1,1,0"))
                                          (rule "castedGetAny" (formula "192") (term "0,0,1,0,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,1,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,1,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,0,1,1,0"))
                                          (rule "applyEq" (formula "192") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "84"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,1,1,1,0"))
                                          (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,1,1,1,0"))
                                          (rule "nnf_notAnd" (formula "137") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "137") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "137") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "137") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "137") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "137") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "137") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "137") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "137") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "137") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "137") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "137") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "137") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "137") (term "0,0,0"))
                                          (rule "mul_literals" (formula "137") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "106") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "106") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "106") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "106") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "106") (term "0,0,0"))
                                          (rule "mul_literals" (formula "106") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "106") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "106") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "106") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "106") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "106") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "106") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "106") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "106") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "106") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "85") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "85") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "85") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "85") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "85") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "85") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "85") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "85") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "85") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "85") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "85") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "115") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "115") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "115") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "115") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "115") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "115") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "115") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "115") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "115") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "115") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "115") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "116") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                          (rule "commute_or" (formula "1") (term "0,0"))
                                          (rule "applyEq" (formula "57") (term "0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "57"))
                                          (rule "applyEqReverse" (formula "289") (term "1,1") (ifseqformula "57"))
                                           (builtin "One Step Simplification" (formula "289"))
                                          (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "57"))
                                          (rule "hideAuxiliaryEq" (formula "57"))
                                          (rule "nnf_notAnd" (formula "85") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "85") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "85") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "85") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "85") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "85") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "85") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "85") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "85") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "85") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "85") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "85") (term "1,0,0,0,0"))
                                          (rule "commute_or" (formula "3") (term "0,0"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "51"))
                                          (rule "close" (formula "288") (ifseqformula "3"))
                                       )
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "22"))
                                          (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                                          (rule "hideAuxiliaryEq" (formula "22"))
                                          (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "227"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "227"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "19"))
                                          (rule "hideAuxiliaryEq" (formula "19"))
                                          (rule "replace_known_right" (formula "19") (term "1,0,0") (ifseqformula "226"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "replace_known_right" (formula "20") (term "1,0,0") (ifseqformula "226"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "226"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "226"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "226"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "226"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "226"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "replace_known_right" (formula "22") (term "1,0,0") (ifseqformula "226"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "226"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                          (rule "hideAuxiliaryEq" (formula "16"))
                                          (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "225"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "replace_known_right" (formula "218") (term "1") (ifseqformula "225"))
                                           (builtin "One Step Simplification" (formula "218"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "nnf_imp2or" (formula "122") (term "0"))
                                          (rule "nnf_imp2or" (formula "123") (term "0"))
                                          (rule "nnf_imp2or" (formula "93") (term "0"))
                                          (rule "lenNonNegative" (formula "98") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "98"))
                                          (rule "lenNonNegative" (formula "132") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "132"))
                                          (rule "seqGetAlphaCast" (formula "107") (term "0"))
                                          (rule "castedGetAny" (formula "107") (term "0"))
                                           (builtin "One Step Simplification" (formula "107"))
                                          (rule "true_left" (formula "107"))
                                          (rule "nnf_notAnd" (formula "96") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "96") (term "1,0,0"))
                                          (rule "mul_literals" (formula "96") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "96") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "1,0,0"))
                                          (rule "mul_literals" (formula "96") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "96") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "96") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "96") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "96") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "96") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "96") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "96") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "103") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "103") (term "1,0,0"))
                                          (rule "mul_literals" (formula "103") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "103") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "103") (term "1,0,0"))
                                          (rule "mul_literals" (formula "103") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "103") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "103") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "103") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "103") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "103") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "103") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "103") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "103") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "103") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "133") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "133") (term "1,0,0"))
                                          (rule "mul_literals" (formula "133") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "133") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "133") (term "1,0,0"))
                                          (rule "mul_literals" (formula "133") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "133") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "133") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "133") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "133") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "133") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "133") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "133") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "133") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "133") (term "1,0,0,0"))
                                          (rule "seqGetAlphaCast" (formula "138") (term "0"))
                                          (rule "castedGetAny" (formula "138") (term "0"))
                                           (builtin "One Step Simplification" (formula "138"))
                                          (rule "true_left" (formula "138"))
                                          (rule "nnf_notAnd" (formula "126") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "126") (term "1,0,0"))
                                          (rule "mul_literals" (formula "126") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "126") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0,0"))
                                          (rule "mul_literals" (formula "126") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "126") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "126") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "126") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "126") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "126") (term "1,0,0,0"))
                                          (rule "seqGetAlphaCast" (formula "192") (term "0"))
                                          (rule "castedGetAny" (formula "192") (term "0"))
                                           (builtin "One Step Simplification" (formula "192"))
                                          (rule "true_left" (formula "192"))
                                          (rule "nnf_notAnd" (formula "131") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "131") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "131") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "131") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "131") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "131") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "131") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "131") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "131") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "131") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "131") (term "1,0,0"))
                                          (rule "mul_literals" (formula "131") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "131") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "131") (term "1,0,0"))
                                          (rule "mul_literals" (formula "131") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "101") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "101") (term "1,0,0"))
                                          (rule "mul_literals" (formula "101") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "101") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "101") (term "1,0,0"))
                                          (rule "mul_literals" (formula "101") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "101") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "101") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "101") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "101") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "101") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "101") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "101") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "101") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "101") (term "1,0,0,0"))
                                          (rule "lenNonNegative" (formula "102") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "102"))
                                          (rule "commute_and" (formula "226"))
                                          (rule "nnf_imp2or" (formula "199") (term "0,0,1,0,0"))
                                          (rule "lenNonNegative" (formula "135") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "135"))
                                          (rule "nnf_imp2or" (formula "199") (term "0,1,1,0,0"))
                                          (rule "lenNonNegative" (formula "105") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "105"))
                                          (rule "nnf_imp2or" (formula "144") (term "0"))
                                          (rule "nnf_imp2or" (formula "113") (term "0"))
                                          (rule "nnf_notAnd" (formula "92") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "92") (term "1,0,0"))
                                          (rule "mul_literals" (formula "92") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "92") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "92") (term "1,0,0"))
                                          (rule "mul_literals" (formula "92") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "122") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "122") (term "1,0,0"))
                                          (rule "mul_literals" (formula "122") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "122") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "122") (term "1,0,0"))
                                          (rule "mul_literals" (formula "122") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "123") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "123") (term "1,0,0"))
                                          (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "123") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "1,0,0"))
                                          (rule "mul_literals" (formula "123") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "93") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "93") (term "1,0,0"))
                                          (rule "mul_literals" (formula "93") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "93") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "1,0,0"))
                                          (rule "mul_literals" (formula "93") (term "1,1,0,0"))
                                          (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "199") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "0,1,0,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "0,1,0,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "0,0,0,0,1,0,1,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "0,0,0,0,1,0,1,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                          (rule "expand_inInt" (formula "199") (term "1,0,0,1,0,1,1,0"))
                                          (rule "expand_inInt" (formula "199") (term "1,0,0,1,1,1,0"))
                                          (rule "replace_int_MIN" (formula "199") (term "0,1,1,0,0,1,0,1,1,0"))
                                          (rule "replace_int_MAX" (formula "199") (term "1,0,1,0,0,1,0,1,1,0"))
                                          (rule "replace_int_MAX" (formula "199") (term "1,0,1,0,0,1,1,1,0"))
                                          (rule "replace_int_MIN" (formula "199") (term "0,1,1,0,0,1,1,1,0"))
                                          (rule "eqSymm" (formula "199") (term "0,0,1,1,0"))
                                          (rule "replace_known_left" (formula "199") (term "0,0,1,1,0") (ifseqformula "91"))
                                           (builtin "One Step Simplification" (formula "199"))
                                          (rule "castedGetAny" (formula "199") (term "0,0,1,0,1,1,1,0"))
                                          (rule "castedGetAny" (formula "199") (term "0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "199") (term "1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "199") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "199") (term "1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "199") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "199") (term "0,0,0,0,1,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "199") (term "1,1,0,0,1,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "199") (term "1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "199") (term "0,0,0,0,0,1,1,0"))
                                          (rule "applyEq" (formula "199") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "91"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "199") (term "1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "199") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "199") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "199") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "199") (term "0,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "199") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "199") (term "1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "199") (term "1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "199") (term "1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "199") (term "1,1,1,0,0,0,1,1,1,0"))
                                          (rule "mul_literals" (formula "199") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "199") (term "1,1,1,0,0,0,1,1,1,0"))
                                          (rule "nnf_notAnd" (formula "144") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "144") (term "0,0,0"))
                                          (rule "mul_literals" (formula "144") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "144") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "144") (term "0,0,0"))
                                          (rule "mul_literals" (formula "144") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "144") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "144") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "144") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "144") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "144") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "144") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "144") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "144") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "144") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "113") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "113") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "113") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "113") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "113") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "113") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "113") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "113") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "113") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "113") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "113") (term "0,0,0"))
                                          (rule "mul_literals" (formula "113") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "113") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "113") (term "0,0,0"))
                                          (rule "mul_literals" (formula "113") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "92") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "92") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "92") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "92") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "92") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "92") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "92") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "92") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "92") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "92") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "92") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "92") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "92") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "92") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "92") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "122") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "122") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "122") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "122") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "122") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "122") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "122") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "122") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "122") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "122") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "122") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "122") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "122") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "122") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "122") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "123") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "123") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "123") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "123") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "123") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "123") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "123") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "123") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "123") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "123") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "123") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "123") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "123") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "93") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "93") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "93") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "93") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "93") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "93") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "93") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "93") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "93") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "93") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "93") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "93") (term "1,1,0,0,0"))
                                          (rule "commute_or" (formula "3") (term "0,0"))
                                          (rule "applyEq" (formula "64") (term "0") (ifseqformula "3"))
                                          (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "64"))
                                          (rule "applyEqReverse" (formula "229") (term "0") (ifseqformula "64"))
                                          (rule "hideAuxiliaryEq" (formula "64"))
                                          (rule "commute_or" (formula "5") (term "0,0"))
                                          (rule "applyEq" (formula "5") (term "0") (ifseqformula "58"))
                                          (rule "applyEqReverse" (formula "297") (term "1,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "nnf_notAnd" (formula "197") (term "0,0,0,1,0,0"))
                                          (rule "nnf_notAnd" (formula "197") (term "0,0,1,1,0,0"))
                                          (rule "nnf_imp2or" (formula "197") (term "0,0,1,1,0"))
                                          (rule "nnf_imp2or" (formula "197") (term "0,1,1,1,0"))
                                          (rule "commute_or" (formula "2") (term "0,0"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "16"))
                                          (rule "applyEqReverse" (formula "296") (term "0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "296"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_or" (formula "1") (term "0,0"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                          (rule "close" (formula "295") (ifseqformula "17"))
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: strContent(password_15_B) = strContent(password_15_A) FALSE"
                                  (builtin "One Step Simplification" (formula "229"))
                                 (rule "true_left" (formula "229"))
                                 (rule "equalityToSeqGetAndSeqLenRight" (formula "232") (inst "iv=iv"))
                                 (rule "inEqSimp_ltToLeq" (formula "232") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "232") (term "1,0,0,1,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "232") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "232") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "232") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "232") (term "1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "232") (term "1,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "232") (term "0,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "232") (term "1,1,1,0,0,1"))
                                 (rule "cut_direct" (formula "228") (term "0"))
                                 (branch "CUT: password_15_B = password_15_A TRUE"
                                     (builtin "One Step Simplification" (formula "229"))
                                    (rule "applyEqReverse" (formula "269") (term "0") (ifseqformula "229"))
                                    (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "229"))
                                    (rule "hideAuxiliaryEq" (formula "229"))
                                    (rule "applyEq" (formula "232") (term "0,0,0,0") (ifseqformula "228"))
                                     (builtin "One Step Simplification" (formula "232"))
                                    (rule "allRight" (formula "232") (inst "sk=iv_0"))
                                    (rule "impRight" (formula "232"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "applyEq" (formula "231") (term "1") (ifseqformula "230"))
                                    (rule "applyEq" (formula "130") (term "1,0") (ifseqformula "230"))
                                    (rule "applyEq" (formula "267") (term "0") (ifseqformula "230"))
                                    (rule "applyEq" (formula "234") (term "0,0,0") (ifseqformula "230"))
                                     (builtin "One Step Simplification" (formula "234"))
                                    (rule "closeTrue" (formula "234"))
                                 )
                                 (branch "CUT: password_15_B = password_15_A FALSE"
                                     (builtin "One Step Simplification" (formula "228"))
                                    (rule "true_left" (formula "228"))
                                    (rule "ifthenelse_split" (formula "63") (term "0"))
                                    (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "64"))
                                       (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "64"))
                                       (rule "hideAuxiliaryEq" (formula "64"))
                                       (rule "replace_known_left" (formula "70") (term "0,0") (ifseqformula "63"))
                                        (builtin "One Step Simplification" (formula "70"))
                                       (rule "applyEqReverse" (formula "72") (term "1,0") (ifseqformula "70"))
                                       (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "70"))
                                       (rule "hideAuxiliaryEq" (formula "70"))
                                       (rule "replace_known_left" (formula "67") (term "1,0,0") (ifseqformula "63"))
                                        (builtin "One Step Simplification" (formula "67"))
                                       (rule "applyEqReverse" (formula "234") (term "0") (ifseqformula "67"))
                                       (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "67"))
                                       (rule "hideAuxiliaryEq" (formula "67"))
                                       (rule "replace_known_left" (formula "56") (term "0,0") (ifseqformula "63"))
                                        (builtin "One Step Simplification" (formula "56"))
                                       (rule "applyEqReverse" (formula "58") (term "1,0") (ifseqformula "56"))
                                       (rule "hideAuxiliaryEq" (formula "56"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "62"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "302") (term "1,1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "61"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "301") (term "1,0") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "replace_known_left" (formula "69") (term "1,0,0") (ifseqformula "60"))
                                        (builtin "One Step Simplification" (formula "69"))
                                       (rule "applyEqReverse" (formula "231") (term "0") (ifseqformula "69"))
                                       (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "69"))
                                       (rule "hideAuxiliaryEq" (formula "69"))
                                       (rule "replace_known_left" (formula "57") (term "1,0,0") (ifseqformula "60"))
                                        (builtin "One Step Simplification" (formula "57"))
                                       (rule "applyEqReverse" (formula "262") (term "0") (ifseqformula "57"))
                                       (rule "hideAuxiliaryEq" (formula "57"))
                                       (rule "replace_known_left" (formula "55") (term "1,0,0") (ifseqformula "59"))
                                        (builtin "One Step Simplification" (formula "55"))
                                       (rule "applyEqReverse" (formula "261") (term "0") (ifseqformula "55"))
                                       (rule "hideAuxiliaryEq" (formula "55"))
                                       (rule "replace_known_left" (formula "65") (term "1,0,0") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "65"))
                                       (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "65"))
                                       (rule "applyEqReverse" (formula "228") (term "0") (ifseqformula "65"))
                                       (rule "hideAuxiliaryEq" (formula "65"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "296") (term "1,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "295") (term "1,1") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "58") (term "1,0,0") (ifseqformula "56"))
                                        (builtin "One Step Simplification" (formula "58"))
                                       (rule "applyEqReverse" (formula "224") (term "0") (ifseqformula "58"))
                                       (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "58"))
                                       (rule "hideAuxiliaryEq" (formula "58"))
                                       (rule "eqSymm" (formula "293") (term "0"))
                                       (rule "eqSymm" (formula "293") (term "1"))
                                       (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "224"))
                                        (builtin "One Step Simplification" (formula "59"))
                                       (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "256"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "223"))
                                        (builtin "One Step Simplification" (formula "55"))
                                       (rule "replace_known_left" (formula "175") (term "1") (ifseqformula "56"))
                                        (builtin "One Step Simplification" (formula "175"))
                                       (rule "true_left" (formula "175"))
                                       (rule "seqGetAlphaCast" (formula "128") (term "0"))
                                       (rule "castedGetAny" (formula "128") (term "0"))
                                        (builtin "One Step Simplification" (formula "128"))
                                       (rule "true_left" (formula "128"))
                                       (rule "seqGetAlphaCast" (formula "149") (term "0"))
                                       (rule "castedGetAny" (formula "149") (term "0"))
                                        (builtin "One Step Simplification" (formula "149"))
                                       (rule "true_left" (formula "149"))
                                       (rule "commute_and" (formula "142") (term "0,0"))
                                       (rule "seqGetAlphaCast" (formula "186") (term "0"))
                                       (rule "castedGetAny" (formula "186") (term "0"))
                                        (builtin "One Step Simplification" (formula "186"))
                                       (rule "true_left" (formula "186"))
                                       (rule "commute_and" (formula "111") (term "0,0"))
                                       (rule "lenNonNegative" (formula "126") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "126"))
                                       (rule "seqGetAlphaCast" (formula "152") (term "0"))
                                       (rule "castedGetAny" (formula "152") (term "0"))
                                        (builtin "One Step Simplification" (formula "152"))
                                       (rule "true_left" (formula "152"))
                                       (rule "seqGetAlphaCast" (formula "98") (term "0"))
                                       (rule "castedGetAny" (formula "98") (term "0"))
                                        (builtin "One Step Simplification" (formula "98"))
                                       (rule "true_left" (formula "98"))
                                       (rule "nnf_imp2or" (formula "90") (term "0"))
                                       (rule "ifthenelse_split" (formula "19") (term "0"))
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "20"))
                                          (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "20"))
                                          (rule "hideAuxiliaryEq" (formula "20"))
                                          (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                          (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "16"))
                                          (rule "hideAuxiliaryEq" (formula "16"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_left" (formula "15") (term "1,0,0") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "applyEqReverse" (formula "16") (term "1,0") (ifseqformula "15"))
                                          (rule "hideAuxiliaryEq" (formula "15"))
                                          (rule "replace_known_left" (formula "17") (term "1,0,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                          (rule "hideAuxiliaryEq" (formula "17"))
                                          (rule "replace_known_left" (formula "15") (term "1,0,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "applyEqReverse" (formula "13") (term "1,0") (ifseqformula "12"))
                                          (rule "hideAuxiliaryEq" (formula "12"))
                                          (rule "replace_known_left" (formula "13") (term "1,0,0") (ifseqformula "15"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "applyEqReverse" (formula "216") (term "0") (ifseqformula "13"))
                                          (rule "hideAuxiliaryEq" (formula "13"))
                                          (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "applyEqReverse" (formula "215") (term "0") (ifseqformula "12"))
                                          (rule "hideAuxiliaryEq" (formula "12"))
                                          (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "12"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "284") (term "1,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "283") (term "1,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "eqSymm" (formula "282") (term "0"))
                                          (rule "eqSymm" (formula "282") (term "1"))
                                          (rule "replace_known_left" (formula "282") (term "0") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "282") (ifInst ""  (formula "11")))
                                          (rule "closeTrue" (formula "282"))
                                       )
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "19"))
                                          (rule "hideAuxiliaryEq" (formula "19"))
                                          (rule "replace_known_right" (formula "15") (term "1,0,0") (ifseqformula "217"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "replace_known_right" (formula "14") (term "1,0,0") (ifseqformula "217"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "217"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "applyEqReverse" (formula "14") (term "1,0") (ifseqformula "13"))
                                          (rule "hideAuxiliaryEq" (formula "13"))
                                          (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "216"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "replace_known_right" (formula "19") (term "1,0,0") (ifseqformula "216"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "216"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "216"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "replace_known_right" (formula "16") (term "1,0,0") (ifseqformula "216"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "216"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "applyEqReverse" (formula "16") (term "1,0") (ifseqformula "15"))
                                          (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "15"))
                                          (rule "hideAuxiliaryEq" (formula "15"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "215"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "215"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "215"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "210") (term "1") (ifseqformula "215"))
                                           (builtin "One Step Simplification" (formula "210"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                          (rule "hideAuxiliaryEq" (formula "17"))
                                          (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
                                          (rule "applyEqReverse" (formula "16") (term "1,0") (ifseqformula "15"))
                                          (rule "hideAuxiliaryEq" (formula "15"))
                                          (rule "nnf_imp2or" (formula "115") (term "0"))
                                          (rule "nnf_imp2or" (formula "116") (term "0"))
                                          (rule "nnf_imp2or" (formula "86") (term "0"))
                                          (rule "lenNonNegative" (formula "91") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "91"))
                                          (rule "lenNonNegative" (formula "125") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "125"))
                                          (rule "seqGetAlphaCast" (formula "100") (term "0"))
                                          (rule "castedGetAny" (formula "100") (term "0"))
                                           (builtin "One Step Simplification" (formula "100"))
                                          (rule "true_left" (formula "100"))
                                          (rule "nnf_notAnd" (formula "89") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "89") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "89") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "89") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "89") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "89") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "89") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "89") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "89") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "89") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0"))
                                          (rule "mul_literals" (formula "89") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "96") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "96") (term "1,0,0"))
                                          (rule "mul_literals" (formula "96") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "96") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "1,0,0"))
                                          (rule "mul_literals" (formula "96") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "96") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "96") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "96") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "96") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "96") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "96") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "96") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "126") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "126") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "126") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "126") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "126") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "126") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "126") (term "1,0,0"))
                                          (rule "mul_literals" (formula "126") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "126") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0,0"))
                                          (rule "mul_literals" (formula "126") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "119") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "119") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "119") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "119") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "1,0,0"))
                                          (rule "mul_literals" (formula "119") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "119") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "119") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "119") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "119") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "119") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "119") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "119") (term "1,0,0,0"))
                                          (rule "seqGetAlphaCast" (formula "131") (term "0"))
                                          (rule "castedGetAny" (formula "131") (term "0"))
                                           (builtin "One Step Simplification" (formula "131"))
                                          (rule "true_left" (formula "131"))
                                          (rule "seqGetAlphaCast" (formula "184") (term "0"))
                                          (rule "castedGetAny" (formula "184") (term "0"))
                                           (builtin "One Step Simplification" (formula "184"))
                                          (rule "true_left" (formula "184"))
                                          (rule "nnf_notAnd" (formula "124") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "124") (term "1,0,0"))
                                          (rule "mul_literals" (formula "124") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "124") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "1,0,0"))
                                          (rule "mul_literals" (formula "124") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "124") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "124") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "124") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "124") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "124") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "124") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "124") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "94") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "94") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "94") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "94") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0"))
                                          (rule "mul_literals" (formula "94") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "94") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "94") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "94") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "94") (term "1,0,0,0"))
                                          (rule "lenNonNegative" (formula "95") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "95"))
                                          (rule "commute_and" (formula "216"))
                                          (rule "nnf_imp2or" (formula "215") (term "0,1"))
                                          (rule "nnf_imp2or" (formula "191") (term "0,0,1,0,0"))
                                          (rule "lenNonNegative" (formula "128") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "128"))
                                          (rule "nnf_imp2or" (formula "191") (term "0,1,1,0,0"))
                                          (rule "lenNonNegative" (formula "98") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "98"))
                                          (rule "nnf_imp2or" (formula "137") (term "0"))
                                          (rule "nnf_imp2or" (formula "106") (term "0"))
                                          (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0"))
                                          (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0"))
                                          (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "115") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "115") (term "1,0,0"))
                                          (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "115") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1,0,0"))
                                          (rule "mul_literals" (formula "115") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                          (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                          (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                          (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                          (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                          (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "191") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "191") (term "0,1,0,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "191") (term "0,0,0,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "191") (term "0,1,0,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "191") (term "0,0,0,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "191") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "191") (term "0,0,0,0,1,0,1,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "191") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "191") (term "0,0,0,0,1,0,1,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "191") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "191") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "191") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "191") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                          (rule "expand_inInt" (formula "191") (term "1,0,0,1,0,1,1,0"))
                                          (rule "expand_inInt" (formula "191") (term "1,0,0,1,1,1,0"))
                                          (rule "replace_int_MAX" (formula "191") (term "1,0,1,0,0,1,0,1,1,0"))
                                          (rule "replace_int_MIN" (formula "191") (term "0,1,1,0,0,1,0,1,1,0"))
                                          (rule "replace_int_MIN" (formula "191") (term "0,1,1,0,0,1,1,1,0"))
                                          (rule "replace_int_MAX" (formula "191") (term "1,0,1,0,0,1,1,1,0"))
                                          (rule "eqSymm" (formula "191") (term "0,0,1,1,0"))
                                          (rule "replace_known_left" (formula "191") (term "0,0,1,1,0") (ifseqformula "84"))
                                           (builtin "One Step Simplification" (formula "191"))
                                          (rule "castedGetAny" (formula "191") (term "0,0,1,0,1,1,1,0"))
                                          (rule "castedGetAny" (formula "191") (term "0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "191") (term "1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "191") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "191") (term "1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "191") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "191") (term "0,0,0,0,1,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "191") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "191") (term "1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "191") (term "1,1,0,0,1,1,1,0"))
                                          (rule "applyEq" (formula "191") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "84"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "191") (term "1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "191") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "191") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "191") (term "0,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "191") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "191") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "191") (term "1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "191") (term "1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "191") (term "1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "191") (term "1,1,1,0,0,0,1,1,1,0"))
                                          (rule "mul_literals" (formula "191") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "191") (term "1,1,1,0,0,0,1,1,1,0"))
                                          (rule "nnf_notAnd" (formula "137") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "137") (term "0,0,0"))
                                          (rule "mul_literals" (formula "137") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "137") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "137") (term "0,0,0"))
                                          (rule "mul_literals" (formula "137") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "137") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "137") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "137") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "137") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "137") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "137") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "137") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "137") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "137") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "106") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "106") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "106") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "106") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "106") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "106") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "106") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "106") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "106") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "106") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "106") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "106") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "106") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "106") (term "0,0,0"))
                                          (rule "mul_literals" (formula "106") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "215") (term "0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "215") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "215") (term "1,0,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "215") (term "0,1,0,0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "215") (term "0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "215") (term "0,0,0,1,0,0,1"))
                                          (rule "add_zero_left" (formula "215") (term "0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "215") (term "1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "215") (term "1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "215") (term "1,1,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "215") (term "0,0,0,1"))
                                          (rule "mul_literals" (formula "215") (term "1,0,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "215") (term "0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "215") (term "0,0,0,1"))
                                          (rule "mul_literals" (formula "215") (term "1,0,0,0,1"))
                                          (rule "nnf_notAnd" (formula "85") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "85") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "85") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "85") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "85") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "85") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "85") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "85") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "85") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "85") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "85") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "85") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "115") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "115") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "115") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "115") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "115") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "115") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "115") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "115") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "115") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "115") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "115") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "116") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "86") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "86") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "191") (term "0,0,0,1,0,0"))
                                          (rule "nnf_notAnd" (formula "191") (term "0,0,1,1,0,0"))
                                          (rule "nnf_imp2or" (formula "191") (term "0,0,1,1,0"))
                                          (rule "nnf_imp2or" (formula "191") (term "0,1,1,1,0"))
                                          (rule "commute_or" (formula "2") (term "0,0"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "16"))
                                          (rule "applyEqReverse" (formula "288") (term "1,1") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "288"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_or" (formula "3") (term "0,0"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "14"))
                                          (rule "close" (formula "287") (ifseqformula "3"))
                                       )
                                    )
                                    (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "63"))
                                       (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "63"))
                                       (rule "hideAuxiliaryEq" (formula "63"))
                                       (rule "replace_known_right" (formula "58") (term "1,0,0") (ifseqformula "230"))
                                        (builtin "One Step Simplification" (formula "58"))
                                       (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "230"))
                                        (builtin "One Step Simplification" (formula "64"))
                                       (rule "replace_known_right" (formula "69") (term "0,0") (ifseqformula "230"))
                                        (builtin "One Step Simplification" (formula "69"))
                                       (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "69"))
                                       (rule "applyEqReverse" (formula "71") (term "1,0") (ifseqformula "69"))
                                       (rule "hideAuxiliaryEq" (formula "69"))
                                       (rule "replace_known_right" (formula "60") (term "1,0,0") (ifseqformula "229"))
                                        (builtin "One Step Simplification" (formula "60"))
                                       (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "229"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_right" (formula "66") (term "1,0,0") (ifseqformula "229"))
                                        (builtin "One Step Simplification" (formula "66"))
                                       (rule "replace_known_right" (formula "56") (term "0,0") (ifseqformula "229"))
                                        (builtin "One Step Simplification" (formula "56"))
                                       (rule "applyEqReverse" (formula "58") (term "1,0") (ifseqformula "56"))
                                       (rule "hideAuxiliaryEq" (formula "56"))
                                       (rule "replace_known_right" (formula "71") (term "1,0,0") (ifseqformula "228"))
                                        (builtin "One Step Simplification" (formula "71"))
                                       (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "228"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "228"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "228"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_right" (formula "69") (term "1,0,0") (ifseqformula "228"))
                                        (builtin "One Step Simplification" (formula "69"))
                                       (rule "replace_known_right" (formula "184") (term "1") (ifseqformula "228"))
                                        (builtin "One Step Simplification" (formula "184"))
                                       (rule "applyEq" (formula "63") (term "0") (ifseqformula "7"))
                                       (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "63"))
                                       (rule "hideAuxiliaryEq" (formula "63"))
                                       (rule "applyEq" (formula "68") (term "0") (ifseqformula "5"))
                                       (rule "applyEqReverse" (formula "70") (term "1,0") (ifseqformula "68"))
                                       (rule "hideAuxiliaryEq" (formula "68"))
                                       (rule "seqGetAlphaCast" (formula "135") (term "0"))
                                       (rule "castedGetAny" (formula "135") (term "0"))
                                        (builtin "One Step Simplification" (formula "135"))
                                       (rule "true_left" (formula "135"))
                                       (rule "seqGetAlphaCast" (formula "156") (term "0"))
                                       (rule "castedGetAny" (formula "156") (term "0"))
                                        (builtin "One Step Simplification" (formula "156"))
                                       (rule "true_left" (formula "156"))
                                       (rule "commute_and" (formula "149") (term "0,0"))
                                       (rule "seqGetAlphaCast" (formula "194") (term "0"))
                                       (rule "castedGetAny" (formula "194") (term "0"))
                                        (builtin "One Step Simplification" (formula "194"))
                                       (rule "true_left" (formula "194"))
                                       (rule "commute_and" (formula "118") (term "0,0"))
                                       (rule "lenNonNegative" (formula "133") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "133"))
                                       (rule "seqGetAlphaCast" (formula "159") (term "0"))
                                       (rule "castedGetAny" (formula "159") (term "0"))
                                        (builtin "One Step Simplification" (formula "159"))
                                       (rule "true_left" (formula "159"))
                                       (rule "seqGetAlphaCast" (formula "105") (term "0"))
                                       (rule "castedGetAny" (formula "105") (term "0"))
                                        (builtin "One Step Simplification" (formula "105"))
                                       (rule "true_left" (formula "105"))
                                       (rule "ifthenelse_split" (formula "23") (term "0"))
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "24"))
                                          (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "24"))
                                          (rule "hideAuxiliaryEq" (formula "24"))
                                          (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                          (rule "hideAuxiliaryEq" (formula "17"))
                                          (rule "replace_known_left" (formula "18") (term "1,0,0") (ifseqformula "22"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "applyEqReverse" (formula "229") (term "0") (ifseqformula "18"))
                                          (rule "hideAuxiliaryEq" (formula "18"))
                                          (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "21"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "299") (term "0,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "18") (term "1,0,0") (ifseqformula "20"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "applyEqReverse" (formula "19") (term "1,0") (ifseqformula "18"))
                                          (rule "hideAuxiliaryEq" (formula "18"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "297") (term "0,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "296") (term "0,1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "replace_known_left" (formula "16") (term "1,0,0") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "16"))
                                          (rule "applyEqReverse" (formula "225") (term "0") (ifseqformula "16"))
                                          (rule "hideAuxiliaryEq" (formula "16"))
                                          (rule "replace_known_left" (formula "17") (term "1,0,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                          (rule "hideAuxiliaryEq" (formula "17"))
                                          (rule "replace_known_left" (formula "17") (term "1,0,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "17"))
                                          (rule "applyEqReverse" (formula "224") (term "0") (ifseqformula "17"))
                                          (rule "hideAuxiliaryEq" (formula "17"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "292") (term "0,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "15"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "applyEqReverse" (formula "291") (term "0,0") (ifseqformula "14"))
                                          (rule "applyEqReverse" (formula "221") (term "0") (ifseqformula "14"))
                                          (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "14"))
                                          (rule "hideAuxiliaryEq" (formula "14"))
                                          (rule "replace_known_left" (formula "13") (term "1,0,0") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "applyEqReverse" (formula "219") (term "0") (ifseqformula "13"))
                                          (rule "hideAuxiliaryEq" (formula "13"))
                                          (rule "replace_known_left" (formula "209") (term "1") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "209"))
                                          (rule "true_left" (formula "209"))
                                          (rule "nnf_imp2or" (formula "85") (term "0"))
                                          (rule "nnf_imp2or" (formula "115") (term "0"))
                                          (rule "nnf_imp2or" (formula "116") (term "0"))
                                          (rule "nnf_imp2or" (formula "86") (term "0"))
                                          (rule "lenNonNegative" (formula "91") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "91"))
                                          (rule "lenNonNegative" (formula "125") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "125"))
                                          (rule "seqGetAlphaCast" (formula "100") (term "0"))
                                          (rule "castedGetAny" (formula "100") (term "0"))
                                           (builtin "One Step Simplification" (formula "100"))
                                          (rule "true_left" (formula "100"))
                                          (rule "nnf_notAnd" (formula "89") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "89") (term "1,0,0"))
                                          (rule "mul_literals" (formula "89") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "89") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0"))
                                          (rule "mul_literals" (formula "89") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "89") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "89") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "89") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "89") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "89") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "89") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "96") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "96") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "96") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "96") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "96") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "96") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "96") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "96") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "96") (term "1,0,0"))
                                          (rule "mul_literals" (formula "96") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "96") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "1,0,0"))
                                          (rule "mul_literals" (formula "96") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "126") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "126") (term "1,0,0"))
                                          (rule "mul_literals" (formula "126") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "126") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0,0"))
                                          (rule "mul_literals" (formula "126") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "126") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "126") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "126") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "126") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "126") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "119") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "119") (term "1,0,0"))
                                          (rule "mul_literals" (formula "119") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "119") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "1,0,0"))
                                          (rule "mul_literals" (formula "119") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "119") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "119") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "119") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "119") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "119") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "119") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "119") (term "1,0,0,0"))
                                          (rule "seqGetAlphaCast" (formula "131") (term "0"))
                                          (rule "castedGetAny" (formula "131") (term "0"))
                                           (builtin "One Step Simplification" (formula "131"))
                                          (rule "true_left" (formula "131"))
                                          (rule "nnf_notAnd" (formula "124") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "124") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "124") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "124") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "124") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "124") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "124") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "124") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "124") (term "1,0,0"))
                                          (rule "mul_literals" (formula "124") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "124") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "1,0,0"))
                                          (rule "mul_literals" (formula "124") (term "1,1,0,0"))
                                          (rule "seqGetAlphaCast" (formula "185") (term "0"))
                                          (rule "castedGetAny" (formula "185") (term "0"))
                                           (builtin "One Step Simplification" (formula "185"))
                                          (rule "true_left" (formula "185"))
                                          (rule "nnf_notAnd" (formula "94") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "94") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "94") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "94") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "94") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "94") (term "1,0,0"))
                                          (rule "mul_literals" (formula "94") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "94") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0"))
                                          (rule "mul_literals" (formula "94") (term "1,1,0,0"))
                                          (rule "lenNonNegative" (formula "95") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "95"))
                                          (rule "commute_and" (formula "216"))
                                          (rule "nnf_imp2or" (formula "215") (term "0,1"))
                                          (rule "nnf_imp2or" (formula "192") (term "0,0,1,0,0"))
                                          (rule "lenNonNegative" (formula "128") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "128"))
                                          (rule "nnf_imp2or" (formula "192") (term "0,1,1,0,0"))
                                          (rule "lenNonNegative" (formula "98") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "98"))
                                          (rule "nnf_imp2or" (formula "137") (term "0"))
                                          (rule "nnf_imp2or" (formula "106") (term "0"))
                                          (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0"))
                                          (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0"))
                                          (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "115") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "115") (term "1,0,0"))
                                          (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "115") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1,0,0"))
                                          (rule "mul_literals" (formula "115") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                          (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                          (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                          (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                          (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                          (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "192") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,1,0,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,0,0,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,1,0,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,0,0,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,0,0,0,1,0,1,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,0,0,0,1,0,1,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                          (rule "expand_inInt" (formula "192") (term "1,0,0,1,0,1,1,0"))
                                          (rule "expand_inInt" (formula "192") (term "1,0,0,1,1,1,0"))
                                          (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,0,1,1,0"))
                                          (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,0,1,1,0"))
                                          (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,1,1,0"))
                                          (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,1,1,0"))
                                          (rule "eqSymm" (formula "192") (term "0,0,1,1,0"))
                                          (rule "replace_known_left" (formula "192") (term "0,0,1,1,0") (ifseqformula "84"))
                                           (builtin "One Step Simplification" (formula "192"))
                                          (rule "castedGetAny" (formula "192") (term "0,0,1,0,1,1,1,0"))
                                          (rule "castedGetAny" (formula "192") (term "0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,1,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,1,1,1,0"))
                                          (rule "applyEq" (formula "192") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "84"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,1,1,1,0"))
                                          (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,1,1,1,0"))
                                          (rule "nnf_notAnd" (formula "137") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "137") (term "0,0,0"))
                                          (rule "mul_literals" (formula "137") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "137") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "137") (term "0,0,0"))
                                          (rule "mul_literals" (formula "137") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "137") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "137") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "137") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "137") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "137") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "137") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "137") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "137") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "137") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "106") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "106") (term "0,0,0"))
                                          (rule "mul_literals" (formula "106") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "106") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "106") (term "0,0,0"))
                                          (rule "mul_literals" (formula "106") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "106") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "106") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "106") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "106") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "106") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "106") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "106") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "106") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "106") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "215") (term "0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "215") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "215") (term "1,0,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "215") (term "0,1,0,0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "215") (term "0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "215") (term "0,0,0,1,0,0,1"))
                                          (rule "add_zero_left" (formula "215") (term "0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "215") (term "1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "215") (term "1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "215") (term "1,1,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "215") (term "0,0,0,1"))
                                          (rule "times_zero_1" (formula "215") (term "1,0,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "215") (term "0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "215") (term "0,0,0,1"))
                                          (rule "mul_literals" (formula "215") (term "1,0,0,0,1"))
                                          (rule "nnf_notAnd" (formula "85") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "85") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "85") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "85") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "85") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "85") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "85") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "85") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "85") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "85") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "85") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "85") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "115") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "115") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "115") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "115") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "115") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "115") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "115") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "115") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "115") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "115") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "115") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "116") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "86") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "86") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                          (rule "commute_or" (formula "2") (term "0,0"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "57"))
                                          (rule "applyEqReverse" (formula "288") (term "1,1") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "288"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_or" (formula "3") (term "0,0"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "51"))
                                          (rule "close" (formula "287") (ifseqformula "3"))
                                       )
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "23"))
                                          (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "23"))
                                          (rule "hideAuxiliaryEq" (formula "23"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "225"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "225"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "225"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                          (rule "hideAuxiliaryEq" (formula "17"))
                                          (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "224"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "224"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "224"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "replace_known_right" (formula "22") (term "1,0,0") (ifseqformula "224"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "224"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "224"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "224"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "224"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "19"))
                                          (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "19"))
                                          (rule "hideAuxiliaryEq" (formula "19"))
                                          (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "223"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "replace_known_right" (formula "218") (term "1") (ifseqformula "223"))
                                           (builtin "One Step Simplification" (formula "218"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "21"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "nnf_imp2or" (formula "92") (term "0"))
                                          (rule "nnf_imp2or" (formula "122") (term "0"))
                                          (rule "nnf_imp2or" (formula "123") (term "0"))
                                          (rule "nnf_imp2or" (formula "93") (term "0"))
                                          (rule "lenNonNegative" (formula "98") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "98"))
                                          (rule "lenNonNegative" (formula "132") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "132"))
                                          (rule "seqGetAlphaCast" (formula "107") (term "0"))
                                          (rule "castedGetAny" (formula "107") (term "0"))
                                           (builtin "One Step Simplification" (formula "107"))
                                          (rule "true_left" (formula "107"))
                                          (rule "nnf_notAnd" (formula "96") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "96") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "96") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "96") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "96") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "96") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "96") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "96") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "96") (term "1,0,0"))
                                          (rule "mul_literals" (formula "96") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "96") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "1,0,0"))
                                          (rule "mul_literals" (formula "96") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "103") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "103") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "103") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "103") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "103") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "103") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "103") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "103") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "103") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "103") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "103") (term "1,0,0"))
                                          (rule "mul_literals" (formula "103") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "103") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "103") (term "1,0,0"))
                                          (rule "mul_literals" (formula "103") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "133") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "133") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "133") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "133") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "133") (term "1,0,0"))
                                          (rule "mul_literals" (formula "133") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "133") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "133") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "133") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "133") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "133") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "133") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "133") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "133") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "133") (term "1,0,0,0"))
                                          (rule "seqGetAlphaCast" (formula "138") (term "0"))
                                          (rule "castedGetAny" (formula "138") (term "0"))
                                           (builtin "One Step Simplification" (formula "138"))
                                          (rule "true_left" (formula "138"))
                                          (rule "nnf_notAnd" (formula "126") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "126") (term "1,0,0"))
                                          (rule "mul_literals" (formula "126") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "126") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0,0"))
                                          (rule "mul_literals" (formula "126") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "126") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "126") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "126") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "126") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "126") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "131") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "131") (term "1,0,0"))
                                          (rule "mul_literals" (formula "131") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "131") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "131") (term "1,0,0"))
                                          (rule "mul_literals" (formula "131") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "131") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "131") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "131") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "131") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "131") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "131") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "131") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "131") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "131") (term "1,0,0,0"))
                                          (rule "seqGetAlphaCast" (formula "192") (term "0"))
                                          (rule "castedGetAny" (formula "192") (term "0"))
                                           (builtin "One Step Simplification" (formula "192"))
                                          (rule "true_left" (formula "192"))
                                          (rule "nnf_notAnd" (formula "101") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "101") (term "1,0,0"))
                                          (rule "mul_literals" (formula "101") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "101") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "101") (term "1,0,0"))
                                          (rule "mul_literals" (formula "101") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "101") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "101") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "101") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "101") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "101") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "101") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "101") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "101") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "101") (term "1,0,0,0"))
                                          (rule "lenNonNegative" (formula "102") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "102"))
                                          (rule "commute_and" (formula "225"))
                                          (rule "nnf_imp2or" (formula "224") (term "0,1"))
                                          (rule "nnf_imp2or" (formula "199") (term "0,0,1,0,0"))
                                          (rule "lenNonNegative" (formula "135") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "135"))
                                          (rule "nnf_imp2or" (formula "199") (term "0,1,1,0,0"))
                                          (rule "lenNonNegative" (formula "105") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "105"))
                                          (rule "nnf_imp2or" (formula "144") (term "0"))
                                          (rule "nnf_imp2or" (formula "113") (term "0"))
                                          (rule "nnf_notAnd" (formula "92") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "92") (term "1,0,0"))
                                          (rule "mul_literals" (formula "92") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "92") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "92") (term "1,0,0"))
                                          (rule "mul_literals" (formula "92") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "122") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "122") (term "1,0,0"))
                                          (rule "mul_literals" (formula "122") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "122") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "122") (term "1,0,0"))
                                          (rule "mul_literals" (formula "122") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "123") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "123") (term "1,0,0"))
                                          (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "123") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "1,0,0"))
                                          (rule "mul_literals" (formula "123") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "93") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "93") (term "1,0,0"))
                                          (rule "mul_literals" (formula "93") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "93") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "1,0,0"))
                                          (rule "mul_literals" (formula "93") (term "1,1,0,0"))
                                          (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "199") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "0,1,0,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "0,1,0,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "0,0,0,0,1,0,1,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "0,0,0,0,1,0,1,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                          (rule "expand_inInt" (formula "199") (term "1,0,0,1,1,1,0"))
                                          (rule "expand_inInt" (formula "199") (term "1,0,0,1,0,1,1,0"))
                                          (rule "replace_int_MIN" (formula "199") (term "0,1,1,0,0,1,1,1,0"))
                                          (rule "replace_int_MAX" (formula "199") (term "1,0,1,0,0,1,1,1,0"))
                                          (rule "replace_int_MIN" (formula "199") (term "0,1,1,0,0,1,0,1,1,0"))
                                          (rule "replace_int_MAX" (formula "199") (term "1,0,1,0,0,1,0,1,1,0"))
                                          (rule "eqSymm" (formula "199") (term "0,0,1,1,0"))
                                          (rule "replace_known_left" (formula "199") (term "0,0,1,1,0") (ifseqformula "91"))
                                           (builtin "One Step Simplification" (formula "199"))
                                          (rule "castedGetAny" (formula "199") (term "0,0,1,0,1,1,1,0"))
                                          (rule "castedGetAny" (formula "199") (term "0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "199") (term "1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "199") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "199") (term "1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "199") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "199") (term "0,0,0,0,1,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "199") (term "1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "199") (term "1,1,0,0,1,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "199") (term "0,0,0,0,0,1,1,0"))
                                          (rule "applyEq" (formula "199") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "91"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "199") (term "1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "199") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "199") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "199") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "199") (term "0,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "199") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "199") (term "1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "199") (term "1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "199") (term "1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "199") (term "1,1,1,0,0,0,1,1,1,0"))
                                          (rule "mul_literals" (formula "199") (term "0,1,1,0,0,0,1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "199") (term "1,1,1,0,0,0,1,1,1,0"))
                                          (rule "nnf_notAnd" (formula "144") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "144") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "144") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "144") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "144") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "144") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "144") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "144") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "144") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "144") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "144") (term "0,0,0"))
                                          (rule "mul_literals" (formula "144") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "144") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "144") (term "0,0,0"))
                                          (rule "mul_literals" (formula "144") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "113") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "113") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "113") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "113") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "113") (term "0,0,0"))
                                          (rule "mul_literals" (formula "113") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "113") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "113") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "113") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "113") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "113") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "113") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "113") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "113") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "113") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "224") (term "0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "224") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "224") (term "1,0,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "224") (term "0,1,0,0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "224") (term "0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "224") (term "0,0,0,1,0,0,1"))
                                          (rule "add_zero_left" (formula "224") (term "0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "224") (term "1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "224") (term "1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "224") (term "1,1,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "224") (term "0,0,0,1"))
                                          (rule "times_zero_1" (formula "224") (term "1,0,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "224") (term "0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "224") (term "0,0,0,1"))
                                          (rule "mul_literals" (formula "224") (term "1,0,0,0,1"))
                                          (rule "nnf_notAnd" (formula "92") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "92") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "92") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "92") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "92") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "92") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "92") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "92") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "92") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "92") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "92") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "92") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "92") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "92") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "92") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "122") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "122") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "122") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "122") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "122") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "122") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "122") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "122") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "122") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "122") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "122") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "122") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "122") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "122") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "122") (term "1,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "123") (term "0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "123") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "123") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "123") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "123") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "123") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "123") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "123") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "123") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "123") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "123") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "123") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "123") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "93") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "93") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "93") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "93") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "93") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "93") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "93") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "93") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "93") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "93") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "93") (term "1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "93") (term "1,0,0,0,0"))
                                          (rule "commute_or" (formula "4") (term "0,0"))
                                          (rule "applyEq" (formula "64") (term "0") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "228") (term "0") (ifseqformula "64"))
                                          (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "64"))
                                          (rule "hideAuxiliaryEq" (formula "64"))
                                          (rule "commute_or" (formula "6") (term "0,0"))
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "59"))
                                          (rule "applyEqReverse" (formula "296") (term "1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "nnf_notAnd" (formula "197") (term "0,0,0,1,0,0"))
                                          (rule "nnf_notAnd" (formula "197") (term "0,0,1,1,0,0"))
                                          (rule "nnf_imp2or" (formula "197") (term "0,0,1,1,0"))
                                          (rule "nnf_imp2or" (formula "197") (term "0,1,1,1,0"))
                                          (rule "commute_or" (formula "2") (term "0,0"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "17"))
                                          (rule "applyEqReverse" (formula "295") (term "0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "295"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_or" (formula "1") (term "0,0"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
                                          (rule "applyEqReverse" (formula "294") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "294"))
                                          (rule "closeTrue" (formula "294"))
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "doubleImpLeft" (formula "208") (userinteraction))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "255"))
                                 (rule "replaceKnownSelect_taclet00000000_90" (formula "218") (term "0,0,0"))
                                 (rule "replaceKnownSelect_taclet0000_31" (formula "218") (term "0,1,0"))
                                 (rule "replaceKnownSelect_taclet0000_30" (formula "218") (term "0,1,1"))
                                 (rule "replaceKnownSelect_taclet00000000_89" (formula "218") (term "0,0,1"))
                                 (rule "replaceKnownSelect_taclet00000000_91" (formula "217") (term "0,0,1,1"))
                                 (rule "replaceKnownSelect_taclet0000_32" (formula "217") (term "0,1,1,1"))
                                 (rule "replaceKnownSelect_taclet00000000_90" (formula "217") (term "0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet0000_31" (formula "217") (term "1,0,1,0"))
                                 (rule "replaceKnownSelect_taclet00000000_89" (formula "217") (term "0,1,1,0"))
                                 (rule "replaceKnownSelect_taclet0000_30" (formula "217") (term "1,1,1,0"))
                                 (rule "replaceKnownSelect_taclet0000_32" (formula "217") (term "1,1,1,0,0"))
                                 (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,0,1"))
                                 (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "1,0,0,0,1"))
                                 (rule "replaceKnownSelect_taclet000000_67" (formula "199") (term "0,1,0,0,1"))
                                 (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "1,1,0,0,1"))
                                 (rule "replaceKnownSelect_taclet00000000_91" (formula "217") (term "0,1,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "1,0,0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "199") (term "0,1,0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "1,1,0,0,1"))
                                 (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                 (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                 (rule "notRight" (formula "255"))
                                 (rule "andLeft" (formula "219"))
                                 (rule "andLeft" (formula "218"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "219"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "220"))
                                 (rule "andLeft" (formula "222"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "applyEqReverse" (formula "227") (term "0,1") (ifseqformula "224"))
                                  (builtin "One Step Simplification" (formula "227"))
                                 (rule "true_left" (formula "227"))
                                 (rule "applyEqReverse" (formula "226") (term "0,1") (ifseqformula "223"))
                                  (builtin "One Step Simplification" (formula "226"))
                                 (rule "true_left" (formula "226"))
                                 (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "223"))
                                 (rule "applyEqReverse" (formula "267") (term "0") (ifseqformula "224"))
                                 (rule "applyEqReverse" (formula "266") (term "0") (ifseqformula "223"))
                                 (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "224"))
                                 (rule "hideAuxiliaryEq" (formula "223"))
                                 (rule "hideAuxiliaryEq" (formula "223"))
                                 (rule "eqSymm" (formula "301") (term "0,1"))
                                 (rule "eqSymm" (formula "301") (term "0,0"))
                                 (rule "eqSymm" (formula "301") (term "1,0"))
                                 (rule "eqSymm" (formula "301") (term "1,1"))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "replace_known_right" (formula "227") (term "0,1,1") (ifseqformula "265"))
                                  (builtin "One Step Simplification" (formula "227") (ifInst ""  (formula "232")))
                                 (rule "replace_known_right" (formula "203") (term "0,1,1,0,0") (ifseqformula "244"))
                                  (builtin "One Step Simplification" (formula "203") (ifInst ""  (formula "281")))
                                 (rule "inEqSimp_ltToLeq" (formula "129") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "129") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "106") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "106") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "96") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "113"))
                                 (rule "polySimp_mulComm0" (formula "113") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "113") (term "0"))
                                 (rule "inEqSimp_gtToGeq" (formula "116") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "116") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "116") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "147") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "147") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "147") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "126") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "126") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "206"))
                                 (rule "polySimp_mulComm0" (formula "206") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "206") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "125") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "134") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "134") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "192"))
                                 (rule "polySimp_mulComm0" (formula "192") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "140"))
                                 (rule "polySimp_mulComm0" (formula "140") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "102"))
                                 (rule "polySimp_mulComm0" (formula "102") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "176"))
                                 (rule "polySimp_mulComm0" (formula "176") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "136") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "136") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "109"))
                                 (rule "polySimp_mulComm0" (formula "109") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "195"))
                                 (rule "polySimp_mulComm0" (formula "195") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "116") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "147") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "104") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "167"))
                                 (rule "polySimp_mulComm0" (formula "167") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "153"))
                                 (rule "polySimp_mulComm0" (formula "153") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "144"))
                                 (rule "polySimp_mulComm0" (formula "144") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "116") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "216"))
                                 (rule "mul_literals" (formula "216") (term "1,0,0"))
                                 (rule "add_literals" (formula "216") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "215"))
                                 (rule "polySimp_mulComm0" (formula "215") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "162"))
                                 (rule "polySimp_mulComm0" (formula "162") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "132"))
                                 (rule "inEqSimp_gtToGeq" (formula "177"))
                                 (rule "mul_literals" (formula "177") (term "1,0,0"))
                                 (rule "add_literals" (formula "177") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "95") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "199"))
                                 (rule "inEqSimp_ltToLeq" (formula "156"))
                                 (rule "inEqSimp_ltToLeq" (formula "147") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "132") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "192") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "199") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "156") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "140") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "102") (term "0"))
                                 (rule "polySimp_addComm1" (formula "176") (term "0"))
                                 (rule "polySimp_addComm1" (formula "109") (term "0"))
                                 (rule "polySimp_addComm1" (formula "195") (term "0"))
                                 (rule "polySimp_addComm1" (formula "167") (term "0"))
                                 (rule "polySimp_addComm1" (formula "153") (term "0"))
                                 (rule "polySimp_addComm1" (formula "144") (term "0"))
                                 (rule "castedGetAny" (formula "227") (term "0,1,0,1"))
                                 (rule "castedGetAny" (formula "227") (term "0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "215") (term "0"))
                                 (rule "castedGetAny" (formula "203") (term "0,1,0,0,1,0"))
                                 (rule "castedGetAny" (formula "203") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "162") (term "0"))
                                 (rule "polySimp_addComm1" (formula "132") (term "0"))
                                 (rule "polySimp_addComm1" (formula "199") (term "0"))
                                 (rule "polySimp_addComm1" (formula "156") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "227") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "227") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "227") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "227") (term "1,0,0,1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "203") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "203") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "203") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "203") (term "1,0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "227") (term "0,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "227") (term "0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "203") (term "0,0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "203") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "227") (term "1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "227") (term "1,0,0,1,0,1"))
                                 (rule "inEqSimp_gtToGeq" (formula "227") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "227") (term "1,0,0,1,0,0"))
                                 (rule "applyEq" (formula "195") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "88") (term "0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "104") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "200") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "190") (term "2") (ifseqformula "1"))
                                 (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "212") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "220") (term "1,0,1,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "99") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "51") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "134") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "133") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "245") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "62") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "16") (term "1,0,1,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "168") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "220") (term "1,0,1,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "102") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "51") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "300") (term "0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "156") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "173") (term "0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "242") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "55") (term "1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "132") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "301") (term "0,1,1,1,1") (ifseqformula "40"))
                                 (rule "applyEq" (formula "189") (term "1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "66") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "282") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "55") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "11") (term "1,0,0,0,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "59") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "280") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "9") (term "1,2,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "136") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "301") (term "0,0,0,0") (ifseqformula "4"))
                                 (rule "eqSymm" (formula "301") (term "0,0"))
                                 (rule "applyEq" (formula "46") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "301") (term "0,1,1,1") (ifseqformula "40"))
                                 (rule "applyEq" (formula "11") (term "1,0,1,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "12") (term "1,0,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "52") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "106") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "56") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "15") (term "1,2,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "139") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "287") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "138") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "204") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "151") (term "3") (ifseqformula "150"))
                                 (rule "applyEq" (formula "81") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "13") (term "1,0,1,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "62") (term "1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "203") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "52") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "251") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "193") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "133") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "14") (term "1,2,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "254") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "65") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "114") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "103") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "70") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "285") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "203") (term "1,1,1,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEqRigid" (formula "301") (term "0,0,1,1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "13") (term "1,0,0,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "203") (term "1,1,1,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "262") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "247") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "146") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "11") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "221") (term "0") (ifseqformula "2"))
                                 (rule "eqSymm" (formula "221"))
                                 (rule "applyEq" (formula "50") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "224") (term "3") (ifseqformula "2"))
                                 (rule "applyEq" (formula "66") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "157") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "182") (term "4") (ifseqformula "181"))
                                 (rule "applyEq" (formula "196") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "71") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "68") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "173") (term "4") (ifseqformula "172"))
                                 (rule "applyEq" (formula "140") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "290") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "165") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "249") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "252") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "61") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "57") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "99") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "75") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "154") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "243") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "115") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "14") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "110") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "220") (term "1,0,1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "190") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "119") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "244") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "103") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEqRigid" (formula "301") (term "0,0,1,0") (ifseqformula "4"))
                                 (rule "eqSymm" (formula "301") (term "1,0"))
                                 (rule "applyEq" (formula "54") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "52") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "141") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "50") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "134") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "16") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "284") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "151") (term "0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "58") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "104") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "180") (term "1,0,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "17") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "220") (term "1,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "246") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "301") (term "0,1,0,1,1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "289") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "147") (term "1,1,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "66") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "173") (term "3") (ifseqformula "37"))
                                 (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "9") (term "1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "73") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "65") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "212") (term "3") (ifseqformula "1"))
                                 (rule "applyEq" (formula "69") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "281") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "53") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "136") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "11") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "47") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "54") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "61") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "109") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "189") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "60") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "250") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "64") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "16") (term "1,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "165") (term "5") (ifseqformula "159"))
                                 (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "106") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "49") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "266") (term "0") (ifseqformula "98"))
                                 (rule "applyEq" (formula "59") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "180") (term "1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "15") (term "1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "60") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "10") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "131") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "105") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "64") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "10") (term "1,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "277") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "93") (term "0") (ifseqformula "94"))
                                 (rule "applyEq" (formula "48") (term "1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "277") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "144") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "10") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "107") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "67") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "46") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "152") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "191") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "64") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "202") (term "1,0,1,1,0,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "284") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "87") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "192") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "134") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "57") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "181") (term "3") (ifseqformula "38"))
                                 (rule "applyEq" (formula "289") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "240") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "153") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "74") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "263") (term "0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "128") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "59") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "63") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "76") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "59") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "281") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "150") (term "2") (ifseqformula "37"))
                                 (rule "applyEq" (formula "63") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "156") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "53") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "50") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "56") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "48") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "57") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "109") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "179") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "140") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "49") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "117") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "179") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "252") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "115") (term "1,1,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "286") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "162") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "195") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "206") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "80") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "100") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "17") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "247") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "230") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "128") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "72") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "79") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "17") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "14") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "52") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "66") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "58") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "62") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "95") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "93"))
                                 (rule "applyEq" (formula "38") (term "0") (ifseqformula "220"))
                                 (rule "applyEq" (formula "13") (term "1,0,1,0,0") (ifseqformula "220"))
                                 (rule "applyEq" (formula "12") (term "1,0,0,0") (ifseqformula "220"))
                                 (rule "applyEqRigid" (formula "299") (term "0,0,0,0") (ifseqformula "40"))
                                 (rule "eqSymm" (formula "299") (term "0,0"))
                                 (rule "applyEq" (formula "219") (term "1,0,1,0,0") (ifseqformula "220"))
                                 (rule "applyEq" (formula "11") (term "1,0,0,0,0,0") (ifseqformula "220"))
                                 (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "220"))
                                 (rule "applyEq" (formula "15") (term "1,2,0") (ifseqformula "220"))
                                 (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "220"))
                                 (rule "applyEqRigid" (formula "299") (term "0,0,1,0") (ifseqformula "40"))
                                 (rule "eqSymm" (formula "299") (term "1,0"))
                                 (rule "applyEq" (formula "11") (term "1,0,1,0,0") (ifseqformula "220"))
                                 (rule "applyEq" (formula "16") (term "1,0,1,0,0") (ifseqformula "220"))
                                 (rule "applyEq" (formula "9") (term "1,2,0") (ifseqformula "220"))
                                 (rule "applyEq" (formula "219") (term "1,0,1,0") (ifseqformula "220"))
                                 (rule "applyEq" (formula "13") (term "1,0,0,0,0") (ifseqformula "220"))
                                 (rule "applyEq" (formula "14") (term "1,2,0") (ifseqformula "220"))
                                 (rule "applyEq" (formula "14") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "220") (term "1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "11") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "11") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "15") (term "1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "10") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "10") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "219") (term "1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "10") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "223") (term "3") (ifseqformula "38"))
                                 (rule "applyEq" (formula "17") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "17") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "16") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "14") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "17") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "16") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "230") (term "0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "219") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "2") (term "1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "9") (term "1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "13") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "14") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "13") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "219") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "219") (term "1,0,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "298") (term "1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "298") (term "1,0,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "11") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "12") (term "1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "16") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "9") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "15") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "11") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "112"))
                                 (rule "polySimp_mulLiterals" (formula "112") (term "0"))
                                 (rule "polySimp_elimOne" (formula "112") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "115") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "146") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "146") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "125") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "125") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "125") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "125") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "125") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "205"))
                                 (rule "polySimp_mulLiterals" (formula "205") (term "0"))
                                 (rule "polySimp_elimOne" (formula "205") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "124") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "124") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "124") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "115") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "115") (term "1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "115") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "115") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "115") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "146") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "146") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "146") (term "1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "146") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "146") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "146") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "115") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "115") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "115") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "115") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "215"))
                                 (rule "mul_literals" (formula "215") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "176"))
                                 (rule "mul_literals" (formula "176") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "146") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "146") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "146") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "146") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "146") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "146") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "175"))
                                 (rule "polySimp_mulLiterals" (formula "175") (term "0"))
                                 (rule "polySimp_elimOne" (formula "175") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "166"))
                                 (rule "polySimp_mulLiterals" (formula "166") (term "0"))
                                 (rule "polySimp_elimOne" (formula "166") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "143"))
                                 (rule "polySimp_mulLiterals" (formula "143") (term "0"))
                                 (rule "polySimp_elimOne" (formula "143") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "214"))
                                 (rule "polySimp_mulLiterals" (formula "214") (term "0"))
                                 (rule "polySimp_elimOne" (formula "214") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "161"))
                                 (rule "polySimp_mulLiterals" (formula "161") (term "0"))
                                 (rule "polySimp_elimOne" (formula "161") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "198"))
                                 (rule "polySimp_mulLiterals" (formula "198") (term "0"))
                                 (rule "polySimp_elimOne" (formula "198") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "226") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "226") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "226") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "226") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "226") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "226") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "226") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "226") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "226") (term "1,1,0,0,1"))
                                 (rule "mul_literals" (formula "226") (term "0,1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "226") (term "1,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "226") (term "1,1,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "202") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "202") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "202") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "202") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "202") (term "1,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "202") (term "1,1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "202") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "202") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "202") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "202") (term "0,1,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "202") (term "1,1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "202") (term "1,1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "226") (term "1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "226") (term "1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "226") (term "1,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "226") (term "1,1,1,0,1"))
                                 (rule "mul_literals" (formula "226") (term "0,1,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "226") (term "1,1,1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "226") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "226") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "226") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "226") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "226") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "226") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "194"))
                                 (rule "polySimp_mulLiterals" (formula "194") (term "0"))
                                 (rule "polySimp_elimOne" (formula "194") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "103") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "103") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "103") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "103") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "103") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "103") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "98") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "98") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "133") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "133") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "133") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "133") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "133") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "133") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "101"))
                                 (rule "polySimp_mulLiterals" (formula "101") (term "0"))
                                 (rule "polySimp_elimOne" (formula "101") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "155"))
                                 (rule "polySimp_mulLiterals" (formula "155") (term "0"))
                                 (rule "polySimp_elimOne" (formula "155") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "131"))
                                 (rule "polySimp_mulLiterals" (formula "131") (term "0"))
                                 (rule "polySimp_elimOne" (formula "131") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "135") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "135") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "135") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "135") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "135") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "135") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "105") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "105") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "139"))
                                 (rule "polySimp_mulLiterals" (formula "139") (term "0"))
                                 (rule "polySimp_elimOne" (formula "139") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "108"))
                                 (rule "polySimp_mulLiterals" (formula "108") (term "0"))
                                 (rule "polySimp_elimOne" (formula "108") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "152"))
                                 (rule "polySimp_mulLiterals" (formula "152") (term "0"))
                                 (rule "polySimp_elimOne" (formula "152") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "191"))
                                 (rule "polySimp_mulLiterals" (formula "191") (term "0"))
                                 (rule "polySimp_elimOne" (formula "191") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "128") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "128") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "128") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "128") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "128") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "128") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "95") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0,0,0,0"))
                                 (rule "pullOutSelect" (formula "188") (term "1,1,1") (inst "selectSK=java_util_Collection_seq_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "188") (ifseqformula "148"))
                                  (builtin "One Step Simplification" (formula "188"))
                                 (rule "elementOfSingleton" (formula "188") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "188"))
                                 (rule "pullOutSelect" (formula "189") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "189") (ifseqformula "186"))
                                  (builtin "One Step Simplification" (formula "189"))
                                 (rule "elementOfSingleton" (formula "189") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "189"))
                                 (rule "pullOutSelect" (formula "300") (term "1,1,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "179"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "171"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEq" (formula "189") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "189") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "189") (term "1,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "189") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "149"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "301") (term "1,1,1,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "189") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "189") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "189") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "189") (term "1,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "188") (term "0,0,0,0") (ifseqformula "271"))
                                  (builtin "One Step Simplification" (formula "188") (ifInst ""  (formula "78")))
                                 (rule "applyEqReverse" (formula "190") (term "1,1,1") (ifseqformula "188"))
                                 (rule "hideAuxiliaryEq" (formula "188"))
                                 (rule "eqSymm" (formula "189") (term "1,1"))
                                 (rule "pullOutSelect" (formula "299") (term "1,0,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "219"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "211"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEq" (formula "189") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "189") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "189") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "189") (term "1,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "187"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "189") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "189") (term "1,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "300") (term "1,0,1,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "189") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "189") (term "1,1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_left" (formula "188") (term "0,1,0,0") (ifseqformula "20"))
                                  (builtin "One Step Simplification" (formula "188") (ifInst ""  (formula "236")))
                                 (rule "applyEqReverse" (formula "189") (term "1,1,1") (ifseqformula "188"))
                                 (rule "hideAuxiliaryEq" (formula "188"))
                                 (rule "eqSymm" (formula "188") (term "1,1"))
                                  (builtin "One Step Simplification" (formula "188"))
                                 (rule "true_left" (formula "188"))
                                 (rule "pullOutSelect" (formula "297") (term "1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_6"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "179"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "262")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "171"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "149"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "298") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_6"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "180"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "263")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "172"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "150"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "299") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_7"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "219"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "264")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "211"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "189"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "300") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_7"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "220"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "265")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "212"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "190"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "301") (term "1,1,1") (inst "selectSK=java_util_Collection_seq_2"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "183"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "273")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "175"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "153"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "83"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "175"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "273")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "153"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "83"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "153"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "273")) (ifInst ""  (formula "83")))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "273")))
                                 (rule "applyEqReverse" (formula "302") (term "1,1,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "301") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "221"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "239")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "213"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "191"))
                                 (rule "eqSymm" (formula "302") (term "1,1"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "25"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "213"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "239")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "191"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "25"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "191"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "239")) (ifInst ""  (formula "25")))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "239")))
                                 (rule "applyEqReverse" (formula "302") (term "1,1,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "eqSymm" (formula "301") (term "1,1"))
                                  (builtin "One Step Simplification" (formula "301"))
                                 (rule "pullOutSelect" (formula "4") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_8"))
                                 (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "175"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "266")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0") (ifseqformula "153"))
                                 (rule "ifthenelse_negated" (formula "4") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_8"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "176"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "267")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "154"))
                                 (rule "ifthenelse_negated" (formula "3") (term "0"))
                                 (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_9"))
                                 (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "215"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "268")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "193"))
                                 (rule "ifthenelse_negated" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_9"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "216"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "269")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "194"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "7") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_10"))
                                 (rule "simplifySelectOfAnonEQ" (formula "7") (ifseqformula "157"))
                                  (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "270")))
                                 (rule "elementOfSingleton" (formula "7") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "270")))
                                 (rule "ifthenelse_negated" (formula "7") (term "0"))
                                 (rule "applyEq" (formula "7") (term "0") (ifseqformula "64"))
                                 (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_10"))
                                 (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "157"))
                                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "270")))
                                 (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "270")))
                                 (rule "ifthenelse_negated" (formula "5") (term "0"))
                                 (rule "applyEq" (formula "71") (term "0") (ifseqformula "5"))
                                 (rule "applyEqReverse" (formula "73") (term "1,0") (ifseqformula "71"))
                                 (rule "hideAuxiliaryEq" (formula "71"))
                                 (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_11"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "195"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "270")))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "270")))
                                 (rule "ifthenelse_negated" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "22"))
                                 (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_11"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "195"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "270")))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "270")))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "25"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "inEqSimp_and_subsumption3" (formula "133") (term "0,0,0"))
                                 (rule "leq_literals" (formula "133") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "133"))
                                 (rule "inEqSimp_and_subsumption3" (formula "132") (term "0,0,0"))
                                 (rule "leq_literals" (formula "132") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "132"))
                                 (rule "inEqSimp_and_subsumption3" (formula "102") (term "0,0,0"))
                                 (rule "leq_literals" (formula "102") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "102"))
                                 (rule "inEqSimp_and_subsumption3" (formula "103") (term "0,0,0"))
                                 (rule "leq_literals" (formula "103") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "103"))
                                 (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "209") (term "1,0,0") (inst "i=i") (inst "i_0=i_0"))
                                 (rule "replaceKnownSelect_taclet000000_67" (formula "209") (term "0,1,0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet000000_65" (formula "209") (term "0,0,0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "209") (term "0,1,0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "209") (term "0,0,0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet000000_67" (formula "209") (term "0,1,1,0,0,0,1,1,0,0"))
                                 (rule "replaceKnownSelect_taclet000000_67" (formula "209") (term "0,0,0,0,1,0,1,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "209") (term "0,1,1,0,0,0,1,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "209") (term "0,0,0,0,1,0,1,1,0,0"))
                                 (rule "replaceKnownSelect_taclet000000_65" (formula "209") (term "0,0,0,0,1,0,1,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet000000_65" (formula "209") (term "0,1,1,0,0,0,1,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "209") (term "0,0,0,0,1,0,1,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "209") (term "0,1,1,0,0,0,1,0,1,0,0"))
                                 (rule "expand_inInt" (formula "209") (term "1,0,0,1,1,0,0"))
                                 (rule "expand_inInt" (formula "209") (term "1,0,0,1,0,1,0,0"))
                                 (rule "replace_int_MIN" (formula "209") (term "0,1,1,0,0,1,1,0,0"))
                                 (rule "replace_int_MAX" (formula "209") (term "1,0,1,0,0,1,1,0,0"))
                                 (rule "replace_int_MIN" (formula "209") (term "0,1,1,0,0,1,0,1,0,0"))
                                 (rule "replace_int_MAX" (formula "209") (term "1,0,1,0,0,1,0,1,0,0"))
                                 (rule "eqSymm" (formula "209") (term "0,0,1,0,0"))
                                 (rule "replace_known_left" (formula "209") (term "0,0,1,0,0") (ifseqformula "131"))
                                  (builtin "One Step Simplification" (formula "209"))
                                 (rule "castedGetAny" (formula "209") (term "0,0,1,0,0,1,0,0"))
                                 (rule "castedGetAny" (formula "209") (term "0,0,1,0,1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "209") (term "1,0,0,0,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "209") (term "1,0,0,1,0,0,0,1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "209") (term "1,0,0,0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "209") (term "1,0,0,1,0,0,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "209") (term "0,0,0,0,1,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "209") (term "0,0,0,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "209") (term "1,1,0,0,1,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "209") (term "1,1,0,0,0,1,0,0"))
                                 (rule "applyEq" (formula "209") (term "0,1,0,0,1,0,0,0,1,1,0,0") (ifseqformula "131"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "209") (term "1,0,0,0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "209") (term "1,1,0,0,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "209") (term "1,1,0,0,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "209") (term "1,1,1,0,0,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "209") (term "0,1,1,0,0,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "209") (term "1,1,1,0,0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "209") (term "1,0,0,0,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "209") (term "1,1,0,0,0,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "209") (term "1,1,0,0,0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "209") (term "1,1,1,0,0,0,1,1,0,0"))
                                 (rule "mul_literals" (formula "209") (term "0,1,1,0,0,0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "209") (term "1,1,1,0,0,0,1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "123") (term "1,0"))
                                 (rule "nnf_imp2or" (formula "154") (term "1,0"))
                                 (rule "nnf_imp2or" (formula "111") (term "0"))
                                 (rule "nnf_imp2or" (formula "106") (term "0"))
                                 (rule "nnf_imp2or" (formula "141") (term "0"))
                                 (rule "nnf_imp2or" (formula "143") (term "0"))
                                 (rule "nnf_imp2or" (formula "113") (term "0"))
                                 (rule "cut_direct" (formula "229") (term "0"))
                                 (branch "CUT: strContent(password_15_B) = strContent(password_15_A) TRUE"
                                     (builtin "One Step Simplification" (formula "230"))
                                    (rule "cut_direct" (formula "228") (term "0"))
                                    (branch "CUT: password_15_B = password_15_A TRUE"
                                        (builtin "One Step Simplification" (formula "229"))
                                       (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "229"))
                                       (rule "applyEqReverse" (formula "270") (term "0") (ifseqformula "229"))
                                       (rule "applyEqReverse" (formula "231") (term "0,1") (ifseqformula "229"))
                                        (builtin "One Step Simplification" (formula "231"))
                                       (rule "true_left" (formula "231"))
                                       (rule "hideAuxiliaryEq" (formula "229"))
                                       (rule "applyEq" (formula "230") (term "1") (ifseqformula "228"))
                                       (rule "applyEq" (formula "128") (term "1,0") (ifseqformula "228"))
                                       (rule "applyEq" (formula "229") (term "0,0") (ifseqformula "228"))
                                        (builtin "One Step Simplification" (formula "229"))
                                       (rule "true_left" (formula "229"))
                                       (rule "applyEq" (formula "264") (term "0") (ifseqformula "228"))
                                       (rule "nnf_imp2or" (formula "136") (term "0"))
                                       (rule "ifthenelse_split" (formula "64") (term "0"))
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "65"))
                                          (rule "applyEqReverse" (formula "67") (term "1,0") (ifseqformula "65"))
                                          (rule "hideAuxiliaryEq" (formula "65"))
                                          (rule "replace_known_left" (formula "66") (term "1,0,0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "66"))
                                          (rule "applyEqReverse" (formula "68") (term "1,0") (ifseqformula "66"))
                                          (rule "hideAuxiliaryEq" (formula "66"))
                                          (rule "replace_known_left" (formula "67") (term "1,0,0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "67"))
                                          (rule "applyEqReverse" (formula "233") (term "0") (ifseqformula "67"))
                                          (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "67"))
                                          (rule "hideAuxiliaryEq" (formula "67"))
                                          (rule "replace_known_left" (formula "70") (term "1,0,0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "70"))
                                          (rule "applyEqReverse" (formula "72") (term "1,0") (ifseqformula "70"))
                                          (rule "hideAuxiliaryEq" (formula "70"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "60") (term "1,0,0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "60"))
                                          (rule "applyEqReverse" (formula "229") (term "0") (ifseqformula "60"))
                                          (rule "hideAuxiliaryEq" (formula "60"))
                                          (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "62"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "replace_known_left" (formula "57") (term "1,0,0") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "57"))
                                          (rule "applyEqReverse" (formula "227") (term "0") (ifseqformula "57"))
                                          (rule "hideAuxiliaryEq" (formula "57"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "295") (term "1,1") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "294") (term "1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "293") (term "1,1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "64") (term "1,0,0") (ifseqformula "57"))
                                           (builtin "One Step Simplification" (formula "64"))
                                          (rule "applyEqReverse" (formula "225") (term "0") (ifseqformula "64"))
                                          (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "64"))
                                          (rule "hideAuxiliaryEq" (formula "64"))
                                          (rule "replace_known_left" (formula "52") (term "0,0") (ifseqformula "57"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "applyEqReverse" (formula "15") (term "1") (ifseqformula "52"))
                                          (rule "applyEqReverse" (formula "222") (term "0") (ifseqformula "52"))
                                          (rule "hideAuxiliaryEq" (formula "52"))
                                          (rule "eqSymm" (formula "290") (term "0"))
                                          (rule "eqSymm" (formula "290") (term "1"))
                                          (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "223"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "221"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "222"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "replace_known_left" (formula "175") (term "1") (ifseqformula "56"))
                                           (builtin "One Step Simplification" (formula "175"))
                                          (rule "true_left" (formula "175"))
                                          (rule "seqGetAlphaCast" (formula "128") (term "0"))
                                          (rule "castedGetAny" (formula "128") (term "0"))
                                           (builtin "One Step Simplification" (formula "128"))
                                          (rule "true_left" (formula "128"))
                                          (rule "lenNonNegative" (formula "133") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "133"))
                                          (rule "seqGetAlphaCast" (formula "186") (term "0"))
                                          (rule "castedGetAny" (formula "186") (term "0"))
                                           (builtin "One Step Simplification" (formula "186"))
                                          (rule "true_left" (formula "186"))
                                          (rule "nnf_imp2or" (formula "121") (term "0"))
                                          (rule "commute_and" (formula "111") (term "0,0"))
                                          (rule "nnf_imp2or" (formula "120") (term "0"))
                                          (rule "nnf_imp2or" (formula "90") (term "0"))
                                          (rule "nnf_imp2or" (formula "91") (term "0"))
                                          (rule "commute_and" (formula "142") (term "0,0"))
                                          (rule "seqGetAlphaCast" (formula "152") (term "0"))
                                          (rule "castedGetAny" (formula "152") (term "0"))
                                           (builtin "One Step Simplification" (formula "152"))
                                          (rule "true_left" (formula "152"))
                                          (rule "seqGetAlphaCast" (formula "149") (term "0"))
                                          (rule "castedGetAny" (formula "149") (term "0"))
                                           (builtin "One Step Simplification" (formula "149"))
                                          (rule "true_left" (formula "149"))
                                          (rule "seqGetAlphaCast" (formula "105") (term "0"))
                                          (rule "castedGetAny" (formula "105") (term "0"))
                                           (builtin "One Step Simplification" (formula "105"))
                                          (rule "true_left" (formula "105"))
                                          (rule "seqGetAlphaCast" (formula "98") (term "0"))
                                          (rule "castedGetAny" (formula "98") (term "0"))
                                           (builtin "One Step Simplification" (formula "98"))
                                          (rule "true_left" (formula "98"))
                                          (rule "nnf_notAnd" (formula "99") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "99") (term "1,0,0"))
                                          (rule "mul_literals" (formula "99") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "99") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "1,0,0"))
                                          (rule "mul_literals" (formula "99") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "99") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "99") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "99") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "99") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "99") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "99") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "99") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "99") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "99") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "94") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "94") (term "1,0,0"))
                                          (rule "mul_literals" (formula "94") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "94") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0"))
                                          (rule "mul_literals" (formula "94") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "94") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "94") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "94") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "94") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "129") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "129") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "129") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "129") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "129") (term "1,0,0"))
                                          (rule "mul_literals" (formula "129") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "129") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "129") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "129") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "129") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "129") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "129") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "129") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "129") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "129") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "131") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "131") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "131") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "131") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "131") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "131") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "131") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "131") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "131") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "131") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "131") (term "1,0,0"))
                                          (rule "mul_literals" (formula "131") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "131") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "131") (term "1,0,0"))
                                          (rule "mul_literals" (formula "131") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "101") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "101") (term "1,0,0"))
                                          (rule "mul_literals" (formula "101") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "101") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "101") (term "1,0,0"))
                                          (rule "mul_literals" (formula "101") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "101") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "101") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "101") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "101") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "101") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "101") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "101") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "101") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "101") (term "1,0,0,0"))
                                          (rule "ifthenelse_split" (formula "13") (term "0"))
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "15") (term "1,0") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_left" (formula "20") (term "1,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "288") (term "1,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "19") (term "1,0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "eqSymm" (formula "18"))
                                             (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "applyEqReverse" (formula "15") (term "1,0") (ifseqformula "14"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "284") (term "1,1") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "284"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "10"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "283") (term "1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "applyEqReverse" (formula "11") (term "1,0") (ifseqformula "10"))
                                             (rule "hideAuxiliaryEq" (formula "10"))
                                             (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "replace_known_left" (formula "11") (term "1,0,0") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "11"))
                                             (rule "hideAuxiliaryEq" (formula "11"))
                                             (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "eqSymm" (formula "280"))
                                             (rule "close" (formula "280") (ifseqformula "11"))
                                          )
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "14") (term "1,0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_right" (formula "19") (term "1,0,0") (ifseqformula "218"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "218"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "applyEqReverse" (formula "19") (term "1,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_right" (formula "14") (term "1,0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_right" (formula "19") (term "1,0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "replace_known_right" (formula "13") (term "1,0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "replace_known_right" (formula "16") (term "1,0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "applyEqReverse" (formula "16") (term "1,0") (ifseqformula "15"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "15"))
                                             (rule "hideAuxiliaryEq" (formula "15"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "216"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "replace_known_right" (formula "210") (term "1") (ifseqformula "216"))
                                              (builtin "One Step Simplification" (formula "210"))
                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "16") (term "1,0") (ifseqformula "15"))
                                             (rule "hideAuxiliaryEq" (formula "15"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "andRight" (formula "215"))
                                             (branch
                                                (rule "nnf_notAnd" (formula "119") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "119") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "119") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "119") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "119") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "119") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "119") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "119") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "119") (term "1,0,0"))
                                                (rule "mul_literals" (formula "119") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "119") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "1,0,0"))
                                                (rule "mul_literals" (formula "119") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "191") (term "0,0,1,0,0"))
                                                (rule "nnf_imp2or" (formula "191") (term "0,1,1,0,0"))
                                                (rule "lenNonNegative" (formula "121") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "121"))
                                                (rule "lenNonNegative" (formula "95") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "95"))
                                                (rule "lenNonNegative" (formula "98") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "98"))
                                                (rule "lenNonNegative" (formula "125") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "125"))
                                                (rule "seqGetAlphaCast" (formula "131") (term "0"))
                                                (rule "castedGetAny" (formula "131") (term "0"))
                                                 (builtin "One Step Simplification" (formula "131"))
                                                (rule "true_left" (formula "131"))
                                                (rule "seqGetAlphaCast" (formula "184") (term "0"))
                                                (rule "castedGetAny" (formula "184") (term "0"))
                                                 (builtin "One Step Simplification" (formula "184"))
                                                (rule "true_left" (formula "184"))
                                                (rule "nnf_imp2or" (formula "106") (term "0"))
                                                (rule "lenNonNegative" (formula "91") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "91"))
                                                (rule "nnf_imp2or" (formula "137") (term "0"))
                                                (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "115") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "115") (term "1,0,0"))
                                                (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "115") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1,0,0"))
                                                (rule "mul_literals" (formula "115") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0"))
                                                (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0"))
                                                (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                                (rule "nnf_ex2all" (formula "215"))
                                                (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "192") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "192") (term "1,0,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "192") (term "1,0,0,1,1,1,0"))
                                                (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,1,1,0"))
                                                (rule "eqSymm" (formula "192") (term "0,0,1,1,0"))
                                                (rule "replace_known_left" (formula "192") (term "0,0,1,1,0") (ifseqformula "85"))
                                                 (builtin "One Step Simplification" (formula "192"))
                                                (rule "castedGetAny" (formula "192") (term "0,0,1,0,1,1,1,0"))
                                                (rule "castedGetAny" (formula "192") (term "0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,1,1,1,0"))
                                                (rule "applyEq" (formula "192") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "85"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "nnf_notAnd" (formula "107") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "107") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "107") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "107") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "0,0,0"))
                                                (rule "mul_literals" (formula "107") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "107") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "107") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "107") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "107") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "107") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "107") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "107") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "107") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "107") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "138") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "138") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "138") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "138") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "0,0,0"))
                                                (rule "mul_literals" (formula "138") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "138") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "138") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "138") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "138") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "138") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "138") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "138") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "138") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "138") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "117") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "117") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "117") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "117") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "117") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "117") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "117") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "117") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "117") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "117") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "117") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "86") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "87") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "87") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "87") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "87") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "87") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "87") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "87") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "87") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "87") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "192") (term "0,0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "192") (term "0,0,1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "192") (term "0,0,1,1,0"))
                                                (rule "nnf_imp2or" (formula "192") (term "0,1,1,1,0"))
                                                (rule "commute_or_2" (formula "95") (term "0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "90") (term "0"))
                                                (rule "commute_or_2" (formula "125") (term "0"))
                                                (rule "commute_or_2" (formula "127") (term "0"))
                                                (rule "commute_or_2" (formula "97") (term "0"))
                                                (rule "commute_or" (formula "4") (term "0,0"))
                                                (rule "applyEq" (formula "15") (term "0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "15"))
                                                (rule "applyEqReverse" (formula "285") (term "1,0") (ifseqformula "15"))
                                                 (builtin "One Step Simplification" (formula "285"))
                                                (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "15"))
                                                (rule "hideAuxiliaryEq" (formula "15"))
                                                (rule "nnf_notAnd" (formula "191") (term "0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "191") (term "0,0,1,1,1,0"))
                                                (rule "nnf_notAnd" (formula "191") (term "1,0,0,0,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "191") (term "1,1,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,1,1,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,1,1,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "191") (term "1,1,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,1,1,0,0,0,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "191") (term "0,1,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,0,1,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,0,1,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "191") (term "0,1,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,1,0,0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "191") (term "0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "191") (term "0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "191") (term "0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "191") (term "1,0,0,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "191") (term "1,0,0,1,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "0,1,0,0,1,0,0,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "191") (term "0,0,1,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,0,1,0,0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "191") (term "0,0,1,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "191") (term "1,0,0,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "191") (term "1,1,0,0,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "191") (term "1,1,0,0,0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "191") (term "1,0,0,1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "191") (term "0,1,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,0,1,0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,0,1,0,0,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "191") (term "0,1,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,1,0,0,1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "191") (term "1,1,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,1,1,0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,1,1,0,0,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "191") (term "1,1,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,1,1,0,0,1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "191") (term "0,0,0,1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "191") (term "0,0,0,0,1,1,0,0"))
                                                (rule "times_zero_1" (formula "191") (term "1,0,0,0,0,0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,0,0,0,0,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "191") (term "0,0,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,0,0,1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "191") (term "1,0,0,0,1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "191") (term "1,0,0,1,0,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "0,1,0,0,1,0,0,0,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "191") (term "0,0,1,0,0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,0,1,0,0,0,1,1,0,0"))
                                                (rule "add_zero_left" (formula "191") (term "0,0,1,0,0,0,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "191") (term "1,0,0,0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "191") (term "1,1,0,0,0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "191") (term "1,1,0,0,0,1,1,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "16"))
                                                (rule "close" (formula "284") (ifseqformula "2"))
                                             )
                                             (branch
                                                (rule "nnf_imp2or" (formula "191") (term "0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "119") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "119") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "119") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "119") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "119") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "119") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "119") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "119") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "119") (term "1,0,0"))
                                                (rule "mul_literals" (formula "119") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "119") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "1,0,0"))
                                                (rule "mul_literals" (formula "119") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "191") (term "0,1,1,0,0"))
                                                (rule "lenNonNegative" (formula "121") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "121"))
                                                (rule "lenNonNegative" (formula "95") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "95"))
                                                (rule "lenNonNegative" (formula "98") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "98"))
                                                (rule "lenNonNegative" (formula "125") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "125"))
                                                (rule "seqGetAlphaCast" (formula "131") (term "0"))
                                                (rule "castedGetAny" (formula "131") (term "0"))
                                                 (builtin "One Step Simplification" (formula "131"))
                                                (rule "true_left" (formula "131"))
                                                (rule "seqGetAlphaCast" (formula "184") (term "0"))
                                                (rule "castedGetAny" (formula "184") (term "0"))
                                                 (builtin "One Step Simplification" (formula "184"))
                                                (rule "true_left" (formula "184"))
                                                (rule "nnf_imp2or" (formula "106") (term "0"))
                                                (rule "lenNonNegative" (formula "91") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "91"))
                                                (rule "nnf_imp2or" (formula "137") (term "0"))
                                                (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "115") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "115") (term "1,0,0"))
                                                (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "115") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1,0,0"))
                                                (rule "mul_literals" (formula "115") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0"))
                                                (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0"))
                                                (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                                (rule "nnf_ex2all" (formula "215"))
                                                (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "192") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "192") (term "1,0,0,1,1,1,0"))
                                                (rule "expand_inInt" (formula "192") (term "1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,0,1,1,0"))
                                                (rule "eqSymm" (formula "192") (term "0,0,1,1,0"))
                                                (rule "replace_known_left" (formula "192") (term "0,0,1,1,0") (ifseqformula "85"))
                                                 (builtin "One Step Simplification" (formula "192"))
                                                (rule "castedGetAny" (formula "192") (term "0,0,1,0,1,1,1,0"))
                                                (rule "castedGetAny" (formula "192") (term "0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,0,1,1,0"))
                                                (rule "applyEq" (formula "192") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "85"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "nnf_notAnd" (formula "107") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "107") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "107") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "107") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "107") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "107") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "107") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "107") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "107") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "107") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "107") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "107") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "107") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "0,0,0"))
                                                (rule "mul_literals" (formula "107") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "138") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "138") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "138") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "138") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "138") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "138") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "138") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "138") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "138") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "138") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "138") (term "0,0,0"))
                                                (rule "mul_literals" (formula "138") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "138") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "0,0,0"))
                                                (rule "mul_literals" (formula "138") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "117") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "117") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "117") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "117") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "117") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "117") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "117") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "117") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "117") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "117") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "86") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "87") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "87") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "87") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "87") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "87") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "87") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "87") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "87") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "87") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "192") (term "0,0,1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "192") (term "0,0,0,1,0,0"))
                                                (rule "nnf_imp2or" (formula "192") (term "0,0,1,1,0"))
                                                (rule "nnf_imp2or" (formula "192") (term "0,1,1,1,0"))
                                                (rule "commute_or_2" (formula "95") (term "0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "90") (term "0"))
                                                (rule "commute_or_2" (formula "125") (term "0"))
                                                (rule "commute_or_2" (formula "127") (term "0"))
                                                (rule "commute_or_2" (formula "97") (term "0"))
                                                (rule "commute_or" (formula "4") (term "0,0"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "15"))
                                                (rule "applyEqReverse" (formula "285") (term "1,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "285"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "nnf_notAnd" (formula "191") (term "0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "191") (term "0,0,1,1,1,0"))
                                                (rule "nnf_notAnd" (formula "191") (term "1,0,0,1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "191") (term "1,1,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,1,1,0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,1,1,0,0,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "191") (term "1,1,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,1,1,0,0,1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "191") (term "0,1,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,0,1,0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,0,1,0,0,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "191") (term "0,1,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,1,0,0,1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "191") (term "0,0,0,1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "191") (term "0,0,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,0,0,0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,0,0,0,0,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "191") (term "0,0,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,0,0,1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "191") (term "1,0,0,0,1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "191") (term "1,0,0,1,0,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "0,1,0,0,1,0,0,0,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "191") (term "0,0,1,0,0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,0,1,0,0,0,1,1,0,0"))
                                                (rule "add_zero_left" (formula "191") (term "0,0,1,0,0,0,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "191") (term "1,0,0,0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "191") (term "1,1,0,0,0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "191") (term "1,1,0,0,0,1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "191") (term "0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "191") (term "0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "191") (term "0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "191") (term "1,0,0,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "191") (term "1,0,0,1,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "0,1,0,0,1,0,0,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "191") (term "0,0,1,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,0,1,0,0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "191") (term "0,0,1,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "191") (term "1,0,0,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "191") (term "1,1,0,0,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "191") (term "1,1,0,0,0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "191") (term "1,0,0,0,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "191") (term "1,1,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,1,1,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,1,1,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "191") (term "1,1,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,1,1,0,0,0,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "191") (term "0,1,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,0,1,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,0,1,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "191") (term "0,1,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,1,0,0,0,1,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "16"))
                                                (rule "close" (formula "284") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "64"))
                                          (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "64"))
                                          (rule "hideAuxiliaryEq" (formula "64"))
                                          (rule "replace_known_right" (formula "73") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "73"))
                                          (rule "replace_known_right" (formula "59") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "replace_known_right" (formula "67") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "67"))
                                          (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "71") (term "1,0") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "230"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_right" (formula "56") (term "0,0") (ifseqformula "230"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "applyEqReverse" (formula "58") (term "1,0") (ifseqformula "56"))
                                          (rule "hideAuxiliaryEq" (formula "56"))
                                          (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "229"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "replace_known_right" (formula "59") (term "1,0,0") (ifseqformula "229"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "229"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "229"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "replace_known_right" (formula "69") (term "1,0,0") (ifseqformula "229"))
                                           (builtin "One Step Simplification" (formula "69"))
                                          (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "229"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_right" (formula "184") (term "1") (ifseqformula "229"))
                                           (builtin "One Step Simplification" (formula "184"))
                                          (rule "applyEq" (formula "5") (term "0") (ifseqformula "69"))
                                          (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "62") (term "0") (ifseqformula "6"))
                                          (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "62"))
                                          (rule "hideAuxiliaryEq" (formula "62"))
                                          (rule "seqGetAlphaCast" (formula "135") (term "0"))
                                          (rule "castedGetAny" (formula "135") (term "0"))
                                           (builtin "One Step Simplification" (formula "135"))
                                          (rule "true_left" (formula "135"))
                                          (rule "lenNonNegative" (formula "140") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "140"))
                                          (rule "seqGetAlphaCast" (formula "194") (term "0"))
                                          (rule "castedGetAny" (formula "194") (term "0"))
                                           (builtin "One Step Simplification" (formula "194"))
                                          (rule "true_left" (formula "194"))
                                          (rule "nnf_imp2or" (formula "128") (term "0"))
                                          (rule "commute_and" (formula "118") (term "0,0"))
                                          (rule "nnf_imp2or" (formula "127") (term "0"))
                                          (rule "nnf_imp2or" (formula "97") (term "0"))
                                          (rule "nnf_imp2or" (formula "98") (term "0"))
                                          (rule "commute_and" (formula "149") (term "0,0"))
                                          (rule "seqGetAlphaCast" (formula "159") (term "0"))
                                          (rule "castedGetAny" (formula "159") (term "0"))
                                           (builtin "One Step Simplification" (formula "159"))
                                          (rule "true_left" (formula "159"))
                                          (rule "seqGetAlphaCast" (formula "156") (term "0"))
                                          (rule "castedGetAny" (formula "156") (term "0"))
                                           (builtin "One Step Simplification" (formula "156"))
                                          (rule "true_left" (formula "156"))
                                          (rule "seqGetAlphaCast" (formula "112") (term "0"))
                                          (rule "castedGetAny" (formula "112") (term "0"))
                                           (builtin "One Step Simplification" (formula "112"))
                                          (rule "true_left" (formula "112"))
                                          (rule "seqGetAlphaCast" (formula "105") (term "0"))
                                          (rule "castedGetAny" (formula "105") (term "0"))
                                           (builtin "One Step Simplification" (formula "105"))
                                          (rule "true_left" (formula "105"))
                                          (rule "nnf_notAnd" (formula "106") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "106") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "106") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "106") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "106") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "106") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "106") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "106") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "106") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "106") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "106") (term "1,0,0"))
                                          (rule "mul_literals" (formula "106") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "106") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "106") (term "1,0,0"))
                                          (rule "mul_literals" (formula "106") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "101") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "101") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "101") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "101") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "101") (term "1,0,0"))
                                          (rule "mul_literals" (formula "101") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "101") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "101") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "101") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "101") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "101") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "101") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "101") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "101") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "101") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "136") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "136") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "136") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "136") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "136") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "136") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "136") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "136") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "136") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "136") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "136") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "136") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "136") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "136") (term "1,0,0"))
                                          (rule "mul_literals" (formula "136") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "138") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "138") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "138") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "138") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "1,0,0"))
                                          (rule "mul_literals" (formula "138") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "138") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "138") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "138") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "138") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "138") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "138") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "138") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "138") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "138") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "108") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "108") (term "1,0,0"))
                                          (rule "mul_literals" (formula "108") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "108") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "108") (term "1,0,0"))
                                          (rule "mul_literals" (formula "108") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "108") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "108") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "108") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "108") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "108") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "108") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "108") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "108") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "108") (term "1,0,0,0"))
                                          (rule "ifthenelse_split" (formula "16") (term "0"))
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "19") (term "1,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "replace_known_left" (formula "21") (term "1,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "21"))
                                             (rule "hideAuxiliaryEq" (formula "21"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "295") (term "0,1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "18") (term "1,0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "applyEqReverse" (formula "226") (term "0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "293") (term "0,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "applyEqReverse" (formula "15") (term "1,0") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "291") (term "0,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "16") (term "1,0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "16"))
                                             (rule "applyEqReverse" (formula "223") (term "0") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "replace_known_left" (formula "13") (term "1,0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "220") (term "0") (ifseqformula "13"))
                                             (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "288") (term "0,0") (ifseqformula "13"))
                                             (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "13"))
                                             (rule "applyEqReverse" (formula "220") (term "0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "287") (term "0,1") (ifseqformula "13"))
                                             (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "13"))
                                             (rule "applyEqReverse" (formula "220") (term "0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_left" (formula "209") (term "1") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "209"))
                                             (rule "true_left" (formula "209"))
                                             (rule "andRight" (formula "215"))
                                             (branch
                                                (rule "nnf_imp2or" (formula "192") (term "0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "119") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "119") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "119") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "119") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "119") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "119") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "119") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "119") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "119") (term "1,0,0"))
                                                (rule "mul_literals" (formula "119") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "119") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "1,0,0"))
                                                (rule "mul_literals" (formula "119") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "192") (term "0,1,1,0,0"))
                                                (rule "lenNonNegative" (formula "121") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "121"))
                                                (rule "lenNonNegative" (formula "95") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "95"))
                                                (rule "lenNonNegative" (formula "98") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "98"))
                                                (rule "lenNonNegative" (formula "125") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "125"))
                                                (rule "nnf_imp2or" (formula "106") (term "0"))
                                                (rule "nnf_imp2or" (formula "137") (term "0"))
                                                (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "115") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "115") (term "1,0,0"))
                                                (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "115") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1,0,0"))
                                                (rule "mul_literals" (formula "115") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0"))
                                                (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0"))
                                                (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                                (rule "seqGetAlphaCast" (formula "131") (term "0"))
                                                (rule "castedGetAny" (formula "131") (term "0"))
                                                 (builtin "One Step Simplification" (formula "131"))
                                                (rule "true_left" (formula "131"))
                                                (rule "seqGetAlphaCast" (formula "185") (term "0"))
                                                (rule "castedGetAny" (formula "185") (term "0"))
                                                 (builtin "One Step Simplification" (formula "185"))
                                                (rule "true_left" (formula "185"))
                                                (rule "lenNonNegative" (formula "91") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "91"))
                                                (rule "nnf_ex2all" (formula "215"))
                                                (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "193") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "193") (term "1,0,0,1,1,1,0"))
                                                (rule "expand_inInt" (formula "193") (term "1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MIN" (formula "193") (term "0,1,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MAX" (formula "193") (term "1,0,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MAX" (formula "193") (term "1,0,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MIN" (formula "193") (term "0,1,1,0,0,1,0,1,1,0"))
                                                (rule "eqSymm" (formula "193") (term "0,0,1,1,0"))
                                                (rule "replace_known_left" (formula "193") (term "0,0,1,1,0") (ifseqformula "85"))
                                                 (builtin "One Step Simplification" (formula "193"))
                                                (rule "castedGetAny" (formula "193") (term "0,0,1,0,1,1,1,0"))
                                                (rule "castedGetAny" (formula "193") (term "0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "193") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "193") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "193") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "193") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "193") (term "0,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "193") (term "1,1,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "193") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "193") (term "1,1,0,0,0,1,1,0"))
                                                (rule "applyEq" (formula "193") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "85"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "193") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "193") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "193") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "193") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "193") (term "0,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "193") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "193") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "193") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "193") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "193") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "mul_literals" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "193") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "nnf_notAnd" (formula "107") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "107") (term "0,0,0"))
                                                (rule "mul_literals" (formula "107") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "107") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "0,0,0"))
                                                (rule "mul_literals" (formula "107") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "107") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "107") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "107") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "107") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "107") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "107") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "107") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "107") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "107") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "138") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "138") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "138") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "138") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "138") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "138") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "138") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "138") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "138") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "138") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "138") (term "0,0,0"))
                                                (rule "mul_literals" (formula "138") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "138") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "0,0,0"))
                                                (rule "mul_literals" (formula "138") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "117") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "117") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "117") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "117") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "117") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "117") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "117") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "117") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "117") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "117") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "116") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                (rule "nnf_notAnd" (formula "87") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "87") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "87") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "87") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "87") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "87") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "87") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "87") (term "1,0,0,0,0"))
                                                (rule "commute_or" (formula "4") (term "0,0"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "52"))
                                                (rule "applyEqReverse" (formula "285") (term "1,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "285"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "commute_or" (formula "2") (term "0,0"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "57"))
                                                (rule "close" (formula "284") (ifseqformula "2"))
                                             )
                                             (branch
                                                (rule "nnf_imp2or" (formula "192") (term "0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "119") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "119") (term "1,0,0"))
                                                (rule "mul_literals" (formula "119") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "119") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "1,0,0"))
                                                (rule "mul_literals" (formula "119") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "119") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "119") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "119") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "119") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "119") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "119") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "119") (term "1,0,0,0"))
                                                (rule "nnf_imp2or" (formula "192") (term "0,1,1,0,0"))
                                                (rule "lenNonNegative" (formula "121") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "121"))
                                                (rule "lenNonNegative" (formula "95") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "95"))
                                                (rule "lenNonNegative" (formula "98") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "98"))
                                                (rule "lenNonNegative" (formula "125") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "125"))
                                                (rule "nnf_imp2or" (formula "106") (term "0"))
                                                (rule "nnf_imp2or" (formula "137") (term "0"))
                                                (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "115") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "115") (term "1,0,0"))
                                                (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "115") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1,0,0"))
                                                (rule "mul_literals" (formula "115") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0"))
                                                (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0"))
                                                (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                                (rule "seqGetAlphaCast" (formula "131") (term "0"))
                                                (rule "castedGetAny" (formula "131") (term "0"))
                                                 (builtin "One Step Simplification" (formula "131"))
                                                (rule "true_left" (formula "131"))
                                                (rule "seqGetAlphaCast" (formula "185") (term "0"))
                                                (rule "castedGetAny" (formula "185") (term "0"))
                                                 (builtin "One Step Simplification" (formula "185"))
                                                (rule "true_left" (formula "185"))
                                                (rule "lenNonNegative" (formula "91") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "91"))
                                                (rule "nnf_ex2all" (formula "215"))
                                                (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "193") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "193") (term "1,0,0,1,1,1,0"))
                                                (rule "expand_inInt" (formula "193") (term "1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MIN" (formula "193") (term "0,1,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MAX" (formula "193") (term "1,0,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MAX" (formula "193") (term "1,0,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MIN" (formula "193") (term "0,1,1,0,0,1,0,1,1,0"))
                                                (rule "eqSymm" (formula "193") (term "0,0,1,1,0"))
                                                (rule "replace_known_left" (formula "193") (term "0,0,1,1,0") (ifseqformula "85"))
                                                 (builtin "One Step Simplification" (formula "193"))
                                                (rule "castedGetAny" (formula "193") (term "0,0,1,0,1,1,1,0"))
                                                (rule "castedGetAny" (formula "193") (term "0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "193") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "193") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "193") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "193") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "193") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "193") (term "0,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "193") (term "1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "193") (term "1,1,0,0,1,1,1,0"))
                                                (rule "applyEq" (formula "193") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "85"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "193") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "193") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "193") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "193") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "193") (term "0,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "193") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "193") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "193") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "193") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "193") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "mul_literals" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "193") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "nnf_notAnd" (formula "107") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "107") (term "0,0,0"))
                                                (rule "mul_literals" (formula "107") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "107") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "0,0,0"))
                                                (rule "mul_literals" (formula "107") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "107") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "107") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "107") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "107") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "107") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "107") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "107") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "107") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "107") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "138") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "138") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "138") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "138") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "138") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "138") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "138") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "138") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "138") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "138") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "138") (term "0,0,0"))
                                                (rule "mul_literals" (formula "138") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "138") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "0,0,0"))
                                                (rule "mul_literals" (formula "138") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "117") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "117") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "117") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "117") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "117") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "117") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "117") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "117") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "117") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "117") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "117") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "116") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                (rule "nnf_notAnd" (formula "87") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "87") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "87") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "87") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "87") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "87") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "87") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "87") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "1,1,0,0,0"))
                                                (rule "commute_or" (formula "4") (term "0,0"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "52"))
                                                (rule "applyEqReverse" (formula "285") (term "1,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "285"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "commute_or" (formula "2") (term "0,0"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "57"))
                                                (rule "close" (formula "284") (ifseqformula "2"))
                                             )
                                          )
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "226"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "applyEqReverse" (formula "19") (term "1,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_right" (formula "22") (term "1,0,0") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "replace_known_right" (formula "19") (term "1,0,0") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "replace_known_right" (formula "16") (term "1,0,0") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "224"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "20") (term "1,0,0") (ifseqformula "224"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "224"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "224"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_right" (formula "218") (term "1") (ifseqformula "224"))
                                              (builtin "One Step Simplification" (formula "218"))
                                             (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "19") (term "1,0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "andRight" (formula "224"))
                                             (branch
                                                (rule "nnf_notAnd" (formula "126") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "126") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "126") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "126") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0,0"))
                                                (rule "mul_literals" (formula "126") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "126") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "126") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "126") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "126") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "126") (term "1,0,0,0"))
                                                (rule "nnf_imp2or" (formula "199") (term "0,0,1,0,0"))
                                                (rule "nnf_imp2or" (formula "199") (term "0,1,1,0,0"))
                                                (rule "lenNonNegative" (formula "128") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "128"))
                                                (rule "lenNonNegative" (formula "102") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "102"))
                                                (rule "lenNonNegative" (formula "105") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "105"))
                                                (rule "lenNonNegative" (formula "132") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "132"))
                                                (rule "nnf_imp2or" (formula "113") (term "0"))
                                                (rule "nnf_imp2or" (formula "144") (term "0"))
                                                (rule "nnf_notAnd" (formula "123") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "123") (term "1,0,0"))
                                                (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "123") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "1,0,0"))
                                                (rule "mul_literals" (formula "123") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "122") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "122") (term "1,0,0"))
                                                (rule "mul_literals" (formula "122") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "122") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "122") (term "1,0,0"))
                                                (rule "mul_literals" (formula "122") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "92") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "92") (term "1,0,0"))
                                                (rule "mul_literals" (formula "92") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "92") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "92") (term "1,0,0"))
                                                (rule "mul_literals" (formula "92") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "93") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "93") (term "1,0,0"))
                                                (rule "mul_literals" (formula "93") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "93") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "1,0,0"))
                                                (rule "mul_literals" (formula "93") (term "1,1,0,0"))
                                                (rule "seqGetAlphaCast" (formula "138") (term "0"))
                                                (rule "castedGetAny" (formula "138") (term "0"))
                                                 (builtin "One Step Simplification" (formula "138"))
                                                (rule "true_left" (formula "138"))
                                                (rule "seqGetAlphaCast" (formula "192") (term "0"))
                                                (rule "castedGetAny" (formula "192") (term "0"))
                                                 (builtin "One Step Simplification" (formula "192"))
                                                (rule "true_left" (formula "192"))
                                                (rule "lenNonNegative" (formula "98") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "98"))
                                                (rule "nnf_ex2all" (formula "224"))
                                                (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "200") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "200") (term "1,0,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "200") (term "1,0,0,1,1,1,0"))
                                                (rule "replace_int_MAX" (formula "200") (term "1,0,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MIN" (formula "200") (term "0,1,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MAX" (formula "200") (term "1,0,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MIN" (formula "200") (term "0,1,1,0,0,1,1,1,0"))
                                                (rule "eqSymm" (formula "200") (term "0,0,1,1,0"))
                                                (rule "replace_known_left" (formula "200") (term "0,0,1,1,0") (ifseqformula "92"))
                                                 (builtin "One Step Simplification" (formula "200"))
                                                (rule "castedGetAny" (formula "200") (term "0,0,1,0,0,1,1,0"))
                                                (rule "castedGetAny" (formula "200") (term "0,0,1,0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "200") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "200") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "200") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "200") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "200") (term "0,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "200") (term "1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "200") (term "1,1,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "200") (term "0,0,0,0,0,1,1,0"))
                                                (rule "applyEq" (formula "200") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "92"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "200") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "200") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "200") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "200") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "200") (term "0,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "200") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "200") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "200") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "200") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "200") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "mul_literals" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "200") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "nnf_notAnd" (formula "114") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "114") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "114") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "114") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "114") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "114") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "114") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "114") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "114") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "114") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "114") (term "0,0,0"))
                                                (rule "mul_literals" (formula "114") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "114") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "114") (term "0,0,0"))
                                                (rule "mul_literals" (formula "114") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "145") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "145") (term "0,0,0"))
                                                (rule "mul_literals" (formula "145") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "145") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "145") (term "0,0,0"))
                                                (rule "mul_literals" (formula "145") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "145") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "145") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "145") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "145") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "145") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "145") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "145") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "145") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "145") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "124") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "124") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "124") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "124") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "124") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "124") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "124") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "124") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "124") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "124") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "124") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "124") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "123") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "123") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "123") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "123") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "123") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "123") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "123") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "123") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "123") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "123") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "123") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "123") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "123") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "93") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "93") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "93") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "93") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "93") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "93") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "93") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "93") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "93") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "93") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "93") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "93") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                (rule "nnf_notAnd" (formula "94") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "94") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "94") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "94") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "94") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "94") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "94") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "94") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "94") (term "1,1,0,0,0"))
                                                (rule "commute_or" (formula "8") (term "0,0"))
                                                (rule "applyEq" (formula "8") (term "0") (ifseqformula "59"))
                                                (rule "applyEqReverse" (formula "294") (term "1,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "commute_or" (formula "6") (term "0,0"))
                                                (rule "applyEq" (formula "6") (term "0") (ifseqformula "64"))
                                                (rule "applyEqReverse" (formula "293") (term "1,1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "nnf_notAnd" (formula "198") (term "0,0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "198") (term "0,0,1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "198") (term "0,0,1,1,0"))
                                                (rule "nnf_imp2or" (formula "198") (term "0,1,1,1,0"))
                                                (rule "commute_or_2" (formula "100") (term "0"))
                                                (rule "commute_or_2" (formula "95") (term "0"))
                                                (rule "commute_or_2" (formula "130") (term "0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                (rule "commute_or_2" (formula "132") (term "0"))
                                                (rule "commute_or_2" (formula "102") (term "0"))
                                                (rule "ifthenelse_split" (formula "50") (term "0"))
                                                (branch " resultAtPost_103_A.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "53") (term "1,0") (ifseqformula "51"))
                                                   (rule "hideAuxiliaryEq" (formula "51"))
                                                   (rule "replace_known_left" (formula "52") (term "1,0,0") (ifseqformula "50"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "52"))
                                                   (rule "applyEqReverse" (formula "223") (term "0") (ifseqformula "52"))
                                                   (rule "hideAuxiliaryEq" (formula "52"))
                                                   (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "50"))
                                                    (builtin "One Step Simplification" (formula "60"))
                                                   (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "60"))
                                                   (rule "hideAuxiliaryEq" (formula "60"))
                                                   (rule "replace_known_left" (formula "61") (term "1,0,0") (ifseqformula "50"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                   (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "61"))
                                                   (rule "applyEqReverse" (formula "223") (term "0") (ifseqformula "61"))
                                                   (rule "applyEqReverse" (formula "290") (term "1,1") (ifseqformula "61"))
                                                   (rule "hideAuxiliaryEq" (formula "61"))
                                                   (rule "replace_known_left" (formula "56") (term "1,0,0") (ifseqformula "50"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "applyEqReverse" (formula "289") (term "1,0") (ifseqformula "56"))
                                                   (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "56"))
                                                   (rule "applyEqReverse" (formula "221") (term "0") (ifseqformula "56"))
                                                   (rule "hideAuxiliaryEq" (formula "56"))
                                                   (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "50"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "288") (term "1,0") (ifseqformula "6"))
                                                   (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "6"))
                                                   (rule "applyEqReverse" (formula "220") (term "0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "eqSymm" (formula "287") (term "1"))
                                                   (rule "eqSymm" (formula "287") (term "0"))
                                                   (rule "replace_known_right" (formula "47") (term "0") (ifseqformula "218"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "219"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "220"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "replace_known_left" (formula "171") (term "1") (ifseqformula "49"))
                                                    (builtin "One Step Simplification" (formula "171"))
                                                   (rule "true_left" (formula "171"))
                                                   (rule "commute_or" (formula "3") (term "0,0"))
                                                   (rule "applyEq" (formula "3") (term "0") (ifseqformula "17"))
                                                   (rule "applyEqReverse" (formula "286") (term "1,1") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "286"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "commute_or" (formula "4") (term "0,0"))
                                                   (rule "applyEq" (formula "4") (term "0") (ifseqformula "15"))
                                                   (rule "close" (formula "285") (ifseqformula "4"))
                                                )
                                                (branch " resultAtPost_103_A.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "50"))
                                                   (rule "hideAuxiliaryEq" (formula "50"))
                                                   (rule "replace_known_right" (formula "51") (term "1,0,0") (ifseqformula "220"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_right" (formula "56") (term "1,0,0") (ifseqformula "220"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "220"))
                                                    (builtin "One Step Simplification" (formula "62"))
                                                   (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "220"))
                                                    (builtin "One Step Simplification" (formula "60"))
                                                   (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "60"))
                                                   (rule "hideAuxiliaryEq" (formula "60"))
                                                   (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "219"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "56") (term "1,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_right" (formula "173") (term "1") (ifseqformula "218"))
                                                    (builtin "One Step Simplification" (formula "173"))
                                                   (rule "commute_or" (formula "3") (term "0,0"))
                                                   (rule "applyEq" (formula "17") (term "0") (ifseqformula "3"))
                                                   (rule "applyEqReverse" (formula "290") (term "1,1") (ifseqformula "17"))
                                                    (builtin "One Step Simplification" (formula "290"))
                                                   (rule "applyEqReverse" (formula "223") (term "0") (ifseqformula "17"))
                                                   (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "17"))
                                                   (rule "hideAuxiliaryEq" (formula "17"))
                                                   (rule "commute_or" (formula "5") (term "0,0"))
                                                   (rule "applyEq" (formula "16") (term "0") (ifseqformula "5"))
                                                   (rule "close" (formula "289") (ifseqformula "16"))
                                                )
                                             )
                                             (branch
                                                (rule "nnf_notAnd" (formula "126") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "126") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "126") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "126") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "126") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "126") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "126") (term "1,0,0"))
                                                (rule "mul_literals" (formula "126") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "126") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0,0"))
                                                (rule "mul_literals" (formula "126") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "199") (term "0,0,1,0,0"))
                                                (rule "nnf_imp2or" (formula "199") (term "0,1,1,0,0"))
                                                (rule "lenNonNegative" (formula "128") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "128"))
                                                (rule "lenNonNegative" (formula "102") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "102"))
                                                (rule "lenNonNegative" (formula "105") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "105"))
                                                (rule "lenNonNegative" (formula "132") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "132"))
                                                (rule "nnf_imp2or" (formula "113") (term "0"))
                                                (rule "nnf_imp2or" (formula "144") (term "0"))
                                                (rule "nnf_notAnd" (formula "123") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "123") (term "1,0,0"))
                                                (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "123") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "1,0,0"))
                                                (rule "mul_literals" (formula "123") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "122") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "122") (term "1,0,0"))
                                                (rule "mul_literals" (formula "122") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "122") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "122") (term "1,0,0"))
                                                (rule "mul_literals" (formula "122") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "92") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "92") (term "1,0,0"))
                                                (rule "mul_literals" (formula "92") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "92") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "92") (term "1,0,0"))
                                                (rule "mul_literals" (formula "92") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "93") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "93") (term "1,0,0"))
                                                (rule "mul_literals" (formula "93") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "93") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "1,0,0"))
                                                (rule "mul_literals" (formula "93") (term "1,1,0,0"))
                                                (rule "seqGetAlphaCast" (formula "138") (term "0"))
                                                (rule "castedGetAny" (formula "138") (term "0"))
                                                 (builtin "One Step Simplification" (formula "138"))
                                                (rule "true_left" (formula "138"))
                                                (rule "seqGetAlphaCast" (formula "192") (term "0"))
                                                (rule "castedGetAny" (formula "192") (term "0"))
                                                 (builtin "One Step Simplification" (formula "192"))
                                                (rule "true_left" (formula "192"))
                                                (rule "lenNonNegative" (formula "98") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "98"))
                                                (rule "nnf_ex2all" (formula "224"))
                                                (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "200") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "200") (term "1,0,0,1,1,1,0"))
                                                (rule "expand_inInt" (formula "200") (term "1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MIN" (formula "200") (term "0,1,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MAX" (formula "200") (term "1,0,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MAX" (formula "200") (term "1,0,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MIN" (formula "200") (term "0,1,1,0,0,1,0,1,1,0"))
                                                (rule "eqSymm" (formula "200") (term "0,0,1,1,0"))
                                                (rule "replace_known_left" (formula "200") (term "0,0,1,1,0") (ifseqformula "92"))
                                                 (builtin "One Step Simplification" (formula "200"))
                                                (rule "castedGetAny" (formula "200") (term "0,0,1,0,1,1,1,0"))
                                                (rule "castedGetAny" (formula "200") (term "0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "200") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "200") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "200") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "200") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "200") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "200") (term "0,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "200") (term "1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "200") (term "1,1,0,0,1,1,1,0"))
                                                (rule "applyEq" (formula "200") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "92"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "200") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "200") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "200") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "200") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "200") (term "0,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "200") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "200") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "200") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "200") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "200") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "mul_literals" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "200") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "nnf_notAnd" (formula "114") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "114") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "114") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "114") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "114") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "114") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "114") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "114") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "114") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "114") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "114") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "114") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "114") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "114") (term "0,0,0"))
                                                (rule "mul_literals" (formula "114") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "145") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "145") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "145") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "145") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "145") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "145") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "145") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "145") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "145") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "145") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "145") (term "0,0,0"))
                                                (rule "mul_literals" (formula "145") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "145") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "145") (term "0,0,0"))
                                                (rule "mul_literals" (formula "145") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "124") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "124") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "124") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "124") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "124") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "124") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "124") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "124") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "124") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "124") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "124") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "124") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "123") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "123") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "123") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "123") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "123") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "123") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "123") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "123") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "123") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "123") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "123") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "123") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "123") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "93") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "93") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "93") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "93") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "93") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "93") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "93") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "93") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "93") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "93") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "93") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "93") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                (rule "nnf_notAnd" (formula "94") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "94") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "94") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "94") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "94") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "94") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "94") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "94") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "94") (term "1,1,0,0,0"))
                                                (rule "commute_or" (formula "8") (term "0,0"))
                                                (rule "applyEq" (formula "8") (term "0") (ifseqformula "59"))
                                                (rule "applyEqReverse" (formula "294") (term "1,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "commute_or" (formula "6") (term "0,0"))
                                                (rule "applyEq" (formula "64") (term "0") (ifseqformula "6"))
                                                (rule "applyEqReverse" (formula "226") (term "0") (ifseqformula "64"))
                                                (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "64"))
                                                (rule "hideAuxiliaryEq" (formula "64"))
                                                (rule "nnf_notAnd" (formula "198") (term "0,0,1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "198") (term "0,0,0,1,0,0"))
                                                (rule "nnf_imp2or" (formula "198") (term "0,0,1,1,0"))
                                                (rule "nnf_imp2or" (formula "198") (term "0,1,1,1,0"))
                                                (rule "commute_or_2" (formula "100") (term "0"))
                                                (rule "commute_or_2" (formula "95") (term "0"))
                                                (rule "commute_or_2" (formula "130") (term "0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                (rule "commute_or_2" (formula "132") (term "0"))
                                                (rule "commute_or_2" (formula "102") (term "0"))
                                                (rule "ifthenelse_split" (formula "51") (term "0"))
                                                (branch " resultAtPost_103_A.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "54") (term "1,0") (ifseqformula "52"))
                                                   (rule "hideAuxiliaryEq" (formula "52"))
                                                   (rule "replace_known_left" (formula "53") (term "1,0,0") (ifseqformula "51"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEqReverse" (formula "223") (term "0") (ifseqformula "53"))
                                                   (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "53"))
                                                   (rule "hideAuxiliaryEq" (formula "53"))
                                                   (rule "replace_known_left" (formula "61") (term "0,0") (ifseqformula "51"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                   (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "61"))
                                                   (rule "hideAuxiliaryEq" (formula "61"))
                                                   (rule "replace_known_left" (formula "57") (term "1,0,0") (ifseqformula "51"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "57"))
                                                   (rule "applyEqReverse" (formula "290") (term "1,0") (ifseqformula "57"))
                                                   (rule "applyEqReverse" (formula "222") (term "0") (ifseqformula "57"))
                                                   (rule "hideAuxiliaryEq" (formula "57"))
                                                   (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "51"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "221") (term "0") (ifseqformula "7"))
                                                   (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "7"))
                                                   (rule "applyEqReverse" (formula "289") (term "1,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "50"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "6"))
                                                   (rule "applyEqReverse" (formula "288") (term "1,1") (ifseqformula "6"))
                                                   (rule "applyEqReverse" (formula "221") (term "0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "eqSymm" (formula "287") (term "0"))
                                                   (rule "eqSymm" (formula "287") (term "1"))
                                                   (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "219"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_right" (formula "47") (term "0") (ifseqformula "218"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "220"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "replace_known_left" (formula "171") (term "1") (ifseqformula "49"))
                                                    (builtin "One Step Simplification" (formula "171"))
                                                   (rule "true_left" (formula "171"))
                                                   (rule "commute_or" (formula "3") (term "0,0"))
                                                   (rule "applyEq" (formula "17") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "17"))
                                                   (rule "applyEqReverse" (formula "286") (term "1,1") (ifseqformula "17"))
                                                    (builtin "One Step Simplification" (formula "286"))
                                                   (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "17"))
                                                   (rule "hideAuxiliaryEq" (formula "17"))
                                                   (rule "commute_or" (formula "5") (term "0,0"))
                                                   (rule "applyEq" (formula "5") (term "0") (ifseqformula "16"))
                                                   (rule "close" (formula "285") (ifseqformula "5"))
                                                )
                                                (branch " resultAtPost_103_A.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "53") (term "1,0") (ifseqformula "51"))
                                                   (rule "hideAuxiliaryEq" (formula "51"))
                                                   (rule "replace_known_right" (formula "52") (term "1,0,0") (ifseqformula "220"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "220"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                   (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "61"))
                                                   (rule "hideAuxiliaryEq" (formula "61"))
                                                   (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "219"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_right" (formula "57") (term "1,0,0") (ifseqformula "219"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "219"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "57") (term "1,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "replace_known_right" (formula "173") (term "1") (ifseqformula "218"))
                                                    (builtin "One Step Simplification" (formula "173"))
                                                   (rule "commute_or" (formula "3") (term "0,0"))
                                                   (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                                   (rule "applyEqReverse" (formula "290") (term "1,1") (ifseqformula "18"))
                                                    (builtin "One Step Simplification" (formula "290"))
                                                   (rule "applyEqReverse" (formula "6") (term "1") (ifseqformula "18"))
                                                   (rule "applyEqReverse" (formula "223") (term "0") (ifseqformula "18"))
                                                   (rule "hideAuxiliaryEq" (formula "18"))
                                                   (rule "commute_or" (formula "5") (term "0,0"))
                                                   (rule "applyEq" (formula "17") (term "0") (ifseqformula "5"))
                                                   (rule "close" (formula "289") (ifseqformula "17"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: password_15_B = password_15_A FALSE"
                                        (builtin "One Step Simplification" (formula "228"))
                                       (rule "true_left" (formula "228"))
                                       (rule "nnf_imp2or" (formula "136") (term "0"))
                                       (rule "ifthenelse_split" (formula "64") (term "0"))
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "67") (term "1,0") (ifseqformula "65"))
                                          (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "65"))
                                          (rule "hideAuxiliaryEq" (formula "65"))
                                          (rule "replace_known_left" (formula "74") (term "1,0,0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "74"))
                                          (rule "applyEqReverse" (formula "237") (term "0") (ifseqformula "74"))
                                          (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "74"))
                                          (rule "hideAuxiliaryEq" (formula "74"))
                                          (rule "replace_known_left" (formula "66") (term "1,0,0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "66"))
                                          (rule "applyEqReverse" (formula "68") (term "1,0") (ifseqformula "66"))
                                          (rule "hideAuxiliaryEq" (formula "66"))
                                          (rule "replace_known_left" (formula "59") (term "1,0,0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "applyEqReverse" (formula "61") (term "1,0") (ifseqformula "59"))
                                          (rule "hideAuxiliaryEq" (formula "59"))
                                          (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "303") (term "1,1") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "62"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "302") (term "1,1") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "301") (term "1,0") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "replace_known_left" (formula "54") (term "0,0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "applyEqReverse" (formula "57") (term "1,0") (ifseqformula "54"))
                                          (rule "hideAuxiliaryEq" (formula "54"))
                                          (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "62"))
                                          (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "62"))
                                          (rule "applyEqReverse" (formula "229") (term "0") (ifseqformula "62"))
                                          (rule "hideAuxiliaryEq" (formula "62"))
                                          (rule "replace_known_left" (formula "56") (term "1,0,0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "applyEqReverse" (formula "261") (term "0") (ifseqformula "56"))
                                          (rule "applyEqReverse" (formula "221") (term "0,1") (ifseqformula "56"))
                                          (rule "hideAuxiliaryEq" (formula "56"))
                                          (rule "replace_known_left" (formula "64") (term "1,0,0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "64"))
                                          (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "64"))
                                          (rule "applyEqReverse" (formula "228") (term "0") (ifseqformula "64"))
                                          (rule "hideAuxiliaryEq" (formula "64"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "296") (term "1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "57"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "295") (term "1,1") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "226") (term "0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "eqSymm" (formula "217"))
                                          (rule "eqSymm" (formula "294") (term "0"))
                                          (rule "eqSymm" (formula "294") (term "1"))
                                          (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "225"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "224"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "257"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "replace_known_left" (formula "175") (term "1") (ifseqformula "56"))
                                           (builtin "One Step Simplification" (formula "175"))
                                          (rule "true_left" (formula "175"))
                                          (rule "seqGetAlphaCast" (formula "128") (term "0"))
                                          (rule "castedGetAny" (formula "128") (term "0"))
                                           (builtin "One Step Simplification" (formula "128"))
                                          (rule "true_left" (formula "128"))
                                          (rule "lenNonNegative" (formula "133") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "133"))
                                          (rule "seqGetAlphaCast" (formula "186") (term "0"))
                                          (rule "castedGetAny" (formula "186") (term "0"))
                                           (builtin "One Step Simplification" (formula "186"))
                                          (rule "true_left" (formula "186"))
                                          (rule "nnf_imp2or" (formula "121") (term "0"))
                                          (rule "commute_and" (formula "111") (term "0,0"))
                                          (rule "nnf_imp2or" (formula "120") (term "0"))
                                          (rule "nnf_imp2or" (formula "90") (term "0"))
                                          (rule "nnf_imp2or" (formula "91") (term "0"))
                                          (rule "commute_and" (formula "142") (term "0,0"))
                                          (rule "seqGetAlphaCast" (formula "152") (term "0"))
                                          (rule "castedGetAny" (formula "152") (term "0"))
                                           (builtin "One Step Simplification" (formula "152"))
                                          (rule "true_left" (formula "152"))
                                          (rule "seqGetAlphaCast" (formula "149") (term "0"))
                                          (rule "castedGetAny" (formula "149") (term "0"))
                                           (builtin "One Step Simplification" (formula "149"))
                                          (rule "true_left" (formula "149"))
                                          (rule "seqGetAlphaCast" (formula "105") (term "0"))
                                          (rule "castedGetAny" (formula "105") (term "0"))
                                           (builtin "One Step Simplification" (formula "105"))
                                          (rule "true_left" (formula "105"))
                                          (rule "seqGetAlphaCast" (formula "98") (term "0"))
                                          (rule "castedGetAny" (formula "98") (term "0"))
                                           (builtin "One Step Simplification" (formula "98"))
                                          (rule "true_left" (formula "98"))
                                          (rule "nnf_notAnd" (formula "99") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "99") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "99") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "99") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "99") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "99") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "99") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "99") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "99") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "99") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "99") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "99") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "99") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "1,0,0"))
                                          (rule "mul_literals" (formula "99") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "94") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "94") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "94") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "94") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "94") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "94") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "94") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "94") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0"))
                                          (rule "mul_literals" (formula "94") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "129") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "129") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "129") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "129") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "129") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "129") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "129") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "129") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "129") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "129") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "129") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "129") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "129") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "129") (term "1,0,0"))
                                          (rule "mul_literals" (formula "129") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "131") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "131") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "131") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "131") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "131") (term "1,0,0"))
                                          (rule "mul_literals" (formula "131") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "131") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "131") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "131") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "131") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "131") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "131") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "131") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "131") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "131") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "101") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "101") (term "1,0,0"))
                                          (rule "mul_literals" (formula "101") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "101") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "101") (term "1,0,0"))
                                          (rule "mul_literals" (formula "101") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "101") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "101") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "101") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "101") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "101") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "101") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "101") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "101") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "101") (term "1,0,0,0"))
                                          (rule "ifthenelse_split" (formula "13") (term "0"))
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "15") (term "1,0") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "293") (term "1,1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "292") (term "1,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "18") (term "1,0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "applyEqReverse" (formula "19") (term "1,0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "applyEqReverse" (formula "13") (term "1,0") (ifseqformula "12"))
                                             (rule "hideAuxiliaryEq" (formula "12"))
                                             (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "applyEqReverse" (formula "15") (term "1,0") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "288") (term "1,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "287") (term "1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "286") (term "1,1") (ifseqformula "13"))
                                             (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "applyEqReverse" (formula "285") (term "1,0") (ifseqformula "11"))
                                             (rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "11"))
                                             (rule "hideAuxiliaryEq" (formula "11"))
                                             (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "applyEqReverse" (formula "213") (term "0") (ifseqformula "10"))
                                             (rule "applyEqReverse" (formula "207") (term "0,1") (ifseqformula "10"))
                                             (rule "hideAuxiliaryEq" (formula "10"))
                                             (rule "eqSymm" (formula "283") (term "1"))
                                             (rule "eqSymm" (formula "283") (term "0"))
                                             (rule "eqSymm" (formula "206"))
                                             (rule "replace_known_left" (formula "283") (term "0") (ifseqformula "10"))
                                              (builtin "One Step Simplification" (formula "283") (ifInst ""  (formula "11")))
                                             (rule "closeTrue" (formula "283"))
                                          )
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "14") (term "1,0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_right" (formula "14") (term "1,0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "19") (term "1,0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_right" (formula "16") (term "1,0,0") (ifseqformula "218"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "218"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "218"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "applyEqReverse" (formula "16") (term "1,0") (ifseqformula "15"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "15"))
                                             (rule "hideAuxiliaryEq" (formula "15"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "replace_known_right" (formula "16") (term "1,0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "replace_known_right" (formula "13") (term "1,0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "210") (term "1") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "210"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "15"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "andRight" (formula "217"))
                                             (branch
                                                (rule "nnf_notAnd" (formula "119") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "119") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "119") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "119") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "119") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "119") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "119") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "119") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "119") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "119") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "119") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "1,0,0"))
                                                (rule "mul_literals" (formula "119") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "191") (term "0,0,1,0,0"))
                                                (rule "nnf_imp2or" (formula "191") (term "0,1,1,0,0"))
                                                (rule "lenNonNegative" (formula "121") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "121"))
                                                (rule "lenNonNegative" (formula "95") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "95"))
                                                (rule "lenNonNegative" (formula "98") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "98"))
                                                (rule "lenNonNegative" (formula "125") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "125"))
                                                (rule "seqGetAlphaCast" (formula "131") (term "0"))
                                                (rule "castedGetAny" (formula "131") (term "0"))
                                                 (builtin "One Step Simplification" (formula "131"))
                                                (rule "true_left" (formula "131"))
                                                (rule "nnf_imp2or" (formula "106") (term "0"))
                                                (rule "nnf_imp2or" (formula "137") (term "0"))
                                                (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                                (rule "seqGetAlphaCast" (formula "184") (term "0"))
                                                (rule "castedGetAny" (formula "184") (term "0"))
                                                 (builtin "One Step Simplification" (formula "184"))
                                                (rule "true_left" (formula "184"))
                                                (rule "nnf_notAnd" (formula "115") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "115") (term "1,0,0"))
                                                (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "115") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1,0,0"))
                                                (rule "mul_literals" (formula "115") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0"))
                                                (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0"))
                                                (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                                (rule "lenNonNegative" (formula "91") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "91"))
                                                (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                                (rule "nnf_ex2all" (formula "217"))
                                                (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "192") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "192") (term "1,0,0,1,1,1,0"))
                                                (rule "expand_inInt" (formula "192") (term "1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,0,1,1,0"))
                                                (rule "eqSymm" (formula "192") (term "0,0,1,1,0"))
                                                (rule "replace_known_left" (formula "192") (term "0,0,1,1,0") (ifseqformula "85"))
                                                 (builtin "One Step Simplification" (formula "192"))
                                                (rule "castedGetAny" (formula "192") (term "0,0,1,0,1,1,1,0"))
                                                (rule "castedGetAny" (formula "192") (term "0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,1,1,1,0"))
                                                (rule "applyEq" (formula "192") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "85"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "nnf_notAnd" (formula "107") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "107") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "107") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "107") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "0,0,0"))
                                                (rule "mul_literals" (formula "107") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "107") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "107") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "107") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "107") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "107") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "107") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "107") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "107") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "107") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "138") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "138") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "138") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "138") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "138") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "138") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "138") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "138") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "138") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "138") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "138") (term "0,0,0"))
                                                (rule "mul_literals" (formula "138") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "138") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "0,0,0"))
                                                (rule "mul_literals" (formula "138") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "117") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "117") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "117") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "117") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "117") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "117") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "117") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "117") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "117") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "117") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "117") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "87") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "87") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "87") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "87") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "87") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "87") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "87") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "87") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "87") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "192") (term "0,0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "192") (term "0,0,1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "192") (term "0,0,1,1,0"))
                                                (rule "nnf_imp2or" (formula "192") (term "0,1,1,1,0"))
                                                (rule "commute_or_2" (formula "95") (term "0"))
                                                (rule "commute_or_2" (formula "90") (term "0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "125") (term "0"))
                                                (rule "commute_or_2" (formula "127") (term "0"))
                                                (rule "commute_or_2" (formula "97") (term "0"))
                                                (rule "commute_or" (formula "3") (term "0,0"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "17"))
                                                (rule "applyEqReverse" (formula "289") (term "1,1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "289"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "nnf_notAnd" (formula "191") (term "0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "191") (term "0,0,1,1,1,0"))
                                                (rule "nnf_notAnd" (formula "191") (term "0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "191") (term "1,0,0,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "191") (term "1,0,0,1,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "0,1,0,0,1,0,0,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "191") (term "0,0,1,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,0,1,0,0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "191") (term "0,0,1,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "191") (term "1,0,0,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "191") (term "1,1,0,0,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "191") (term "1,1,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "191") (term "0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "191") (term "0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,0,0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "191") (term "1,0,0,0,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "191") (term "0,1,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,0,1,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,0,1,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "191") (term "0,1,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,1,0,0,0,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "191") (term "1,1,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,1,1,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,1,1,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "191") (term "1,1,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,1,1,0,0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "191") (term "1,0,0,1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "191") (term "0,1,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,0,1,0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,0,1,0,0,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "191") (term "0,1,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,1,0,0,1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "191") (term "1,1,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,1,1,0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,1,1,0,0,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "191") (term "1,1,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,1,1,0,0,1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "191") (term "0,0,0,1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "191") (term "1,0,0,0,1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "191") (term "1,0,0,1,0,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "0,1,0,0,1,0,0,0,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "191") (term "0,0,1,0,0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,0,1,0,0,0,1,1,0,0"))
                                                (rule "add_zero_left" (formula "191") (term "0,0,1,0,0,0,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "191") (term "1,0,0,0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "191") (term "1,1,0,0,0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "191") (term "1,1,0,0,0,1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "191") (term "0,0,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,0,0,0,0,1,1,0,0"))
                                                (rule "add_zero_right" (formula "191") (term "0,0,0,0,0,0,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "191") (term "0,0,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,0,0,1,1,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "15"))
                                                (rule "close" (formula "288") (ifseqformula "3"))
                                             )
                                             (branch
                                                (rule "nnf_notAnd" (formula "119") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "119") (term "1,0,0"))
                                                (rule "mul_literals" (formula "119") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "119") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "1,0,0"))
                                                (rule "mul_literals" (formula "119") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "119") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "119") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "119") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "119") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "119") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "119") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "119") (term "1,0,0,0"))
                                                (rule "nnf_imp2or" (formula "191") (term "0,0,1,0,0"))
                                                (rule "nnf_imp2or" (formula "191") (term "0,1,1,0,0"))
                                                (rule "lenNonNegative" (formula "121") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "121"))
                                                (rule "lenNonNegative" (formula "95") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "95"))
                                                (rule "lenNonNegative" (formula "98") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "98"))
                                                (rule "lenNonNegative" (formula "125") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "125"))
                                                (rule "seqGetAlphaCast" (formula "131") (term "0"))
                                                (rule "castedGetAny" (formula "131") (term "0"))
                                                 (builtin "One Step Simplification" (formula "131"))
                                                (rule "true_left" (formula "131"))
                                                (rule "nnf_imp2or" (formula "106") (term "0"))
                                                (rule "nnf_imp2or" (formula "137") (term "0"))
                                                (rule "seqGetAlphaCast" (formula "184") (term "0"))
                                                (rule "castedGetAny" (formula "184") (term "0"))
                                                 (builtin "One Step Simplification" (formula "184"))
                                                (rule "true_left" (formula "184"))
                                                (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "115") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "115") (term "1,0,0"))
                                                (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "115") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1,0,0"))
                                                (rule "mul_literals" (formula "115") (term "1,1,0,0"))
                                                (rule "lenNonNegative" (formula "91") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "91"))
                                                (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0"))
                                                (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0"))
                                                (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                                (rule "nnf_ex2all" (formula "217"))
                                                (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "192") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "192") (term "1,0,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "192") (term "1,0,0,1,1,1,0"))
                                                (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,1,1,0"))
                                                (rule "eqSymm" (formula "192") (term "0,0,1,1,0"))
                                                (rule "replace_known_left" (formula "192") (term "0,0,1,1,0") (ifseqformula "85"))
                                                 (builtin "One Step Simplification" (formula "192"))
                                                (rule "castedGetAny" (formula "192") (term "0,0,1,0,0,1,1,0"))
                                                (rule "castedGetAny" (formula "192") (term "0,0,1,0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,0,1,1,0"))
                                                (rule "applyEq" (formula "192") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "85"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "nnf_notAnd" (formula "107") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "107") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "107") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "107") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "107") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "107") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "107") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "107") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "107") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "107") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "107") (term "0,0,0"))
                                                (rule "mul_literals" (formula "107") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "107") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "0,0,0"))
                                                (rule "mul_literals" (formula "107") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "138") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "138") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "138") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "138") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "0,0,0"))
                                                (rule "mul_literals" (formula "138") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "138") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "138") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "138") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "138") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "138") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "138") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "138") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "138") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "138") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "117") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "117") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "117") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "117") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "117") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "117") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "117") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "117") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "117") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "117") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "117") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "86") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "87") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "87") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "87") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "87") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "87") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "87") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "87") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "87") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "192") (term "0,0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "192") (term "0,0,1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "192") (term "0,0,1,1,0"))
                                                (rule "nnf_imp2or" (formula "192") (term "0,1,1,1,0"))
                                                (rule "commute_or_2" (formula "95") (term "0"))
                                                (rule "commute_or_2" (formula "90") (term "0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "125") (term "0"))
                                                (rule "commute_or_2" (formula "127") (term "0"))
                                                (rule "commute_or_2" (formula "97") (term "0"))
                                                (rule "commute_or" (formula "3") (term "0,0"))
                                                (rule "applyEq" (formula "17") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "17"))
                                                (rule "applyEqReverse" (formula "289") (term "1,1") (ifseqformula "17"))
                                                 (builtin "One Step Simplification" (formula "289"))
                                                (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "17"))
                                                (rule "hideAuxiliaryEq" (formula "17"))
                                                (rule "nnf_notAnd" (formula "191") (term "0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "191") (term "0,0,1,1,1,0"))
                                                (rule "nnf_notAnd" (formula "191") (term "1,0,0,0,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "191") (term "0,1,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,0,1,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,0,1,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "191") (term "0,1,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,1,0,0,0,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "191") (term "1,1,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,1,1,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,1,1,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "191") (term "1,1,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,1,1,0,0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "191") (term "0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "191") (term "1,0,0,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "191") (term "1,0,0,1,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "0,1,0,0,1,0,0,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "191") (term "0,0,1,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,0,1,0,0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "191") (term "0,0,1,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "191") (term "1,0,0,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "191") (term "1,1,0,0,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "191") (term "1,1,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "191") (term "0,0,0,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "191") (term "1,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "191") (term "0,0,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "191") (term "0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,0,0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "191") (term "0,0,0,1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "191") (term "1,0,0,0,1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "191") (term "1,0,0,1,0,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "0,1,0,0,1,0,0,0,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "191") (term "0,0,1,0,0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,0,1,0,0,0,1,1,0,0"))
                                                (rule "add_zero_left" (formula "191") (term "0,0,1,0,0,0,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "191") (term "1,0,0,0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "191") (term "1,1,0,0,0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "191") (term "1,1,0,0,0,1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "191") (term "0,0,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,0,0,0,0,1,1,0,0"))
                                                (rule "add_zero_right" (formula "191") (term "0,0,0,0,0,0,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "191") (term "0,0,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,0,0,1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "191") (term "1,0,0,1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "191") (term "0,1,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,0,1,0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,0,1,0,0,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "191") (term "0,1,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,1,0,0,1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "191") (term "1,1,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,0,0,1,1,0,0,1,1,0,0"))
                                                (rule "add_literals" (formula "191") (term "0,0,1,1,0,0,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "191") (term "1,1,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "191") (term "1,1,1,0,0,1,1,0,0"))
                                                (rule "commute_or" (formula "4") (term "0,0"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "16"))
                                                (rule "close" (formula "288") (ifseqformula "4"))
                                             )
                                          )
                                       )
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "64"))
                                          (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "64"))
                                          (rule "hideAuxiliaryEq" (formula "64"))
                                          (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "232"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "71") (term "1,0") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_right" (formula "66") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "66"))
                                          (rule "replace_known_right" (formula "60") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "replace_known_right" (formula "70") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "70"))
                                          (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_right" (formula "58") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "replace_known_right" (formula "56") (term "0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "applyEqReverse" (formula "58") (term "1,0") (ifseqformula "56"))
                                          (rule "hideAuxiliaryEq" (formula "56"))
                                          (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "230"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "replace_known_right" (formula "71") (term "1,0,0") (ifseqformula "230"))
                                           (builtin "One Step Simplification" (formula "71"))
                                          (rule "replace_known_right" (formula "184") (term "1") (ifseqformula "230"))
                                           (builtin "One Step Simplification" (formula "184"))
                                          (rule "applyEq" (formula "5") (term "0") (ifseqformula "69"))
                                          (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "62"))
                                          (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "seqGetAlphaCast" (formula "135") (term "0"))
                                          (rule "castedGetAny" (formula "135") (term "0"))
                                           (builtin "One Step Simplification" (formula "135"))
                                          (rule "true_left" (formula "135"))
                                          (rule "lenNonNegative" (formula "140") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "140"))
                                          (rule "seqGetAlphaCast" (formula "194") (term "0"))
                                          (rule "castedGetAny" (formula "194") (term "0"))
                                           (builtin "One Step Simplification" (formula "194"))
                                          (rule "true_left" (formula "194"))
                                          (rule "nnf_imp2or" (formula "128") (term "0"))
                                          (rule "commute_and" (formula "118") (term "0,0"))
                                          (rule "nnf_imp2or" (formula "127") (term "0"))
                                          (rule "nnf_imp2or" (formula "97") (term "0"))
                                          (rule "nnf_imp2or" (formula "98") (term "0"))
                                          (rule "commute_and" (formula "149") (term "0,0"))
                                          (rule "seqGetAlphaCast" (formula "159") (term "0"))
                                          (rule "castedGetAny" (formula "159") (term "0"))
                                           (builtin "One Step Simplification" (formula "159"))
                                          (rule "true_left" (formula "159"))
                                          (rule "seqGetAlphaCast" (formula "156") (term "0"))
                                          (rule "castedGetAny" (formula "156") (term "0"))
                                           (builtin "One Step Simplification" (formula "156"))
                                          (rule "true_left" (formula "156"))
                                          (rule "seqGetAlphaCast" (formula "112") (term "0"))
                                          (rule "castedGetAny" (formula "112") (term "0"))
                                           (builtin "One Step Simplification" (formula "112"))
                                          (rule "true_left" (formula "112"))
                                          (rule "seqGetAlphaCast" (formula "105") (term "0"))
                                          (rule "castedGetAny" (formula "105") (term "0"))
                                           (builtin "One Step Simplification" (formula "105"))
                                          (rule "true_left" (formula "105"))
                                          (rule "nnf_notAnd" (formula "106") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "106") (term "1,0,0"))
                                          (rule "mul_literals" (formula "106") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "106") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "106") (term "1,0,0"))
                                          (rule "mul_literals" (formula "106") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "106") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "106") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "106") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "106") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "106") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "106") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "106") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "106") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "106") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "101") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "101") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "101") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "101") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "101") (term "1,0,0"))
                                          (rule "mul_literals" (formula "101") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "101") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "101") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "101") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "101") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "101") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "101") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "101") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "101") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "101") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "136") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "136") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "136") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "136") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "136") (term "1,0,0"))
                                          (rule "mul_literals" (formula "136") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "136") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "136") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "136") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "136") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "136") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "136") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "136") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "136") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "136") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "138") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "138") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "138") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "138") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "138") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "138") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "138") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "138") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "138") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "138") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "138") (term "1,0,0"))
                                          (rule "mul_literals" (formula "138") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "138") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "1,0,0"))
                                          (rule "mul_literals" (formula "138") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "108") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "108") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "108") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "108") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "108") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "108") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "108") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "108") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "108") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "108") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "108") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "108") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "108") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "108") (term "1,0,0"))
                                          (rule "mul_literals" (formula "108") (term "1,1,0,0"))
                                          (rule "ifthenelse_split" (formula "15") (term "0"))
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "replace_known_left" (formula "22") (term "1,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                                             (rule "hideAuxiliaryEq" (formula "22"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "17"))
                                             (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "replace_known_left" (formula "17") (term "1,0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "replace_known_left" (formula "15") (term "1,0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "applyEqReverse" (formula "16") (term "1,0") (ifseqformula "15"))
                                             (rule "hideAuxiliaryEq" (formula "15"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "297") (term "0,1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "applyEqReverse" (formula "218") (term "0,0") (ifseqformula "14"))
                                             (rule "applyEqReverse" (formula "225") (term "0") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_left" (formula "16") (term "1,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "applyEqReverse" (formula "226") (term "0") (ifseqformula "16"))
                                             (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "294") (term "0,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "293") (term "0,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "13"))
                                             (rule "applyEqReverse" (formula "223") (term "0") (ifseqformula "13"))
                                             (rule "applyEqReverse" (formula "292") (term "0,1") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "applyEqReverse" (formula "221") (term "0") (ifseqformula "12"))
                                             (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "12"))
                                             (rule "hideAuxiliaryEq" (formula "12"))
                                             (rule "replace_known_left" (formula "209") (term "1") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "209"))
                                             (rule "true_left" (formula "209"))
                                             (rule "andRight" (formula "217"))
                                             (branch
                                                (rule "nnf_notAnd" (formula "119") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "119") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "119") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "119") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "119") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "119") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "119") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "119") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "119") (term "1,0,0"))
                                                (rule "mul_literals" (formula "119") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "119") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "1,0,0"))
                                                (rule "mul_literals" (formula "119") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "192") (term "0,0,1,0,0"))
                                                (rule "nnf_imp2or" (formula "192") (term "0,1,1,0,0"))
                                                (rule "lenNonNegative" (formula "121") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "121"))
                                                (rule "lenNonNegative" (formula "95") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "95"))
                                                (rule "lenNonNegative" (formula "98") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "98"))
                                                (rule "nnf_imp2or" (formula "106") (term "0"))
                                                (rule "nnf_imp2or" (formula "137") (term "0"))
                                                (rule "lenNonNegative" (formula "125") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "125"))
                                                (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "115") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "115") (term "1,0,0"))
                                                (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "115") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1,0,0"))
                                                (rule "mul_literals" (formula "115") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0"))
                                                (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0"))
                                                (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                                (rule "seqGetAlphaCast" (formula "131") (term "0"))
                                                (rule "castedGetAny" (formula "131") (term "0"))
                                                 (builtin "One Step Simplification" (formula "131"))
                                                (rule "true_left" (formula "131"))
                                                (rule "seqGetAlphaCast" (formula "185") (term "0"))
                                                (rule "castedGetAny" (formula "185") (term "0"))
                                                 (builtin "One Step Simplification" (formula "185"))
                                                (rule "true_left" (formula "185"))
                                                (rule "lenNonNegative" (formula "91") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "91"))
                                                (rule "nnf_ex2all" (formula "217"))
                                                (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "193") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "193") (term "1,0,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "193") (term "1,0,0,1,1,1,0"))
                                                (rule "replace_int_MIN" (formula "193") (term "0,1,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MAX" (formula "193") (term "1,0,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MAX" (formula "193") (term "1,0,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MIN" (formula "193") (term "0,1,1,0,0,1,1,1,0"))
                                                (rule "eqSymm" (formula "193") (term "0,0,1,1,0"))
                                                (rule "replace_known_left" (formula "193") (term "0,0,1,1,0") (ifseqformula "85"))
                                                 (builtin "One Step Simplification" (formula "193"))
                                                (rule "castedGetAny" (formula "193") (term "0,0,1,0,0,1,1,0"))
                                                (rule "castedGetAny" (formula "193") (term "0,0,1,0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "193") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "193") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "193") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "193") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "193") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "193") (term "0,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "193") (term "1,1,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "193") (term "1,1,0,0,0,1,1,0"))
                                                (rule "applyEq" (formula "193") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "85"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "193") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "193") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "193") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "193") (term "0,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "193") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "193") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "193") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "193") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "193") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "mul_literals" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "193") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "193") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "nnf_notAnd" (formula "107") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "107") (term "0,0,0"))
                                                (rule "mul_literals" (formula "107") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "107") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "0,0,0"))
                                                (rule "mul_literals" (formula "107") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "107") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "107") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "107") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "107") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "107") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "107") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "107") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "107") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "107") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "138") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "138") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "138") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "138") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "138") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "138") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "138") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "138") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "138") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "138") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "138") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "138") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "138") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "0,0,0"))
                                                (rule "mul_literals" (formula "138") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "117") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "117") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "117") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "117") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "117") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "117") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "117") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "117") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "117") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "117") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "86") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                (rule "nnf_notAnd" (formula "87") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "87") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "87") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "87") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "87") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "87") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "87") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "87") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "1,1,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "58"))
                                                (rule "applyEqReverse" (formula "289") (term "1,1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "289"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "commute_or" (formula "2") (term "0,0"))
                                                (rule "applyEq" (formula "51") (term "0") (ifseqformula "2"))
                                                (rule "eqSymm" (formula "51"))
                                                (rule "close" (formula "288") (ifseqformula "51"))
                                             )
                                             (branch
                                                (rule "nnf_notAnd" (formula "119") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "119") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "119") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "119") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "119") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "119") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "119") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "119") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "119") (term "1,0,0"))
                                                (rule "mul_literals" (formula "119") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "119") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "1,0,0"))
                                                (rule "mul_literals" (formula "119") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "192") (term "0,0,1,0,0"))
                                                (rule "nnf_imp2or" (formula "192") (term "0,1,1,0,0"))
                                                (rule "lenNonNegative" (formula "121") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "121"))
                                                (rule "lenNonNegative" (formula "95") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "95"))
                                                (rule "lenNonNegative" (formula "98") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "98"))
                                                (rule "nnf_imp2or" (formula "106") (term "0"))
                                                (rule "nnf_imp2or" (formula "137") (term "0"))
                                                (rule "lenNonNegative" (formula "125") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "125"))
                                                (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "115") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "115") (term "1,0,0"))
                                                (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "115") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1,0,0"))
                                                (rule "mul_literals" (formula "115") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0"))
                                                (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0"))
                                                (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                                (rule "seqGetAlphaCast" (formula "131") (term "0"))
                                                (rule "castedGetAny" (formula "131") (term "0"))
                                                 (builtin "One Step Simplification" (formula "131"))
                                                (rule "true_left" (formula "131"))
                                                (rule "seqGetAlphaCast" (formula "185") (term "0"))
                                                (rule "castedGetAny" (formula "185") (term "0"))
                                                 (builtin "One Step Simplification" (formula "185"))
                                                (rule "true_left" (formula "185"))
                                                (rule "lenNonNegative" (formula "91") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "91"))
                                                (rule "nnf_ex2all" (formula "217"))
                                                (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "193") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "193") (term "1,0,0,1,1,1,0"))
                                                (rule "expand_inInt" (formula "193") (term "1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MAX" (formula "193") (term "1,0,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MIN" (formula "193") (term "0,1,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MAX" (formula "193") (term "1,0,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MIN" (formula "193") (term "0,1,1,0,0,1,0,1,1,0"))
                                                (rule "eqSymm" (formula "193") (term "0,0,1,1,0"))
                                                (rule "replace_known_left" (formula "193") (term "0,0,1,1,0") (ifseqformula "85"))
                                                 (builtin "One Step Simplification" (formula "193"))
                                                (rule "castedGetAny" (formula "193") (term "0,0,1,0,1,1,1,0"))
                                                (rule "castedGetAny" (formula "193") (term "0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "193") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "193") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "193") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "193") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "193") (term "1,1,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "193") (term "1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "193") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "193") (term "0,0,0,0,1,1,1,0"))
                                                (rule "applyEq" (formula "193") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "85"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "193") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "193") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "193") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "193") (term "0,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "193") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "193") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "193") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "193") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "193") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "mul_literals" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "193") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "193") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "nnf_notAnd" (formula "107") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "107") (term "0,0,0"))
                                                (rule "mul_literals" (formula "107") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "107") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "0,0,0"))
                                                (rule "mul_literals" (formula "107") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "107") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "107") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "107") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "107") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "107") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "107") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "107") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "107") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "107") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "138") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "138") (term "0,0,0"))
                                                (rule "mul_literals" (formula "138") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "138") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "0,0,0"))
                                                (rule "mul_literals" (formula "138") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "138") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "138") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "138") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "138") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "138") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "138") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "138") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "138") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "138") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "117") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "117") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "117") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "117") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "117") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "117") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "117") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "117") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "117") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "117") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "117") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "116") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                (rule "nnf_notAnd" (formula "87") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "87") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "87") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "87") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "87") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "87") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "87") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "87") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "87") (term "1,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "2"))
                                                (rule "eqSymm" (formula "58"))
                                                (rule "applyEqReverse" (formula "289") (term "1,1") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "289"))
                                                (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "58"))
                                                (rule "hideAuxiliaryEq" (formula "58"))
                                                (rule "commute_or" (formula "3") (term "0,0"))
                                                (rule "applyEq" (formula "52") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "52"))
                                                (rule "close" (formula "288") (ifseqformula "52"))
                                             )
                                          )
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "16") (term "1,0") (ifseqformula "15"))
                                             (rule "hideAuxiliaryEq" (formula "15"))
                                             (rule "replace_known_right" (formula "15") (term "1,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "replace_known_right" (formula "22") (term "1,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "replace_known_right" (formula "19") (term "1,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "replace_known_right" (formula "16") (term "1,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "226"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "226"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "17"))
                                             (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "replace_known_right" (formula "218") (term "1") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "218"))
                                             (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "andRight" (formula "226"))
                                             (branch
                                                (rule "nnf_notAnd" (formula "126") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "126") (term "1,0,0"))
                                                (rule "mul_literals" (formula "126") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "126") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0,0"))
                                                (rule "mul_literals" (formula "126") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "126") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "126") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "126") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "126") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "126") (term "1,0,0,0"))
                                                (rule "nnf_imp2or" (formula "199") (term "0,0,1,0,0"))
                                                (rule "nnf_imp2or" (formula "199") (term "0,1,1,0,0"))
                                                (rule "lenNonNegative" (formula "128") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "128"))
                                                (rule "lenNonNegative" (formula "102") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "102"))
                                                (rule "lenNonNegative" (formula "105") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "105"))
                                                (rule "nnf_imp2or" (formula "113") (term "0"))
                                                (rule "lenNonNegative" (formula "132") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "132"))
                                                (rule "nnf_imp2or" (formula "144") (term "0"))
                                                (rule "nnf_notAnd" (formula "123") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "123") (term "1,0,0"))
                                                (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "123") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "1,0,0"))
                                                (rule "mul_literals" (formula "123") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "122") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "122") (term "1,0,0"))
                                                (rule "mul_literals" (formula "122") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "122") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "122") (term "1,0,0"))
                                                (rule "mul_literals" (formula "122") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "92") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "92") (term "1,0,0"))
                                                (rule "mul_literals" (formula "92") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "92") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "92") (term "1,0,0"))
                                                (rule "mul_literals" (formula "92") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "93") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "93") (term "1,0,0"))
                                                (rule "mul_literals" (formula "93") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "93") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "1,0,0"))
                                                (rule "mul_literals" (formula "93") (term "1,1,0,0"))
                                                (rule "seqGetAlphaCast" (formula "138") (term "0"))
                                                (rule "castedGetAny" (formula "138") (term "0"))
                                                 (builtin "One Step Simplification" (formula "138"))
                                                (rule "true_left" (formula "138"))
                                                (rule "seqGetAlphaCast" (formula "192") (term "0"))
                                                (rule "castedGetAny" (formula "192") (term "0"))
                                                 (builtin "One Step Simplification" (formula "192"))
                                                (rule "true_left" (formula "192"))
                                                (rule "lenNonNegative" (formula "98") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "98"))
                                                (rule "nnf_ex2all" (formula "226"))
                                                (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "200") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "200") (term "1,0,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "200") (term "1,0,0,1,1,1,0"))
                                                (rule "replace_int_MIN" (formula "200") (term "0,1,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MAX" (formula "200") (term "1,0,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MIN" (formula "200") (term "0,1,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MAX" (formula "200") (term "1,0,1,0,0,1,1,1,0"))
                                                (rule "eqSymm" (formula "200") (term "0,0,1,1,0"))
                                                (rule "replace_known_left" (formula "200") (term "0,0,1,1,0") (ifseqformula "92"))
                                                 (builtin "One Step Simplification" (formula "200"))
                                                (rule "castedGetAny" (formula "200") (term "0,0,1,0,1,1,1,0"))
                                                (rule "castedGetAny" (formula "200") (term "0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "200") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "200") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "200") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "200") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "200") (term "0,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "200") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "200") (term "1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "200") (term "1,1,0,0,1,1,1,0"))
                                                (rule "applyEq" (formula "200") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "92"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "200") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "200") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "200") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "200") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "200") (term "0,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "200") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "200") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "200") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "200") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "mul_literals" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "200") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "200") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "nnf_notAnd" (formula "114") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "114") (term "0,0,0"))
                                                (rule "mul_literals" (formula "114") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "114") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "114") (term "0,0,0"))
                                                (rule "mul_literals" (formula "114") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "114") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "114") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "114") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "114") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "114") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "114") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "114") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "114") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "114") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "145") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "145") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "145") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "145") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "145") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "145") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "145") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "145") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "145") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "145") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "145") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "145") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "145") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "145") (term "0,0,0"))
                                                (rule "mul_literals" (formula "145") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "124") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "124") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "124") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "124") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "124") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "124") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "124") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "124") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "124") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "124") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "124") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "124") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "123") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "123") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "123") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "123") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "123") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "123") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "123") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "123") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "123") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "123") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "123") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "123") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "123") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "93") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "93") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "93") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "93") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "93") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "93") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "93") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "93") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "93") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "93") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "93") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "93") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                (rule "nnf_notAnd" (formula "94") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "94") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "94") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "94") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "94") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "94") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "94") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "94") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "94") (term "1,0,0,0,0"))
                                                (rule "commute_or" (formula "6") (term "0,0"))
                                                (rule "applyEq" (formula "6") (term "0") (ifseqformula "65"))
                                                (rule "applyEqReverse" (formula "298") (term "1,1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "commute_or" (formula "6") (term "0,0"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "6"))
                                                (rule "applyEqReverse" (formula "227") (term "0") (ifseqformula "58"))
                                                (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "58"))
                                                (rule "hideAuxiliaryEq" (formula "58"))
                                                (rule "nnf_notAnd" (formula "198") (term "0,0,1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "198") (term "0,0,0,1,0,0"))
                                                (rule "nnf_imp2or" (formula "198") (term "0,0,1,1,0"))
                                                (rule "nnf_imp2or" (formula "198") (term "0,1,1,1,0"))
                                                (rule "commute_or_2" (formula "100") (term "0"))
                                                (rule "commute_or_2" (formula "95") (term "0"))
                                                (rule "commute_or_2" (formula "130") (term "0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "132") (term "0"))
                                                (rule "commute_or_2" (formula "102") (term "0"))
                                                (rule "ifthenelse_split" (formula "61") (term "0"))
                                                (branch " resultAtPost_103_A.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "62"))
                                                   (rule "hideAuxiliaryEq" (formula "62"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "296") (term "1,0") (ifseqformula "6"))
                                                   (rule "applyEqReverse" (formula "226") (term "0") (ifseqformula "6"))
                                                   (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "51") (term "1,0,0") (ifseqformula "60"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "applyEqReverse" (formula "217") (term "0,1") (ifseqformula "51"))
                                                   (rule "applyEqReverse" (formula "258") (term "0") (ifseqformula "51"))
                                                   (rule "hideAuxiliaryEq" (formula "51"))
                                                   (rule "replace_known_left" (formula "49") (term "0,0") (ifseqformula "59"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "applyEqReverse" (formula "216") (term "0,1") (ifseqformula "49"))
                                                   (rule "applyEqReverse" (formula "257") (term "0") (ifseqformula "49"))
                                                   (rule "hideAuxiliaryEq" (formula "49"))
                                                   (rule "replace_known_left" (formula "60") (term "1,0,0") (ifseqformula "58"))
                                                    (builtin "One Step Simplification" (formula "60"))
                                                   (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "60"))
                                                   (rule "applyEqReverse" (formula "224") (term "0") (ifseqformula "60"))
                                                   (rule "applyEqReverse" (formula "293") (term "1,1") (ifseqformula "60"))
                                                   (rule "hideAuxiliaryEq" (formula "60"))
                                                   (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "58"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEqReverse" (formula "292") (term "1,0") (ifseqformula "53"))
                                                   (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "53"))
                                                   (rule "applyEqReverse" (formula "222") (term "0") (ifseqformula "53"))
                                                   (rule "hideAuxiliaryEq" (formula "53"))
                                                   (rule "eqSymm" (formula "213"))
                                                   (rule "eqSymm" (formula "291") (term "1"))
                                                   (rule "eqSymm" (formula "291") (term "0"))
                                                   (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "222"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "221"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_right" (formula "47") (term "0") (ifseqformula "254"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "replace_known_left" (formula "171") (term "1") (ifseqformula "57"))
                                                    (builtin "One Step Simplification" (formula "171"))
                                                   (rule "true_left" (formula "171"))
                                                   (rule "commute_or" (formula "3") (term "0,0"))
                                                   (rule "applyEq" (formula "17") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "17"))
                                                   (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "17"))
                                                   (rule "applyEqReverse" (formula "290") (term "1,1") (ifseqformula "17"))
                                                    (builtin "One Step Simplification" (formula "290"))
                                                   (rule "hideAuxiliaryEq" (formula "17"))
                                                   (rule "commute_or" (formula "5") (term "0,0"))
                                                   (rule "applyEq" (formula "16") (term "0") (ifseqformula "5"))
                                                   (rule "eqSymm" (formula "16"))
                                                   (rule "close" (formula "289") (ifseqformula "16"))
                                                )
                                                (branch " resultAtPost_103_A.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "61"))
                                                   (rule "hideAuxiliaryEq" (formula "61"))
                                                   (rule "replace_known_right" (formula "50") (term "0,0") (ifseqformula "221"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "50"))
                                                   (rule "hideAuxiliaryEq" (formula "50"))
                                                   (rule "replace_known_right" (formula "61") (term "1,0,0") (ifseqformula "220"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                   (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "220"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_right" (formula "55") (term "0,0") (ifseqformula "220"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "55"))
                                                   (rule "hideAuxiliaryEq" (formula "55"))
                                                   (rule "replace_known_right" (formula "51") (term "1,0,0") (ifseqformula "219"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_right" (formula "173") (term "1") (ifseqformula "219"))
                                                    (builtin "One Step Simplification" (formula "173"))
                                                   (rule "commute_or" (formula "3") (term "0,0"))
                                                   (rule "applyEq" (formula "3") (term "0") (ifseqformula "18"))
                                                   (rule "applyEqReverse" (formula "294") (term "0,1") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "294"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "commute_or" (formula "4") (term "0,0"))
                                                   (rule "applyEq" (formula "16") (term "0") (ifseqformula "4"))
                                                   (rule "close" (formula "293") (ifseqformula "16"))
                                                )
                                             )
                                             (branch
                                                (rule "nnf_notAnd" (formula "126") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "126") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "126") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "126") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0,0"))
                                                (rule "mul_literals" (formula "126") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "126") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "126") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "126") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "126") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "126") (term "1,0,0,0"))
                                                (rule "nnf_imp2or" (formula "199") (term "0,0,1,0,0"))
                                                (rule "nnf_imp2or" (formula "199") (term "0,1,1,0,0"))
                                                (rule "lenNonNegative" (formula "128") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "128"))
                                                (rule "lenNonNegative" (formula "102") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "102"))
                                                (rule "lenNonNegative" (formula "105") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "105"))
                                                (rule "nnf_imp2or" (formula "113") (term "0"))
                                                (rule "nnf_imp2or" (formula "144") (term "0"))
                                                (rule "lenNonNegative" (formula "132") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "132"))
                                                (rule "nnf_notAnd" (formula "123") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "123") (term "1,0,0"))
                                                (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "123") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "1,0,0"))
                                                (rule "mul_literals" (formula "123") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "122") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "122") (term "1,0,0"))
                                                (rule "mul_literals" (formula "122") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "122") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "122") (term "1,0,0"))
                                                (rule "mul_literals" (formula "122") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "92") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "92") (term "1,0,0"))
                                                (rule "mul_literals" (formula "92") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "92") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "92") (term "1,0,0"))
                                                (rule "mul_literals" (formula "92") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "93") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "93") (term "1,0,0"))
                                                (rule "mul_literals" (formula "93") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "93") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "1,0,0"))
                                                (rule "mul_literals" (formula "93") (term "1,1,0,0"))
                                                (rule "seqGetAlphaCast" (formula "138") (term "0"))
                                                (rule "castedGetAny" (formula "138") (term "0"))
                                                 (builtin "One Step Simplification" (formula "138"))
                                                (rule "true_left" (formula "138"))
                                                (rule "seqGetAlphaCast" (formula "192") (term "0"))
                                                (rule "castedGetAny" (formula "192") (term "0"))
                                                 (builtin "One Step Simplification" (formula "192"))
                                                (rule "true_left" (formula "192"))
                                                (rule "lenNonNegative" (formula "98") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "98"))
                                                (rule "nnf_ex2all" (formula "226"))
                                                (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "200") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "200") (term "1,0,0,1,1,1,0"))
                                                (rule "expand_inInt" (formula "200") (term "1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MIN" (formula "200") (term "0,1,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MAX" (formula "200") (term "1,0,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MIN" (formula "200") (term "0,1,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MAX" (formula "200") (term "1,0,1,0,0,1,0,1,1,0"))
                                                (rule "eqSymm" (formula "200") (term "0,0,1,1,0"))
                                                (rule "replace_known_left" (formula "200") (term "0,0,1,1,0") (ifseqformula "92"))
                                                 (builtin "One Step Simplification" (formula "200"))
                                                (rule "castedGetAny" (formula "200") (term "0,0,1,0,0,1,1,0"))
                                                (rule "castedGetAny" (formula "200") (term "0,0,1,0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "200") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "200") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "200") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "200") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "200") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "200") (term "1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "200") (term "0,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "200") (term "1,1,0,0,1,1,1,0"))
                                                (rule "applyEq" (formula "200") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "92"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "200") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "200") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "200") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "200") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "200") (term "0,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "200") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "200") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "200") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "200") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "mul_literals" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "200") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "200") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "nnf_notAnd" (formula "114") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "114") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "114") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "114") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "114") (term "0,0,0"))
                                                (rule "mul_literals" (formula "114") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "114") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "114") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "114") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "114") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "114") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "114") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "114") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "114") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "114") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "145") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "145") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "145") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "145") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "145") (term "0,0,0"))
                                                (rule "mul_literals" (formula "145") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "145") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "145") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "145") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "145") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "145") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "145") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "145") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "145") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "145") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "124") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "124") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "124") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "124") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "124") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "124") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "124") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "124") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "124") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "124") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "124") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "124") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "123") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "123") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "123") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "123") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "123") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "123") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "123") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "123") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "123") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "123") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "123") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "123") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "123") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "93") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "93") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "93") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "93") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "93") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "93") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "93") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "93") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "93") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "93") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "93") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "93") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                (rule "nnf_notAnd" (formula "94") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "94") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "94") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "94") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "94") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "94") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "94") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "94") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "94") (term "1,1,0,0,0"))
                                                (rule "commute_or" (formula "6") (term "0,0"))
                                                (rule "applyEq" (formula "65") (term "0") (ifseqformula "6"))
                                                (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "65"))
                                                (rule "applyEqReverse" (formula "229") (term "0") (ifseqformula "65"))
                                                (rule "hideAuxiliaryEq" (formula "65"))
                                                (rule "commute_or" (formula "7") (term "0,0"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "7"))
                                                (rule "applyEqReverse" (formula "227") (term "0") (ifseqformula "59"))
                                                (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "59"))
                                                (rule "hideAuxiliaryEq" (formula "59"))
                                                (rule "nnf_notAnd" (formula "198") (term "0,0,1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "198") (term "0,0,0,1,0,0"))
                                                (rule "nnf_imp2or" (formula "198") (term "0,0,1,1,0"))
                                                (rule "nnf_imp2or" (formula "198") (term "0,1,1,1,0"))
                                                (rule "commute_or_2" (formula "100") (term "0"))
                                                (rule "commute_or_2" (formula "95") (term "0"))
                                                (rule "commute_or_2" (formula "130") (term "0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "132") (term "0"))
                                                (rule "commute_or_2" (formula "102") (term "0"))
                                                (rule "ifthenelse_split" (formula "62") (term "0"))
                                                (branch " resultAtPost_103_A.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "63"))
                                                   (rule "hideAuxiliaryEq" (formula "63"))
                                                   (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "57"))
                                                   (rule "hideAuxiliaryEq" (formula "57"))
                                                   (rule "replace_known_left" (formula "53") (term "1,0,0") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEqReverse" (formula "258") (term "0") (ifseqformula "53"))
                                                   (rule "applyEqReverse" (formula "217") (term "0,1") (ifseqformula "53"))
                                                   (rule "hideAuxiliaryEq" (formula "53"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "60"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "7"))
                                                   (rule "applyEqReverse" (formula "224") (term "0") (ifseqformula "7"))
                                                   (rule "applyEqReverse" (formula "294") (term "1,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "59"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "293") (term "1,1") (ifseqformula "6"))
                                                   (rule "applyEqReverse" (formula "224") (term "0") (ifseqformula "6"))
                                                   (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "49") (term "0,0") (ifseqformula "58"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "applyEqReverse" (formula "214") (term "0,1") (ifseqformula "49"))
                                                   (rule "applyEqReverse" (formula "255") (term "0") (ifseqformula "49"))
                                                   (rule "hideAuxiliaryEq" (formula "49"))
                                                   (rule "eqSymm" (formula "291") (term "0"))
                                                   (rule "eqSymm" (formula "291") (term "1"))
                                                   (rule "eqSymm" (formula "213"))
                                                   (rule "replace_known_right" (formula "47") (term "0") (ifseqformula "254"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "221"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "222"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "replace_known_left" (formula "171") (term "1") (ifseqformula "57"))
                                                    (builtin "One Step Simplification" (formula "171"))
                                                   (rule "true_left" (formula "171"))
                                                   (rule "commute_or" (formula "3") (term "0,0"))
                                                   (rule "applyEq" (formula "17") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "17"))
                                                   (rule "applyEqReverse" (formula "290") (term "1,1") (ifseqformula "17"))
                                                    (builtin "One Step Simplification" (formula "290"))
                                                   (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "17"))
                                                   (rule "hideAuxiliaryEq" (formula "17"))
                                                   (rule "commute_or" (formula "5") (term "0,0"))
                                                   (rule "applyEq" (formula "16") (term "0") (ifseqformula "5"))
                                                   (rule "eqSymm" (formula "16"))
                                                   (rule "close" (formula "289") (ifseqformula "16"))
                                                )
                                                (branch " resultAtPost_103_A.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "62"))
                                                   (rule "hideAuxiliaryEq" (formula "62"))
                                                   (rule "replace_known_right" (formula "51") (term "0,0") (ifseqformula "221"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "applyEqReverse" (formula "53") (term "1,0") (ifseqformula "51"))
                                                   (rule "hideAuxiliaryEq" (formula "51"))
                                                   (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "220"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "220"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_right" (formula "52") (term "1,0,0") (ifseqformula "220"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "replace_known_right" (formula "56") (term "0,0") (ifseqformula "220"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "56"))
                                                   (rule "hideAuxiliaryEq" (formula "56"))
                                                   (rule "replace_known_right" (formula "173") (term "1") (ifseqformula "219"))
                                                    (builtin "One Step Simplification" (formula "173"))
                                                   (rule "commute_or" (formula "3") (term "0,0"))
                                                   (rule "applyEq" (formula "3") (term "0") (ifseqformula "19"))
                                                   (rule "applyEqReverse" (formula "294") (term "0,1") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "294"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "commute_or" (formula "4") (term "0,0"))
                                                   (rule "applyEq" (formula "17") (term "0") (ifseqformula "4"))
                                                   (rule "close" (formula "293") (ifseqformula "17"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: strContent(password_15_B) = strContent(password_15_A) FALSE"
                                     (builtin "One Step Simplification" (formula "229"))
                                    (rule "true_left" (formula "229"))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "232") (inst "iv=iv"))
                                    (rule "inEqSimp_ltToLeq" (formula "232") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "232") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "232") (term "0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "232") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "232") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "232") (term "1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "232") (term "1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "232") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "232") (term "1,1,1,0,0,1"))
                                    (rule "cut_direct" (formula "228") (term "0"))
                                    (branch "CUT: password_15_B = password_15_A TRUE"
                                        (builtin "One Step Simplification" (formula "229"))
                                       (rule "applyEqReverse" (formula "269") (term "0") (ifseqformula "229"))
                                       (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "229"))
                                       (rule "hideAuxiliaryEq" (formula "229"))
                                       (rule "applyEq" (formula "229") (term "1") (ifseqformula "228"))
                                       (rule "applyEq" (formula "232") (term "0,0,1,1,1,0,0,1") (ifseqformula "228"))
                                       (rule "applyEq" (formula "232") (term "0,0,0,1,0,1") (ifseqformula "228"))
                                        (builtin "One Step Simplification" (formula "232"))
                                       (rule "applyEq" (formula "128") (term "1,0") (ifseqformula "228"))
                                       (rule "applyEq" (formula "265") (term "0") (ifseqformula "228"))
                                       (rule "applyEq" (formula "232") (term "0,0,0") (ifseqformula "228"))
                                        (builtin "One Step Simplification" (formula "232"))
                                       (rule "closeTrue" (formula "232"))
                                    )
                                    (branch "CUT: password_15_B = password_15_A FALSE"
                                        (builtin "One Step Simplification" (formula "228"))
                                       (rule "true_left" (formula "228"))
                                       (rule "nnf_imp2or" (formula "136") (term "0"))
                                       (rule "ifthenelse_split" (formula "64") (term "0"))
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "65"))
                                          (rule "applyEqReverse" (formula "67") (term "1,0") (ifseqformula "65"))
                                          (rule "hideAuxiliaryEq" (formula "65"))
                                          (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "72") (term "1,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "67") (term "1,0,0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "67"))
                                          (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "67"))
                                          (rule "applyEqReverse" (formula "234") (term "0") (ifseqformula "67"))
                                          (rule "hideAuxiliaryEq" (formula "67"))
                                          (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "applyEqReverse" (formula "303") (term "1,0") (ifseqformula "8"))
                                          (rule "hideAuxiliaryEq" (formula "8"))
                                          (rule "replace_known_left" (formula "59") (term "1,0,0") (ifseqformula "62"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "applyEqReverse" (formula "265") (term "0") (ifseqformula "59"))
                                          (rule "hideAuxiliaryEq" (formula "59"))
                                          (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "301") (term "1,0") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "replace_known_left" (formula "56") (term "1,0,0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "applyEqReverse" (formula "263") (term "0") (ifseqformula "56"))
                                          (rule "hideAuxiliaryEq" (formula "56"))
                                          (rule "replace_known_left" (formula "66") (term "1,0,0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "66"))
                                          (rule "applyEqReverse" (formula "68") (term "1,0") (ifseqformula "66"))
                                          (rule "hideAuxiliaryEq" (formula "66"))
                                          (rule "replace_known_left" (formula "67") (term "1,0,0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "67"))
                                          (rule "applyEqReverse" (formula "229") (term "0") (ifseqformula "67"))
                                          (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "67"))
                                          (rule "hideAuxiliaryEq" (formula "67"))
                                          (rule "replace_known_left" (formula "61") (term "1,0,0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "61"))
                                          (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "61"))
                                          (rule "applyEqReverse" (formula "227") (term "0") (ifseqformula "61"))
                                          (rule "hideAuxiliaryEq" (formula "61"))
                                          (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "applyEqReverse" (formula "258") (term "0") (ifseqformula "53"))
                                          (rule "hideAuxiliaryEq" (formula "53"))
                                          (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "57"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "294") (term "1,1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "eqSymm" (formula "293") (term "0"))
                                          (rule "eqSymm" (formula "293") (term "1"))
                                          (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "223"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "256"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "224"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "replace_known_left" (formula "175") (term "1") (ifseqformula "56"))
                                           (builtin "One Step Simplification" (formula "175"))
                                          (rule "true_left" (formula "175"))
                                          (rule "seqGetAlphaCast" (formula "128") (term "0"))
                                          (rule "castedGetAny" (formula "128") (term "0"))
                                           (builtin "One Step Simplification" (formula "128"))
                                          (rule "true_left" (formula "128"))
                                          (rule "lenNonNegative" (formula "133") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "133"))
                                          (rule "seqGetAlphaCast" (formula "186") (term "0"))
                                          (rule "castedGetAny" (formula "186") (term "0"))
                                           (builtin "One Step Simplification" (formula "186"))
                                          (rule "true_left" (formula "186"))
                                          (rule "nnf_imp2or" (formula "121") (term "0"))
                                          (rule "commute_and" (formula "111") (term "0,0"))
                                          (rule "nnf_imp2or" (formula "120") (term "0"))
                                          (rule "nnf_imp2or" (formula "90") (term "0"))
                                          (rule "nnf_imp2or" (formula "91") (term "0"))
                                          (rule "commute_and" (formula "142") (term "0,0"))
                                          (rule "seqGetAlphaCast" (formula "152") (term "0"))
                                          (rule "castedGetAny" (formula "152") (term "0"))
                                           (builtin "One Step Simplification" (formula "152"))
                                          (rule "true_left" (formula "152"))
                                          (rule "seqGetAlphaCast" (formula "149") (term "0"))
                                          (rule "castedGetAny" (formula "149") (term "0"))
                                           (builtin "One Step Simplification" (formula "149"))
                                          (rule "true_left" (formula "149"))
                                          (rule "seqGetAlphaCast" (formula "105") (term "0"))
                                          (rule "castedGetAny" (formula "105") (term "0"))
                                           (builtin "One Step Simplification" (formula "105"))
                                          (rule "true_left" (formula "105"))
                                          (rule "seqGetAlphaCast" (formula "98") (term "0"))
                                          (rule "castedGetAny" (formula "98") (term "0"))
                                           (builtin "One Step Simplification" (formula "98"))
                                          (rule "true_left" (formula "98"))
                                          (rule "nnf_notAnd" (formula "99") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "99") (term "1,0,0"))
                                          (rule "mul_literals" (formula "99") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "99") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "1,0,0"))
                                          (rule "mul_literals" (formula "99") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "99") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "99") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "99") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "99") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "99") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "99") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "99") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "99") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "99") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "94") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "94") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "94") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "94") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0"))
                                          (rule "mul_literals" (formula "94") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "94") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "94") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "94") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "94") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "129") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "129") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "129") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "129") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "129") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "129") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "129") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "129") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "129") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "129") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "129") (term "1,0,0"))
                                          (rule "mul_literals" (formula "129") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "129") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "129") (term "1,0,0"))
                                          (rule "mul_literals" (formula "129") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "131") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "131") (term "1,0,0"))
                                          (rule "mul_literals" (formula "131") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "131") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "131") (term "1,0,0"))
                                          (rule "mul_literals" (formula "131") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "131") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "131") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "131") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "131") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "131") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "131") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "131") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "131") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "131") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "101") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "101") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "101") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "101") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "101") (term "1,0,0"))
                                          (rule "mul_literals" (formula "101") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "101") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "101") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "101") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "101") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "101") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "101") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "101") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "101") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "101") (term "1,0,0,0"))
                                          (rule "ifthenelse_split" (formula "13") (term "0"))
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "15") (term "1,0") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_left" (formula "18") (term "1,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "eqSymm" (formula "18"))
                                             (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_left" (formula "20") (term "1,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "eqSymm" (formula "20"))
                                             (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "16"))
                                             (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "13") (term "1,0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "14") (term "1,0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_left" (formula "16") (term "1,0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "286") (term "1,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "10"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "13"))
                                             (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "10"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "284") (term "1,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "applyEqReverse" (formula "212") (term "0") (ifseqformula "10"))
                                             (rule "hideAuxiliaryEq" (formula "10"))
                                             (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "eqSymm" (formula "282") (term "0"))
                                             (rule "eqSymm" (formula "282") (term "1"))
                                             (rule "replace_known_left" (formula "282") (term "0") (ifseqformula "10"))
                                              (builtin "One Step Simplification" (formula "282") (ifInst ""  (formula "11")))
                                             (rule "closeTrue" (formula "282"))
                                          )
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "14") (term "1,0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_right" (formula "19") (term "1,0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "applyEqReverse" (formula "19") (term "1,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "216"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "216"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "216"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "15"))
                                             (rule "applyEqReverse" (formula "16") (term "1,0") (ifseqformula "15"))
                                             (rule "hideAuxiliaryEq" (formula "15"))
                                             (rule "replace_known_right" (formula "13") (term "1,0,0") (ifseqformula "215"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "replace_known_right" (formula "14") (term "1,0,0") (ifseqformula "215"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "replace_known_right" (formula "15") (term "1,0,0") (ifseqformula "215"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "215"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_right" (formula "16") (term "1,0,0") (ifseqformula "215"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "215"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "215"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "replace_known_right" (formula "210") (term "1") (ifseqformula "215"))
                                              (builtin "One Step Simplification" (formula "210"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "16") (term "1,0") (ifseqformula "15"))
                                             (rule "hideAuxiliaryEq" (formula "15"))
                                             (rule "andRight" (formula "216"))
                                             (branch
                                                (rule "nnf_imp2or" (formula "215") (term "0,1"))
                                                (rule "nnf_imp2or" (formula "191") (term "0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "119") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "119") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "119") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "119") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "119") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "119") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "119") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "119") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "119") (term "1,0,0"))
                                                (rule "mul_literals" (formula "119") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "119") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "1,0,0"))
                                                (rule "mul_literals" (formula "119") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "191") (term "0,1,1,0,0"))
                                                (rule "lenNonNegative" (formula "121") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "121"))
                                                (rule "lenNonNegative" (formula "95") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "95"))
                                                (rule "lenNonNegative" (formula "98") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "98"))
                                                (rule "lenNonNegative" (formula "125") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "125"))
                                                (rule "seqGetAlphaCast" (formula "131") (term "0"))
                                                (rule "castedGetAny" (formula "131") (term "0"))
                                                 (builtin "One Step Simplification" (formula "131"))
                                                (rule "true_left" (formula "131"))
                                                (rule "nnf_imp2or" (formula "106") (term "0"))
                                                (rule "seqGetAlphaCast" (formula "184") (term "0"))
                                                (rule "castedGetAny" (formula "184") (term "0"))
                                                 (builtin "One Step Simplification" (formula "184"))
                                                (rule "true_left" (formula "184"))
                                                (rule "lenNonNegative" (formula "91") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "91"))
                                                (rule "nnf_imp2or" (formula "137") (term "0"))
                                                (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "115") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "115") (term "1,0,0"))
                                                (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "115") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1,0,0"))
                                                (rule "mul_literals" (formula "115") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0"))
                                                (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0"))
                                                (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                                (rule "nnf_ex2all" (formula "216"))
                                                (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "192") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "192") (term "1,0,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "192") (term "1,0,0,1,1,1,0"))
                                                (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,1,1,0"))
                                                (rule "eqSymm" (formula "192") (term "0,0,1,1,0"))
                                                (rule "replace_known_left" (formula "192") (term "0,0,1,1,0") (ifseqformula "85"))
                                                 (builtin "One Step Simplification" (formula "192"))
                                                (rule "castedGetAny" (formula "192") (term "0,0,1,0,0,1,1,0"))
                                                (rule "castedGetAny" (formula "192") (term "0,0,1,0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,1,1,1,0"))
                                                (rule "applyEq" (formula "192") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "85"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "nnf_notAnd" (formula "216") (term "0,0,1"))
                                                (rule "inEqSimp_notLeq" (formula "216") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "216") (term "1,0,0,1,0,0,1"))
                                                (rule "mul_literals" (formula "216") (term "0,1,0,0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "216") (term "0,0,1,0,0,1"))
                                                (rule "add_literals" (formula "216") (term "0,0,0,1,0,0,1"))
                                                (rule "add_zero_left" (formula "216") (term "0,0,1,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "216") (term "1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "216") (term "1,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "216") (term "1,1,0,0,1"))
                                                (rule "inEqSimp_notGeq" (formula "216") (term "0,0,0,1"))
                                                (rule "times_zero_1" (formula "216") (term "1,0,0,0,0,0,1"))
                                                (rule "add_zero_right" (formula "216") (term "0,0,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "216") (term "0,0,0,1"))
                                                (rule "mul_literals" (formula "216") (term "1,0,0,0,1"))
                                                (rule "nnf_notAnd" (formula "107") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "107") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "107") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "107") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "107") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "107") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "107") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "107") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "107") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "107") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "107") (term "0,0,0"))
                                                (rule "mul_literals" (formula "107") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "107") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "0,0,0"))
                                                (rule "mul_literals" (formula "107") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "138") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "138") (term "0,0,0"))
                                                (rule "mul_literals" (formula "138") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "138") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "0,0,0"))
                                                (rule "mul_literals" (formula "138") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "138") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "138") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "138") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "138") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "138") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "138") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "138") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "138") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "138") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "117") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "117") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "117") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "117") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "117") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "117") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "117") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "117") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "117") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "117") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "117") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "116") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "86") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "87") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "87") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "87") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "87") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "87") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "87") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "87") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "87") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "87") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "192") (term "0,0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "192") (term "0,0,1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "192") (term "0,0,1,1,0"))
                                                (rule "nnf_imp2or" (formula "192") (term "0,1,1,1,0"))
                                                (rule "commute_or_2" (formula "95") (term "0"))
                                                (rule "commute_or_2" (formula "90") (term "0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "125") (term "0"))
                                                (rule "commute_or_2" (formula "127") (term "0"))
                                                (rule "commute_or_2" (formula "97") (term "0"))
                                                (rule "commute_or" (formula "5") (term "0,0"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "16"))
                                                (rule "applyEqReverse" (formula "288") (term "1,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "288"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "commute_or" (formula "3") (term "0,0"))
                                                (rule "applyEq" (formula "16") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "16"))
                                                (rule "close" (formula "287") (ifseqformula "16"))
                                             )
                                             (branch
                                                (rule "nnf_imp2or" (formula "215") (term "0,1"))
                                                (rule "nnf_imp2or" (formula "191") (term "0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "119") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "119") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "119") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "119") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "119") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "119") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "119") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "119") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "119") (term "1,0,0"))
                                                (rule "mul_literals" (formula "119") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "119") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "1,0,0"))
                                                (rule "mul_literals" (formula "119") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "191") (term "0,1,1,0,0"))
                                                (rule "lenNonNegative" (formula "121") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "121"))
                                                (rule "lenNonNegative" (formula "95") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "95"))
                                                (rule "lenNonNegative" (formula "98") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "98"))
                                                (rule "lenNonNegative" (formula "125") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "125"))
                                                (rule "seqGetAlphaCast" (formula "131") (term "0"))
                                                (rule "castedGetAny" (formula "131") (term "0"))
                                                 (builtin "One Step Simplification" (formula "131"))
                                                (rule "true_left" (formula "131"))
                                                (rule "nnf_imp2or" (formula "106") (term "0"))
                                                (rule "seqGetAlphaCast" (formula "184") (term "0"))
                                                (rule "castedGetAny" (formula "184") (term "0"))
                                                 (builtin "One Step Simplification" (formula "184"))
                                                (rule "true_left" (formula "184"))
                                                (rule "lenNonNegative" (formula "91") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "91"))
                                                (rule "nnf_imp2or" (formula "137") (term "0"))
                                                (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "115") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "115") (term "1,0,0"))
                                                (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "115") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1,0,0"))
                                                (rule "mul_literals" (formula "115") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0"))
                                                (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0"))
                                                (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                                (rule "nnf_ex2all" (formula "216"))
                                                (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "192") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "192") (term "1,0,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "192") (term "1,0,0,1,1,1,0"))
                                                (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,1,1,0"))
                                                (rule "eqSymm" (formula "192") (term "0,0,1,1,0"))
                                                (rule "replace_known_left" (formula "192") (term "0,0,1,1,0") (ifseqformula "85"))
                                                 (builtin "One Step Simplification" (formula "192"))
                                                (rule "castedGetAny" (formula "192") (term "0,0,1,0,0,1,1,0"))
                                                (rule "castedGetAny" (formula "192") (term "0,0,1,0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,1,1,1,0"))
                                                (rule "applyEq" (formula "192") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "85"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "nnf_notAnd" (formula "216") (term "0,0,1"))
                                                (rule "inEqSimp_notLeq" (formula "216") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "216") (term "1,0,0,1,0,0,1"))
                                                (rule "mul_literals" (formula "216") (term "0,1,0,0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "216") (term "0,0,1,0,0,1"))
                                                (rule "add_literals" (formula "216") (term "0,0,0,1,0,0,1"))
                                                (rule "add_zero_left" (formula "216") (term "0,0,1,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "216") (term "1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "216") (term "1,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "216") (term "1,1,0,0,1"))
                                                (rule "inEqSimp_notGeq" (formula "216") (term "0,0,0,1"))
                                                (rule "times_zero_1" (formula "216") (term "1,0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "216") (term "0,0,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "216") (term "0,0,0,1"))
                                                (rule "mul_literals" (formula "216") (term "1,0,0,0,1"))
                                                (rule "nnf_notAnd" (formula "107") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "107") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "107") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "107") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "107") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "107") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "107") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "107") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "107") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "107") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "107") (term "0,0,0"))
                                                (rule "mul_literals" (formula "107") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "107") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "0,0,0"))
                                                (rule "mul_literals" (formula "107") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "138") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "138") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "138") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "138") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "138") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "138") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "138") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "138") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "138") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "138") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "138") (term "0,0,0"))
                                                (rule "mul_literals" (formula "138") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "138") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "0,0,0"))
                                                (rule "mul_literals" (formula "138") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "117") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "117") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "117") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "117") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "117") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "117") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "117") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "117") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "117") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "117") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "117") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "116") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "86") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "87") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "87") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "87") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "87") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "87") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "87") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "87") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "87") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "87") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "192") (term "0,0,1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "192") (term "0,0,0,1,0,0"))
                                                (rule "nnf_imp2or" (formula "192") (term "0,0,1,1,0"))
                                                (rule "nnf_imp2or" (formula "192") (term "0,1,1,1,0"))
                                                (rule "commute_or_2" (formula "95") (term "0"))
                                                (rule "commute_or_2" (formula "90") (term "0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "125") (term "0"))
                                                (rule "commute_or_2" (formula "127") (term "0"))
                                                (rule "commute_or_2" (formula "97") (term "0"))
                                                (rule "commute_or" (formula "5") (term "0,0"))
                                                (rule "applyEq" (formula "16") (term "0") (ifseqformula "5"))
                                                (rule "eqSymm" (formula "16"))
                                                (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "16"))
                                                (rule "applyEqReverse" (formula "288") (term "1,0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "288"))
                                                (rule "hideAuxiliaryEq" (formula "16"))
                                                (rule "commute_or" (formula "3") (term "0,0"))
                                                (rule "applyEq" (formula "16") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "16"))
                                                (rule "close" (formula "287") (ifseqformula "16"))
                                             )
                                          )
                                       )
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "64"))
                                          (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "64"))
                                          (rule "hideAuxiliaryEq" (formula "64"))
                                          (rule "replace_known_right" (formula "73") (term "1,0,0") (ifseqformula "230"))
                                           (builtin "One Step Simplification" (formula "73"))
                                          (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "230"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "71") (term "1,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "229"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "229"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_right" (formula "56") (term "0,0") (ifseqformula "229"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "applyEqReverse" (formula "58") (term "1,0") (ifseqformula "56"))
                                          (rule "hideAuxiliaryEq" (formula "56"))
                                          (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "228"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "228"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "228"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "replace_known_right" (formula "65") (term "1,0,0") (ifseqformula "228"))
                                           (builtin "One Step Simplification" (formula "65"))
                                          (rule "replace_known_right" (formula "57") (term "1,0,0") (ifseqformula "228"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "replace_known_right" (formula "59") (term "1,0,0") (ifseqformula "228"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "replace_known_right" (formula "69") (term "1,0,0") (ifseqformula "228"))
                                           (builtin "One Step Simplification" (formula "69"))
                                          (rule "replace_known_right" (formula "184") (term "1") (ifseqformula "228"))
                                           (builtin "One Step Simplification" (formula "184"))
                                          (rule "applyEq" (formula "7") (term "0") (ifseqformula "63"))
                                          (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "applyEq" (formula "68") (term "0") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "70") (term "1,0") (ifseqformula "68"))
                                          (rule "hideAuxiliaryEq" (formula "68"))
                                          (rule "seqGetAlphaCast" (formula "135") (term "0"))
                                          (rule "castedGetAny" (formula "135") (term "0"))
                                           (builtin "One Step Simplification" (formula "135"))
                                          (rule "true_left" (formula "135"))
                                          (rule "lenNonNegative" (formula "140") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "140"))
                                          (rule "seqGetAlphaCast" (formula "194") (term "0"))
                                          (rule "castedGetAny" (formula "194") (term "0"))
                                           (builtin "One Step Simplification" (formula "194"))
                                          (rule "true_left" (formula "194"))
                                          (rule "nnf_imp2or" (formula "128") (term "0"))
                                          (rule "commute_and" (formula "118") (term "0,0"))
                                          (rule "nnf_imp2or" (formula "127") (term "0"))
                                          (rule "nnf_imp2or" (formula "97") (term "0"))
                                          (rule "nnf_imp2or" (formula "98") (term "0"))
                                          (rule "commute_and" (formula "149") (term "0,0"))
                                          (rule "seqGetAlphaCast" (formula "159") (term "0"))
                                          (rule "castedGetAny" (formula "159") (term "0"))
                                           (builtin "One Step Simplification" (formula "159"))
                                          (rule "true_left" (formula "159"))
                                          (rule "seqGetAlphaCast" (formula "156") (term "0"))
                                          (rule "castedGetAny" (formula "156") (term "0"))
                                           (builtin "One Step Simplification" (formula "156"))
                                          (rule "true_left" (formula "156"))
                                          (rule "seqGetAlphaCast" (formula "112") (term "0"))
                                          (rule "castedGetAny" (formula "112") (term "0"))
                                           (builtin "One Step Simplification" (formula "112"))
                                          (rule "true_left" (formula "112"))
                                          (rule "seqGetAlphaCast" (formula "105") (term "0"))
                                          (rule "castedGetAny" (formula "105") (term "0"))
                                           (builtin "One Step Simplification" (formula "105"))
                                          (rule "true_left" (formula "105"))
                                          (rule "nnf_notAnd" (formula "106") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "106") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "106") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "106") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "106") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "106") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "106") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "106") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "106") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "106") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "106") (term "1,0,0"))
                                          (rule "mul_literals" (formula "106") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "106") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "106") (term "1,0,0"))
                                          (rule "mul_literals" (formula "106") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "101") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "101") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "101") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "101") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "101") (term "1,0,0"))
                                          (rule "mul_literals" (formula "101") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "101") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "101") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "101") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "101") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "101") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "101") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "101") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "101") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "101") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "136") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "136") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "136") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "136") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "136") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "136") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "136") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "136") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "136") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "136") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "136") (term "1,0,0"))
                                          (rule "mul_literals" (formula "136") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "136") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "136") (term "1,0,0"))
                                          (rule "mul_literals" (formula "136") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "138") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "138") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "138") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "138") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "138") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "138") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "138") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "138") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "138") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "138") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "138") (term "1,0,0"))
                                          (rule "mul_literals" (formula "138") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "138") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "1,0,0"))
                                          (rule "mul_literals" (formula "138") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "108") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "108") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "108") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "108") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "108") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "108") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "108") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "108") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "108") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "108") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "108") (term "1,0,0"))
                                          (rule "mul_literals" (formula "108") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "108") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "108") (term "1,0,0"))
                                          (rule "mul_literals" (formula "108") (term "1,1,0,0"))
                                          (rule "ifthenelse_split" (formula "16") (term "0"))
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "20") (term "1,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "applyEqReverse" (formula "230") (term "0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "replace_known_left" (formula "16") (term "1,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "17") (term "1,0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "17"))
                                             (rule "applyEqReverse" (formula "227") (term "0") (ifseqformula "17"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "296") (term "0,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "applyEqReverse" (formula "224") (term "0") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "294") (term "0,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "13"))
                                             (rule "applyEqReverse" (formula "293") (term "0,0") (ifseqformula "13"))
                                             (rule "applyEqReverse" (formula "223") (term "0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "14") (term "1,0") (ifseqformula "13"))
                                             (rule "applyEqReverse" (formula "292") (term "0,1") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "14"))
                                             (rule "applyEqReverse" (formula "222") (term "0") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_left" (formula "13") (term "1,0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "13"))
                                             (rule "applyEqReverse" (formula "221") (term "0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_left" (formula "209") (term "1") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "209"))
                                             (rule "true_left" (formula "209"))
                                             (rule "andRight" (formula "216"))
                                             (branch
                                                (rule "nnf_imp2or" (formula "215") (term "0,1"))
                                                (rule "nnf_imp2or" (formula "192") (term "0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "119") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "119") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "119") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "119") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "119") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "119") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "119") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "119") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "119") (term "1,0,0"))
                                                (rule "mul_literals" (formula "119") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "119") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "1,0,0"))
                                                (rule "mul_literals" (formula "119") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "192") (term "0,1,1,0,0"))
                                                (rule "lenNonNegative" (formula "121") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "121"))
                                                (rule "lenNonNegative" (formula "95") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "95"))
                                                (rule "lenNonNegative" (formula "98") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "98"))
                                                (rule "lenNonNegative" (formula "125") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "125"))
                                                (rule "nnf_imp2or" (formula "106") (term "0"))
                                                (rule "nnf_imp2or" (formula "137") (term "0"))
                                                (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "115") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "115") (term "1,0,0"))
                                                (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "115") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1,0,0"))
                                                (rule "mul_literals" (formula "115") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0"))
                                                (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0"))
                                                (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                                (rule "seqGetAlphaCast" (formula "131") (term "0"))
                                                (rule "castedGetAny" (formula "131") (term "0"))
                                                 (builtin "One Step Simplification" (formula "131"))
                                                (rule "true_left" (formula "131"))
                                                (rule "seqGetAlphaCast" (formula "185") (term "0"))
                                                (rule "castedGetAny" (formula "185") (term "0"))
                                                 (builtin "One Step Simplification" (formula "185"))
                                                (rule "true_left" (formula "185"))
                                                (rule "lenNonNegative" (formula "91") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "91"))
                                                (rule "nnf_ex2all" (formula "216"))
                                                (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "193") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "193") (term "1,0,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "193") (term "1,0,0,1,1,1,0"))
                                                (rule "replace_int_MAX" (formula "193") (term "1,0,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MIN" (formula "193") (term "0,1,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MAX" (formula "193") (term "1,0,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MIN" (formula "193") (term "0,1,1,0,0,1,1,1,0"))
                                                (rule "eqSymm" (formula "193") (term "0,0,1,1,0"))
                                                (rule "replace_known_left" (formula "193") (term "0,0,1,1,0") (ifseqformula "85"))
                                                 (builtin "One Step Simplification" (formula "193"))
                                                (rule "castedGetAny" (formula "193") (term "0,0,1,0,0,1,1,0"))
                                                (rule "castedGetAny" (formula "193") (term "0,0,1,0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "193") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "193") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "193") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "193") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "193") (term "0,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "193") (term "1,1,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "193") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "193") (term "1,1,0,0,0,1,1,0"))
                                                (rule "applyEq" (formula "193") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "85"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "193") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "193") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "193") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "193") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "193") (term "0,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "193") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "193") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "193") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "193") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "193") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "mul_literals" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "193") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "nnf_notAnd" (formula "216") (term "0,0,1"))
                                                (rule "inEqSimp_notGeq" (formula "216") (term "0,0,0,1"))
                                                (rule "mul_literals" (formula "216") (term "1,0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "216") (term "0,0,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "216") (term "0,0,0,1"))
                                                (rule "mul_literals" (formula "216") (term "1,0,0,0,1"))
                                                (rule "inEqSimp_notLeq" (formula "216") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "216") (term "1,0,0,1,0,0,1"))
                                                (rule "mul_literals" (formula "216") (term "0,1,0,0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "216") (term "0,0,1,0,0,1"))
                                                (rule "add_literals" (formula "216") (term "0,0,0,1,0,0,1"))
                                                (rule "add_zero_left" (formula "216") (term "0,0,1,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "216") (term "1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "216") (term "1,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "216") (term "1,1,0,0,1"))
                                                (rule "nnf_notAnd" (formula "107") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "107") (term "0,0,0"))
                                                (rule "mul_literals" (formula "107") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "107") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "0,0,0"))
                                                (rule "mul_literals" (formula "107") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "107") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "107") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "107") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "107") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "107") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "107") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "107") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "107") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "107") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "138") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "138") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "138") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "138") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "138") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "138") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "138") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "138") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "138") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "138") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "138") (term "0,0,0"))
                                                (rule "mul_literals" (formula "138") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "138") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "0,0,0"))
                                                (rule "mul_literals" (formula "138") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "117") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "117") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "117") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "117") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "117") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "117") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "117") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "117") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "117") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "117") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                (rule "nnf_notAnd" (formula "87") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "87") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "87") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "87") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "87") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "87") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "87") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "87") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "87") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "1,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "58"))
                                                (rule "applyEqReverse" (formula "288") (term "1,1") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "288"))
                                                (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "58"))
                                                (rule "hideAuxiliaryEq" (formula "58"))
                                                (rule "commute_or" (formula "4") (term "0,0"))
                                                (rule "applyEq" (formula "53") (term "0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "53"))
                                                (rule "close" (formula "287") (ifseqformula "53"))
                                             )
                                             (branch
                                                (rule "nnf_imp2or" (formula "215") (term "0,1"))
                                                (rule "nnf_imp2or" (formula "192") (term "0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "119") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "119") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "119") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "119") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "119") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "119") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "119") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "119") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "119") (term "1,0,0"))
                                                (rule "mul_literals" (formula "119") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "119") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "1,0,0"))
                                                (rule "mul_literals" (formula "119") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "192") (term "0,1,1,0,0"))
                                                (rule "lenNonNegative" (formula "121") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "121"))
                                                (rule "lenNonNegative" (formula "95") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "95"))
                                                (rule "lenNonNegative" (formula "98") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "98"))
                                                (rule "lenNonNegative" (formula "125") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "125"))
                                                (rule "nnf_imp2or" (formula "106") (term "0"))
                                                (rule "nnf_imp2or" (formula "137") (term "0"))
                                                (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "115") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "115") (term "1,0,0"))
                                                (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "115") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1,0,0"))
                                                (rule "mul_literals" (formula "115") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0"))
                                                (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0"))
                                                (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                                (rule "seqGetAlphaCast" (formula "131") (term "0"))
                                                (rule "castedGetAny" (formula "131") (term "0"))
                                                 (builtin "One Step Simplification" (formula "131"))
                                                (rule "true_left" (formula "131"))
                                                (rule "seqGetAlphaCast" (formula "185") (term "0"))
                                                (rule "castedGetAny" (formula "185") (term "0"))
                                                 (builtin "One Step Simplification" (formula "185"))
                                                (rule "true_left" (formula "185"))
                                                (rule "lenNonNegative" (formula "91") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "91"))
                                                (rule "nnf_ex2all" (formula "216"))
                                                (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "193") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "193") (term "1,0,0,1,1,1,0"))
                                                (rule "expand_inInt" (formula "193") (term "1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MAX" (formula "193") (term "1,0,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MIN" (formula "193") (term "0,1,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MAX" (formula "193") (term "1,0,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MIN" (formula "193") (term "0,1,1,0,0,1,0,1,1,0"))
                                                (rule "eqSymm" (formula "193") (term "0,0,1,1,0"))
                                                (rule "replace_known_left" (formula "193") (term "0,0,1,1,0") (ifseqformula "85"))
                                                 (builtin "One Step Simplification" (formula "193"))
                                                (rule "castedGetAny" (formula "193") (term "0,0,1,0,0,1,1,0"))
                                                (rule "castedGetAny" (formula "193") (term "0,0,1,0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "193") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "193") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "193") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "193") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "193") (term "1,1,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "193") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "193") (term "1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "193") (term "0,0,0,0,1,1,1,0"))
                                                (rule "applyEq" (formula "193") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "85"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "193") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "193") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "193") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "193") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "193") (term "0,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "193") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "193") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "193") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "193") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "193") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "mul_literals" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "193") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "nnf_notAnd" (formula "216") (term "0,0,1"))
                                                (rule "inEqSimp_notGeq" (formula "216") (term "0,0,0,1"))
                                                (rule "mul_literals" (formula "216") (term "1,0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "216") (term "0,0,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "216") (term "0,0,0,1"))
                                                (rule "mul_literals" (formula "216") (term "1,0,0,0,1"))
                                                (rule "inEqSimp_notLeq" (formula "216") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "216") (term "1,0,0,1,0,0,1"))
                                                (rule "mul_literals" (formula "216") (term "0,1,0,0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "216") (term "0,0,1,0,0,1"))
                                                (rule "add_literals" (formula "216") (term "0,0,0,1,0,0,1"))
                                                (rule "add_zero_left" (formula "216") (term "0,0,1,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "216") (term "1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "216") (term "1,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "216") (term "1,1,0,0,1"))
                                                (rule "nnf_notAnd" (formula "107") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "107") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "107") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "107") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "107") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "107") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "107") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "107") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "107") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "107") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "107") (term "0,0,0"))
                                                (rule "mul_literals" (formula "107") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "107") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "0,0,0"))
                                                (rule "mul_literals" (formula "107") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "138") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "138") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "138") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "138") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "138") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "138") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "138") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "138") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "138") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "138") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "138") (term "0,0,0"))
                                                (rule "mul_literals" (formula "138") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "138") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "0,0,0"))
                                                (rule "mul_literals" (formula "138") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "117") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "117") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "117") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "117") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "117") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "117") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "117") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "117") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "117") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "117") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "117") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "86") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                (rule "nnf_notAnd" (formula "87") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "87") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "87") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "87") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "87") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "87") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "87") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "87") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "87") (term "1,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "58"))
                                                (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "58"))
                                                (rule "applyEqReverse" (formula "288") (term "1,1") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "288"))
                                                (rule "hideAuxiliaryEq" (formula "58"))
                                                (rule "commute_or" (formula "4") (term "0,0"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "53"))
                                                (rule "close" (formula "287") (ifseqformula "4"))
                                             )
                                          )
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "replace_known_right" (formula "20") (term "1,0,0") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_right" (formula "22") (term "1,0,0") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "21"))
                                             (rule "hideAuxiliaryEq" (formula "21"))
                                             (rule "replace_known_right" (formula "19") (term "1,0,0") (ifseqformula "224"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "224"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "19") (term "1,0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "223"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "replace_known_right" (formula "16") (term "1,0,0") (ifseqformula "223"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "223"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "replace_known_right" (formula "218") (term "1") (ifseqformula "223"))
                                              (builtin "One Step Simplification" (formula "218"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "19") (term "1,0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "andRight" (formula "225"))
                                             (branch
                                                (rule "nnf_imp2or" (formula "224") (term "0,1"))
                                                (rule "nnf_imp2or" (formula "199") (term "0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "126") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "126") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "126") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "126") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "126") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "126") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "126") (term "1,0,0"))
                                                (rule "mul_literals" (formula "126") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "126") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0,0"))
                                                (rule "mul_literals" (formula "126") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "199") (term "0,1,1,0,0"))
                                                (rule "lenNonNegative" (formula "128") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "128"))
                                                (rule "lenNonNegative" (formula "102") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "102"))
                                                (rule "lenNonNegative" (formula "105") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "105"))
                                                (rule "lenNonNegative" (formula "132") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "132"))
                                                (rule "nnf_imp2or" (formula "113") (term "0"))
                                                (rule "nnf_imp2or" (formula "144") (term "0"))
                                                (rule "nnf_notAnd" (formula "123") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "123") (term "1,0,0"))
                                                (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "123") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "1,0,0"))
                                                (rule "mul_literals" (formula "123") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "122") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "122") (term "1,0,0"))
                                                (rule "mul_literals" (formula "122") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "122") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "122") (term "1,0,0"))
                                                (rule "mul_literals" (formula "122") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "92") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "92") (term "1,0,0"))
                                                (rule "mul_literals" (formula "92") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "92") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "92") (term "1,0,0"))
                                                (rule "mul_literals" (formula "92") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "93") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "93") (term "1,0,0"))
                                                (rule "mul_literals" (formula "93") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "93") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "1,0,0"))
                                                (rule "mul_literals" (formula "93") (term "1,1,0,0"))
                                                (rule "seqGetAlphaCast" (formula "138") (term "0"))
                                                (rule "castedGetAny" (formula "138") (term "0"))
                                                 (builtin "One Step Simplification" (formula "138"))
                                                (rule "true_left" (formula "138"))
                                                (rule "seqGetAlphaCast" (formula "192") (term "0"))
                                                (rule "castedGetAny" (formula "192") (term "0"))
                                                 (builtin "One Step Simplification" (formula "192"))
                                                (rule "true_left" (formula "192"))
                                                (rule "lenNonNegative" (formula "98") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "98"))
                                                (rule "nnf_ex2all" (formula "225"))
                                                (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "200") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "200") (term "1,0,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "200") (term "1,0,0,1,1,1,0"))
                                                (rule "replace_int_MAX" (formula "200") (term "1,0,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MIN" (formula "200") (term "0,1,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MAX" (formula "200") (term "1,0,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MIN" (formula "200") (term "0,1,1,0,0,1,1,1,0"))
                                                (rule "eqSymm" (formula "200") (term "0,0,1,1,0"))
                                                (rule "replace_known_left" (formula "200") (term "0,0,1,1,0") (ifseqformula "92"))
                                                 (builtin "One Step Simplification" (formula "200"))
                                                (rule "castedGetAny" (formula "200") (term "0,0,1,0,0,1,1,0"))
                                                (rule "castedGetAny" (formula "200") (term "0,0,1,0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "200") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "200") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "200") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "200") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "200") (term "0,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "200") (term "1,1,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "200") (term "1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "200") (term "0,0,0,0,0,1,1,0"))
                                                (rule "applyEq" (formula "200") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "92"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "200") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "200") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "200") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "200") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "200") (term "0,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "200") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "200") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "200") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "200") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "200") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "mul_literals" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "200") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "nnf_notAnd" (formula "225") (term "0,0,1"))
                                                (rule "inEqSimp_notGeq" (formula "225") (term "0,0,0,1"))
                                                (rule "times_zero_1" (formula "225") (term "1,0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "225") (term "0,0,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "225") (term "0,0,0,1"))
                                                (rule "mul_literals" (formula "225") (term "1,0,0,0,1"))
                                                (rule "inEqSimp_notLeq" (formula "225") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "225") (term "1,0,0,1,0,0,1"))
                                                (rule "mul_literals" (formula "225") (term "0,1,0,0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "225") (term "0,0,1,0,0,1"))
                                                (rule "add_literals" (formula "225") (term "0,0,0,1,0,0,1"))
                                                (rule "add_zero_left" (formula "225") (term "0,0,1,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "225") (term "1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "225") (term "1,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "225") (term "1,1,0,0,1"))
                                                (rule "nnf_notAnd" (formula "114") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "114") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "114") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "114") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "114") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "114") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "114") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "114") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "114") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "114") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "114") (term "0,0,0"))
                                                (rule "mul_literals" (formula "114") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "114") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "114") (term "0,0,0"))
                                                (rule "mul_literals" (formula "114") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "145") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "145") (term "0,0,0"))
                                                (rule "mul_literals" (formula "145") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "145") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "145") (term "0,0,0"))
                                                (rule "mul_literals" (formula "145") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "145") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "145") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "145") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "145") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "145") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "145") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "145") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "145") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "145") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "124") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "124") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "124") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "124") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "124") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "124") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "124") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "124") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "124") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "124") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "124") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "124") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "123") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "123") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "123") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "123") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "123") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "123") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "123") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "123") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "123") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "123") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "123") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "123") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "123") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "93") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "93") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "93") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "93") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "93") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "93") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "93") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "93") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "93") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "93") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "93") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "93") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                (rule "nnf_notAnd" (formula "94") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "94") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "94") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "94") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "94") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "94") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "94") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "94") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "94") (term "1,0,0,0,0"))
                                                (rule "commute_or" (formula "7") (term "0,0"))
                                                (rule "applyEq" (formula "7") (term "0") (ifseqformula "65"))
                                                (rule "applyEqReverse" (formula "297") (term "1,1") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "commute_or" (formula "7") (term "0,0"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "7"))
                                                (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "59"))
                                                (rule "applyEqReverse" (formula "226") (term "0") (ifseqformula "59"))
                                                (rule "hideAuxiliaryEq" (formula "59"))
                                                (rule "nnf_notAnd" (formula "198") (term "0,0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "198") (term "0,0,1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "198") (term "0,0,1,1,0"))
                                                (rule "nnf_imp2or" (formula "198") (term "0,1,1,1,0"))
                                                (rule "commute_or_2" (formula "100") (term "0"))
                                                (rule "commute_or_2" (formula "95") (term "0"))
                                                (rule "commute_or_2" (formula "130") (term "0"))
                                                (rule "commute_or_2" (formula "132") (term "0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                (rule "commute_or_2" (formula "102") (term "0"))
                                                (rule "ifthenelse_split" (formula "6") (term "0"))
                                                (branch " resultAtPost_103_A.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "replace_known_left" (formula "51") (term "0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "applyEqReverse" (formula "53") (term "1,0") (ifseqformula "51"))
                                                   (rule "hideAuxiliaryEq" (formula "51"))
                                                   (rule "replace_known_left" (formula "56") (term "0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "56"))
                                                   (rule "hideAuxiliaryEq" (formula "56"))
                                                   (rule "replace_known_left" (formula "61") (term "1,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                   (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "61"))
                                                   (rule "applyEqReverse" (formula "224") (term "0") (ifseqformula "61"))
                                                   (rule "applyEqReverse" (formula "293") (term "1,1") (ifseqformula "61"))
                                                   (rule "hideAuxiliaryEq" (formula "61"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "222") (term "0") (ifseqformula "7"))
                                                   (rule "applyEqReverse" (formula "292") (term "1,0") (ifseqformula "7"))
                                                   (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "replace_known_left" (formula "51") (term "1,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "applyEqReverse" (formula "254") (term "0") (ifseqformula "51"))
                                                   (rule "hideAuxiliaryEq" (formula "51"))
                                                   (rule "eqSymm" (formula "290") (term "1"))
                                                   (rule "eqSymm" (formula "290") (term "0"))
                                                   (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "221"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "220"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_right" (formula "48") (term "0") (ifseqformula "253"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "replace_known_left" (formula "171") (term "1") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "171"))
                                                   (rule "true_left" (formula "171"))
                                                   (rule "commute_or" (formula "5") (term "0,0"))
                                                   (rule "applyEq" (formula "17") (term "0") (ifseqformula "5"))
                                                   (rule "eqSymm" (formula "17"))
                                                   (rule "applyEqReverse" (formula "289") (term "1,0") (ifseqformula "17"))
                                                    (builtin "One Step Simplification" (formula "289"))
                                                   (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "17"))
                                                   (rule "hideAuxiliaryEq" (formula "17"))
                                                   (rule "commute_or" (formula "3") (term "0,0"))
                                                   (rule "applyEq" (formula "3") (term "0") (ifseqformula "17"))
                                                   (rule "close" (formula "288") (ifseqformula "3"))
                                                )
                                                (branch " resultAtPost_103_A.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_right" (formula "62") (term "1,0,0") (ifseqformula "219"))
                                                    (builtin "One Step Simplification" (formula "62"))
                                                   (rule "replace_known_right" (formula "52") (term "1,0,0") (ifseqformula "219"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "replace_known_right" (formula "56") (term "0,0") (ifseqformula "219"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "56"))
                                                   (rule "hideAuxiliaryEq" (formula "56"))
                                                   (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "218"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_right" (formula "50") (term "0,0") (ifseqformula "218"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "50"))
                                                   (rule "hideAuxiliaryEq" (formula "50"))
                                                   (rule "replace_known_right" (formula "173") (term "1") (ifseqformula "217"))
                                                    (builtin "One Step Simplification" (formula "173"))
                                                   (rule "commute_or" (formula "5") (term "0,0"))
                                                   (rule "applyEq" (formula "5") (term "0") (ifseqformula "17"))
                                                   (rule "applyEqReverse" (formula "293") (term "0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "293"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "commute_or" (formula "3") (term "0,0"))
                                                   (rule "applyEq" (formula "17") (term "0") (ifseqformula "3"))
                                                   (rule "close" (formula "292") (ifseqformula "17"))
                                                )
                                             )
                                             (branch
                                                (rule "nnf_imp2or" (formula "224") (term "0,1"))
                                                (rule "nnf_notAnd" (formula "126") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "126") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "126") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "126") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "126") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "126") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "126") (term "1,0,0"))
                                                (rule "mul_literals" (formula "126") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "126") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0,0"))
                                                (rule "mul_literals" (formula "126") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "199") (term "0,0,1,0,0"))
                                                (rule "nnf_imp2or" (formula "199") (term "0,1,1,0,0"))
                                                (rule "lenNonNegative" (formula "128") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "128"))
                                                (rule "lenNonNegative" (formula "102") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "102"))
                                                (rule "lenNonNegative" (formula "105") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "105"))
                                                (rule "lenNonNegative" (formula "132") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "132"))
                                                (rule "nnf_imp2or" (formula "113") (term "0"))
                                                (rule "nnf_imp2or" (formula "144") (term "0"))
                                                (rule "nnf_notAnd" (formula "123") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "123") (term "1,0,0"))
                                                (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "123") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "1,0,0"))
                                                (rule "mul_literals" (formula "123") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "122") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "122") (term "1,0,0"))
                                                (rule "mul_literals" (formula "122") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "122") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "122") (term "1,0,0"))
                                                (rule "mul_literals" (formula "122") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "92") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "92") (term "1,0,0"))
                                                (rule "mul_literals" (formula "92") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "92") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "92") (term "1,0,0"))
                                                (rule "mul_literals" (formula "92") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "93") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "93") (term "1,0,0"))
                                                (rule "mul_literals" (formula "93") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "93") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "1,0,0"))
                                                (rule "mul_literals" (formula "93") (term "1,1,0,0"))
                                                (rule "seqGetAlphaCast" (formula "138") (term "0"))
                                                (rule "castedGetAny" (formula "138") (term "0"))
                                                 (builtin "One Step Simplification" (formula "138"))
                                                (rule "true_left" (formula "138"))
                                                (rule "seqGetAlphaCast" (formula "192") (term "0"))
                                                (rule "castedGetAny" (formula "192") (term "0"))
                                                 (builtin "One Step Simplification" (formula "192"))
                                                (rule "true_left" (formula "192"))
                                                (rule "lenNonNegative" (formula "98") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "98"))
                                                (rule "nnf_ex2all" (formula "225"))
                                                (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "200") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,1,0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,0,0,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,0,0,0,1,0,1,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                                (rule "expand_inInt" (formula "200") (term "1,0,0,1,1,1,0"))
                                                (rule "expand_inInt" (formula "200") (term "1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MAX" (formula "200") (term "1,0,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MIN" (formula "200") (term "0,1,1,0,0,1,1,1,0"))
                                                (rule "replace_int_MAX" (formula "200") (term "1,0,1,0,0,1,0,1,1,0"))
                                                (rule "replace_int_MIN" (formula "200") (term "0,1,1,0,0,1,0,1,1,0"))
                                                (rule "eqSymm" (formula "200") (term "0,0,1,1,0"))
                                                (rule "replace_known_left" (formula "200") (term "0,0,1,1,0") (ifseqformula "92"))
                                                 (builtin "One Step Simplification" (formula "200"))
                                                (rule "castedGetAny" (formula "200") (term "0,0,1,0,1,1,1,0"))
                                                (rule "castedGetAny" (formula "200") (term "0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "200") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "200") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "200") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "200") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "200") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "200") (term "0,0,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "200") (term "1,1,0,0,1,1,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "200") (term "1,1,0,0,0,1,1,0"))
                                                (rule "applyEq" (formula "200") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "92"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "200") (term "1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "200") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "200") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "200") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "200") (term "0,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "200") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "200") (term "1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "200") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "200") (term "1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "200") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "mul_literals" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "200") (term "1,1,1,0,0,0,1,1,1,0"))
                                                (rule "nnf_notAnd" (formula "225") (term "0,0,1"))
                                                (rule "inEqSimp_notGeq" (formula "225") (term "0,0,0,1"))
                                                (rule "mul_literals" (formula "225") (term "1,0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "225") (term "0,0,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "225") (term "0,0,0,1"))
                                                (rule "mul_literals" (formula "225") (term "1,0,0,0,1"))
                                                (rule "inEqSimp_notLeq" (formula "225") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "225") (term "1,0,0,1,0,0,1"))
                                                (rule "mul_literals" (formula "225") (term "0,1,0,0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "225") (term "0,0,1,0,0,1"))
                                                (rule "add_literals" (formula "225") (term "0,0,0,1,0,0,1"))
                                                (rule "add_zero_left" (formula "225") (term "0,0,1,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "225") (term "1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "225") (term "1,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "225") (term "1,1,0,0,1"))
                                                (rule "nnf_notAnd" (formula "114") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "114") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "114") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "114") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "114") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "114") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "114") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "114") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "114") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "114") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "114") (term "0,0,0"))
                                                (rule "mul_literals" (formula "114") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "114") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "114") (term "0,0,0"))
                                                (rule "mul_literals" (formula "114") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "145") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "145") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "145") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "145") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "145") (term "0,0,0"))
                                                (rule "mul_literals" (formula "145") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "145") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "145") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "145") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "145") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "145") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "145") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "145") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "145") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "145") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "124") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "124") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "124") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "124") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "124") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "124") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "124") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "124") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "124") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "124") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "124") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "124") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "123") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "123") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "123") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "123") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "123") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "123") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "123") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "123") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "123") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "123") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "123") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "123") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "123") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "93") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "93") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "93") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "93") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "93") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "93") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "93") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "93") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "93") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "93") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "93") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "93") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                (rule "nnf_notAnd" (formula "94") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "94") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "94") (term "1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "94") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "94") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "94") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "94") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "94") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "94") (term "1,0,0,0,0"))
                                                (rule "commute_or" (formula "7") (term "0,0"))
                                                (rule "applyEq" (formula "7") (term "0") (ifseqformula "65"))
                                                (rule "applyEqReverse" (formula "297") (term "1,1") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "commute_or" (formula "7") (term "0,0"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "7"))
                                                (rule "applyEqReverse" (formula "226") (term "0") (ifseqformula "59"))
                                                (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "59"))
                                                (rule "hideAuxiliaryEq" (formula "59"))
                                                (rule "nnf_notAnd" (formula "198") (term "0,0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "198") (term "0,0,1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "198") (term "0,0,1,1,0"))
                                                (rule "nnf_imp2or" (formula "198") (term "0,1,1,1,0"))
                                                (rule "commute_or_2" (formula "100") (term "0"))
                                                (rule "commute_or_2" (formula "95") (term "0"))
                                                (rule "commute_or_2" (formula "130") (term "0"))
                                                (rule "commute_or_2" (formula "132") (term "0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                (rule "commute_or_2" (formula "102") (term "0"))
                                                (rule "ifthenelse_split" (formula "6") (term "0"))
                                                (branch " resultAtPost_103_A.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "applyEqReverse" (formula "226") (term "0") (ifseqformula "63"))
                                                   (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "63"))
                                                   (rule "applyEqReverse" (formula "295") (term "1,1") (ifseqformula "63"))
                                                   (rule "hideAuxiliaryEq" (formula "63"))
                                                   (rule "eqSymm" (formula "294") (term "1"))
                                                   (rule "replace_known_left" (formula "53") (term "1,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEqReverse" (formula "257") (term "0") (ifseqformula "53"))
                                                   (rule "hideAuxiliaryEq" (formula "53"))
                                                   (rule "replace_known_left" (formula "51") (term "0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "applyEqReverse" (formula "256") (term "0") (ifseqformula "51"))
                                                   (rule "hideAuxiliaryEq" (formula "51"))
                                                   (rule "replace_known_left" (formula "55") (term "0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "55"))
                                                   (rule "hideAuxiliaryEq" (formula "55"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "221") (term "0") (ifseqformula "7"))
                                                   (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "7"))
                                                   (rule "applyEqReverse" (formula "291") (term "1,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "eqSymm" (formula "290") (term "0"))
                                                   (rule "replace_known_right" (formula "48") (term "0") (ifseqformula "253"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "221"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "220"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "171") (term "1") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "171"))
                                                   (rule "true_left" (formula "171"))
                                                   (rule "commute_or" (formula "5") (term "0,0"))
                                                   (rule "applyEq" (formula "17") (term "0") (ifseqformula "5"))
                                                   (rule "eqSymm" (formula "17"))
                                                   (rule "applyEqReverse" (formula "289") (term "1,0") (ifseqformula "17"))
                                                    (builtin "One Step Simplification" (formula "289"))
                                                   (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "17"))
                                                   (rule "hideAuxiliaryEq" (formula "17"))
                                                   (rule "commute_or" (formula "3") (term "0,0"))
                                                   (rule "applyEq" (formula "3") (term "0") (ifseqformula "17"))
                                                   (rule "close" (formula "288") (ifseqformula "3"))
                                                )
                                                (branch " resultAtPost_103_A.<created>@anon_heap_printStatus«anonHeapFunction» = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_right" (formula "52") (term "1,0,0") (ifseqformula "219"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "replace_known_right" (formula "56") (term "0,0") (ifseqformula "219"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "56"))
                                                   (rule "hideAuxiliaryEq" (formula "56"))
                                                   (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "218"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_right" (formula "61") (term "1,0,0") (ifseqformula "218"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                   (rule "replace_known_right" (formula "50") (term "0,0") (ifseqformula "218"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "50"))
                                                   (rule "hideAuxiliaryEq" (formula "50"))
                                                   (rule "replace_known_right" (formula "173") (term "1") (ifseqformula "217"))
                                                    (builtin "One Step Simplification" (formula "173"))
                                                   (rule "commute_or" (formula "5") (term "0,0"))
                                                   (rule "applyEq" (formula "5") (term "0") (ifseqformula "17"))
                                                   (rule "applyEqReverse" (formula "293") (term "0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "293"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "commute_or" (formula "3") (term "0,0"))
                                                   (rule "applyEq" (formula "17") (term "0") (ifseqformula "3"))
                                                   (rule "close" (formula "292") (ifseqformula "17"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "255"))
                                 (rule "replaceKnownSelect_taclet00000000_90" (formula "218") (term "0,0,0"))
                                 (rule "replaceKnownSelect_taclet0000_31" (formula "218") (term "0,1,0"))
                                 (rule "replaceKnownSelect_taclet00000000_89" (formula "218") (term "0,0,1"))
                                 (rule "replaceKnownSelect_taclet0000_30" (formula "218") (term "0,1,1"))
                                 (rule "replaceKnownSelect_taclet0000_32" (formula "217") (term "0,1,1,1"))
                                 (rule "replaceKnownSelect_taclet00000000_91" (formula "217") (term "0,0,1,1"))
                                 (rule "replaceKnownSelect_taclet00000000_90" (formula "217") (term "0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet0000_31" (formula "217") (term "1,0,1,0"))
                                 (rule "replaceKnownSelect_taclet00000000_89" (formula "217") (term "0,1,1,0"))
                                 (rule "replaceKnownSelect_taclet0000_30" (formula "217") (term "1,1,1,0"))
                                 (rule "replaceKnownSelect_taclet0000_32" (formula "217") (term "1,1,1,0,0"))
                                 (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,0,1"))
                                 (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "1,0,0,0,1"))
                                 (rule "replaceKnownSelect_taclet000000_67" (formula "199") (term "0,1,0,0,1"))
                                 (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "1,1,0,0,1"))
                                 (rule "replaceKnownSelect_taclet00000000_91" (formula "217") (term "0,1,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "1,0,0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "199") (term "0,1,0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "1,1,0,0,1"))
                                 (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                 (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                 (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                 (rule "notRight" (formula "255"))
                                 (rule "andLeft" (formula "219"))
                                 (rule "andLeft" (formula "218"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "219"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "221"))
                                 (rule "andLeft" (formula "220"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "applyEqReverse" (formula "226") (term "0,1") (ifseqformula "223"))
                                  (builtin "One Step Simplification" (formula "226"))
                                 (rule "true_left" (formula "226"))
                                 (rule "applyEqReverse" (formula "226") (term "0,1") (ifseqformula "224"))
                                  (builtin "One Step Simplification" (formula "226"))
                                 (rule "true_left" (formula "226"))
                                 (rule "applyEqReverse" (formula "267") (term "0") (ifseqformula "224"))
                                 (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "224"))
                                 (rule "applyEqReverse" (formula "266") (term "0") (ifseqformula "223"))
                                 (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "223"))
                                 (rule "hideAuxiliaryEq" (formula "223"))
                                 (rule "hideAuxiliaryEq" (formula "223"))
                                 (rule "eqSymm" (formula "301") (term "0,0"))
                                 (rule "eqSymm" (formula "301") (term "1,0"))
                                 (rule "eqSymm" (formula "301") (term "1,1"))
                                 (rule "eqSymm" (formula "301") (term "0,1"))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "replace_known_right" (formula "203") (term "0,1,1,1,0") (ifseqformula "281"))
                                  (builtin "One Step Simplification" (formula "203") (ifInst ""  (formula "244")))
                                 (rule "replace_known_right" (formula "189") (term "1,1") (ifseqformula "227"))
                                  (builtin "One Step Simplification" (formula "189"))
                                 (rule "inEqSimp_ltToLeq" (formula "144"))
                                 (rule "polySimp_mulComm0" (formula "144") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "144") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "156"))
                                 (rule "polySimp_mulComm0" (formula "156") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "156") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "106") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "106") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "176"))
                                 (rule "polySimp_mulComm0" (formula "176") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "176") (term "0"))
                                 (rule "inEqSimp_gtToGeq" (formula "116") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "116") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "116") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "147") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "147") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "147") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "147") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "125") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "136") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "136") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "167"))
                                 (rule "polySimp_mulComm0" (formula "167") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "162"))
                                 (rule "polySimp_mulComm0" (formula "162") (term "1,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "216"))
                                 (rule "mul_literals" (formula "216") (term "1,0,0"))
                                 (rule "add_literals" (formula "216") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "126") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "126") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "109"))
                                 (rule "polySimp_mulComm0" (formula "109") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "116") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "147") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "132"))
                                 (rule "polySimp_mulComm0" (formula "132") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "199"))
                                 (rule "polySimp_mulComm0" (formula "199") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "153"))
                                 (rule "polySimp_mulComm0" (formula "153") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "129") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "129") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "192"))
                                 (rule "polySimp_mulComm0" (formula "192") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "195"))
                                 (rule "polySimp_mulComm0" (formula "195") (term "1,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "177"))
                                 (rule "mul_literals" (formula "177") (term "1,0,0"))
                                 (rule "add_literals" (formula "177") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "116") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "134") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "134") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "96") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "104") (term "0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "206"))
                                 (rule "inEqSimp_ltToLeq" (formula "102"))
                                 (rule "inEqSimp_ltToLeq" (formula "140"))
                                 (rule "inEqSimp_ltToLeq" (formula "95") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "215"))
                                 (rule "inEqSimp_ltToLeq" (formula "113"))
                                 (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "206") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "102") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "140") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "215") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "167") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "113") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "162") (term "0"))
                                 (rule "polySimp_addComm1" (formula "109") (term "0"))
                                 (rule "polySimp_addComm1" (formula "132") (term "0"))
                                 (rule "polySimp_addComm1" (formula "199") (term "0"))
                                 (rule "polySimp_addComm1" (formula "153") (term "0"))
                                 (rule "polySimp_addComm1" (formula "192") (term "0"))
                                 (rule "polySimp_addComm1" (formula "195") (term "0"))
                                 (rule "castedGetAny" (formula "203") (term "0,1,0,0,0,0"))
                                 (rule "castedGetAny" (formula "203") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "206") (term "0"))
                                 (rule "polySimp_addComm1" (formula "102") (term "0"))
                                 (rule "polySimp_addComm1" (formula "140") (term "0"))
                                 (rule "polySimp_addComm1" (formula "215") (term "0"))
                                 (rule "polySimp_addComm1" (formula "113") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "203") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "203") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "203") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "203") (term "1,0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "203") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "203") (term "0,0,0,0,1,0"))
                                 (rule "applyEq" (formula "65") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "55") (term "1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "180") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "141") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "141") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "61") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "66") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "50") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "151") (term "2") (ifseqformula "37"))
                                 (rule "applyEq" (formula "138") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "16") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "254") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "282") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "243") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "151") (term "0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "116") (term "1,1,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "147") (term "1,1,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "287") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "195") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "63") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "58") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "14") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "62") (term "1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "65") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "11") (term "1,0,0,0,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "220") (term "1,0,1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "250") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "50") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "103") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "246") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "301") (term "0,1,0,0") (ifseqformula "40"))
                                 (rule "applyEq" (formula "140") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "109") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "104") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "58") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "248") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "11") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "56") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "17") (term "1,2,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "182") (term "3") (ifseqformula "38"))
                                 (rule "applyEq" (formula "151") (term "3") (ifseqformula "150"))
                                 (rule "applyEq" (formula "14") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "13") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "9") (term "1,0,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "189") (term "1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "189") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "47") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "291") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "12") (term "1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "10") (term "1,0,0,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "284") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEqRigid" (formula "301") (term "0,1,1,0") (ifseqformula "40"))
                                 (rule "applyEq" (formula "11") (term "1,2,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "244") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "192") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "10") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "17") (term "1,0,1,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "154") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "301") (term "0,1,1,1") (ifseqformula "40"))
                                 (rule "applyEqRigid" (formula "301") (term "0,0,1,1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "301") (term "0,1,0,1,1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "285") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "46") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "57") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "80") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "165") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "87") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "17") (term "1,0,1,0,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "301") (term "0,1,1,1,1") (ifseqformula "40"))
                                 (rule "applyEq" (formula "204") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "180") (term "1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "72") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "52") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "50") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "173") (term "3") (ifseqformula "37"))
                                 (rule "applyEq" (formula "129") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "266") (term "0") (ifseqformula "98"))
                                 (rule "applyEq" (formula "15") (term "1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "99") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "16") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "212") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "105") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "287") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "190") (term "2") (ifseqformula "1"))
                                 (rule "applyEq" (formula "249") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "220") (term "1,0,1,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "220") (term "1,0,0,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "93") (term "0") (ifseqformula "94"))
                                 (rule "applyEq" (formula "51") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "13") (term "1,0,0,0,0") (ifseqformula "220"))
                                 (rule "applyEq" (formula "56") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "101") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "284") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "57") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "105") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "172") (term "4") (ifseqformula "171"))
                                 (rule "applyEq" (formula "281") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "54") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "14") (term "1,2,0") (ifseqformula "220"))
                                 (rule "applyEq" (formula "73") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "117") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "63") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "250") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "9") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "133") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "66") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "109") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "69") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "88") (term "0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "109") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "100") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "55") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "276") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "230") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "131") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "156") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "133") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "53") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "179") (term "1,0,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "66") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "252") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "132") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "102") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "105") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "164") (term "5") (ifseqformula "158"))
                                 (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "220"))
                                 (rule "applyEq" (formula "118") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "64") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "132") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "219") (term "1,0,1,0,0") (ifseqformula "220"))
                                 (rule "applyEq" (formula "299") (term "0,0,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "156") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "81") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEqRigid" (formula "299") (term "0,0,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "277") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "181") (term "4") (ifseqformula "180"))
                                 (rule "applyEq" (formula "240") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "135") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "71") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "189") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "11") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "52") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "244") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "145") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "62") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "279") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "54") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "98") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "199") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "241") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "155") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "223") (term "3") (ifseqformula "220"))
                                 (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "220"))
                                 (rule "applyEq" (formula "48") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "162") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "10") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "220"))
                                 (rule "applyEq" (formula "138") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "75") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "220") (term "1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "57") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "113") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "52") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "46") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "202") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "202") (term "1,1,1,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "202") (term "1,0,1,1,0,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "144") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "70") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "59") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "202") (term "1,1,1,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "53") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "179") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "62") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "206") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "76") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "251") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "59") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "192") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "103") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "68") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "60") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "130") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "211") (term "3") (ifseqformula "1"))
                                 (rule "applyEq" (formula "64") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "74") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "107") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "51") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "195") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "261") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "49") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "192") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "152") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "60") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "172") (term "0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "278") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "135") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "167") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "263") (term "0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "59") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "134") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "246") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "67") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "79") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "61") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "48") (term "1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "64") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "195") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "153") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "128") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "49") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "288") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "114") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "287") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "298") (term "0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "52") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "59") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "66") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "95") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "93"))
                                 (rule "applyEq" (formula "38") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "16") (term "1,0,0,0,0") (ifseqformula "220"))
                                 (rule "applyEq" (formula "15") (term "1,2,0") (ifseqformula "220"))
                                 (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "10") (term "1,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "219") (term "1,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "219") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "11") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "17") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "223") (term "3") (ifseqformula "2"))
                                 (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "13") (term "1,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "17") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "14") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "219") (term "1,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "11") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "17") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "9") (term "1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "12") (term "1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "16") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "11") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "230") (term "0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "298") (term "1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "10") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "16") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "298") (term "1,0,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "219") (term "1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "9") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "14") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "13") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "11") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "10") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "2") (term "1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "14") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "15") (term "1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "17") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "10") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "219") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "11") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "14") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "13") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "9") (term "1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "219") (term "1,0,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "223") (term "3") (ifseqformula "38"))
                                 (rule "applyEq" (formula "17") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "17") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "11") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "219") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "143"))
                                 (rule "polySimp_mulLiterals" (formula "143") (term "0"))
                                 (rule "polySimp_elimOne" (formula "143") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "175"))
                                 (rule "polySimp_mulLiterals" (formula "175") (term "0"))
                                 (rule "polySimp_elimOne" (formula "175") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "115") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "146") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "146") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "146") (term "1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "146") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "146") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "146") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "146") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "146") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "124") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "124") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "124") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "215"))
                                 (rule "mul_literals" (formula "215") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "125") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "125") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "125") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "125") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "125") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "115") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "115") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "115") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "115") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "146") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "146") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "146") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "146") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "146") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "146") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "176"))
                                 (rule "mul_literals" (formula "176") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "115") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "115") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "115") (term "1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "115") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "115") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "166"))
                                 (rule "polySimp_mulLiterals" (formula "166") (term "0"))
                                 (rule "polySimp_elimOne" (formula "166") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "161"))
                                 (rule "polySimp_mulLiterals" (formula "161") (term "0"))
                                 (rule "polySimp_elimOne" (formula "161") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "198"))
                                 (rule "polySimp_mulLiterals" (formula "198") (term "0"))
                                 (rule "polySimp_elimOne" (formula "198") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "205"))
                                 (rule "polySimp_mulLiterals" (formula "205") (term "0"))
                                 (rule "polySimp_elimOne" (formula "205") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "214"))
                                 (rule "polySimp_mulLiterals" (formula "214") (term "0"))
                                 (rule "polySimp_elimOne" (formula "214") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "112"))
                                 (rule "polySimp_mulLiterals" (formula "112") (term "0"))
                                 (rule "polySimp_elimOne" (formula "112") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "202") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "202") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "202") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "202") (term "1,1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "202") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "202") (term "1,1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "202") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "202") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "202") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "202") (term "0,1,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "202") (term "1,1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "202") (term "1,1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "194"))
                                 (rule "polySimp_mulLiterals" (formula "194") (term "0"))
                                 (rule "polySimp_elimOne" (formula "194") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "139"))
                                 (rule "polySimp_mulLiterals" (formula "139") (term "0"))
                                 (rule "polySimp_elimOne" (formula "139") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "108"))
                                 (rule "polySimp_mulLiterals" (formula "108") (term "0"))
                                 (rule "polySimp_elimOne" (formula "108") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "103") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "103") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "103") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "103") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "103") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "103") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "191"))
                                 (rule "polySimp_mulLiterals" (formula "191") (term "0"))
                                 (rule "polySimp_elimOne" (formula "191") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "128") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "128") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "128") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "128") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "128") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "128") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "98") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "98") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "101"))
                                 (rule "polySimp_mulLiterals" (formula "101") (term "0"))
                                 (rule "polySimp_elimOne" (formula "101") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "131"))
                                 (rule "polySimp_mulLiterals" (formula "131") (term "0"))
                                 (rule "polySimp_elimOne" (formula "131") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "133") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "133") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "133") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "133") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "133") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "133") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "105") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "105") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "135") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "135") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "135") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "135") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "135") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "135") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "155"))
                                 (rule "polySimp_mulLiterals" (formula "155") (term "0"))
                                 (rule "polySimp_elimOne" (formula "155") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "152"))
                                 (rule "polySimp_mulLiterals" (formula "152") (term "0"))
                                 (rule "polySimp_elimOne" (formula "152") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "95") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0,0,0,0"))
                                 (rule "equalityToSeqGetAndSeqLenRight" (formula "226") (inst "iv=iv"))
                                 (rule "inEqSimp_ltToLeq" (formula "226") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "226") (term "1,0,0,1,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "226") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "226") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "226") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "226") (term "1,1,0,0,1"))
                                 (rule "mul_literals" (formula "226") (term "0,1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "226") (term "1,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "226") (term "1,1,1,0,0,1"))
                                 (rule "pullOutSelect" (formula "298") (term "1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_6"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "179"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "263")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "171"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "149"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "299") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_6"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "180"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "264")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "172"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "150"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "300") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "220"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "212"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "189"))
                                 (rule "eqSymm" (formula "301") (term "1,1"))
                                 (rule "pullOutSelect" (formula "301") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_7"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "221"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "266")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "213"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "190"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "302") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_7"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "222"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "267")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "214"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "191"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "231") (term "1,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                                 (rule "applyEq" (formula "232") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "232") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "192"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "232") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "232") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "232") (term "1,0,0,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "231") (term "0,1,1,0,1") (inst "selectSK=java_util_Collection_seq_1"))
                                 (rule "applyEq" (formula "232") (term "0,1,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "154"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "6") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_8"))
                                 (rule "simplifySelectOfAnonEQ" (formula "6") (ifseqformula "177"))
                                  (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "269")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "0,0,0") (ifseqformula "155"))
                                 (rule "ifthenelse_negated" (formula "6") (term "0"))
                                 (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_8"))
                                 (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "178"))
                                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "270")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "0,0,0") (ifseqformula "156"))
                                 (rule "ifthenelse_negated" (formula "5") (term "0"))
                                 (rule "pullOutSelect" (formula "4") (term "1,2,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                                 (rule "applyEq" (formula "5") (term "1,0,0,0,0,1,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "5") (term "0,0,0,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "5") (term "1,0,1,0,1,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "5") (term "1,0,1,0,0,1,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "4"))
                                 (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "226"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "218"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "replaceKnownSelect_taclet11100000000_125" (formula "4") (term "0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11100000000_126" (formula "4") (term "0"))
                                 (rule "applyEqReverse" (formula "5") (term "1,0,0,0,0,1,0,0") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "0,0,0,0,0") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "1,0,1,0,1,0,0") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "1,2,0") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "1,0,1,0,0,1,0,0") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "1,1,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_left" (formula "4") (term "0,0,0,1,0,0") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "243")))
                                 (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "217"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "243")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0") (ifseqformula "194"))
                                 (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEq" (formula "234") (term "0,0,1,0,1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "234") (term "0,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "234") (term "0,1,1,1,0,0,1") (ifseqformula "4"))
                                 (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "194"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "243")) (ifInst ""  (formula "28")))
                                 (rule "eqSymm" (formula "234") (term "1,0,1"))
                                 (rule "eqSymm" (formula "234") (term "0"))
                                 (rule "elementOfSingleton" (formula "4") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "243")))
                                 (rule "applyEqReverse" (formula "306") (term "1,1,1") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "234") (term "0,1,1,0,1") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "234") (term "0,1,0") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "234") (term "0,1,1,1,0,0,1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "eqSymm" (formula "233") (term "1,0,1"))
                                 (rule "eqSymm" (formula "233") (term "0"))
                                 (rule "pullOutSelect" (formula "305") (term "1,0,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "186"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "178"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "156"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "306") (term "1,0,1,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "276"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "85")))
                                 (rule "applyEqReverse" (formula "233") (term "0,1,1,0,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "233") (term "0,1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_9"))
                                 (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "216"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "269")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "193"))
                                 (rule "ifthenelse_negated" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_9"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "217"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "270")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "194"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "7") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_10"))
                                 (rule "simplifySelectOfAnonEQ" (formula "7") (ifseqformula "157"))
                                  (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "271")))
                                 (rule "elementOfSingleton" (formula "7") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "271")))
                                 (rule "ifthenelse_negated" (formula "7") (term "0"))
                                 (rule "applyEq" (formula "7") (term "0") (ifseqformula "64"))
                                 (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_10"))
                                 (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "157"))
                                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "271")))
                                 (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "271")))
                                 (rule "ifthenelse_negated" (formula "5") (term "0"))
                                 (rule "applyEq" (formula "5") (term "0") (ifseqformula "71"))
                                 (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "pullOutSelect" (formula "306") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_2"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "187"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "278")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "179"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "157"))
                                 (rule "eqSymm" (formula "307") (term "1,1"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "87"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "179"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "278")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "157"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "87"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "157"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "278")) (ifInst ""  (formula "87")))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "278")))
                                 (rule "applyEqReverse" (formula "307") (term "1,1,1") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "307"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_11"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "195"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "271")))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "271")))
                                 (rule "ifthenelse_negated" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "21"))
                                 (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_11"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "195"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "271")))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "271")))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "24"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "inEqSimp_and_subsumption3" (formula "132") (term "0,0,0"))
                                 (rule "leq_literals" (formula "132") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "132"))
                                 (rule "inEqSimp_and_subsumption3" (formula "133") (term "0,0,0"))
                                 (rule "leq_literals" (formula "133") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "133"))
                                 (rule "inEqSimp_and_subsumption3" (formula "102") (term "0,0,0"))
                                 (rule "leq_literals" (formula "102") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "102"))
                                 (rule "inEqSimp_and_subsumption3" (formula "103") (term "0,0,0"))
                                 (rule "leq_literals" (formula "103") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "103"))
                                 (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "210") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                 (rule "replaceKnownSelect_taclet00_6" (formula "210") (term "0,0,0,0,1,1,0"))
                                 (rule "replaceKnownSelect_taclet00_8" (formula "210") (term "0,1,0,0,1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "210") (term "0,0,0,0,1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "210") (term "0,1,0,0,1,1,0"))
                                 (rule "replaceKnownSelect_taclet00_8" (formula "210") (term "0,1,1,0,0,0,1,1,1,0"))
                                 (rule "replaceKnownSelect_taclet00_8" (formula "210") (term "0,0,0,0,1,0,1,1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "210") (term "0,1,1,0,0,0,1,1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "210") (term "0,0,0,0,1,0,1,1,1,0"))
                                 (rule "replaceKnownSelect_taclet00_6" (formula "210") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                 (rule "replaceKnownSelect_taclet00_6" (formula "210") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "210") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "210") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                 (rule "expand_inInt" (formula "210") (term "1,0,0,1,1,1,0"))
                                 (rule "expand_inInt" (formula "210") (term "1,0,0,1,0,1,1,0"))
                                 (rule "replace_int_MIN" (formula "210") (term "0,1,1,0,0,1,1,1,0"))
                                 (rule "replace_int_MAX" (formula "210") (term "1,0,1,0,0,1,1,1,0"))
                                 (rule "replace_int_MAX" (formula "210") (term "1,0,1,0,0,1,0,1,1,0"))
                                 (rule "replace_int_MIN" (formula "210") (term "0,1,1,0,0,1,0,1,1,0"))
                                 (rule "eqSymm" (formula "210") (term "0,0,1,1,0"))
                                 (rule "replace_known_left" (formula "210") (term "0,0,1,1,0") (ifseqformula "101"))
                                  (builtin "One Step Simplification" (formula "210"))
                                 (rule "castedGetAny" (formula "210") (term "0,0,1,0,1,1,1,0"))
                                 (rule "castedGetAny" (formula "210") (term "0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "210") (term "1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "210") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "210") (term "1,0,0,0,1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "210") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "210") (term "1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "210") (term "1,1,0,0,1,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "210") (term "0,0,0,0,1,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "210") (term "0,0,0,0,0,1,1,0"))
                                 (rule "applyEq" (formula "210") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "101"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "210") (term "1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "210") (term "1,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "210") (term "1,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "210") (term "0,1,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "210") (term "1,1,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "210") (term "1,1,1,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "210") (term "1,0,0,0,1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "210") (term "1,1,0,0,0,1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "210") (term "1,1,0,0,0,1,1,1,0"))
                                 (rule "mul_literals" (formula "210") (term "0,1,1,0,0,0,1,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "210") (term "1,1,1,0,0,0,1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "210") (term "1,1,1,0,0,0,1,1,1,0"))
                                 (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "196") (term "0,0") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
                                  (builtin "One Step Simplification" (formula "196") (ifInst ""  (formula "244")) (ifInst ""  (formula "243")) (ifInst ""  (formula "245")) (ifInst ""  (formula "247")) (ifInst ""  (formula "248")) (ifInst ""  (formula "249")) (ifInst ""  (formula "250")) (ifInst ""  (formula "251")) (ifInst ""  (formula "252")) (ifInst ""  (formula "253")) (ifInst ""  (formula "254")) (ifInst ""  (formula "255")) (ifInst ""  (formula "256")) (ifInst ""  (formula "257")) (ifInst ""  (formula "258")) (ifInst ""  (formula "259")) (ifInst ""  (formula "260")) (ifInst ""  (formula "135")) (ifInst ""  (formula "135")))
                                 (rule "insert_constant_string_value" (formula "196") (term "0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "165"))
                                  (builtin "One Step Simplification" (formula "196"))
                                 (rule "insert_constant_string_value" (formula "196") (term "0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "165"))
                                  (builtin "One Step Simplification" (formula "196"))
                                 (rule "insert_constant_string_value" (formula "196") (term "0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "165"))
                                  (builtin "One Step Simplification" (formula "196"))
                                 (rule "castDel" (formula "196") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                                 (rule "castDel" (formula "196") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "castDel" (formula "196") (term "0,0,0,1,0,0,0,0,0,0,0,0,0"))
                                 (rule "replace_known_right" (formula "196") (term "0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "279"))
                                  (builtin "One Step Simplification" (formula "196") (ifInst ""  (formula "280")) (ifInst ""  (formula "281")))
                                 (rule "castedGetAny" (formula "196") (term "0,0,1,0,1,0,0,0"))
                                 (rule "castedGetAny" (formula "196") (term "0,0,1,0,1,0,0,0,0"))
                                 (rule "castedGetAny" (formula "196") (term "0,1,0,1,0,0,0,0,0"))
                                 (rule "castedGetAny" (formula "196") (term "0,0,1,0,1,0,0,0,0,0,0"))
                                 (rule "castedGetAny" (formula "196") (term "0,1,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "196") (term "1,0,0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "196") (term "1,0,0,1,0,0,1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "196") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "196") (term "1,0,0,1,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "196") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "196") (term "1,0,0,1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "196") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "196") (term "1,0,0,1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "196") (term "1,0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "196") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "196") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "196") (term "0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "196") (term "0,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "196") (term "0,0,0,1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "196") (term "0,0,0,1,0,0,0,0,0"))
                                 (rule "applyEqRigid" (formula "196") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "135"))
                                 (rule "replace_known_right" (formula "196") (term "0,0,0,0,0,0,0,0") (ifseqformula "246"))
                                  (builtin "One Step Simplification" (formula "196"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "196") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "196") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "196") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "196") (term "1,1,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "196") (term "0,1,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "196") (term "1,1,1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "196") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "196") (term "1,1,0,0,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "196") (term "1,1,0,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "196") (term "1,1,1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "196") (term "0,1,1,0,0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "196") (term "1,1,1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "196") (term "1,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "196") (term "1,1,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "196") (term "1,1,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "196") (term "1,1,1,0,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "196") (term "0,1,1,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "196") (term "1,1,1,0,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "196") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "196") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "196") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "196") (term "1,1,1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "196") (term "0,1,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "196") (term "1,1,1,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "196") (term "1,0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "196") (term "1,1,0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "196") (term "1,1,0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "196") (term "1,1,1,0,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "196") (term "0,1,1,0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "196") (term "1,1,1,0,0,1,0,0,0,0,0"))
                                 (rule "nnf_imp2or" (formula "154") (term "1,0"))
                                 (rule "nnf_imp2or" (formula "123") (term "0"))
                                 (rule "nnf_imp2or" (formula "111") (term "0"))
                                 (rule "nnf_imp2or" (formula "136") (term "0"))
                                 (rule "nnf_imp2or" (formula "106") (term "0"))
                                 (rule "nnf_imp2or" (formula "141") (term "0"))
                                 (rule "nnf_imp2or" (formula "113") (term "0"))
                                 (rule "nnf_imp2or" (formula "143") (term "0"))
                                 (rule "cut_direct" (formula "230") (term "0"))
                                 (branch "CUT: strContent(password_15_B) = strContent(password_15_A) TRUE"
                                     (builtin "One Step Simplification" (formula "231"))
                                    (rule "cut_direct" (formula "229") (term "0"))
                                    (branch "CUT: password_15_B = password_15_A TRUE"
                                        (builtin "One Step Simplification" (formula "230"))
                                       (rule "applyEqReverse" (formula "232") (term "0,1") (ifseqformula "230"))
                                        (builtin "One Step Simplification" (formula "232"))
                                       (rule "true_left" (formula "232"))
                                       (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "230"))
                                       (rule "applyEqReverse" (formula "270") (term "0") (ifseqformula "230"))
                                       (rule "hideAuxiliaryEq" (formula "230"))
                                       (rule "applyEq" (formula "231") (term "1") (ifseqformula "229"))
                                       (rule "applyEq" (formula "266") (term "0") (ifseqformula "229"))
                                       (rule "applyEq" (formula "128") (term "1,0") (ifseqformula "229"))
                                       (rule "applyEq" (formula "230") (term "0,0") (ifseqformula "229"))
                                        (builtin "One Step Simplification" (formula "230"))
                                       (rule "true_left" (formula "230"))
                                       (rule "nnf_imp2or" (formula "233") (term "0,1"))
                                       (rule "seqGetAlphaCast" (formula "148") (term "0"))
                                       (rule "castedGetAny" (formula "148") (term "0"))
                                        (builtin "One Step Simplification" (formula "148"))
                                       (rule "true_left" (formula "148"))
                                       (rule "lenNonNegative" (formula "145") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "145"))
                                       (rule "seqGetAlphaCast" (formula "110") (term "0"))
                                       (rule "castedGetAny" (formula "110") (term "0"))
                                        (builtin "One Step Simplification" (formula "110"))
                                       (rule "true_left" (formula "110"))
                                       (rule "ifthenelse_split" (formula "70") (term "0"))
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "71"))
                                          (rule "applyEqReverse" (formula "73") (term "1,0") (ifseqformula "71"))
                                          (rule "hideAuxiliaryEq" (formula "71"))
                                          (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "70"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "applyEqReverse" (formula "303") (term "1,0") (ifseqformula "8"))
                                          (rule "hideAuxiliaryEq" (formula "8"))
                                          (rule "eqSymm" (formula "302") (term "0"))
                                          (rule "replace_known_left" (formula "73") (term "1,0,0") (ifseqformula "69"))
                                           (builtin "One Step Simplification" (formula "73"))
                                          (rule "applyEqReverse" (formula "235") (term "0") (ifseqformula "73"))
                                          (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "73"))
                                          (rule "hideAuxiliaryEq" (formula "73"))
                                          (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "69"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "301") (term "0,0") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "replace_known_left" (formula "54") (term "0,0") (ifseqformula "68"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "applyEqReverse" (formula "56") (term "1,0") (ifseqformula "54"))
                                          (rule "hideAuxiliaryEq" (formula "54"))
                                          (rule "replace_known_left" (formula "55") (term "1,0,0") (ifseqformula "67"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "applyEqReverse" (formula "57") (term "1,0") (ifseqformula "55"))
                                          (rule "hideAuxiliaryEq" (formula "55"))
                                          (rule "replace_known_left" (formula "68") (term "1,0,0") (ifseqformula "66"))
                                           (builtin "One Step Simplification" (formula "68"))
                                          (rule "applyEqReverse" (formula "231") (term "0") (ifseqformula "68"))
                                          (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "68"))
                                          (rule "hideAuxiliaryEq" (formula "68"))
                                          (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "66"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "applyEqReverse" (formula "229") (term "0") (ifseqformula "63"))
                                          (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "63"))
                                          (rule "hideAuxiliaryEq" (formula "63"))
                                          (rule "replace_known_left" (formula "61") (term "1,0,0") (ifseqformula "65"))
                                           (builtin "One Step Simplification" (formula "61"))
                                          (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "61"))
                                          (rule "applyEqReverse" (formula "228") (term "0") (ifseqformula "61"))
                                          (rule "hideAuxiliaryEq" (formula "61"))
                                          (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "58") (term "0,0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "applyEqReverse" (formula "294") (term "0,0") (ifseqformula "58"))
                                          (rule "applyEqReverse" (formula "226") (term "0") (ifseqformula "58"))
                                          (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "58"))
                                          (rule "hideAuxiliaryEq" (formula "58"))
                                          (rule "replace_known_left" (formula "55") (term "1,0,0") (ifseqformula "62"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "applyEqReverse" (formula "224") (term "0") (ifseqformula "55"))
                                          (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "55"))
                                          (rule "hideAuxiliaryEq" (formula "55"))
                                          (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "292") (term "1,1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "eqSymm" (formula "291") (term "1"))
                                          (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "224"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "222"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "223"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "replace_known_left" (formula "175") (term "1") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "175"))
                                          (rule "true_left" (formula "175"))
                                          (rule "nnf_imp2or" (formula "120") (term "0"))
                                          (rule "nnf_imp2or" (formula "121") (term "0"))
                                          (rule "nnf_imp2or" (formula "90") (term "0"))
                                          (rule "commute_and" (formula "142") (term "0,0"))
                                          (rule "nnf_imp2or" (formula "91") (term "0"))
                                          (rule "lenNonNegative" (formula "100") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "100"))
                                          (rule "seqGetAlphaCast" (formula "105") (term "0"))
                                          (rule "castedGetAny" (formula "105") (term "0"))
                                           (builtin "One Step Simplification" (formula "105"))
                                          (rule "true_left" (formula "105"))
                                          (rule "lenNonNegative" (formula "96") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "96"))
                                          (rule "seqGetAlphaCast" (formula "128") (term "0"))
                                          (rule "castedGetAny" (formula "128") (term "0"))
                                           (builtin "One Step Simplification" (formula "128"))
                                          (rule "true_left" (formula "128"))
                                          (rule "ifthenelse_split" (formula "19") (term "0"))
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "290") (term "1,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "13") (term "1,0,0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "14") (term "1,0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "applyEqReverse" (formula "15") (term "1,0") (ifseqformula "14"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "17") (term "1,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_left" (formula "13") (term "1,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "14") (term "1,0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "applyEqReverse" (formula "12") (term "1,0") (ifseqformula "11"))
                                             (rule "hideAuxiliaryEq" (formula "11"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "284") (term "1,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "13") (term "1,0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_left" (formula "11") (term "1,0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "282") (term "1,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "eqSymm" (formula "281") (term "0"))
                                             (rule "eqSymm" (formula "281") (term "1"))
                                             (rule "replace_known_left" (formula "281") (term "1") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "281") (ifInst ""  (formula "10")))
                                             (rule "closeTrue" (formula "281"))
                                          )
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "replace_known_right" (formula "20") (term "1,0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "replace_known_right" (formula "19") (term "1,0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "replace_known_right" (formula "14") (term "1,0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "16"))
                                             (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "218"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_right" (formula "15") (term "1,0,0") (ifseqformula "218"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "218"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "14") (term "1,0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "211") (term "1") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "211"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "15"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "seqGetAlphaCast" (formula "147") (term "0"))
                                             (rule "castedGetAny" (formula "147") (term "0"))
                                              (builtin "One Step Simplification" (formula "147"))
                                             (rule "true_left" (formula "147"))
                                             (rule "nnf_imp2or" (formula "192") (term "0,0,1,1,0"))
                                             (rule "nnf_imp2or" (formula "192") (term "0,1,1,1,0"))
                                             (rule "nnf_imp2or" (formula "106") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "106") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "106") (term "1,0,0"))
                                             (rule "mul_literals" (formula "106") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "106") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "106") (term "1,0,0"))
                                             (rule "mul_literals" (formula "106") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "106") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "106") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "106") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "106") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "106") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "106") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "106") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "106") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "106") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "94") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "94") (term "1,0,0"))
                                             (rule "mul_literals" (formula "94") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "94") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0"))
                                             (rule "mul_literals" (formula "94") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "94") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "94") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "94") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "94") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "119") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "119") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "119") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "119") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "119") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "119") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "119") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "119") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "119") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "119") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "119") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "1,0,0"))
                                             (rule "mul_literals" (formula "119") (term "1,1,0,0"))
                                             (rule "seqGetAlphaCast" (formula "182") (term "0"))
                                             (rule "castedGetAny" (formula "182") (term "0"))
                                              (builtin "One Step Simplification" (formula "182"))
                                             (rule "true_left" (formula "182"))
                                             (rule "nnf_notAnd" (formula "89") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "89") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "89") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "89") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0"))
                                             (rule "mul_literals" (formula "89") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "89") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "89") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "89") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "89") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "89") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "89") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "124") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "124") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "124") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "124") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "1,0,0"))
                                             (rule "mul_literals" (formula "124") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "124") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "124") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "124") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "124") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "124") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "124") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "124") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "96") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "96") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "96") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "96") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "96") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "96") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "96") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "96") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "96") (term "1,0,0"))
                                             (rule "mul_literals" (formula "96") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "96") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "1,0,0"))
                                             (rule "mul_literals" (formula "96") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "126") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "126") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "126") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "126") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0,0"))
                                             (rule "mul_literals" (formula "126") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "126") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "126") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "126") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "126") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "126") (term "1,0,0,0"))
                                             (rule "lenNonNegative" (formula "121") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "121"))
                                             (rule "nnf_imp2or" (formula "178") (term "0,1,0,0,0"))
                                             (rule "lenNonNegative" (formula "98") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "98"))
                                             (rule "seqGetAlphaCast" (formula "185") (term "0"))
                                             (rule "castedGetAny" (formula "185") (term "0"))
                                              (builtin "One Step Simplification" (formula "185"))
                                             (rule "true_left" (formula "185"))
                                             (rule "lenNonNegative" (formula "125") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "125"))
                                             (rule "nnf_imp2or" (formula "178") (term "0,1,0,0,0,0"))
                                             (rule "seqGetAlphaCast" (formula "144") (term "0"))
                                             (rule "castedGetAny" (formula "144") (term "0"))
                                              (builtin "One Step Simplification" (formula "144"))
                                             (rule "true_left" (formula "144"))
                                             (rule "nnf_notAnd" (formula "216") (term "0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "216") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "216") (term "1,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "216") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "216") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "216") (term "1,0,0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "216") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "216") (term "1,0,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "216") (term "0,1,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "216") (term "0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "216") (term "0,0,0,1,0,0,1"))
                                             (rule "add_zero_left" (formula "216") (term "0,0,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "216") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "216") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "216") (term "1,1,0,0,1"))
                                             (rule "nnf_imp2or" (formula "178") (term "0,0,0,0,0,0,0"))
                                             (rule "nnf_imp2or" (formula "137") (term "0"))
                                             (rule "nnf_notAnd" (formula "115") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "115") (term "1,0,0"))
                                             (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "115") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1,0,0"))
                                             (rule "mul_literals" (formula "115") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0"))
                                             (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0"))
                                             (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "192") (term "1,0,0") (inst "i=i") (inst "i_0=i_0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "192") (term "0,0,0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "192") (term "0,1,0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "192") (term "0,0,0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "192") (term "0,1,0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "192") (term "0,0,0,0,1,0,1,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "192") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "192") (term "0,0,0,0,1,0,1,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "192") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "192") (term "0,0,0,0,1,0,1,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "192") (term "0,1,1,0,0,0,1,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "192") (term "0,0,0,0,1,0,1,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "192") (term "0,1,1,0,0,0,1,0,1,0,0"))
                                             (rule "expand_inInt" (formula "192") (term "1,0,0,1,0,1,0,0"))
                                             (rule "expand_inInt" (formula "192") (term "1,0,0,1,1,0,0"))
                                             (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,0,1,0,0"))
                                             (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,0,1,0,0"))
                                             (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,1,0,0"))
                                             (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,1,0,0"))
                                             (rule "eqSymm" (formula "192") (term "0,0,1,0,0"))
                                             (rule "replace_known_left" (formula "192") (term "0,0,1,0,0") (ifseqformula "114"))
                                              (builtin "One Step Simplification" (formula "192"))
                                             (rule "castedGetAny" (formula "192") (term "0,0,1,0,1,1,0,0"))
                                             (rule "castedGetAny" (formula "192") (term "0,0,1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,0,1,0,0"))
                                             (rule "applyEq" (formula "192") (term "0,1,0,0,1,0,0,0,1,1,0,0") (ifseqformula "114"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "178") (term "1,0") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
                                              (builtin "One Step Simplification" (formula "178") (ifInst ""  (formula "256")) (ifInst ""  (formula "257")) (ifInst ""  (formula "258")) (ifInst ""  (formula "263")) (ifInst ""  (formula "264")) (ifInst ""  (formula "265")) (ifInst ""  (formula "266")) (ifInst ""  (formula "267")) (ifInst ""  (formula "268")) (ifInst ""  (formula "269")) (ifInst ""  (formula "270")) (ifInst ""  (formula "271")) (ifInst ""  (formula "272")) (ifInst ""  (formula "273")) (ifInst ""  (formula "274")) (ifInst ""  (formula "275")) (ifInst ""  (formula "276")) (ifInst ""  (formula "88")) (ifInst ""  (formula "88")))
                                             (rule "insert_constant_string_value" (formula "178") (term "0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "148"))
                                              (builtin "One Step Simplification" (formula "178"))
                                             (rule "insert_constant_string_value" (formula "178") (term "0,0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "148"))
                                              (builtin "One Step Simplification" (formula "178"))
                                             (rule "insert_constant_string_value" (formula "178") (term "0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "148"))
                                              (builtin "One Step Simplification" (formula "178"))
                                             (rule "castDel" (formula "178") (term "0,0,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "castDel" (formula "178") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                                             (rule "castDel" (formula "178") (term "0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "replace_known_right" (formula "178") (term "0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "260"))
                                              (builtin "One Step Simplification" (formula "178") (ifInst ""  (formula "259")) (ifInst ""  (formula "261")))
                                             (rule "castedGetAny" (formula "178") (term "0,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "castedGetAny" (formula "178") (term "0,1,0,1,1,0"))
                                             (rule "castedGetAny" (formula "178") (term "0,0,1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "178") (term "0,1,0,1,0,0,0,1,0"))
                                             (rule "castedGetAny" (formula "178") (term "0,0,1,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "178") (term "1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,0,0,1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "178") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,0,0,1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "178") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "178") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,0,0,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "178") (term "1,0,0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,0,0,1,0,0,1,0,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "178") (term "0,0,0,1,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "178") (term "0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "178") (term "0,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "178") (term "0,0,0,1,0,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "178") (term "0,0,0,1,0,0,0,1,0"))
                                             (rule "applyEqRigid" (formula "178") (term "0,0,0,0,0,0,0,1,0") (ifseqformula "88"))
                                             (rule "replace_known_right" (formula "178") (term "0,0,0,0,0,0,1,0") (ifseqformula "262"))
                                              (builtin "One Step Simplification" (formula "178"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "178") (term "1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "178") (term "1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "178") (term "1,1,1,0,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "178") (term "0,1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "178") (term "1,1,1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "178") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "178") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "178") (term "1,1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "178") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "178") (term "1,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "178") (term "1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "178") (term "1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "178") (term "1,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "178") (term "0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "178") (term "1,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "178") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "178") (term "1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "178") (term "1,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "178") (term "0,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "178") (term "1,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "178") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "178") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "178") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "178") (term "0,1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "178") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "nnf_notAnd" (formula "137") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "137") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "137") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "137") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "137") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "137") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "137") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "137") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "137") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "137") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "137") (term "0,0,0"))
                                             (rule "mul_literals" (formula "137") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "137") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "137") (term "0,0,0"))
                                             (rule "mul_literals" (formula "137") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "115") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "115") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "115") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "115") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "115") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "115") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "115") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "115") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "115") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "115") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "115") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "115") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "116") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "116") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "85") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "85") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "85") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "85") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "85") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "85") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "85") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "85") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "85") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "85") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "85") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "85") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "86") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                             (rule "lenNonNegative" (formula "216") (term "0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "1"))
                                             (rule "lenNonNegative" (formula "217") (term "1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "1"))
                                             (rule "nnf_notAnd" (formula "194") (term "0,0,1,1,1,0"))
                                             (rule "nnf_notAnd" (formula "194") (term "0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "4") (term "0,0"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "288") (term "1,1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "288"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "nnf_imp2or" (formula "193") (term "0,0,1,0,0"))
                                             (rule "nnf_imp2or" (formula "193") (term "0,1,1,0,0"))
                                             (rule "commute_or" (formula "4") (term "0,0"))
                                             (rule "applyEq" (formula "16") (term "0") (ifseqformula "4"))
                                             (rule "eqSymm" (formula "16"))
                                             (rule "close" (formula "287") (ifseqformula "16"))
                                          )
                                       )
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "70"))
                                          (rule "applyEqReverse" (formula "72") (term "1,0") (ifseqformula "70"))
                                          (rule "hideAuxiliaryEq" (formula "70"))
                                          (rule "replace_known_right" (formula "60") (term "1,0,0") (ifseqformula "232"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "replace_known_right" (formula "65") (term "1,0,0") (ifseqformula "232"))
                                           (builtin "One Step Simplification" (formula "65"))
                                          (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "232"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_right" (formula "73") (term "1,0,0") (ifseqformula "232"))
                                           (builtin "One Step Simplification" (formula "73"))
                                          (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "232"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "replace_known_right" (formula "56") (term "0,0") (ifseqformula "232"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "applyEqReverse" (formula "58") (term "1,0") (ifseqformula "56"))
                                          (rule "hideAuxiliaryEq" (formula "56"))
                                          (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_right" (formula "62") (term "0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "62"))
                                          (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "62"))
                                          (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "62"))
                                          (rule "hideAuxiliaryEq" (formula "62"))
                                          (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "230"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_right" (formula "57") (term "1,0,0") (ifseqformula "230"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "replace_known_right" (formula "69") (term "1,0,0") (ifseqformula "230"))
                                           (builtin "One Step Simplification" (formula "69"))
                                          (rule "replace_known_right" (formula "65") (term "1,0,0") (ifseqformula "230"))
                                           (builtin "One Step Simplification" (formula "65"))
                                          (rule "replace_known_right" (formula "184") (term "1") (ifseqformula "230"))
                                           (builtin "One Step Simplification" (formula "184"))
                                          (rule "applyEq" (formula "63") (term "0") (ifseqformula "7"))
                                          (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "63"))
                                          (rule "hideAuxiliaryEq" (formula "63"))
                                          (rule "applyEq" (formula "5") (term "0") (ifseqformula "68"))
                                          (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "nnf_imp2or" (formula "127") (term "0"))
                                          (rule "nnf_imp2or" (formula "128") (term "0"))
                                          (rule "nnf_imp2or" (formula "97") (term "0"))
                                          (rule "commute_and" (formula "149") (term "0,0"))
                                          (rule "nnf_imp2or" (formula "98") (term "0"))
                                          (rule "lenNonNegative" (formula "107") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "107"))
                                          (rule "seqGetAlphaCast" (formula "112") (term "0"))
                                          (rule "castedGetAny" (formula "112") (term "0"))
                                           (builtin "One Step Simplification" (formula "112"))
                                          (rule "true_left" (formula "112"))
                                          (rule "lenNonNegative" (formula "103") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "103"))
                                          (rule "seqGetAlphaCast" (formula "135") (term "0"))
                                          (rule "castedGetAny" (formula "135") (term "0"))
                                           (builtin "One Step Simplification" (formula "135"))
                                          (rule "true_left" (formula "135"))
                                          (rule "ifthenelse_split" (formula "22") (term "0"))
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "23"))
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "23"))
                                             (rule "hideAuxiliaryEq" (formula "23"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "23"))
                                             (rule "applyEqReverse" (formula "231") (term "0") (ifseqformula "23"))
                                             (rule "hideAuxiliaryEq" (formula "23"))
                                             (rule "replace_known_left" (formula "16") (term "1,0,0") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "replace_known_left" (formula "21") (term "1,0,0") (ifseqformula "20"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "applyEqReverse" (formula "229") (term "0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "21"))
                                             (rule "hideAuxiliaryEq" (formula "21"))
                                             (rule "replace_known_left" (formula "18") (term "1,0,0") (ifseqformula "20"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "applyEqReverse" (formula "19") (term "1,0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "294") (term "0,1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "17") (term "1,0,0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "applyEqReverse" (formula "225") (term "0") (ifseqformula "17"))
                                             (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "17"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "applyEqReverse" (formula "224") (term "0") (ifseqformula "16"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "16"))
                                             (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "replace_known_left" (formula "15") (term "1,0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "15"))
                                             (rule "applyEqReverse" (formula "222") (term "0") (ifseqformula "15"))
                                             (rule "hideAuxiliaryEq" (formula "15"))
                                             (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "14"))
                                             (rule "applyEqReverse" (formula "221") (term "0") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "289") (term "0,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "288") (term "0,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "210") (term "1") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "210"))
                                             (rule "true_left" (formula "210"))
                                             (rule "seqGetAlphaCast" (formula "147") (term "0"))
                                             (rule "castedGetAny" (formula "147") (term "0"))
                                              (builtin "One Step Simplification" (formula "147"))
                                             (rule "true_left" (formula "147"))
                                             (rule "nnf_imp2or" (formula "193") (term "0,0,1,1,0"))
                                             (rule "nnf_imp2or" (formula "193") (term "0,1,1,1,0"))
                                             (rule "nnf_notAnd" (formula "106") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "106") (term "1,0,0"))
                                             (rule "mul_literals" (formula "106") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "106") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "106") (term "1,0,0"))
                                             (rule "mul_literals" (formula "106") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "106") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "106") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "106") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "106") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "106") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "106") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "106") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "106") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "106") (term "1,0,0,0"))
                                             (rule "nnf_imp2or" (formula "106") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "94") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "94") (term "1,0,0"))
                                             (rule "mul_literals" (formula "94") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "94") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0"))
                                             (rule "mul_literals" (formula "94") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "94") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "94") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "94") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "94") (term "1,0,0,0"))
                                             (rule "seqGetAlphaCast" (formula "183") (term "0"))
                                             (rule "castedGetAny" (formula "183") (term "0"))
                                              (builtin "One Step Simplification" (formula "183"))
                                             (rule "true_left" (formula "183"))
                                             (rule "nnf_notAnd" (formula "119") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "119") (term "1,0,0"))
                                             (rule "mul_literals" (formula "119") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "119") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "1,0,0"))
                                             (rule "mul_literals" (formula "119") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "119") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "119") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "119") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "119") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "119") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "119") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "119") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "89") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "89") (term "1,0,0"))
                                             (rule "mul_literals" (formula "89") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "89") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0"))
                                             (rule "mul_literals" (formula "89") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "89") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "89") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "89") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "89") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "89") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "89") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "124") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "124") (term "1,0,0"))
                                             (rule "mul_literals" (formula "124") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "124") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "1,0,0"))
                                             (rule "mul_literals" (formula "124") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "124") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "124") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "124") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "124") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "124") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "124") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "124") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "96") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "96") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "96") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "96") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "1,0,0"))
                                             (rule "mul_literals" (formula "96") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "96") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "96") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "96") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "96") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "96") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "96") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "96") (term "1,0,0,0"))
                                             (rule "lenNonNegative" (formula "121") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "121"))
                                             (rule "nnf_notAnd" (formula "126") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "126") (term "1,0,0"))
                                             (rule "mul_literals" (formula "126") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "126") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0,0"))
                                             (rule "mul_literals" (formula "126") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "126") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "126") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "126") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "126") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "126") (term "1,0,0,0"))
                                             (rule "nnf_imp2or" (formula "179") (term "0,1,0,0,0"))
                                             (rule "lenNonNegative" (formula "98") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "98"))
                                             (rule "seqGetAlphaCast" (formula "186") (term "0"))
                                             (rule "castedGetAny" (formula "186") (term "0"))
                                              (builtin "One Step Simplification" (formula "186"))
                                             (rule "true_left" (formula "186"))
                                             (rule "lenNonNegative" (formula "125") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "125"))
                                             (rule "nnf_imp2or" (formula "179") (term "0,1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "216") (term "0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "216") (term "0,0,0,1"))
                                             (rule "times_zero_1" (formula "216") (term "1,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "216") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "216") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "216") (term "1,0,0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "216") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "216") (term "1,0,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "216") (term "0,1,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "216") (term "0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "216") (term "0,0,0,1,0,0,1"))
                                             (rule "add_zero_left" (formula "216") (term "0,0,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "216") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "216") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "216") (term "1,1,0,0,1"))
                                             (rule "seqGetAlphaCast" (formula "144") (term "0"))
                                             (rule "castedGetAny" (formula "144") (term "0"))
                                              (builtin "One Step Simplification" (formula "144"))
                                             (rule "true_left" (formula "144"))
                                             (rule "nnf_imp2or" (formula "179") (term "0,0,0,0,0,0,0"))
                                             (rule "nnf_imp2or" (formula "137") (term "0"))
                                             (rule "nnf_notAnd" (formula "115") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "115") (term "1,0,0"))
                                             (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "115") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1,0,0"))
                                             (rule "mul_literals" (formula "115") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0"))
                                             (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0"))
                                             (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "193") (term "1,0,0") (inst "i=i") (inst "i_0=i_0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "193") (term "0,0,0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "193") (term "0,1,0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "193") (term "0,0,0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "193") (term "0,1,0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "193") (term "0,0,0,0,1,0,1,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "193") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "193") (term "0,0,0,0,1,0,1,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "193") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "193") (term "0,0,0,0,1,0,1,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "193") (term "0,1,1,0,0,0,1,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "193") (term "0,0,0,0,1,0,1,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "193") (term "0,1,1,0,0,0,1,0,1,0,0"))
                                             (rule "expand_inInt" (formula "193") (term "1,0,0,1,1,0,0"))
                                             (rule "expand_inInt" (formula "193") (term "1,0,0,1,0,1,0,0"))
                                             (rule "replace_int_MIN" (formula "193") (term "0,1,1,0,0,1,1,0,0"))
                                             (rule "replace_int_MAX" (formula "193") (term "1,0,1,0,0,1,1,0,0"))
                                             (rule "replace_int_MIN" (formula "193") (term "0,1,1,0,0,1,0,1,0,0"))
                                             (rule "replace_int_MAX" (formula "193") (term "1,0,1,0,0,1,0,1,0,0"))
                                             (rule "eqSymm" (formula "193") (term "0,0,1,0,0"))
                                             (rule "replace_known_left" (formula "193") (term "0,0,1,0,0") (ifseqformula "114"))
                                              (builtin "One Step Simplification" (formula "193"))
                                             (rule "castedGetAny" (formula "193") (term "0,0,1,0,0,1,0,0"))
                                             (rule "castedGetAny" (formula "193") (term "0,0,1,0,1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "193") (term "1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "193") (term "1,0,0,1,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "193") (term "1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "193") (term "1,0,0,1,0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "193") (term "0,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "193") (term "0,0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "193") (term "1,1,0,0,1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "193") (term "1,1,0,0,0,1,0,0"))
                                             (rule "applyEq" (formula "193") (term "0,1,0,0,1,0,0,0,1,1,0,0") (ifseqformula "114"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "193") (term "1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "193") (term "1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "193") (term "1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "193") (term "1,1,1,0,0,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "193") (term "0,1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "193") (term "1,1,1,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "193") (term "1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "193") (term "1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "193") (term "1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "193") (term "1,1,1,0,0,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "193") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "193") (term "1,1,1,0,0,0,1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "179") (term "1,0") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
                                              (builtin "One Step Simplification" (formula "179") (ifInst ""  (formula "256")) (ifInst ""  (formula "257")) (ifInst ""  (formula "258")) (ifInst ""  (formula "263")) (ifInst ""  (formula "264")) (ifInst ""  (formula "265")) (ifInst ""  (formula "266")) (ifInst ""  (formula "267")) (ifInst ""  (formula "268")) (ifInst ""  (formula "269")) (ifInst ""  (formula "270")) (ifInst ""  (formula "271")) (ifInst ""  (formula "272")) (ifInst ""  (formula "273")) (ifInst ""  (formula "274")) (ifInst ""  (formula "275")) (ifInst ""  (formula "276")) (ifInst ""  (formula "88")) (ifInst ""  (formula "88")))
                                             (rule "insert_constant_string_value" (formula "179") (term "0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "148"))
                                              (builtin "One Step Simplification" (formula "179"))
                                             (rule "insert_constant_string_value" (formula "179") (term "0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "148"))
                                              (builtin "One Step Simplification" (formula "179"))
                                             (rule "insert_constant_string_value" (formula "179") (term "0,0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "148"))
                                              (builtin "One Step Simplification" (formula "179"))
                                             (rule "castDel" (formula "179") (term "0,0,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "castDel" (formula "179") (term "0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "castDel" (formula "179") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                                             (rule "replace_known_right" (formula "179") (term "0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "260"))
                                              (builtin "One Step Simplification" (formula "179") (ifInst ""  (formula "259")) (ifInst ""  (formula "261")))
                                             (rule "castedGetAny" (formula "179") (term "0,1,0,1,1,0"))
                                             (rule "castedGetAny" (formula "179") (term "0,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "castedGetAny" (formula "179") (term "0,0,1,0,1,0,0,1,0"))
                                             (rule "castedGetAny" (formula "179") (term "0,1,0,1,0,0,0,1,0"))
                                             (rule "castedGetAny" (formula "179") (term "0,0,1,0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "179") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,0,0,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "179") (term "1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,0,0,1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "179") (term "1,0,0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,0,0,1,0,0,1,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "179") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "179") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,0,0,1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "179") (term "0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "179") (term "0,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "179") (term "0,0,0,1,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "179") (term "0,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "179") (term "0,0,0,1,0,0,0,0,1,0"))
                                             (rule "applyEq" (formula "179") (term "0,0,0,0,0,0,0,1,0") (ifseqformula "88"))
                                             (rule "replace_known_right" (formula "179") (term "0,0,0,0,0,0,1,0") (ifseqformula "262"))
                                              (builtin "One Step Simplification" (formula "179"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "179") (term "1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "179") (term "1,1,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "179") (term "0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "179") (term "1,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "179") (term "1,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "179") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "179") (term "1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "179") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "179") (term "1,1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "179") (term "1,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "179") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "179") (term "1,1,0,0,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "179") (term "0,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "179") (term "1,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "179") (term "1,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "179") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "179") (term "1,1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "179") (term "0,1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "179") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "179") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "179") (term "1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "179") (term "1,1,0,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "179") (term "0,1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "179") (term "1,1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "179") (term "1,1,1,0,0,1,0,0,1,0"))
                                             (rule "nnf_notAnd" (formula "137") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "137") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "137") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "137") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "137") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "137") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "137") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "137") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "137") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "137") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "137") (term "0,0,0"))
                                             (rule "mul_literals" (formula "137") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "137") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "137") (term "0,0,0"))
                                             (rule "mul_literals" (formula "137") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "115") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "115") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "115") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "115") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "115") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "115") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "115") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "115") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "115") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "115") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "115") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "115") (term "1,1,0,0,0"))
                                             (rule "commute_or" (formula "3") (term "0,0"))
                                             (rule "applyEq" (formula "51") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "51"))
                                             (rule "applyEqReverse" (formula "286") (term "1,0") (ifseqformula "51"))
                                              (builtin "One Step Simplification" (formula "286"))
                                             (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "51"))
                                             (rule "hideAuxiliaryEq" (formula "51"))
                                             (rule "nnf_notAnd" (formula "115") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "115") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "115") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "115") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "115") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "115") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "115") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "115") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "115") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "115") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "115") (term "1,1,0,0,0"))
                                             (rule "commute_or" (formula "1") (term "0,0"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "56"))
                                             (rule "close" (formula "285") (ifseqformula "1"))
                                          )
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "22"))
                                             (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                                             (rule "hideAuxiliaryEq" (formula "22"))
                                             (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "replace_known_right" (formula "22") (term "1,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "replace_known_right" (formula "20") (term "1,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "226"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_right" (formula "16") (term "1,0,0") (ifseqformula "226"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "226"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "226"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "19") (term "1,0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_right" (formula "219") (term "1") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "219"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "seqGetAlphaCast" (formula "154") (term "0"))
                                             (rule "castedGetAny" (formula "154") (term "0"))
                                              (builtin "One Step Simplification" (formula "154"))
                                             (rule "true_left" (formula "154"))
                                             (rule "nnf_imp2or" (formula "200") (term "0,0,1,1,0"))
                                             (rule "nnf_imp2or" (formula "200") (term "0,1,1,1,0"))
                                             (rule "nnf_notAnd" (formula "113") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "113") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "113") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "113") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "113") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "113") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "113") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "113") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "113") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "113") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "113") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "113") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "113") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "113") (term "1,0,0"))
                                             (rule "mul_literals" (formula "113") (term "1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "113") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "101") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "101") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "101") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "101") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "101") (term "1,0,0"))
                                             (rule "mul_literals" (formula "101") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "101") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "101") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "101") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "101") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "101") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "101") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "101") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "101") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "101") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "126") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "126") (term "1,0,0"))
                                             (rule "mul_literals" (formula "126") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "126") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0,0"))
                                             (rule "mul_literals" (formula "126") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "126") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "126") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "126") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "126") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "126") (term "1,0,0,0"))
                                             (rule "seqGetAlphaCast" (formula "190") (term "0"))
                                             (rule "castedGetAny" (formula "190") (term "0"))
                                              (builtin "One Step Simplification" (formula "190"))
                                             (rule "true_left" (formula "190"))
                                             (rule "nnf_notAnd" (formula "96") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "96") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "96") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "96") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "96") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "96") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "96") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "96") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "96") (term "1,0,0"))
                                             (rule "mul_literals" (formula "96") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "96") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "1,0,0"))
                                             (rule "mul_literals" (formula "96") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "131") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "131") (term "1,0,0"))
                                             (rule "mul_literals" (formula "131") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "131") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "131") (term "1,0,0"))
                                             (rule "mul_literals" (formula "131") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "131") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "131") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "131") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "131") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "131") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "131") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "131") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "131") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "131") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "103") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "103") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "103") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "103") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "103") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "103") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "103") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "103") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "103") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "103") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "103") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "103") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "103") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "103") (term "1,0,0"))
                                             (rule "mul_literals" (formula "103") (term "1,1,0,0"))
                                             (rule "lenNonNegative" (formula "128") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "128"))
                                             (rule "nnf_notAnd" (formula "133") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "133") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "133") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "133") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "133") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "133") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "133") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "133") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "133") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "133") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "133") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "133") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "133") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "133") (term "1,0,0"))
                                             (rule "mul_literals" (formula "133") (term "1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "186") (term "0,1,0,0,0"))
                                             (rule "lenNonNegative" (formula "105") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "105"))
                                             (rule "seqGetAlphaCast" (formula "193") (term "0"))
                                             (rule "castedGetAny" (formula "193") (term "0"))
                                              (builtin "One Step Simplification" (formula "193"))
                                             (rule "true_left" (formula "193"))
                                             (rule "lenNonNegative" (formula "132") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "132"))
                                             (rule "nnf_imp2or" (formula "186") (term "0,1,0,0,0,0"))
                                             (rule "seqGetAlphaCast" (formula "151") (term "0"))
                                             (rule "castedGetAny" (formula "151") (term "0"))
                                              (builtin "One Step Simplification" (formula "151"))
                                             (rule "true_left" (formula "151"))
                                             (rule "nnf_notAnd" (formula "225") (term "0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "225") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "225") (term "1,0,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "225") (term "0,1,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "225") (term "0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "225") (term "0,0,0,1,0,0,1"))
                                             (rule "add_zero_left" (formula "225") (term "0,0,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "225") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "225") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "225") (term "1,1,0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "225") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "225") (term "1,0,0,0,0,0,1"))
                                             (rule "add_zero_right" (formula "225") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "225") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "225") (term "1,0,0,0,1"))
                                             (rule "nnf_imp2or" (formula "186") (term "0,0,0,0,0,0,0"))
                                             (rule "nnf_imp2or" (formula "144") (term "0"))
                                             (rule "nnf_notAnd" (formula "122") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "122") (term "1,0,0"))
                                             (rule "mul_literals" (formula "122") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "122") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "122") (term "1,0,0"))
                                             (rule "mul_literals" (formula "122") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "123") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "123") (term "1,0,0"))
                                             (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "123") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "1,0,0"))
                                             (rule "mul_literals" (formula "123") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "92") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "92") (term "1,0,0"))
                                             (rule "mul_literals" (formula "92") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "92") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "92") (term "1,0,0"))
                                             (rule "mul_literals" (formula "92") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "93") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "93") (term "1,0,0"))
                                             (rule "mul_literals" (formula "93") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "93") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "1,0,0"))
                                             (rule "mul_literals" (formula "93") (term "1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "200") (term "1,0,0") (inst "i=i") (inst "i_0=i_0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "200") (term "0,1,0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "200") (term "0,0,0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "200") (term "0,1,0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "200") (term "0,0,0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "200") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "200") (term "0,0,0,0,1,0,1,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "200") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "200") (term "0,0,0,0,1,0,1,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "200") (term "0,0,0,0,1,0,1,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "200") (term "0,1,1,0,0,0,1,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "200") (term "0,0,0,0,1,0,1,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "200") (term "0,1,1,0,0,0,1,0,1,0,0"))
                                             (rule "expand_inInt" (formula "200") (term "1,0,0,1,1,0,0"))
                                             (rule "expand_inInt" (formula "200") (term "1,0,0,1,0,1,0,0"))
                                             (rule "replace_int_MAX" (formula "200") (term "1,0,1,0,0,1,1,0,0"))
                                             (rule "replace_int_MIN" (formula "200") (term "0,1,1,0,0,1,1,0,0"))
                                             (rule "replace_int_MAX" (formula "200") (term "1,0,1,0,0,1,0,1,0,0"))
                                             (rule "replace_int_MIN" (formula "200") (term "0,1,1,0,0,1,0,1,0,0"))
                                             (rule "eqSymm" (formula "200") (term "0,0,1,0,0"))
                                             (rule "replace_known_left" (formula "200") (term "0,0,1,0,0") (ifseqformula "121"))
                                              (builtin "One Step Simplification" (formula "200"))
                                             (rule "castedGetAny" (formula "200") (term "0,0,1,0,1,1,0,0"))
                                             (rule "castedGetAny" (formula "200") (term "0,0,1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "200") (term "1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "200") (term "1,0,0,1,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "200") (term "1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "200") (term "1,0,0,1,0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "200") (term "0,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "200") (term "1,1,0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "200") (term "0,0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "200") (term "1,1,0,0,1,1,0,0"))
                                             (rule "applyEq" (formula "200") (term "0,1,0,0,1,0,0,0,1,1,0,0") (ifseqformula "121"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "200") (term "1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "200") (term "1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "200") (term "1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "200") (term "1,1,1,0,0,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "200") (term "0,1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "200") (term "1,1,1,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "200") (term "1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "200") (term "1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "200") (term "1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "200") (term "1,1,1,0,0,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "200") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "200") (term "1,1,1,0,0,0,1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "186") (term "1,0") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
                                              (builtin "One Step Simplification" (formula "186") (ifInst ""  (formula "265")) (ifInst ""  (formula "266")) (ifInst ""  (formula "267")) (ifInst ""  (formula "272")) (ifInst ""  (formula "273")) (ifInst ""  (formula "274")) (ifInst ""  (formula "275")) (ifInst ""  (formula "276")) (ifInst ""  (formula "277")) (ifInst ""  (formula "278")) (ifInst ""  (formula "279")) (ifInst ""  (formula "280")) (ifInst ""  (formula "281")) (ifInst ""  (formula "282")) (ifInst ""  (formula "283")) (ifInst ""  (formula "284")) (ifInst ""  (formula "285")) (ifInst ""  (formula "95")) (ifInst ""  (formula "95")))
                                             (rule "insert_constant_string_value" (formula "186") (term "0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "155"))
                                              (builtin "One Step Simplification" (formula "186"))
                                             (rule "insert_constant_string_value" (formula "186") (term "0,0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "155"))
                                              (builtin "One Step Simplification" (formula "186"))
                                             (rule "insert_constant_string_value" (formula "186") (term "0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "155"))
                                              (builtin "One Step Simplification" (formula "186"))
                                             (rule "castDel" (formula "186") (term "0,0,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "castDel" (formula "186") (term "0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "castDel" (formula "186") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                                             (rule "replace_known_right" (formula "186") (term "0,1,0,0,0,0,0,0,1,0") (ifseqformula "270"))
                                              (builtin "One Step Simplification" (formula "186") (ifInst ""  (formula "268")) (ifInst ""  (formula "269")))
                                             (rule "castedGetAny" (formula "186") (term "0,0,1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "186") (term "0,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "castedGetAny" (formula "186") (term "0,1,0,1,1,0"))
                                             (rule "castedGetAny" (formula "186") (term "0,1,0,1,0,0,0,1,0"))
                                             (rule "castedGetAny" (formula "186") (term "0,0,1,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "186") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,0,0,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "186") (term "1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,0,0,1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "186") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "186") (term "1,0,0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,0,0,1,0,0,1,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "186") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,0,0,1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "186") (term "0,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "186") (term "0,0,0,1,0,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "186") (term "0,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "186") (term "0,0,0,1,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "186") (term "0,0,0,1,1,0"))
                                             (rule "applyEq" (formula "186") (term "0,0,0,0,0,0,0,1,0") (ifseqformula "95"))
                                             (rule "replace_known_right" (formula "186") (term "0,0,0,0,0,0,1,0") (ifseqformula "271"))
                                              (builtin "One Step Simplification" (formula "186"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "186") (term "1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "186") (term "1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "186") (term "1,1,1,0,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "186") (term "0,1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "186") (term "1,1,1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "186") (term "1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "186") (term "1,1,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "186") (term "0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "186") (term "1,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "186") (term "1,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "186") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "186") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "186") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "186") (term "0,1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "186") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "186") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "186") (term "1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "186") (term "1,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "186") (term "0,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "186") (term "1,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "186") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "186") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "186") (term "1,1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "186") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "186") (term "1,1,1,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "144") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "144") (term "0,0,0"))
                                             (rule "mul_literals" (formula "144") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "144") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "144") (term "0,0,0"))
                                             (rule "mul_literals" (formula "144") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "144") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "144") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "144") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "144") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "144") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "144") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "144") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "144") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "144") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "122") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "122") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "122") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "122") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "122") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "122") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "122") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "122") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "122") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "122") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "122") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "122") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "122") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "122") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "122") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "123") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "123") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "123") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "123") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "123") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "123") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "123") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "123") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "123") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "123") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "123") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "123") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "123") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "123") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "92") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "92") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "92") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "92") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "92") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "92") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "92") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "92") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "92") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "92") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "92") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "92") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "92") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "92") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "92") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "93") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "93") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "93") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "93") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "93") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "93") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "93") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "93") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "93") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "93") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "93") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "93") (term "1,1,0,0,0"))
                                             (rule "commute_or" (formula "6") (term "0,0"))
                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "58"))
                                             (rule "applyEqReverse" (formula "295") (term "1,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "commute_or" (formula "4") (term "0,0"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "63"))
                                             (rule "applyEqReverse" (formula "294") (term "1,1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "lenNonNegative" (formula "223") (term "0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "1"))
                                             (rule "commute_or" (formula "4") (term "0,0"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "16"))
                                             (rule "applyEqReverse" (formula "294") (term "0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "294"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "nnf_notAnd" (formula "198") (term "0,0,1,1,1,0"))
                                             (rule "nnf_notAnd" (formula "198") (term "0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "2") (term "0,0"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "2"))
                                             (rule "close" (formula "293") (ifseqformula "17"))
                                          )
                                       )
                                    )
                                    (branch "CUT: password_15_B = password_15_A FALSE"
                                        (builtin "One Step Simplification" (formula "229"))
                                       (rule "true_left" (formula "229"))
                                       (rule "nnf_imp2or" (formula "235") (term "0,1"))
                                       (rule "seqGetAlphaCast" (formula "148") (term "0"))
                                       (rule "castedGetAny" (formula "148") (term "0"))
                                        (builtin "One Step Simplification" (formula "148"))
                                       (rule "true_left" (formula "148"))
                                       (rule "lenNonNegative" (formula "145") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "145"))
                                       (rule "seqGetAlphaCast" (formula "110") (term "0"))
                                       (rule "castedGetAny" (formula "110") (term "0"))
                                        (builtin "One Step Simplification" (formula "110"))
                                       (rule "true_left" (formula "110"))
                                       (rule "ifthenelse_split" (formula "70") (term "0"))
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "73") (term "1,0") (ifseqformula "71"))
                                          (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "71"))
                                          (rule "hideAuxiliaryEq" (formula "71"))
                                          (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "70"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "55") (term "0,0") (ifseqformula "69"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "applyEqReverse" (formula "57") (term "1,0") (ifseqformula "55"))
                                          (rule "hideAuxiliaryEq" (formula "55"))
                                          (rule "replace_known_left" (formula "56") (term "1,0,0") (ifseqformula "68"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "applyEqReverse" (formula "58") (term "1,0") (ifseqformula "56"))
                                          (rule "hideAuxiliaryEq" (formula "56"))
                                          (rule "replace_known_left" (formula "57") (term "1,0,0") (ifseqformula "67"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "applyEqReverse" (formula "267") (term "0") (ifseqformula "57"))
                                          (rule "applyEqReverse" (formula "227") (term "0,1") (ifseqformula "57"))
                                          (rule "hideAuxiliaryEq" (formula "57"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "66"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "65"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "302") (term "1,1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "301") (term "1,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "56") (term "0,0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "applyEqReverse" (formula "300") (term "1,0") (ifseqformula "56"))
                                          (rule "applyEqReverse" (formula "58") (term "1,0") (ifseqformula "56"))
                                          (rule "hideAuxiliaryEq" (formula "56"))
                                          (rule "replace_known_left" (formula "66") (term "1,0,0") (ifseqformula "62"))
                                           (builtin "One Step Simplification" (formula "66"))
                                          (rule "applyEqReverse" (formula "230") (term "0") (ifseqformula "66"))
                                          (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "66"))
                                          (rule "hideAuxiliaryEq" (formula "66"))
                                          (rule "replace_known_left" (formula "59") (term "1,0,0") (ifseqformula "62"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "59"))
                                          (rule "applyEqReverse" (formula "228") (term "0") (ifseqformula "59"))
                                          (rule "hideAuxiliaryEq" (formula "59"))
                                          (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "applyEqReverse" (formula "228") (term "0") (ifseqformula "63"))
                                          (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "63"))
                                          (rule "hideAuxiliaryEq" (formula "63"))
                                          (rule "replace_known_left" (formula "57") (term "1,0,0") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "57"))
                                          (rule "applyEqReverse" (formula "226") (term "0") (ifseqformula "57"))
                                          (rule "hideAuxiliaryEq" (formula "57"))
                                          (rule "eqSymm" (formula "218"))
                                          (rule "eqSymm" (formula "295") (term "1"))
                                          (rule "eqSymm" (formula "295") (term "0"))
                                          (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "258"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "225"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "226"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "replace_known_left" (formula "175") (term "1") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "175"))
                                          (rule "true_left" (formula "175"))
                                          (rule "nnf_imp2or" (formula "120") (term "0"))
                                          (rule "nnf_imp2or" (formula "121") (term "0"))
                                          (rule "nnf_imp2or" (formula "90") (term "0"))
                                          (rule "commute_and" (formula "142") (term "0,0"))
                                          (rule "nnf_imp2or" (formula "91") (term "0"))
                                          (rule "lenNonNegative" (formula "100") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "100"))
                                          (rule "seqGetAlphaCast" (formula "105") (term "0"))
                                          (rule "castedGetAny" (formula "105") (term "0"))
                                           (builtin "One Step Simplification" (formula "105"))
                                          (rule "true_left" (formula "105"))
                                          (rule "lenNonNegative" (formula "96") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "96"))
                                          (rule "seqGetAlphaCast" (formula "128") (term "0"))
                                          (rule "castedGetAny" (formula "128") (term "0"))
                                           (builtin "One Step Simplification" (formula "128"))
                                          (rule "true_left" (formula "128"))
                                          (rule "ifthenelse_split" (formula "19") (term "0"))
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "replace_known_left" (formula "15") (term "1,0,0") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "applyEqReverse" (formula "223") (term "0") (ifseqformula "15"))
                                             (rule "applyEqReverse" (formula "217") (term "0,1") (ifseqformula "15"))
                                             (rule "hideAuxiliaryEq" (formula "15"))
                                             (rule "replace_known_left" (formula "17") (term "1,0,0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "eqSymm" (formula "17"))
                                             (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "17"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "14") (term "1,0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "16") (term "1,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "289") (term "1,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "288") (term "1,1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "applyEqReverse" (formula "216") (term "0") (ifseqformula "10"))
                                             (rule "applyEqReverse" (formula "210") (term "0,1") (ifseqformula "10"))
                                             (rule "hideAuxiliaryEq" (formula "10"))
                                             (rule "replace_known_left" (formula "11") (term "1,0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "replace_known_left" (formula "13") (term "1,0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "10"))
                                             (rule "applyEqReverse" (formula "286") (term "1,0") (ifseqformula "10"))
                                             (rule "hideAuxiliaryEq" (formula "10"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "285") (term "1,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "eqSymm" (formula "207"))
                                             (rule "eqSymm" (formula "284") (term "0"))
                                             (rule "eqSymm" (formula "284") (term "1"))
                                             (rule "replace_known_left" (formula "284") (term "1") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "284") (ifInst ""  (formula "9")))
                                             (rule "closeTrue" (formula "284"))
                                          )
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "220"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "220"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "15") (term "1,0,0") (ifseqformula "220"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "220"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "16"))
                                             (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "replace_known_right" (formula "16") (term "1,0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "replace_known_right" (formula "14") (term "1,0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_right" (formula "19") (term "1,0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "14") (term "1,0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_right" (formula "211") (term "1") (ifseqformula "218"))
                                              (builtin "One Step Simplification" (formula "211"))
                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "16") (term "1,0") (ifseqformula "15"))
                                             (rule "hideAuxiliaryEq" (formula "15"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "seqGetAlphaCast" (formula "147") (term "0"))
                                             (rule "castedGetAny" (formula "147") (term "0"))
                                              (builtin "One Step Simplification" (formula "147"))
                                             (rule "true_left" (formula "147"))
                                             (rule "nnf_imp2or" (formula "192") (term "0,0,1,1,0"))
                                             (rule "nnf_imp2or" (formula "192") (term "0,1,1,1,0"))
                                             (rule "nnf_imp2or" (formula "106") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "106") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "106") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "106") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "106") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "106") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "106") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "106") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "106") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "106") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "106") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "106") (term "1,0,0"))
                                             (rule "mul_literals" (formula "106") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "106") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "106") (term "1,0,0"))
                                             (rule "mul_literals" (formula "106") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "94") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "94") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "94") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "94") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "94") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "94") (term "1,0,0"))
                                             (rule "mul_literals" (formula "94") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "94") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0"))
                                             (rule "mul_literals" (formula "94") (term "1,1,0,0"))
                                             (rule "seqGetAlphaCast" (formula "182") (term "0"))
                                             (rule "castedGetAny" (formula "182") (term "0"))
                                              (builtin "One Step Simplification" (formula "182"))
                                             (rule "true_left" (formula "182"))
                                             (rule "nnf_notAnd" (formula "119") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "119") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "119") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "119") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "119") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "119") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "119") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "119") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "119") (term "1,0,0"))
                                             (rule "mul_literals" (formula "119") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "119") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "1,0,0"))
                                             (rule "mul_literals" (formula "119") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "89") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "89") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "89") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "89") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "89") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "89") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "89") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "89") (term "1,0,0"))
                                             (rule "mul_literals" (formula "89") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "89") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0"))
                                             (rule "mul_literals" (formula "89") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "124") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "124") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "124") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "124") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "124") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "124") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "124") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "124") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "124") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "124") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "124") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "1,0,0"))
                                             (rule "mul_literals" (formula "124") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "96") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "96") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "96") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "96") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "96") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "96") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "96") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "96") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "96") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "96") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "96") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "1,0,0"))
                                             (rule "mul_literals" (formula "96") (term "1,1,0,0"))
                                             (rule "lenNonNegative" (formula "121") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "121"))
                                             (rule "nnf_notAnd" (formula "126") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "126") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "126") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "126") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "126") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "126") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "126") (term "1,0,0"))
                                             (rule "mul_literals" (formula "126") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "126") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0,0"))
                                             (rule "mul_literals" (formula "126") (term "1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "178") (term "0,1,0,0,0"))
                                             (rule "lenNonNegative" (formula "98") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "98"))
                                             (rule "seqGetAlphaCast" (formula "185") (term "0"))
                                             (rule "castedGetAny" (formula "185") (term "0"))
                                              (builtin "One Step Simplification" (formula "185"))
                                             (rule "true_left" (formula "185"))
                                             (rule "nnf_notAnd" (formula "218") (term "0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "218") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "218") (term "1,0,0,0,0,0,1"))
                                             (rule "add_zero_right" (formula "218") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "218") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "218") (term "1,0,0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "218") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "218") (term "1,0,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "218") (term "0,1,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "218") (term "0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "218") (term "0,0,0,1,0,0,1"))
                                             (rule "add_zero_left" (formula "218") (term "0,0,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "218") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "218") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "218") (term "1,1,0,0,1"))
                                             (rule "lenNonNegative" (formula "125") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "125"))
                                             (rule "nnf_imp2or" (formula "178") (term "0,1,0,0,0,0"))
                                             (rule "seqGetAlphaCast" (formula "144") (term "0"))
                                             (rule "castedGetAny" (formula "144") (term "0"))
                                              (builtin "One Step Simplification" (formula "144"))
                                             (rule "true_left" (formula "144"))
                                             (rule "nnf_imp2or" (formula "178") (term "0,0,0,0,0,0,0"))
                                             (rule "nnf_imp2or" (formula "137") (term "0"))
                                             (rule "nnf_notAnd" (formula "115") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "115") (term "1,0,0"))
                                             (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "115") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1,0,0"))
                                             (rule "mul_literals" (formula "115") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0"))
                                             (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0"))
                                             (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "192") (term "1,0,0") (inst "i=i") (inst "i_0=i_0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "192") (term "0,1,0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "192") (term "0,0,0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "192") (term "0,1,0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "192") (term "0,0,0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "192") (term "0,0,0,0,1,0,1,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "192") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "192") (term "0,0,0,0,1,0,1,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "192") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "192") (term "0,0,0,0,1,0,1,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "192") (term "0,1,1,0,0,0,1,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "192") (term "0,0,0,0,1,0,1,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "192") (term "0,1,1,0,0,0,1,0,1,0,0"))
                                             (rule "expand_inInt" (formula "192") (term "1,0,0,1,1,0,0"))
                                             (rule "expand_inInt" (formula "192") (term "1,0,0,1,0,1,0,0"))
                                             (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,1,0,0"))
                                             (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,1,0,0"))
                                             (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,0,1,0,0"))
                                             (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,0,1,0,0"))
                                             (rule "eqSymm" (formula "192") (term "0,0,1,0,0"))
                                             (rule "replace_known_left" (formula "192") (term "0,0,1,0,0") (ifseqformula "114"))
                                              (builtin "One Step Simplification" (formula "192"))
                                             (rule "castedGetAny" (formula "192") (term "0,0,1,0,1,1,0,0"))
                                             (rule "castedGetAny" (formula "192") (term "0,0,1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,1,1,0,0"))
                                             (rule "applyEq" (formula "192") (term "0,1,0,0,1,0,0,0,1,1,0,0") (ifseqformula "114"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "178") (term "1,0") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
                                              (builtin "One Step Simplification" (formula "178") (ifInst ""  (formula "260")) (ifInst ""  (formula "261")) (ifInst ""  (formula "262")) (ifInst ""  (formula "267")) (ifInst ""  (formula "268")) (ifInst ""  (formula "269")) (ifInst ""  (formula "270")) (ifInst ""  (formula "271")) (ifInst ""  (formula "272")) (ifInst ""  (formula "273")) (ifInst ""  (formula "274")) (ifInst ""  (formula "275")) (ifInst ""  (formula "276")) (ifInst ""  (formula "277")) (ifInst ""  (formula "278")) (ifInst ""  (formula "279")) (ifInst ""  (formula "280")) (ifInst ""  (formula "88")) (ifInst ""  (formula "88")))
                                             (rule "insert_constant_string_value" (formula "178") (term "0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "148"))
                                              (builtin "One Step Simplification" (formula "178"))
                                             (rule "insert_constant_string_value" (formula "178") (term "0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "148"))
                                              (builtin "One Step Simplification" (formula "178"))
                                             (rule "insert_constant_string_value" (formula "178") (term "0,0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "148"))
                                              (builtin "One Step Simplification" (formula "178"))
                                             (rule "castDel" (formula "178") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                                             (rule "castDel" (formula "178") (term "0,0,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "castDel" (formula "178") (term "0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "replace_known_right" (formula "178") (term "0,1,0,0,0,0,0,0,1,0") (ifseqformula "265"))
                                              (builtin "One Step Simplification" (formula "178") (ifInst ""  (formula "263")) (ifInst ""  (formula "264")))
                                             (rule "castedGetAny" (formula "178") (term "0,1,0,1,1,0"))
                                             (rule "castedGetAny" (formula "178") (term "0,0,1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "178") (term "0,1,0,1,0,0,0,1,0"))
                                             (rule "castedGetAny" (formula "178") (term "0,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "castedGetAny" (formula "178") (term "0,0,1,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "178") (term "1,0,0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,0,0,1,0,0,1,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "178") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,0,0,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "178") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "178") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,0,0,1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "178") (term "1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,0,0,1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "178") (term "0,0,0,1,0,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "178") (term "0,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "178") (term "0,0,0,1,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "178") (term "0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "178") (term "0,0,0,1,0,0,0,1,0"))
                                             (rule "applyEq" (formula "178") (term "0,0,0,0,0,0,0,1,0") (ifseqformula "88"))
                                             (rule "replace_known_right" (formula "178") (term "0,0,0,0,0,0,1,0") (ifseqformula "266"))
                                              (builtin "One Step Simplification" (formula "178"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "178") (term "1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "178") (term "1,1,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "178") (term "0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "178") (term "1,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "178") (term "1,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "178") (term "1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "178") (term "1,1,0,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "178") (term "0,1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "178") (term "1,1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "178") (term "1,1,1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "178") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "178") (term "1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "178") (term "1,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "178") (term "0,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "178") (term "1,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "178") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "178") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "178") (term "1,1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "178") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "178") (term "1,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "178") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "178") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "178") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "178") (term "0,1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "178") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "nnf_notAnd" (formula "137") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "137") (term "0,0,0"))
                                             (rule "mul_literals" (formula "137") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "137") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "137") (term "0,0,0"))
                                             (rule "mul_literals" (formula "137") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "137") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "137") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "137") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "137") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "137") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "137") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "137") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "137") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "137") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "115") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "115") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "115") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "115") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "115") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "115") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "115") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "115") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "115") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "115") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "115") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "116") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "85") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "85") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "85") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "85") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "85") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "85") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "85") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "85") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "85") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "85") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "85") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                             (rule "lenNonNegative" (formula "218") (term "0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "1"))
                                             (rule "nnf_notAnd" (formula "193") (term "0,0,1,1,1,0"))
                                             (rule "nnf_notAnd" (formula "193") (term "0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "4") (term "0,0"))
                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "4"))
                                             (rule "eqSymm" (formula "15"))
                                             (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "15"))
                                             (rule "applyEqReverse" (formula "291") (term "1,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "291"))
                                             (rule "hideAuxiliaryEq" (formula "15"))
                                             (rule "lenNonNegative" (formula "218") (term "1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "1"))
                                             (rule "nnf_imp2or" (formula "193") (term "0,0,1,0,0"))
                                             (rule "commute_or" (formula "3") (term "0,0"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "17"))
                                             (rule "close" (formula "291") (ifseqformula "17"))
                                          )
                                       )
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "70"))
                                          (rule "applyEqReverse" (formula "72") (term "1,0") (ifseqformula "70"))
                                          (rule "hideAuxiliaryEq" (formula "70"))
                                          (rule "replace_known_right" (formula "63") (term "0,0") (ifseqformula "233"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "63"))
                                          (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "63"))
                                          (rule "hideAuxiliaryEq" (formula "63"))
                                          (rule "replace_known_right" (formula "70") (term "1,0,0") (ifseqformula "232"))
                                           (builtin "One Step Simplification" (formula "70"))
                                          (rule "replace_known_right" (formula "58") (term "1,0,0") (ifseqformula "232"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "replace_known_right" (formula "72") (term "1,0,0") (ifseqformula "232"))
                                           (builtin "One Step Simplification" (formula "72"))
                                          (rule "replace_known_right" (formula "66") (term "1,0,0") (ifseqformula "232"))
                                           (builtin "One Step Simplification" (formula "66"))
                                          (rule "replace_known_right" (formula "60") (term "1,0,0") (ifseqformula "232"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "232"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_right" (formula "56") (term "0,0") (ifseqformula "232"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "applyEqReverse" (formula "58") (term "1,0") (ifseqformula "56"))
                                          (rule "hideAuxiliaryEq" (formula "56"))
                                          (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "replace_known_right" (formula "184") (term "1") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "184"))
                                          (rule "applyEq" (formula "69") (term "0") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "71") (term "1,0") (ifseqformula "69"))
                                          (rule "hideAuxiliaryEq" (formula "69"))
                                          (rule "applyEq" (formula "7") (term "0") (ifseqformula "63"))
                                          (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "nnf_imp2or" (formula "127") (term "0"))
                                          (rule "nnf_imp2or" (formula "128") (term "0"))
                                          (rule "nnf_imp2or" (formula "97") (term "0"))
                                          (rule "commute_and" (formula "149") (term "0,0"))
                                          (rule "nnf_imp2or" (formula "98") (term "0"))
                                          (rule "lenNonNegative" (formula "107") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "107"))
                                          (rule "seqGetAlphaCast" (formula "112") (term "0"))
                                          (rule "castedGetAny" (formula "112") (term "0"))
                                           (builtin "One Step Simplification" (formula "112"))
                                          (rule "true_left" (formula "112"))
                                          (rule "lenNonNegative" (formula "103") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "103"))
                                          (rule "seqGetAlphaCast" (formula "135") (term "0"))
                                          (rule "castedGetAny" (formula "135") (term "0"))
                                           (builtin "One Step Simplification" (formula "135"))
                                          (rule "true_left" (formula "135"))
                                          (rule "ifthenelse_split" (formula "22") (term "0"))
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "23"))
                                             (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "23"))
                                             (rule "hideAuxiliaryEq" (formula "23"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "303") (term "0,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "302") (term "0,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "eqSymm" (formula "301") (term "0"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "20"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "301") (term "0,1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "15") (term "1,0,0") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "applyEqReverse" (formula "229") (term "0") (ifseqformula "15"))
                                             (rule "applyEqReverse" (formula "222") (term "0,0") (ifseqformula "15"))
                                             (rule "hideAuxiliaryEq" (formula "15"))
                                             (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "applyEqReverse" (formula "16") (term "1,0") (ifseqformula "15"))
                                             (rule "applyEqReverse" (formula "299") (term "1,0") (ifseqformula "15"))
                                             (rule "hideAuxiliaryEq" (formula "15"))
                                             (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "14") (term "1,0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_left" (formula "13") (term "1,0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "226") (term "0") (ifseqformula "13"))
                                             (rule "applyEqReverse" (formula "219") (term "0,0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "14"))
                                             (rule "applyEqReverse" (formula "226") (term "0") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "295") (term "0,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "applyEqReverse" (formula "15") (term "1,0") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "applyEqReverse" (formula "224") (term "0") (ifseqformula "14"))
                                             (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "applyEqReverse" (formula "222") (term "0") (ifseqformula "12"))
                                             (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "12"))
                                             (rule "hideAuxiliaryEq" (formula "12"))
                                             (rule "eqSymm" (formula "291") (term "0"))
                                             (rule "replace_known_left" (formula "210") (term "1") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "210"))
                                             (rule "true_left" (formula "210"))
                                             (rule "seqGetAlphaCast" (formula "147") (term "0"))
                                             (rule "castedGetAny" (formula "147") (term "0"))
                                              (builtin "One Step Simplification" (formula "147"))
                                             (rule "true_left" (formula "147"))
                                             (rule "nnf_imp2or" (formula "193") (term "0,0,1,1,0"))
                                             (rule "nnf_imp2or" (formula "193") (term "0,1,1,1,0"))
                                             (rule "nnf_notAnd" (formula "106") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "106") (term "1,0,0"))
                                             (rule "mul_literals" (formula "106") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "106") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "106") (term "1,0,0"))
                                             (rule "mul_literals" (formula "106") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "106") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "106") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "106") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "106") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "106") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "106") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "106") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "106") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "106") (term "1,0,0,0"))
                                             (rule "nnf_imp2or" (formula "106") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "94") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "94") (term "1,0,0"))
                                             (rule "mul_literals" (formula "94") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "94") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0"))
                                             (rule "mul_literals" (formula "94") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "94") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "94") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "94") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "94") (term "1,0,0,0"))
                                             (rule "seqGetAlphaCast" (formula "183") (term "0"))
                                             (rule "castedGetAny" (formula "183") (term "0"))
                                              (builtin "One Step Simplification" (formula "183"))
                                             (rule "true_left" (formula "183"))
                                             (rule "nnf_notAnd" (formula "119") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "119") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "119") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "119") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "119") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "119") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "119") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "119") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "119") (term "1,0,0"))
                                             (rule "mul_literals" (formula "119") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "119") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "1,0,0"))
                                             (rule "mul_literals" (formula "119") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "89") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "89") (term "1,0,0"))
                                             (rule "mul_literals" (formula "89") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "89") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0"))
                                             (rule "mul_literals" (formula "89") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "89") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "89") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "89") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "89") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "89") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "89") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "124") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "124") (term "1,0,0"))
                                             (rule "mul_literals" (formula "124") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "124") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "1,0,0"))
                                             (rule "mul_literals" (formula "124") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "124") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "124") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "124") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "124") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "124") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "124") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "124") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "96") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "96") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "96") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "96") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "96") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "96") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "96") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "96") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "96") (term "1,0,0"))
                                             (rule "mul_literals" (formula "96") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "96") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "1,0,0"))
                                             (rule "mul_literals" (formula "96") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "126") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "126") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "126") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "126") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "126") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "126") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "126") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "126") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "126") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0,0"))
                                             (rule "mul_literals" (formula "126") (term "1,1,0,0"))
                                             (rule "lenNonNegative" (formula "121") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "121"))
                                             (rule "nnf_imp2or" (formula "179") (term "0,1,0,0,0"))
                                             (rule "lenNonNegative" (formula "98") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "98"))
                                             (rule "seqGetAlphaCast" (formula "186") (term "0"))
                                             (rule "castedGetAny" (formula "186") (term "0"))
                                              (builtin "One Step Simplification" (formula "186"))
                                             (rule "true_left" (formula "186"))
                                             (rule "nnf_notAnd" (formula "218") (term "0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "218") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "218") (term "1,0,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "218") (term "0,1,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "218") (term "0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "218") (term "0,0,0,1,0,0,1"))
                                             (rule "add_zero_left" (formula "218") (term "0,0,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "218") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "218") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "218") (term "1,1,0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "218") (term "0,0,0,1"))
                                             (rule "times_zero_1" (formula "218") (term "1,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "218") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "218") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "218") (term "1,0,0,0,1"))
                                             (rule "lenNonNegative" (formula "125") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "125"))
                                             (rule "nnf_imp2or" (formula "179") (term "0,1,0,0,0,0"))
                                             (rule "seqGetAlphaCast" (formula "144") (term "0"))
                                             (rule "castedGetAny" (formula "144") (term "0"))
                                              (builtin "One Step Simplification" (formula "144"))
                                             (rule "true_left" (formula "144"))
                                             (rule "nnf_imp2or" (formula "179") (term "0,0,0,0,0,0,0"))
                                             (rule "nnf_imp2or" (formula "137") (term "0"))
                                             (rule "nnf_notAnd" (formula "115") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "115") (term "1,0,0"))
                                             (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "115") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1,0,0"))
                                             (rule "mul_literals" (formula "115") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0"))
                                             (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0"))
                                             (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "193") (term "1,0,0") (inst "i=i") (inst "i_0=i_0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "193") (term "0,1,0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "193") (term "0,0,0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "193") (term "0,1,0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "193") (term "0,0,0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "193") (term "0,0,0,0,1,0,1,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "193") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "193") (term "0,0,0,0,1,0,1,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "193") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "193") (term "0,1,1,0,0,0,1,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "193") (term "0,0,0,0,1,0,1,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "193") (term "0,1,1,0,0,0,1,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "193") (term "0,0,0,0,1,0,1,0,1,0,0"))
                                             (rule "expand_inInt" (formula "193") (term "1,0,0,1,0,1,0,0"))
                                             (rule "expand_inInt" (formula "193") (term "1,0,0,1,1,0,0"))
                                             (rule "replace_int_MAX" (formula "193") (term "1,0,1,0,0,1,0,1,0,0"))
                                             (rule "replace_int_MIN" (formula "193") (term "0,1,1,0,0,1,0,1,0,0"))
                                             (rule "replace_int_MAX" (formula "193") (term "1,0,1,0,0,1,1,0,0"))
                                             (rule "replace_int_MIN" (formula "193") (term "0,1,1,0,0,1,1,0,0"))
                                             (rule "eqSymm" (formula "193") (term "0,0,1,0,0"))
                                             (rule "replace_known_left" (formula "193") (term "0,0,1,0,0") (ifseqformula "114"))
                                              (builtin "One Step Simplification" (formula "193"))
                                             (rule "castedGetAny" (formula "193") (term "0,0,1,0,0,1,0,0"))
                                             (rule "castedGetAny" (formula "193") (term "0,0,1,0,1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "193") (term "1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "193") (term "1,0,0,1,0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "193") (term "1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "193") (term "1,0,0,1,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "193") (term "1,1,0,0,1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "193") (term "0,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "193") (term "0,0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "193") (term "1,1,0,0,0,1,0,0"))
                                             (rule "applyEq" (formula "193") (term "0,1,0,0,1,0,0,0,1,1,0,0") (ifseqformula "114"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "193") (term "1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "193") (term "1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "193") (term "1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "193") (term "1,1,1,0,0,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "193") (term "0,1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "193") (term "1,1,1,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "193") (term "1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "193") (term "1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "193") (term "1,1,0,0,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "193") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "193") (term "1,1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "193") (term "1,1,1,0,0,0,1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "179") (term "1,0") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
                                              (builtin "One Step Simplification" (formula "179") (ifInst ""  (formula "260")) (ifInst ""  (formula "261")) (ifInst ""  (formula "262")) (ifInst ""  (formula "267")) (ifInst ""  (formula "268")) (ifInst ""  (formula "269")) (ifInst ""  (formula "270")) (ifInst ""  (formula "271")) (ifInst ""  (formula "272")) (ifInst ""  (formula "273")) (ifInst ""  (formula "274")) (ifInst ""  (formula "275")) (ifInst ""  (formula "276")) (ifInst ""  (formula "277")) (ifInst ""  (formula "278")) (ifInst ""  (formula "279")) (ifInst ""  (formula "280")) (ifInst ""  (formula "88")) (ifInst ""  (formula "88")))
                                             (rule "insert_constant_string_value" (formula "179") (term "0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "148"))
                                              (builtin "One Step Simplification" (formula "179"))
                                             (rule "insert_constant_string_value" (formula "179") (term "0,0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "148"))
                                              (builtin "One Step Simplification" (formula "179"))
                                             (rule "insert_constant_string_value" (formula "179") (term "0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "148"))
                                              (builtin "One Step Simplification" (formula "179"))
                                             (rule "castDel" (formula "179") (term "0,0,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "castDel" (formula "179") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                                             (rule "castDel" (formula "179") (term "0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "replace_known_right" (formula "179") (term "0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "264"))
                                              (builtin "One Step Simplification" (formula "179") (ifInst ""  (formula "263")) (ifInst ""  (formula "265")))
                                             (rule "castedGetAny" (formula "179") (term "0,1,0,1,0,0,0,1,0"))
                                             (rule "castedGetAny" (formula "179") (term "0,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "castedGetAny" (formula "179") (term "0,0,1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "179") (term "0,0,1,0,1,0,0,1,0"))
                                             (rule "castedGetAny" (formula "179") (term "0,1,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "179") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "179") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,0,0,1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "179") (term "1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,0,0,1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "179") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,0,0,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "179") (term "1,0,0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,0,0,1,0,0,1,0,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "179") (term "0,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "179") (term "0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "179") (term "0,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "179") (term "0,0,0,1,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "179") (term "0,0,0,1,0,0,0,0,1,0"))
                                             (rule "applyEqRigid" (formula "179") (term "0,0,0,0,0,0,0,1,0") (ifseqformula "88"))
                                             (rule "replace_known_right" (formula "179") (term "0,0,0,0,0,0,1,0") (ifseqformula "266"))
                                              (builtin "One Step Simplification" (formula "179"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "179") (term "1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "179") (term "1,1,0,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "179") (term "0,1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "179") (term "1,1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "179") (term "1,1,1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "179") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "179") (term "1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "179") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "179") (term "1,1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "179") (term "1,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "179") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "179") (term "1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "179") (term "1,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "179") (term "0,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "179") (term "1,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "179") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "179") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "179") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "179") (term "0,1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "179") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "179") (term "1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "179") (term "1,1,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "179") (term "0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "179") (term "1,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "179") (term "1,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "nnf_notAnd" (formula "137") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "137") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "137") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "137") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "137") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "137") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "137") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "137") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "137") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "137") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "137") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "137") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "137") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "137") (term "0,0,0"))
                                             (rule "mul_literals" (formula "137") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "115") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "115") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "115") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "115") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "115") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "115") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "115") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "115") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "115") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "115") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "115") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "85") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "85") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "85") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "85") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "85") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "85") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "85") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "85") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "85") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "85") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "85") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "86") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                             (rule "commute_or" (formula "2") (term "0,0"))
                                             (rule "applyEq" (formula "57") (term "0") (ifseqformula "2"))
                                             (rule "eqSymm" (formula "57"))
                                             (rule "applyEqReverse" (formula "290") (term "1,1") (ifseqformula "57"))
                                              (builtin "One Step Simplification" (formula "290"))
                                             (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "57"))
                                             (rule "hideAuxiliaryEq" (formula "57"))
                                             (rule "commute_or" (formula "3") (term "0,0"))
                                             (rule "applyEq" (formula "52") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "52"))
                                             (rule "close" (formula "289") (ifseqformula "52"))
                                          )
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "22"))
                                             (rule "hideAuxiliaryEq" (formula "22"))
                                             (rule "replace_known_right" (formula "22") (term "1,0,0") (ifseqformula "228"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "228"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "228"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "228"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "228"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "228"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "228"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "replace_known_right" (formula "22") (term "1,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "replace_known_right" (formula "19") (term "1,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "19") (term "1,0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "226"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "226"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "replace_known_right" (formula "219") (term "1") (ifseqformula "226"))
                                              (builtin "One Step Simplification" (formula "219"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "17"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "seqGetAlphaCast" (formula "154") (term "0"))
                                             (rule "castedGetAny" (formula "154") (term "0"))
                                              (builtin "One Step Simplification" (formula "154"))
                                             (rule "true_left" (formula "154"))
                                             (rule "nnf_imp2or" (formula "200") (term "0,0,1,1,0"))
                                             (rule "nnf_imp2or" (formula "200") (term "0,1,1,1,0"))
                                             (rule "nnf_imp2or" (formula "113") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "113") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "113") (term "1,0,0"))
                                             (rule "mul_literals" (formula "113") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "113") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "113") (term "1,0,0"))
                                             (rule "mul_literals" (formula "113") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "113") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "113") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "113") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "113") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "113") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "113") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "113") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "113") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "113") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "101") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "101") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "101") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "101") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "101") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "101") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "101") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "101") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "101") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "101") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "101") (term "1,0,0"))
                                             (rule "mul_literals" (formula "101") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "101") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "101") (term "1,0,0"))
                                             (rule "mul_literals" (formula "101") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "126") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "126") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "126") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "126") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "126") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "126") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "126") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "126") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "126") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0,0"))
                                             (rule "mul_literals" (formula "126") (term "1,1,0,0"))
                                             (rule "seqGetAlphaCast" (formula "190") (term "0"))
                                             (rule "castedGetAny" (formula "190") (term "0"))
                                              (builtin "One Step Simplification" (formula "190"))
                                             (rule "true_left" (formula "190"))
                                             (rule "nnf_notAnd" (formula "96") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "96") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "96") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "96") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "1,0,0"))
                                             (rule "mul_literals" (formula "96") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "96") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "96") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "96") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "96") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "96") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "96") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "96") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "131") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "131") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "131") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "131") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "131") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "131") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "131") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "131") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "131") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "131") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "131") (term "1,0,0"))
                                             (rule "mul_literals" (formula "131") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "131") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "131") (term "1,0,0"))
                                             (rule "mul_literals" (formula "131") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "103") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "103") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "103") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "103") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "103") (term "1,0,0"))
                                             (rule "mul_literals" (formula "103") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "103") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "103") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "103") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "103") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "103") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "103") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "103") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "103") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "103") (term "1,0,0,0"))
                                             (rule "lenNonNegative" (formula "128") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "128"))
                                             (rule "nnf_notAnd" (formula "133") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "133") (term "1,0,0"))
                                             (rule "mul_literals" (formula "133") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "133") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "133") (term "1,0,0"))
                                             (rule "mul_literals" (formula "133") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "133") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "133") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "133") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "133") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "133") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "133") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "133") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "133") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "133") (term "1,0,0,0"))
                                             (rule "nnf_imp2or" (formula "186") (term "0,1,0,0,0"))
                                             (rule "lenNonNegative" (formula "105") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "105"))
                                             (rule "seqGetAlphaCast" (formula "193") (term "0"))
                                             (rule "castedGetAny" (formula "193") (term "0"))
                                              (builtin "One Step Simplification" (formula "193"))
                                             (rule "true_left" (formula "193"))
                                             (rule "nnf_notAnd" (formula "227") (term "0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "227") (term "0,0,0,1"))
                                             (rule "times_zero_1" (formula "227") (term "1,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "227") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "227") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "227") (term "1,0,0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "227") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "227") (term "1,0,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "227") (term "0,1,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "227") (term "0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "227") (term "0,0,0,1,0,0,1"))
                                             (rule "add_zero_left" (formula "227") (term "0,0,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "227") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "227") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "227") (term "1,1,0,0,1"))
                                             (rule "lenNonNegative" (formula "132") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "132"))
                                             (rule "nnf_imp2or" (formula "186") (term "0,1,0,0,0,0"))
                                             (rule "seqGetAlphaCast" (formula "151") (term "0"))
                                             (rule "castedGetAny" (formula "151") (term "0"))
                                              (builtin "One Step Simplification" (formula "151"))
                                             (rule "true_left" (formula "151"))
                                             (rule "nnf_imp2or" (formula "186") (term "0,0,0,0,0,0,0"))
                                             (rule "nnf_imp2or" (formula "144") (term "0"))
                                             (rule "nnf_notAnd" (formula "122") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "122") (term "1,0,0"))
                                             (rule "mul_literals" (formula "122") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "122") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "122") (term "1,0,0"))
                                             (rule "mul_literals" (formula "122") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "123") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "123") (term "1,0,0"))
                                             (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "123") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "1,0,0"))
                                             (rule "mul_literals" (formula "123") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "92") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "92") (term "1,0,0"))
                                             (rule "mul_literals" (formula "92") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "92") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "92") (term "1,0,0"))
                                             (rule "mul_literals" (formula "92") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "93") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "93") (term "1,0,0"))
                                             (rule "mul_literals" (formula "93") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "93") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "1,0,0"))
                                             (rule "mul_literals" (formula "93") (term "1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "200") (term "1,0,0") (inst "i=i") (inst "i_0=i_0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "200") (term "0,1,0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "200") (term "0,0,0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "200") (term "0,1,0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "200") (term "0,0,0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "200") (term "0,0,0,0,1,0,1,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "200") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "200") (term "0,0,0,0,1,0,1,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "200") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "200") (term "0,0,0,0,1,0,1,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "200") (term "0,1,1,0,0,0,1,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "200") (term "0,0,0,0,1,0,1,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "200") (term "0,1,1,0,0,0,1,0,1,0,0"))
                                             (rule "expand_inInt" (formula "200") (term "1,0,0,1,0,1,0,0"))
                                             (rule "expand_inInt" (formula "200") (term "1,0,0,1,1,0,0"))
                                             (rule "replace_int_MAX" (formula "200") (term "1,0,1,0,0,1,0,1,0,0"))
                                             (rule "replace_int_MIN" (formula "200") (term "0,1,1,0,0,1,0,1,0,0"))
                                             (rule "replace_int_MAX" (formula "200") (term "1,0,1,0,0,1,1,0,0"))
                                             (rule "replace_int_MIN" (formula "200") (term "0,1,1,0,0,1,1,0,0"))
                                             (rule "eqSymm" (formula "200") (term "0,0,1,0,0"))
                                             (rule "replace_known_left" (formula "200") (term "0,0,1,0,0") (ifseqformula "121"))
                                              (builtin "One Step Simplification" (formula "200"))
                                             (rule "castedGetAny" (formula "200") (term "0,0,1,0,0,1,0,0"))
                                             (rule "castedGetAny" (formula "200") (term "0,0,1,0,1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "200") (term "1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "200") (term "1,0,0,1,0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "200") (term "1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "200") (term "1,0,0,1,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "200") (term "1,1,0,0,1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "200") (term "0,0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "200") (term "0,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "200") (term "1,1,0,0,0,1,0,0"))
                                             (rule "applyEq" (formula "200") (term "0,1,0,0,1,0,0,0,1,1,0,0") (ifseqformula "121"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "200") (term "1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "200") (term "1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "200") (term "1,1,0,0,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "200") (term "0,1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "200") (term "1,1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "200") (term "1,1,1,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "200") (term "1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "200") (term "1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "200") (term "1,1,0,0,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "200") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "200") (term "1,1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "200") (term "1,1,1,0,0,0,1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "186") (term "1,0") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
                                              (builtin "One Step Simplification" (formula "186") (ifInst ""  (formula "269")) (ifInst ""  (formula "270")) (ifInst ""  (formula "271")) (ifInst ""  (formula "276")) (ifInst ""  (formula "277")) (ifInst ""  (formula "278")) (ifInst ""  (formula "279")) (ifInst ""  (formula "280")) (ifInst ""  (formula "281")) (ifInst ""  (formula "282")) (ifInst ""  (formula "283")) (ifInst ""  (formula "284")) (ifInst ""  (formula "285")) (ifInst ""  (formula "286")) (ifInst ""  (formula "287")) (ifInst ""  (formula "288")) (ifInst ""  (formula "289")) (ifInst ""  (formula "95")) (ifInst ""  (formula "95")))
                                             (rule "insert_constant_string_value" (formula "186") (term "0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "155"))
                                              (builtin "One Step Simplification" (formula "186"))
                                             (rule "insert_constant_string_value" (formula "186") (term "0,0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "155"))
                                              (builtin "One Step Simplification" (formula "186"))
                                             (rule "insert_constant_string_value" (formula "186") (term "0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "155"))
                                              (builtin "One Step Simplification" (formula "186"))
                                             (rule "castDel" (formula "186") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                                             (rule "castDel" (formula "186") (term "0,0,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "castDel" (formula "186") (term "0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "replace_known_right" (formula "186") (term "0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "272"))
                                              (builtin "One Step Simplification" (formula "186") (ifInst ""  (formula "273")) (ifInst ""  (formula "274")))
                                             (rule "castedGetAny" (formula "186") (term "0,0,1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "186") (term "0,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "castedGetAny" (formula "186") (term "0,1,0,1,0,0,0,1,0"))
                                             (rule "castedGetAny" (formula "186") (term "0,0,1,0,1,0,0,1,0"))
                                             (rule "castedGetAny" (formula "186") (term "0,1,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "186") (term "1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,0,0,1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "186") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "186") (term "1,0,0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,0,0,1,0,0,1,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "186") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,0,0,1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "186") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,0,0,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "186") (term "0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "186") (term "0,0,0,1,0,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "186") (term "0,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "186") (term "0,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "186") (term "0,0,0,1,0,1,0"))
                                             (rule "applyEq" (formula "186") (term "0,0,0,0,0,0,0,1,0") (ifseqformula "95"))
                                             (rule "replace_known_right" (formula "186") (term "0,0,0,0,0,0,1,0") (ifseqformula "275"))
                                              (builtin "One Step Simplification" (formula "186"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "186") (term "1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "186") (term "1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "186") (term "1,1,1,0,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "186") (term "0,1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "186") (term "1,1,1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "186") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "186") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "186") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "186") (term "0,1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "186") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "186") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "186") (term "1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "186") (term "1,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "186") (term "0,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "186") (term "1,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "186") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "186") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "186") (term "1,1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "186") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "186") (term "1,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "186") (term "1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "186") (term "1,1,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "186") (term "0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "186") (term "1,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "186") (term "1,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "nnf_notAnd" (formula "144") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "144") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "144") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "144") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "144") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "144") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "144") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "144") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "144") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "144") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "144") (term "0,0,0"))
                                             (rule "mul_literals" (formula "144") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "144") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "144") (term "0,0,0"))
                                             (rule "mul_literals" (formula "144") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "122") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "122") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "122") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "122") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "122") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "122") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "122") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "122") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "122") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "122") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "122") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "122") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "122") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "122") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "122") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "123") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "123") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "123") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "123") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "123") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "123") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "123") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "123") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "123") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "123") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "123") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "123") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "123") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "92") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "92") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "92") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "92") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "92") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "92") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "92") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "92") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "92") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "92") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "92") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "92") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "92") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "92") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "92") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "93") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "93") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "93") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "93") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "93") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "93") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "93") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "93") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "93") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "93") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "93") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "93") (term "1,0,0,0,0"))
                                             (rule "commute_or" (formula "4") (term "0,0"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "64"))
                                             (rule "applyEqReverse" (formula "299") (term "1,1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "commute_or" (formula "4") (term "0,0"))
                                             (rule "applyEq" (formula "58") (term "0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "58"))
                                             (rule "applyEqReverse" (formula "228") (term "0") (ifseqformula "58"))
                                             (rule "hideAuxiliaryEq" (formula "58"))
                                             (rule "nnf_notAnd" (formula "198") (term "0,0,1,1,1,0"))
                                             (rule "nnf_notAnd" (formula "198") (term "0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "2") (term "0,0"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "16"))
                                             (rule "applyEqReverse" (formula "297") (term "0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "297"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "nnf_imp2or" (formula "197") (term "0,0,1,0,0"))
                                             (rule "lenNonNegative" (formula "224") (term "0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "1"))
                                             (rule "nnf_imp2or" (formula "198") (term "0,1,1,0,0"))
                                             (rule "commute_or" (formula "2") (term "0,0"))
                                             (rule "applyEq" (formula "18") (term "0") (ifseqformula "2"))
                                             (rule "close" (formula "297") (ifseqformula "18"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: strContent(password_15_B) = strContent(password_15_A) FALSE"
                                     (builtin "One Step Simplification" (formula "230"))
                                    (rule "true_left" (formula "230"))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "233") (inst "iv=iv"))
                                    (rule "inEqSimp_ltToLeq" (formula "233") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "233") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "233") (term "0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "233") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "233") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "233") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "233") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "233") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "233") (term "1,1,1,0,0,1"))
                                    (rule "cut_direct" (formula "229") (term "0"))
                                    (branch "CUT: password_15_B = password_15_A TRUE"
                                        (builtin "One Step Simplification" (formula "230"))
                                       (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "230"))
                                       (rule "applyEqReverse" (formula "270") (term "0") (ifseqformula "230"))
                                       (rule "hideAuxiliaryEq" (formula "230"))
                                       (rule "applyEq" (formula "230") (term "1") (ifseqformula "229"))
                                       (rule "applyEq" (formula "233") (term "0,0,1,1,1,0,0,1") (ifseqformula "229"))
                                       (rule "applyEq" (formula "233") (term "0,0,0,1,0,1") (ifseqformula "229"))
                                        (builtin "One Step Simplification" (formula "233"))
                                       (rule "applyEq" (formula "128") (term "1,0") (ifseqformula "229"))
                                       (rule "applyEq" (formula "266") (term "0") (ifseqformula "229"))
                                       (rule "applyEq" (formula "233") (term "0,0,0") (ifseqformula "229"))
                                        (builtin "One Step Simplification" (formula "233"))
                                       (rule "closeTrue" (formula "233"))
                                    )
                                    (branch "CUT: password_15_B = password_15_A FALSE"
                                        (builtin "One Step Simplification" (formula "229"))
                                       (rule "true_left" (formula "229"))
                                       (rule "nnf_imp2or" (formula "234") (term "0,1"))
                                       (rule "seqGetAlphaCast" (formula "148") (term "0"))
                                       (rule "castedGetAny" (formula "148") (term "0"))
                                        (builtin "One Step Simplification" (formula "148"))
                                       (rule "true_left" (formula "148"))
                                       (rule "lenNonNegative" (formula "145") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "145"))
                                       (rule "seqGetAlphaCast" (formula "110") (term "0"))
                                       (rule "castedGetAny" (formula "110") (term "0"))
                                        (builtin "One Step Simplification" (formula "110"))
                                       (rule "true_left" (formula "110"))
                                       (rule "ifthenelse_split" (formula "70") (term "0"))
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "73") (term "1,0") (ifseqformula "71"))
                                          (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "71"))
                                          (rule "hideAuxiliaryEq" (formula "71"))
                                          (rule "replace_known_left" (formula "74") (term "1,0,0") (ifseqformula "70"))
                                           (builtin "One Step Simplification" (formula "74"))
                                          (rule "applyEqReverse" (formula "237") (term "0") (ifseqformula "74"))
                                          (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "74"))
                                          (rule "hideAuxiliaryEq" (formula "74"))
                                          (rule "replace_known_left" (formula "56") (term "0,0") (ifseqformula "70"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "applyEqReverse" (formula "58") (term "1,0") (ifseqformula "56"))
                                          (rule "hideAuxiliaryEq" (formula "56"))
                                          (rule "replace_known_left" (formula "57") (term "1,0,0") (ifseqformula "69"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "applyEqReverse" (formula "59") (term "1,0") (ifseqformula "57"))
                                          (rule "hideAuxiliaryEq" (formula "57"))
                                          (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "68"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "63"))
                                          (rule "hideAuxiliaryEq" (formula "63"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "67"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "302") (term "1,1") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "57") (term "1,0,0") (ifseqformula "66"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "applyEqReverse" (formula "264") (term "0") (ifseqformula "57"))
                                          (rule "hideAuxiliaryEq" (formula "57"))
                                          (rule "replace_known_left" (formula "59") (term "0,0") (ifseqformula "65"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "59"))
                                          (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "59"))
                                          (rule "hideAuxiliaryEq" (formula "59"))
                                          (rule "replace_known_left" (formula "61") (term "1,0,0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "61"))
                                          (rule "applyEqReverse" (formula "229") (term "0") (ifseqformula "61"))
                                          (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "61"))
                                          (rule "hideAuxiliaryEq" (formula "61"))
                                          (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "298") (term "1,1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "62"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "applyEqReverse" (formula "227") (term "0") (ifseqformula "63"))
                                          (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "63"))
                                          (rule "hideAuxiliaryEq" (formula "63"))
                                          (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "295") (term "1,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "eqSymm" (formula "294") (term "1"))
                                          (rule "eqSymm" (formula "294") (term "0"))
                                          (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "257"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "224"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "225"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "replace_known_left" (formula "175") (term "1") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "175"))
                                          (rule "true_left" (formula "175"))
                                          (rule "nnf_imp2or" (formula "120") (term "0"))
                                          (rule "nnf_imp2or" (formula "121") (term "0"))
                                          (rule "nnf_imp2or" (formula "90") (term "0"))
                                          (rule "commute_and" (formula "142") (term "0,0"))
                                          (rule "nnf_imp2or" (formula "91") (term "0"))
                                          (rule "lenNonNegative" (formula "100") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "100"))
                                          (rule "seqGetAlphaCast" (formula "105") (term "0"))
                                          (rule "castedGetAny" (formula "105") (term "0"))
                                           (builtin "One Step Simplification" (formula "105"))
                                          (rule "true_left" (formula "105"))
                                          (rule "lenNonNegative" (formula "96") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "96"))
                                          (rule "seqGetAlphaCast" (formula "128") (term "0"))
                                          (rule "castedGetAny" (formula "128") (term "0"))
                                           (builtin "One Step Simplification" (formula "128"))
                                          (rule "true_left" (formula "128"))
                                          (rule "ifthenelse_split" (formula "19") (term "0"))
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "19") (term "1,0,0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "applyEqReverse" (formula "16") (term "1,0") (ifseqformula "15"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "15"))
                                             (rule "hideAuxiliaryEq" (formula "15"))
                                             (rule "replace_known_left" (formula "18") (term "1,0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "replace_known_left" (formula "15") (term "1,0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "applyEqReverse" (formula "16") (term "1,0") (ifseqformula "15"))
                                             (rule "hideAuxiliaryEq" (formula "15"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "289") (term "1,1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "288") (term "1,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "applyEqReverse" (formula "216") (term "0") (ifseqformula "12"))
                                             (rule "hideAuxiliaryEq" (formula "12"))
                                             (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "applyEqReverse" (formula "11") (term "1,0") (ifseqformula "10"))
                                             (rule "hideAuxiliaryEq" (formula "10"))
                                             (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "applyEqReverse" (formula "214") (term "0") (ifseqformula "10"))
                                             (rule "hideAuxiliaryEq" (formula "10"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "284") (term "1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "eqSymm" (formula "283") (term "1"))
                                             (rule "eqSymm" (formula "283") (term "0"))
                                             (rule "replace_known_left" (formula "283") (term "0") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "283") (ifInst ""  (formula "11")))
                                             (rule "closeTrue" (formula "283"))
                                          )
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "218"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_right" (formula "20") (term "1,0,0") (ifseqformula "218"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "218"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "16"))
                                             (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "replace_known_right" (formula "15") (term "1,0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "replace_known_right" (formula "14") (term "1,0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "14") (term "1,0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "216"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "216"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "replace_known_right" (formula "16") (term "1,0,0") (ifseqformula "216"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "216"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_right" (formula "211") (term "1") (ifseqformula "216"))
                                              (builtin "One Step Simplification" (formula "211"))
                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "16") (term "1,0") (ifseqformula "15"))
                                             (rule "hideAuxiliaryEq" (formula "15"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "seqGetAlphaCast" (formula "147") (term "0"))
                                             (rule "castedGetAny" (formula "147") (term "0"))
                                              (builtin "One Step Simplification" (formula "147"))
                                             (rule "true_left" (formula "147"))
                                             (rule "nnf_imp2or" (formula "192") (term "0,0,1,1,0"))
                                             (rule "nnf_imp2or" (formula "192") (term "0,1,1,1,0"))
                                             (rule "nnf_notAnd" (formula "106") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "106") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "106") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "106") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "106") (term "1,0,0"))
                                             (rule "mul_literals" (formula "106") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "106") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "106") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "106") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "106") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "106") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "106") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "106") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "106") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "106") (term "1,0,0,0"))
                                             (rule "nnf_imp2or" (formula "106") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "94") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "94") (term "1,0,0"))
                                             (rule "mul_literals" (formula "94") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "94") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0"))
                                             (rule "mul_literals" (formula "94") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "94") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "94") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "94") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "94") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "119") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "119") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "119") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "119") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "119") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "119") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "119") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "119") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "119") (term "1,0,0"))
                                             (rule "mul_literals" (formula "119") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "119") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "1,0,0"))
                                             (rule "mul_literals" (formula "119") (term "1,1,0,0"))
                                             (rule "seqGetAlphaCast" (formula "182") (term "0"))
                                             (rule "castedGetAny" (formula "182") (term "0"))
                                              (builtin "One Step Simplification" (formula "182"))
                                             (rule "true_left" (formula "182"))
                                             (rule "nnf_notAnd" (formula "89") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "89") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "89") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "89") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "89") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "89") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "89") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "89") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "89") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "89") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0"))
                                             (rule "mul_literals" (formula "89") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "124") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "124") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "124") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "124") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "124") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "124") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "124") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "124") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "124") (term "1,0,0"))
                                             (rule "mul_literals" (formula "124") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "124") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "1,0,0"))
                                             (rule "mul_literals" (formula "124") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "96") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "96") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "96") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "96") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "96") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "96") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "96") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "96") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "96") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "96") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "96") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "1,0,0"))
                                             (rule "mul_literals" (formula "96") (term "1,1,0,0"))
                                             (rule "lenNonNegative" (formula "121") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "121"))
                                             (rule "nnf_notAnd" (formula "126") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "126") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "126") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "126") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0,0"))
                                             (rule "mul_literals" (formula "126") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "126") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "126") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "126") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "126") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "126") (term "1,0,0,0"))
                                             (rule "nnf_imp2or" (formula "178") (term "0,1,0,0,0"))
                                             (rule "lenNonNegative" (formula "98") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "98"))
                                             (rule "seqGetAlphaCast" (formula "185") (term "0"))
                                             (rule "castedGetAny" (formula "185") (term "0"))
                                              (builtin "One Step Simplification" (formula "185"))
                                             (rule "true_left" (formula "185"))
                                             (rule "nnf_imp2or" (formula "216") (term "0,1"))
                                             (rule "lenNonNegative" (formula "125") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "125"))
                                             (rule "nnf_imp2or" (formula "178") (term "0,1,0,0,0,0"))
                                             (rule "seqGetAlphaCast" (formula "144") (term "0"))
                                             (rule "castedGetAny" (formula "144") (term "0"))
                                              (builtin "One Step Simplification" (formula "144"))
                                             (rule "true_left" (formula "144"))
                                             (rule "nnf_notAnd" (formula "217") (term "0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "217") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "217") (term "1,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "217") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "217") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "217") (term "1,0,0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "217") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "217") (term "1,0,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "217") (term "0,1,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "217") (term "0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "217") (term "0,0,0,1,0,0,1"))
                                             (rule "add_zero_left" (formula "217") (term "0,0,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "217") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "217") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "217") (term "1,1,0,0,1"))
                                             (rule "nnf_imp2or" (formula "178") (term "0,0,0,0,0,0,0"))
                                             (rule "nnf_imp2or" (formula "137") (term "0"))
                                             (rule "nnf_notAnd" (formula "115") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "115") (term "1,0,0"))
                                             (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "115") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1,0,0"))
                                             (rule "mul_literals" (formula "115") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0"))
                                             (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0"))
                                             (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "192") (term "1,0,0") (inst "i=i") (inst "i_0=i_0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "192") (term "0,0,0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "192") (term "0,1,0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "192") (term "0,0,0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "192") (term "0,1,0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "192") (term "0,0,0,0,1,0,1,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "192") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "192") (term "0,0,0,0,1,0,1,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "192") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "192") (term "0,0,0,0,1,0,1,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "192") (term "0,1,1,0,0,0,1,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "192") (term "0,0,0,0,1,0,1,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "192") (term "0,1,1,0,0,0,1,0,1,0,0"))
                                             (rule "expand_inInt" (formula "192") (term "1,0,0,1,0,1,0,0"))
                                             (rule "expand_inInt" (formula "192") (term "1,0,0,1,1,0,0"))
                                             (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,0,1,0,0"))
                                             (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,0,1,0,0"))
                                             (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,1,0,0"))
                                             (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,1,0,0"))
                                             (rule "eqSymm" (formula "192") (term "0,0,1,0,0"))
                                             (rule "replace_known_left" (formula "192") (term "0,0,1,0,0") (ifseqformula "114"))
                                              (builtin "One Step Simplification" (formula "192"))
                                             (rule "castedGetAny" (formula "192") (term "0,0,1,0,1,1,0,0"))
                                             (rule "castedGetAny" (formula "192") (term "0,0,1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,0,1,0,0"))
                                             (rule "applyEq" (formula "192") (term "0,1,0,0,1,0,0,0,1,1,0,0") (ifseqformula "114"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "178") (term "1,0") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
                                              (builtin "One Step Simplification" (formula "178") (ifInst ""  (formula "259")) (ifInst ""  (formula "260")) (ifInst ""  (formula "261")) (ifInst ""  (formula "266")) (ifInst ""  (formula "267")) (ifInst ""  (formula "268")) (ifInst ""  (formula "269")) (ifInst ""  (formula "270")) (ifInst ""  (formula "271")) (ifInst ""  (formula "272")) (ifInst ""  (formula "273")) (ifInst ""  (formula "274")) (ifInst ""  (formula "275")) (ifInst ""  (formula "276")) (ifInst ""  (formula "277")) (ifInst ""  (formula "278")) (ifInst ""  (formula "279")) (ifInst ""  (formula "88")) (ifInst ""  (formula "88")))
                                             (rule "insert_constant_string_value" (formula "178") (term "0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "148"))
                                              (builtin "One Step Simplification" (formula "178"))
                                             (rule "insert_constant_string_value" (formula "178") (term "0,0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "148"))
                                              (builtin "One Step Simplification" (formula "178"))
                                             (rule "insert_constant_string_value" (formula "178") (term "0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "148"))
                                              (builtin "One Step Simplification" (formula "178"))
                                             (rule "castDel" (formula "178") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                                             (rule "castDel" (formula "178") (term "0,0,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "castDel" (formula "178") (term "0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "replace_known_right" (formula "178") (term "0,1,0,0,0,0,0,0,1,0") (ifseqformula "264"))
                                              (builtin "One Step Simplification" (formula "178") (ifInst ""  (formula "262")) (ifInst ""  (formula "263")))
                                             (rule "castedGetAny" (formula "178") (term "0,1,0,1,1,0"))
                                             (rule "castedGetAny" (formula "178") (term "0,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "castedGetAny" (formula "178") (term "0,0,1,0,1,0,0,1,0"))
                                             (rule "castedGetAny" (formula "178") (term "0,0,1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "178") (term "0,1,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "178") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "178") (term "1,0,0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,0,0,1,0,0,1,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "178") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,0,0,1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "178") (term "1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,0,0,1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "178") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,0,0,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "178") (term "0,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "178") (term "0,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "178") (term "0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "178") (term "0,0,0,1,0,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "178") (term "0,0,0,1,0,1,0"))
                                             (rule "applyEq" (formula "178") (term "0,0,0,0,0,0,0,1,0") (ifseqformula "88"))
                                             (rule "replace_known_right" (formula "178") (term "0,0,0,0,0,0,1,0") (ifseqformula "265"))
                                              (builtin "One Step Simplification" (formula "178"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "178") (term "1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "178") (term "1,1,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "178") (term "0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "178") (term "1,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "178") (term "1,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "178") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "178") (term "1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "178") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "178") (term "1,1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "178") (term "1,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "178") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "178") (term "1,1,0,0,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "178") (term "0,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "178") (term "1,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "178") (term "1,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "178") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "178") (term "1,1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "178") (term "0,1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "178") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "178") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "178") (term "1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "178") (term "1,1,0,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "178") (term "0,1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "178") (term "1,1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "178") (term "1,1,1,0,0,1,0,0,1,0"))
                                             (rule "nnf_notAnd" (formula "216") (term "0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "216") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "216") (term "1,0,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "216") (term "0,1,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "216") (term "0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "216") (term "0,0,0,1,0,0,1"))
                                             (rule "add_zero_left" (formula "216") (term "0,0,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "216") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "216") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "216") (term "1,1,0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "216") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "216") (term "1,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "216") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "216") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "216") (term "1,0,0,0,1"))
                                             (rule "nnf_notAnd" (formula "137") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "137") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "137") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "137") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "137") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "137") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "137") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "137") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "137") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "137") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "137") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "137") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "137") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "137") (term "0,0,0"))
                                             (rule "mul_literals" (formula "137") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "115") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "115") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "115") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "115") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "115") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "115") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "115") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "115") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "115") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "115") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "115") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "116") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "116") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "85") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "85") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "85") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "85") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "85") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "85") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "85") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "85") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "85") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "85") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "85") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "85") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "86") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "86") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                             (rule "lenNonNegative" (formula "217") (term "0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "1"))
                                             (rule "lenNonNegative" (formula "218") (term "1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "1"))
                                             (rule "nnf_notAnd" (formula "194") (term "0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "194") (term "0,0,1,1,1,0"))
                                             (rule "nnf_imp2or" (formula "194") (term "0,0,1,0,0"))
                                             (rule "nnf_imp2or" (formula "194") (term "0,1,1,0,0"))
                                             (rule "commute_or" (formula "3") (term "0,0"))
                                             (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "18"))
                                             (rule "applyEqReverse" (formula "291") (term "1,1") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "291"))
                                             (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "commute_or" (formula "5") (term "0,0"))
                                             (rule "applyEq" (formula "5") (term "0") (ifseqformula "16"))
                                             (rule "close" (formula "290") (ifseqformula "5"))
                                          )
                                       )
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "70"))
                                          (rule "applyEqReverse" (formula "72") (term "1,0") (ifseqformula "70"))
                                          (rule "hideAuxiliaryEq" (formula "70"))
                                          (rule "replace_known_right" (formula "67") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "67"))
                                          (rule "replace_known_right" (formula "71") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "71"))
                                          (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "replace_known_right" (formula "58") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_right" (formula "73") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "73"))
                                          (rule "replace_known_right" (formula "65") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "65"))
                                          (rule "replace_known_right" (formula "60") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "replace_known_right" (formula "63") (term "0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "63"))
                                          (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "63"))
                                          (rule "hideAuxiliaryEq" (formula "63"))
                                          (rule "replace_known_right" (formula "56") (term "0,0") (ifseqformula "230"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "applyEqReverse" (formula "58") (term "1,0") (ifseqformula "56"))
                                          (rule "hideAuxiliaryEq" (formula "56"))
                                          (rule "replace_known_right" (formula "184") (term "1") (ifseqformula "229"))
                                           (builtin "One Step Simplification" (formula "184"))
                                          (rule "applyEq" (formula "69") (term "0") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "71") (term "1,0") (ifseqformula "69"))
                                          (rule "hideAuxiliaryEq" (formula "69"))
                                          (rule "applyEq" (formula "63") (term "0") (ifseqformula "7"))
                                          (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "63"))
                                          (rule "hideAuxiliaryEq" (formula "63"))
                                          (rule "nnf_imp2or" (formula "127") (term "0"))
                                          (rule "nnf_imp2or" (formula "128") (term "0"))
                                          (rule "nnf_imp2or" (formula "97") (term "0"))
                                          (rule "commute_and" (formula "149") (term "0,0"))
                                          (rule "nnf_imp2or" (formula "98") (term "0"))
                                          (rule "lenNonNegative" (formula "107") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "107"))
                                          (rule "seqGetAlphaCast" (formula "112") (term "0"))
                                          (rule "castedGetAny" (formula "112") (term "0"))
                                           (builtin "One Step Simplification" (formula "112"))
                                          (rule "true_left" (formula "112"))
                                          (rule "lenNonNegative" (formula "103") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "103"))
                                          (rule "seqGetAlphaCast" (formula "135") (term "0"))
                                          (rule "castedGetAny" (formula "135") (term "0"))
                                           (builtin "One Step Simplification" (formula "135"))
                                          (rule "true_left" (formula "135"))
                                          (rule "ifthenelse_split" (formula "23") (term "0"))
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "24"))
                                             (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "24"))
                                             (rule "hideAuxiliaryEq" (formula "24"))
                                             (rule "replace_known_left" (formula "22") (term "1,0,0") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "22"))
                                             (rule "applyEqReverse" (formula "232") (term "0") (ifseqformula "22"))
                                             (rule "hideAuxiliaryEq" (formula "22"))
                                             (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "applyEqReverse" (formula "231") (term "0") (ifseqformula "23"))
                                             (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "23"))
                                             (rule "hideAuxiliaryEq" (formula "23"))
                                             (rule "replace_known_left" (formula "18") (term "1,0,0") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "applyEqReverse" (formula "19") (term "1,0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "20"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "296") (term "0,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "295") (term "0,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "15") (term "1,0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "applyEqReverse" (formula "224") (term "0") (ifseqformula "15"))
                                             (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "15"))
                                             (rule "hideAuxiliaryEq" (formula "15"))
                                             (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "applyEqReverse" (formula "222") (term "0") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "221") (term "0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "14"))
                                             (rule "applyEqReverse" (formula "222") (term "0") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_left" (formula "210") (term "1") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "210"))
                                             (rule "true_left" (formula "210"))
                                             (rule "seqGetAlphaCast" (formula "147") (term "0"))
                                             (rule "castedGetAny" (formula "147") (term "0"))
                                              (builtin "One Step Simplification" (formula "147"))
                                             (rule "true_left" (formula "147"))
                                             (rule "nnf_imp2or" (formula "193") (term "0,0,1,1,0"))
                                             (rule "nnf_imp2or" (formula "193") (term "0,1,1,1,0"))
                                             (rule "nnf_notAnd" (formula "106") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "106") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "106") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "106") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "106") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "106") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "106") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "106") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "106") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "106") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "106") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "106") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "106") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "106") (term "1,0,0"))
                                             (rule "mul_literals" (formula "106") (term "1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "106") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "94") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "94") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "94") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "94") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "94") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "94") (term "1,0,0"))
                                             (rule "mul_literals" (formula "94") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "94") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0"))
                                             (rule "mul_literals" (formula "94") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "119") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "119") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "119") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "119") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "119") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "119") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "119") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "119") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "119") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "119") (term "1,0,0"))
                                             (rule "mul_literals" (formula "119") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "119") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "1,0,0"))
                                             (rule "mul_literals" (formula "119") (term "1,1,0,0"))
                                             (rule "seqGetAlphaCast" (formula "183") (term "0"))
                                             (rule "castedGetAny" (formula "183") (term "0"))
                                              (builtin "One Step Simplification" (formula "183"))
                                             (rule "true_left" (formula "183"))
                                             (rule "nnf_notAnd" (formula "89") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "89") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "89") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "89") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "89") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "89") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "89") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "89") (term "1,0,0"))
                                             (rule "mul_literals" (formula "89") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "89") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0"))
                                             (rule "mul_literals" (formula "89") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "124") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "124") (term "1,0,0"))
                                             (rule "mul_literals" (formula "124") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "124") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "1,0,0"))
                                             (rule "mul_literals" (formula "124") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "124") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "124") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "124") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "124") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "124") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "124") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "124") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "96") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "96") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "96") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "96") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "96") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "96") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "96") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "96") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "96") (term "1,0,0"))
                                             (rule "mul_literals" (formula "96") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "96") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "1,0,0"))
                                             (rule "mul_literals" (formula "96") (term "1,1,0,0"))
                                             (rule "lenNonNegative" (formula "121") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "121"))
                                             (rule "nnf_notAnd" (formula "126") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "126") (term "1,0,0"))
                                             (rule "mul_literals" (formula "126") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "126") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0,0"))
                                             (rule "mul_literals" (formula "126") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "126") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "126") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "126") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "126") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "126") (term "1,0,0,0"))
                                             (rule "nnf_imp2or" (formula "179") (term "0,1,0,0,0"))
                                             (rule "lenNonNegative" (formula "98") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "98"))
                                             (rule "seqGetAlphaCast" (formula "186") (term "0"))
                                             (rule "castedGetAny" (formula "186") (term "0"))
                                              (builtin "One Step Simplification" (formula "186"))
                                             (rule "true_left" (formula "186"))
                                             (rule "nnf_imp2or" (formula "216") (term "0,1"))
                                             (rule "lenNonNegative" (formula "125") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "125"))
                                             (rule "nnf_imp2or" (formula "179") (term "0,1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "217") (term "0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "217") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "217") (term "1,0,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "217") (term "0,1,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "217") (term "0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "217") (term "0,0,0,1,0,0,1"))
                                             (rule "add_zero_left" (formula "217") (term "0,0,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "217") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "217") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "217") (term "1,1,0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "217") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "217") (term "1,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "217") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "217") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "217") (term "1,0,0,0,1"))
                                             (rule "seqGetAlphaCast" (formula "144") (term "0"))
                                             (rule "castedGetAny" (formula "144") (term "0"))
                                              (builtin "One Step Simplification" (formula "144"))
                                             (rule "true_left" (formula "144"))
                                             (rule "nnf_imp2or" (formula "179") (term "0,0,0,0,0,0,0"))
                                             (rule "nnf_imp2or" (formula "137") (term "0"))
                                             (rule "nnf_notAnd" (formula "115") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "115") (term "1,0,0"))
                                             (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "115") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1,0,0"))
                                             (rule "mul_literals" (formula "115") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "85") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "85") (term "1,0,0"))
                                             (rule "mul_literals" (formula "85") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0"))
                                             (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "193") (term "1,0,0") (inst "i=i") (inst "i_0=i_0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "193") (term "0,1,0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "193") (term "0,0,0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "193") (term "0,1,0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "193") (term "0,0,0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "193") (term "0,0,0,0,1,0,1,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "193") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "193") (term "0,0,0,0,1,0,1,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "193") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "193") (term "0,0,0,0,1,0,1,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "193") (term "0,1,1,0,0,0,1,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "193") (term "0,0,0,0,1,0,1,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "193") (term "0,1,1,0,0,0,1,0,1,0,0"))
                                             (rule "expand_inInt" (formula "193") (term "1,0,0,1,1,0,0"))
                                             (rule "expand_inInt" (formula "193") (term "1,0,0,1,0,1,0,0"))
                                             (rule "replace_int_MAX" (formula "193") (term "1,0,1,0,0,1,1,0,0"))
                                             (rule "replace_int_MIN" (formula "193") (term "0,1,1,0,0,1,1,0,0"))
                                             (rule "replace_int_MIN" (formula "193") (term "0,1,1,0,0,1,0,1,0,0"))
                                             (rule "replace_int_MAX" (formula "193") (term "1,0,1,0,0,1,0,1,0,0"))
                                             (rule "eqSymm" (formula "193") (term "0,0,1,0,0"))
                                             (rule "replace_known_left" (formula "193") (term "0,0,1,0,0") (ifseqformula "114"))
                                              (builtin "One Step Simplification" (formula "193"))
                                             (rule "castedGetAny" (formula "193") (term "0,0,1,0,1,1,0,0"))
                                             (rule "castedGetAny" (formula "193") (term "0,0,1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "193") (term "1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "193") (term "1,0,0,1,0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "193") (term "1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "193") (term "1,0,0,1,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "193") (term "0,0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "193") (term "1,1,0,0,1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "193") (term "0,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "193") (term "1,1,0,0,0,1,0,0"))
                                             (rule "applyEq" (formula "193") (term "0,1,0,0,1,0,0,0,1,1,0,0") (ifseqformula "114"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "193") (term "1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "193") (term "1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "193") (term "1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "193") (term "1,1,1,0,0,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "193") (term "0,1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "193") (term "1,1,1,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "193") (term "1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "193") (term "1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "193") (term "1,1,0,0,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "193") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "193") (term "1,1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "193") (term "1,1,1,0,0,0,1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "179") (term "1,0") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
                                              (builtin "One Step Simplification" (formula "179") (ifInst ""  (formula "259")) (ifInst ""  (formula "260")) (ifInst ""  (formula "261")) (ifInst ""  (formula "266")) (ifInst ""  (formula "267")) (ifInst ""  (formula "268")) (ifInst ""  (formula "269")) (ifInst ""  (formula "270")) (ifInst ""  (formula "271")) (ifInst ""  (formula "272")) (ifInst ""  (formula "273")) (ifInst ""  (formula "274")) (ifInst ""  (formula "275")) (ifInst ""  (formula "276")) (ifInst ""  (formula "277")) (ifInst ""  (formula "278")) (ifInst ""  (formula "279")) (ifInst ""  (formula "88")) (ifInst ""  (formula "88")))
                                             (rule "insert_constant_string_value" (formula "179") (term "0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "148"))
                                              (builtin "One Step Simplification" (formula "179"))
                                             (rule "insert_constant_string_value" (formula "179") (term "0,0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "148"))
                                              (builtin "One Step Simplification" (formula "179"))
                                             (rule "insert_constant_string_value" (formula "179") (term "0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "148"))
                                              (builtin "One Step Simplification" (formula "179"))
                                             (rule "castDel" (formula "179") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                                             (rule "castDel" (formula "179") (term "0,0,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "castDel" (formula "179") (term "0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "replace_known_right" (formula "179") (term "0,1,0,0,0,0,0,0,1,0") (ifseqformula "264"))
                                              (builtin "One Step Simplification" (formula "179") (ifInst ""  (formula "262")) (ifInst ""  (formula "263")))
                                             (rule "castedGetAny" (formula "179") (term "0,0,1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "179") (term "0,1,0,1,1,0"))
                                             (rule "castedGetAny" (formula "179") (term "0,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "castedGetAny" (formula "179") (term "0,0,1,0,1,0,0,1,0"))
                                             (rule "castedGetAny" (formula "179") (term "0,1,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "179") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,0,0,1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "179") (term "1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,0,0,1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "179") (term "1,0,0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,0,0,1,0,0,1,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "179") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,0,0,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "179") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "179") (term "0,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "179") (term "0,0,0,1,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "179") (term "0,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "179") (term "0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "179") (term "0,0,0,1,0,0,0,0,1,0"))
                                             (rule "applyEqRigid" (formula "179") (term "0,0,0,0,0,0,0,1,0") (ifseqformula "88"))
                                             (rule "replace_known_right" (formula "179") (term "0,0,0,0,0,0,1,0") (ifseqformula "265"))
                                              (builtin "One Step Simplification" (formula "179"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "179") (term "1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "179") (term "1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "179") (term "1,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "179") (term "0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "179") (term "1,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "179") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "179") (term "1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "179") (term "1,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "179") (term "0,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "179") (term "1,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "179") (term "1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "179") (term "1,1,0,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "179") (term "0,1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "179") (term "1,1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "179") (term "1,1,1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "179") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "179") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "179") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "179") (term "0,1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "179") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "179") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "179") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "179") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "179") (term "1,1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "179") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "179") (term "1,1,1,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "216") (term "0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "216") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "216") (term "1,0,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "216") (term "0,1,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "216") (term "0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "216") (term "0,0,0,1,0,0,1"))
                                             (rule "add_zero_left" (formula "216") (term "0,0,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "216") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "216") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "216") (term "1,1,0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "216") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "216") (term "1,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "216") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "216") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "216") (term "1,0,0,0,1"))
                                             (rule "nnf_notAnd" (formula "137") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "137") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "137") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "137") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "137") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "137") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "137") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "137") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "137") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "137") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "137") (term "0,0,0"))
                                             (rule "mul_literals" (formula "137") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "137") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "137") (term "0,0,0"))
                                             (rule "mul_literals" (formula "137") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "115") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "115") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "115") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "115") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "115") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "115") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "115") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "115") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "115") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "115") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "115") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "115") (term "1,0,0,0,0"))
                                             (rule "commute_or" (formula "4") (term "0,0"))
                                             (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                             (rule "eqSymm" (formula "52"))
                                             (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "52"))
                                             (rule "applyEqReverse" (formula "289") (term "1,0") (ifseqformula "52"))
                                              (builtin "One Step Simplification" (formula "289"))
                                             (rule "hideAuxiliaryEq" (formula "52"))
                                             (rule "nnf_notAnd" (formula "115") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "115") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "115") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "115") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "115") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "115") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "115") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "115") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "115") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "115") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "115") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "115") (term "1,1,0,0,0"))
                                             (rule "commute_or" (formula "2") (term "0,0"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "56"))
                                             (rule "close" (formula "288") (ifseqformula "2"))
                                          )
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "23"))
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "23"))
                                             (rule "hideAuxiliaryEq" (formula "23"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "226"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "226"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "replace_known_right" (formula "19") (term "1,0,0") (ifseqformula "226"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "226"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "replace_known_right" (formula "20") (term "1,0,0") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "replace_known_right" (formula "22") (term "1,0,0") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "224"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_right" (formula "20") (term "1,0,0") (ifseqformula "224"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "224"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "219") (term "1") (ifseqformula "224"))
                                              (builtin "One Step Simplification" (formula "219"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "seqGetAlphaCast" (formula "154") (term "0"))
                                             (rule "castedGetAny" (formula "154") (term "0"))
                                              (builtin "One Step Simplification" (formula "154"))
                                             (rule "true_left" (formula "154"))
                                             (rule "nnf_imp2or" (formula "200") (term "0,0,1,1,0"))
                                             (rule "nnf_imp2or" (formula "200") (term "0,1,1,1,0"))
                                             (rule "nnf_notAnd" (formula "113") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "113") (term "1,0,0"))
                                             (rule "mul_literals" (formula "113") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "113") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "113") (term "1,0,0"))
                                             (rule "mul_literals" (formula "113") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "113") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "113") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "113") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "113") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "113") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "113") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "113") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "113") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "113") (term "1,0,0,0"))
                                             (rule "nnf_imp2or" (formula "113") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "101") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "101") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "101") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "101") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "101") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "101") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "101") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "101") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "101") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "101") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "101") (term "1,0,0"))
                                             (rule "mul_literals" (formula "101") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "101") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "101") (term "1,0,0"))
                                             (rule "mul_literals" (formula "101") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "126") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "126") (term "1,0,0"))
                                             (rule "mul_literals" (formula "126") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "126") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0,0"))
                                             (rule "mul_literals" (formula "126") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "126") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "126") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "126") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "126") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "126") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "126") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "126") (term "1,0,0,0"))
                                             (rule "seqGetAlphaCast" (formula "190") (term "0"))
                                             (rule "castedGetAny" (formula "190") (term "0"))
                                              (builtin "One Step Simplification" (formula "190"))
                                             (rule "true_left" (formula "190"))
                                             (rule "nnf_notAnd" (formula "96") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "96") (term "1,0,0"))
                                             (rule "mul_literals" (formula "96") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "96") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "1,0,0"))
                                             (rule "mul_literals" (formula "96") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "96") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "96") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "96") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "96") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "96") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "96") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "96") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "131") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "131") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "131") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "131") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "131") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "131") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "131") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "131") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "131") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "131") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "131") (term "1,0,0"))
                                             (rule "mul_literals" (formula "131") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "131") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "131") (term "1,0,0"))
                                             (rule "mul_literals" (formula "131") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "103") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "103") (term "1,0,0"))
                                             (rule "mul_literals" (formula "103") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "103") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "103") (term "1,0,0"))
                                             (rule "mul_literals" (formula "103") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "103") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "103") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "103") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "103") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "103") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "103") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "103") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "103") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "103") (term "1,0,0,0"))
                                             (rule "lenNonNegative" (formula "128") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "128"))
                                             (rule "nnf_notAnd" (formula "133") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "133") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "133") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "133") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "133") (term "1,0,0"))
                                             (rule "mul_literals" (formula "133") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "133") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "133") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "133") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "133") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "133") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "133") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "133") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "133") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "133") (term "1,0,0,0"))
                                             (rule "nnf_imp2or" (formula "186") (term "0,1,0,0,0"))
                                             (rule "lenNonNegative" (formula "105") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "105"))
                                             (rule "seqGetAlphaCast" (formula "193") (term "0"))
                                             (rule "castedGetAny" (formula "193") (term "0"))
                                              (builtin "One Step Simplification" (formula "193"))
                                             (rule "true_left" (formula "193"))
                                             (rule "nnf_imp2or" (formula "225") (term "0,1"))
                                             (rule "lenNonNegative" (formula "132") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "132"))
                                             (rule "nnf_imp2or" (formula "186") (term "0,1,0,0,0,0"))
                                             (rule "seqGetAlphaCast" (formula "151") (term "0"))
                                             (rule "castedGetAny" (formula "151") (term "0"))
                                              (builtin "One Step Simplification" (formula "151"))
                                             (rule "true_left" (formula "151"))
                                             (rule "nnf_notAnd" (formula "226") (term "0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "226") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "226") (term "1,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "226") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "226") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "226") (term "1,0,0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "226") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "226") (term "1,0,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "226") (term "0,1,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "226") (term "0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "226") (term "0,0,0,1,0,0,1"))
                                             (rule "add_zero_left" (formula "226") (term "0,0,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "226") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "226") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "226") (term "1,1,0,0,1"))
                                             (rule "nnf_imp2or" (formula "186") (term "0,0,0,0,0,0,0"))
                                             (rule "nnf_imp2or" (formula "144") (term "0"))
                                             (rule "nnf_notAnd" (formula "122") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "122") (term "1,0,0"))
                                             (rule "mul_literals" (formula "122") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "122") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "122") (term "1,0,0"))
                                             (rule "mul_literals" (formula "122") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "123") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "123") (term "1,0,0"))
                                             (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "123") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "1,0,0"))
                                             (rule "mul_literals" (formula "123") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "92") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "92") (term "1,0,0"))
                                             (rule "mul_literals" (formula "92") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "92") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "92") (term "1,0,0"))
                                             (rule "mul_literals" (formula "92") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "93") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "93") (term "1,0,0"))
                                             (rule "mul_literals" (formula "93") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "93") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "1,0,0"))
                                             (rule "mul_literals" (formula "93") (term "1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "200") (term "1,0,0") (inst "i=i") (inst "i_0=i_0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "200") (term "0,0,0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "200") (term "0,1,0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "200") (term "0,0,0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "200") (term "0,1,0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "200") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_67" (formula "200") (term "0,0,0,0,1,0,1,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "200") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "200") (term "0,0,0,0,1,0,1,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "200") (term "0,1,1,0,0,0,1,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet000000_65" (formula "200") (term "0,0,0,0,1,0,1,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "200") (term "0,1,1,0,0,0,1,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "200") (term "0,0,0,0,1,0,1,0,1,0,0"))
                                             (rule "expand_inInt" (formula "200") (term "1,0,0,1,0,1,0,0"))
                                             (rule "expand_inInt" (formula "200") (term "1,0,0,1,1,0,0"))
                                             (rule "replace_int_MIN" (formula "200") (term "0,1,1,0,0,1,0,1,0,0"))
                                             (rule "replace_int_MAX" (formula "200") (term "1,0,1,0,0,1,0,1,0,0"))
                                             (rule "replace_int_MAX" (formula "200") (term "1,0,1,0,0,1,1,0,0"))
                                             (rule "replace_int_MIN" (formula "200") (term "0,1,1,0,0,1,1,0,0"))
                                             (rule "eqSymm" (formula "200") (term "0,0,1,0,0"))
                                             (rule "replace_known_left" (formula "200") (term "0,0,1,0,0") (ifseqformula "121"))
                                              (builtin "One Step Simplification" (formula "200"))
                                             (rule "castedGetAny" (formula "200") (term "0,0,1,0,1,1,0,0"))
                                             (rule "castedGetAny" (formula "200") (term "0,0,1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "200") (term "1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "200") (term "1,0,0,1,0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "200") (term "1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "200") (term "1,0,0,1,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "200") (term "0,0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "200") (term "1,1,0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "200") (term "0,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "200") (term "1,1,0,0,1,1,0,0"))
                                             (rule "applyEq" (formula "200") (term "0,1,0,0,1,0,0,0,1,1,0,0") (ifseqformula "121"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "200") (term "1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "200") (term "1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "200") (term "1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "200") (term "1,1,1,0,0,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "200") (term "0,1,1,0,0,0,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "200") (term "1,1,1,0,0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "200") (term "1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "200") (term "1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "200") (term "1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "200") (term "1,1,1,0,0,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "200") (term "0,1,1,0,0,0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "200") (term "1,1,1,0,0,0,1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "186") (term "1,0") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
                                              (builtin "One Step Simplification" (formula "186") (ifInst ""  (formula "268")) (ifInst ""  (formula "269")) (ifInst ""  (formula "270")) (ifInst ""  (formula "275")) (ifInst ""  (formula "276")) (ifInst ""  (formula "277")) (ifInst ""  (formula "278")) (ifInst ""  (formula "279")) (ifInst ""  (formula "280")) (ifInst ""  (formula "281")) (ifInst ""  (formula "282")) (ifInst ""  (formula "283")) (ifInst ""  (formula "284")) (ifInst ""  (formula "285")) (ifInst ""  (formula "286")) (ifInst ""  (formula "287")) (ifInst ""  (formula "288")) (ifInst ""  (formula "95")) (ifInst ""  (formula "95")))
                                             (rule "insert_constant_string_value" (formula "186") (term "0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "155"))
                                              (builtin "One Step Simplification" (formula "186"))
                                             (rule "insert_constant_string_value" (formula "186") (term "0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "155"))
                                              (builtin "One Step Simplification" (formula "186"))
                                             (rule "insert_constant_string_value" (formula "186") (term "0,0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "155"))
                                              (builtin "One Step Simplification" (formula "186"))
                                             (rule "castDel" (formula "186") (term "0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "castDel" (formula "186") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                                             (rule "castDel" (formula "186") (term "0,0,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "replace_known_right" (formula "186") (term "0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "272"))
                                              (builtin "One Step Simplification" (formula "186") (ifInst ""  (formula "271")) (ifInst ""  (formula "273")))
                                             (rule "castedGetAny" (formula "186") (term "0,1,0,1,1,0"))
                                             (rule "castedGetAny" (formula "186") (term "0,1,0,1,0,0,0,1,0"))
                                             (rule "castedGetAny" (formula "186") (term "0,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "castedGetAny" (formula "186") (term "0,0,1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "186") (term "0,0,1,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "186") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,0,0,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "186") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "186") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,0,0,1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "186") (term "1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,0,0,1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "186") (term "1,0,0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,0,0,1,0,0,1,0,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "186") (term "0,0,0,1,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "186") (term "0,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "186") (term "0,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "186") (term "0,0,0,1,0,0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "186") (term "0,0,0,1,1,0"))
                                             (rule "applyEqRigid" (formula "186") (term "0,0,0,0,0,0,0,1,0") (ifseqformula "95"))
                                             (rule "replace_known_right" (formula "186") (term "0,0,0,0,0,0,1,0") (ifseqformula "274"))
                                              (builtin "One Step Simplification" (formula "186"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "186") (term "1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "186") (term "1,1,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "186") (term "0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "186") (term "1,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "186") (term "1,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "186") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "186") (term "1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "186") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "186") (term "1,1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "186") (term "1,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "186") (term "1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "186") (term "1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "186") (term "1,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "186") (term "0,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "186") (term "1,1,1,0,0,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "186") (term "1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "186") (term "1,1,0,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "186") (term "0,1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "186") (term "1,1,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "186") (term "1,1,1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "186") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "186") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "186") (term "1,1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "186") (term "0,1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "186") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "186") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "nnf_notAnd" (formula "225") (term "0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "225") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "225") (term "1,0,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "225") (term "0,1,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "225") (term "0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "225") (term "0,0,0,1,0,0,1"))
                                             (rule "add_zero_left" (formula "225") (term "0,0,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "225") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "225") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "225") (term "1,1,0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "225") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "225") (term "1,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "225") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "225") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "225") (term "1,0,0,0,1"))
                                             (rule "nnf_notAnd" (formula "144") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "144") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "144") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "144") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "144") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "144") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "144") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "144") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "144") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "144") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "144") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "144") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "144") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "144") (term "0,0,0"))
                                             (rule "mul_literals" (formula "144") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "122") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "122") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "122") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "122") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "122") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "122") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "122") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "122") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "122") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "122") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "122") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "122") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "122") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "122") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "122") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "123") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "123") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "123") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "123") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "123") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "123") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "123") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "123") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "123") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "123") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "123") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "123") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "123") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "123") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "92") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "92") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "92") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "92") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "92") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "92") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "92") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "92") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "92") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "92") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "92") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "92") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "92") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "92") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "92") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "93") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "93") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "93") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "93") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "93") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "93") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "93") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "93") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "93") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "93") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "93") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "93") (term "1,1,0,0,0"))
                                             (rule "commute_or" (formula "7") (term "0,0"))
                                             (rule "applyEq" (formula "59") (term "0") (ifseqformula "7"))
                                             (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "59"))
                                             (rule "applyEqReverse" (formula "228") (term "0") (ifseqformula "59"))
                                             (rule "hideAuxiliaryEq" (formula "59"))
                                             (rule "commute_or" (formula "5") (term "0,0"))
                                             (rule "applyEq" (formula "63") (term "0") (ifseqformula "5"))
                                             (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "63"))
                                             (rule "applyEqReverse" (formula "228") (term "0") (ifseqformula "63"))
                                             (rule "hideAuxiliaryEq" (formula "63"))
                                             (rule "lenNonNegative" (formula "224") (term "0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "1"))
                                             (rule "nnf_notAnd" (formula "199") (term "0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "199") (term "0,0,1,1,1,0"))
                                             (rule "commute_or" (formula "3") (term "0,0"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "297") (term "0,1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "297"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "nnf_imp2or" (formula "198") (term "0,0,1,0,0"))
                                             (rule "nnf_imp2or" (formula "198") (term "0,1,1,0,0"))
                                             (rule "lenNonNegative" (formula "224") (term "1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "1"))
                                             (rule "commute_or" (formula "4") (term "0,0"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "4"))
                                             (rule "close" (formula "297") (ifseqformula "20"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "Case 3"
                                  (builtin "One Step Simplification" (formula "255"))
                                 (rule "replaceKnownSelect_taclet00000000_89" (formula "219") (term "0,0,1"))
                                 (rule "replaceKnownSelect_taclet00000000_90" (formula "219") (term "0,0,0"))
                                 (rule "replaceKnownSelect_taclet0000_31" (formula "219") (term "0,1,0"))
                                 (rule "replaceKnownSelect_taclet0000_30" (formula "219") (term "0,1,1"))
                                 (rule "replaceKnownSelect_taclet00000000_90" (formula "218") (term "0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet0000_32" (formula "218") (term "0,1,1,1"))
                                 (rule "replaceKnownSelect_taclet0000_31" (formula "218") (term "1,0,1,0"))
                                 (rule "replaceKnownSelect_taclet00000000_91" (formula "218") (term "0,0,1,1"))
                                 (rule "replaceKnownSelect_taclet00000000_89" (formula "218") (term "0,1,1,0"))
                                 (rule "replaceKnownSelect_taclet0000_30" (formula "218") (term "1,1,1,0"))
                                 (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,0,1"))
                                 (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "1,0,0,0,1"))
                                 (rule "replaceKnownSelect_taclet0000_32" (formula "218") (term "1,1,1,0,0"))
                                 (rule "replaceKnownSelect_taclet000000_67" (formula "199") (term "0,1,0,0,1"))
                                 (rule "replaceKnownSelect_taclet00_8" (formula "199") (term "1,1,0,0,1"))
                                 (rule "replaceKnownSelect_taclet00000000_91" (formula "218") (term "0,1,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "1,0,0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "199") (term "0,1,0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "199") (term "1,1,0,0,1"))
                                 (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                 (rule "replaceKnownSelect_taclet000000_65" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                 (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet00_6" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,1,1,0,0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "199") (term "0,0,0,1,0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,1,1,0,0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "199") (term "0,0,0,1,0,0,1,0"))
                                 (rule "notRight" (formula "255"))
                                 (rule "andLeft" (formula "220"))
                                 (rule "andLeft" (formula "219"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "220"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "221"))
                                 (rule "andLeft" (formula "223"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "applyEqReverse" (formula "227") (term "0,1") (ifseqformula "224"))
                                  (builtin "One Step Simplification" (formula "227"))
                                 (rule "true_left" (formula "227"))
                                 (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "224"))
                                 (rule "applyEqReverse" (formula "227") (term "0,1") (ifseqformula "225"))
                                  (builtin "One Step Simplification" (formula "227"))
                                 (rule "true_left" (formula "227"))
                                 (rule "applyEqReverse" (formula "267") (term "0") (ifseqformula "225"))
                                 (rule "applyEqReverse" (formula "266") (term "0") (ifseqformula "224"))
                                 (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "225"))
                                 (rule "hideAuxiliaryEq" (formula "225"))
                                 (rule "hideAuxiliaryEq" (formula "224"))
                                 (rule "eqSymm" (formula "301") (term "0,1"))
                                 (rule "eqSymm" (formula "301") (term "1,0"))
                                 (rule "eqSymm" (formula "301") (term "1,1"))
                                 (rule "eqSymm" (formula "301") (term "0,0"))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "replace_known_right" (formula "203") (term "0,1,1,1,0") (ifseqformula "281"))
                                  (builtin "One Step Simplification" (formula "203") (ifInst ""  (formula "244")))
                                 (rule "inEqSimp_ltToLeq" (formula "216"))
                                 (rule "polySimp_mulComm0" (formula "216") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "216") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "192"))
                                 (rule "polySimp_mulComm0" (formula "192") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "192") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "167"))
                                 (rule "polySimp_mulComm0" (formula "167") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "167") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "162"))
                                 (rule "polySimp_mulComm0" (formula "162") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "162") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "96") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "104") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "109"))
                                 (rule "polySimp_mulComm0" (formula "109") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "109") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "106") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "106") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "199"))
                                 (rule "polySimp_mulComm0" (formula "199") (term "1,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "177"))
                                 (rule "mul_literals" (formula "177") (term "1,0,0"))
                                 (rule "add_literals" (formula "177") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "136") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "136") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "156"))
                                 (rule "polySimp_mulComm0" (formula "156") (term "1,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "217"))
                                 (rule "mul_literals" (formula "217") (term "1,0,0"))
                                 (rule "add_literals" (formula "217") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "134") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "134") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "199") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "102"))
                                 (rule "polySimp_mulComm0" (formula "102") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "132"))
                                 (rule "polySimp_mulComm0" (formula "132") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "140"))
                                 (rule "polySimp_mulComm0" (formula "140") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "116") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "147") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "126") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "126") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "206"))
                                 (rule "polySimp_mulComm0" (formula "206") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "176"))
                                 (rule "polySimp_mulComm0" (formula "176") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "113"))
                                 (rule "polySimp_mulComm0" (formula "113") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "144"))
                                 (rule "polySimp_mulComm0" (formula "144") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "195"))
                                 (rule "polySimp_mulComm0" (formula "195") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "95") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "129") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "129") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "116") (term "0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "116") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "116") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "116") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "147") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "125") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "153"))
                                 (rule "inEqSimp_gtToGeq" (formula "147") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "147") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "147") (term "0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "156") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "153") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "102") (term "0"))
                                 (rule "polySimp_addComm1" (formula "132") (term "0"))
                                 (rule "polySimp_addComm1" (formula "140") (term "0"))
                                 (rule "polySimp_addComm1" (formula "206") (term "0"))
                                 (rule "polySimp_addComm1" (formula "176") (term "0"))
                                 (rule "polySimp_addComm1" (formula "113") (term "0"))
                                 (rule "polySimp_addComm1" (formula "144") (term "0"))
                                 (rule "polySimp_addComm1" (formula "195") (term "0"))
                                 (rule "castedGetAny" (formula "203") (term "0,1,0,0,0,0"))
                                 (rule "castedGetAny" (formula "203") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "153") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "203") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "203") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "203") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "203") (term "1,0,0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "203") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "203") (term "0,0,0,0,1,0"))
                                 (rule "applyEq" (formula "58") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "301") (term "0,1,0,0") (ifseqformula "40"))
                                 (rule "applyEq" (formula "136") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "134") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "109") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "136") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "252") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "48") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "242") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "250") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "106") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "62") (term "1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "133") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "102") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "132") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "93") (term "0") (ifseqformula "94"))
                                 (rule "applyEq" (formula "16") (term "1,0,1,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "220") (term "1,0,1") (ifseqformula "221"))
                                 (rule "applyEq" (formula "128") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "117") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "59") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "66") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "133") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "14") (term "1,0,1,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "247") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "224") (term "3") (ifseqformula "221"))
                                 (rule "applyEq" (formula "16") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "49") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "13") (term "1,0,1,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "72") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "189") (term "2") (ifseqformula "1"))
                                 (rule "applyEq" (formula "52") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "155") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "52") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "14") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "11") (term "1,2,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "104") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "290") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "172") (term "4") (ifseqformula "171"))
                                 (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "66") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "75") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "280") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "81") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "61") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "64") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "130") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "50") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "80") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "179") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "221"))
                                 (rule "applyEqRigid" (formula "300") (term "0,0,0,0") (ifseqformula "4"))
                                 (rule "applyEqRigid" (formula "300") (term "0,1,1,1") (ifseqformula "40"))
                                 (rule "applyEq" (formula "115") (term "1,1,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "202") (term "1,1,1,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "56") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "66") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "62") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "98") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "68") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "66") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "54") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "63") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "164") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "284") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "137") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "64") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "74") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "252") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "300") (term "0,1,1,1,1") (ifseqformula "40"))
                                 (rule "applyEq" (formula "10") (term "1,0,0,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "220") (term "1,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEqRigid" (formula "300") (term "0,1,1,0") (ifseqformula "40"))
                                 (rule "applyEq" (formula "57") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "16") (term "1,0,0,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "12") (term "1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "109") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "102") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "285") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "102") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "61") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "50") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "87") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "128") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "9") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "265") (term "0") (ifseqformula "97"))
                                 (rule "applyEq" (formula "146") (term "1,1,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "13") (term "1,0,0,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "156") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "49") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "15") (term "1,2,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "60") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "240") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "220") (term "1,0,1,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "58") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "253") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "263") (term "0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "153") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "14") (term "1,2,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "76") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "46") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "88") (term "0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "202") (term "1,0,1,1,0,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "195") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "79") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "11") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "250") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "60") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "134") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "10") (term "1,0,1,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "152") (term "1,1,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEqRigid" (formula "299") (term "0,1,0,1,1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "189") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "9") (term "1,0,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "105") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "98") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "192") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "150") (term "2") (ifseqformula "37"))
                                 (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "55") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "179") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "162") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "145") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "243") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "56") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "156") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "52") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "59") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "288") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "103") (term "1,1,0,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "109") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "10") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "281") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "199") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "206") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "64") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "192") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "140") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "70") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "17") (term "1,2,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "65") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "150") (term "3") (ifseqformula "149"))
                                 (rule "applyEq" (formula "181") (term "4") (ifseqformula "180"))
                                 (rule "applyEq" (formula "15") (term "1,0,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "53") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "298") (term "0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "181") (term "3") (ifseqformula "38"))
                                 (rule "applyEq" (formula "194") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "63") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "59") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "202") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "167") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "118") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "299") (term "0,0,1,1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "139") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "172") (term "3") (ifseqformula "37"))
                                 (rule "applyEq" (formula "203") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "191") (term "1,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "202") (term "1,1,1,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "103") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "132") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "53") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "220") (term "1,0,1,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "179") (term "1,0,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "144") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "11") (term "1,0,0,0,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "212") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "242") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "55") (term "1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "100") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "46") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "164") (term "5") (ifseqformula "158"))
                                 (rule "applyEq" (formula "113") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "47") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "195") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "287") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "52") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "150") (term "0") (ifseqformula "37"))
                                 (rule "applyEqRigid" (formula "299") (term "0,0,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "276") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "172") (term "0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "73") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "245") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "51") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "179") (term "1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "188") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "57") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "50") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "69") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "230") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "246") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "138") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "71") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "107") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "17") (term "1,0,1,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "277") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "285") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "62") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "188") (term "1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "286") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "17") (term "1,0,1,0,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "261") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "65") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "57") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "140") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "51") (term "1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "11") (term "1,0,1,0,0,0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "48") (term "1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "114") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "59") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "280") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "67") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "212") (term "3") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "221"))
                                 (rule "applyEq" (formula "221") (term "1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "282") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "278") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "244") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "248") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "54") (term "1,1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "153") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "95") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "93"))
                                 (rule "applyEq" (formula "11") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "11") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "13") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "15") (term "1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "38"))
                                 (rule "eqSymm" (formula "2"))
                                 (rule "applyEq" (formula "17") (term "1,0,1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "220") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "17") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "220") (term "1,0,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "10") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "10") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "17") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "11") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "9") (term "1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "16") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "13") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "16") (term "1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "14") (term "1,0,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "15") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "14") (term "1,2,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "224") (term "3") (ifseqformula "38"))
                                 (rule "applyEq" (formula "220") (term "1,0,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "11") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "299") (term "1,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "220") (term "1,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "16") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "11") (term "1,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "14") (term "1,0,1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "11") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "9") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "10") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "15") (term "1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "299") (term "1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "230") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "12") (term "1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "2"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "215"))
                                 (rule "polySimp_mulLiterals" (formula "215") (term "0"))
                                 (rule "polySimp_elimOne" (formula "215") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "166"))
                                 (rule "polySimp_mulLiterals" (formula "166") (term "0"))
                                 (rule "polySimp_elimOne" (formula "166") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "161"))
                                 (rule "polySimp_mulLiterals" (formula "161") (term "0"))
                                 (rule "polySimp_elimOne" (formula "161") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "176"))
                                 (rule "mul_literals" (formula "176") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "216"))
                                 (rule "mul_literals" (formula "216") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "198"))
                                 (rule "polySimp_mulLiterals" (formula "198") (term "0"))
                                 (rule "polySimp_elimOne" (formula "198") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "115") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "115") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "115") (term "1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "115") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "115") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "146") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "146") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "146") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "146") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "146") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "146") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "125") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "125") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "125") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "125") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "125") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "115") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "146") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "146") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "115") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "115") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "115") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "115") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "115") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "146") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "146") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "146") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "146") (term "1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "146") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "146") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "124") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "124") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "124") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "205"))
                                 (rule "polySimp_mulLiterals" (formula "205") (term "0"))
                                 (rule "polySimp_elimOne" (formula "205") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "175"))
                                 (rule "polySimp_mulLiterals" (formula "175") (term "0"))
                                 (rule "polySimp_elimOne" (formula "175") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "112"))
                                 (rule "polySimp_mulLiterals" (formula "112") (term "0"))
                                 (rule "polySimp_elimOne" (formula "112") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "143"))
                                 (rule "polySimp_mulLiterals" (formula "143") (term "0"))
                                 (rule "polySimp_elimOne" (formula "143") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "202") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "202") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "202") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "202") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "202") (term "1,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "202") (term "1,1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "202") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "202") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "202") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "202") (term "1,1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "202") (term "0,1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "202") (term "1,1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "133") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "133") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "133") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "133") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "133") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "133") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "108"))
                                 (rule "polySimp_mulLiterals" (formula "108") (term "0"))
                                 (rule "polySimp_elimOne" (formula "108") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "135") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "135") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "135") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "135") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "135") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "135") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "101"))
                                 (rule "polySimp_mulLiterals" (formula "101") (term "0"))
                                 (rule "polySimp_elimOne" (formula "101") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "131"))
                                 (rule "polySimp_mulLiterals" (formula "131") (term "0"))
                                 (rule "polySimp_elimOne" (formula "131") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "155"))
                                 (rule "polySimp_mulLiterals" (formula "155") (term "0"))
                                 (rule "polySimp_elimOne" (formula "155") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "128") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "128") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "128") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "128") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "128") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "128") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "152"))
                                 (rule "polySimp_mulLiterals" (formula "152") (term "0"))
                                 (rule "polySimp_elimOne" (formula "152") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "105") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "105") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "98") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "98") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "194"))
                                 (rule "polySimp_mulLiterals" (formula "194") (term "0"))
                                 (rule "polySimp_elimOne" (formula "194") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "139"))
                                 (rule "polySimp_mulLiterals" (formula "139") (term "0"))
                                 (rule "polySimp_elimOne" (formula "139") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "191"))
                                 (rule "polySimp_mulLiterals" (formula "191") (term "0"))
                                 (rule "polySimp_elimOne" (formula "191") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "103") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "103") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "103") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "103") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "103") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "103") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "95") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0,0,0,0"))
                                 (rule "pullOutSelect" (formula "211") (term "1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "211") (ifseqformula "170"))
                                  (builtin "One Step Simplification" (formula "211"))
                                 (rule "applyEq" (formula "188") (term "1,1,1,1") (ifseqformula "211"))
                                 (rule "simplifySelectOfAnonEQ" (formula "211") (ifseqformula "148"))
                                  (builtin "One Step Simplification" (formula "211"))
                                 (rule "elementOfSingleton" (formula "211") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "211"))
                                 (rule "applyEqReverse" (formula "188") (term "1,1,1,1") (ifseqformula "211"))
                                 (rule "applyEqReverse" (formula "212") (term "1,1") (ifseqformula "211"))
                                 (rule "hideAuxiliaryEq" (formula "211"))
                                 (rule "pullOutSelect" (formula "188") (term "1,0,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "188") (ifseqformula "186"))
                                  (builtin "One Step Simplification" (formula "188"))
                                 (rule "elementOfSingleton" (formula "188") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "188"))
                                 (rule "applyEqReverse" (formula "189") (term "1,0,1,1") (ifseqformula "188"))
                                 (rule "hideAuxiliaryEq" (formula "188"))
                                 (rule "pullOutSelect" (formula "211") (term "0") (inst "selectSK=java_util_Collection_seq_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "211") (ifseqformula "209"))
                                  (builtin "One Step Simplification" (formula "211"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "211") (term "0,1,0,0") (ifseqformula "186"))
                                 (rule "eqSymm" (formula "212"))
                                 (rule "simplifySelectOfAnonEQ" (formula "212") (ifseqformula "170"))
                                  (builtin "One Step Simplification" (formula "212") (ifInst ""  (formula "270")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "212") (term "0,0,0") (ifseqformula "148"))
                                 (rule "replace_known_left" (formula "212") (term "0,0,0,0") (ifseqformula "78"))
                                  (builtin "One Step Simplification" (formula "212"))
                                 (rule "applyEq" (formula "188") (term "1,1,1") (ifseqformula "212"))
                                 (rule "simplifySelectOfAnonEQ" (formula "212") (ifseqformula "148"))
                                  (builtin "One Step Simplification" (formula "212") (ifInst ""  (formula "270")) (ifInst ""  (formula "78")))
                                 (rule "elementOfSingleton" (formula "212") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "212") (ifInst ""  (formula "270")))
                                 (rule "applyEqReverse" (formula "188") (term "1,1,1") (ifseqformula "212"))
                                 (rule "applyEqReverse" (formula "211") (term "1") (ifseqformula "212"))
                                 (rule "hideAuxiliaryEq" (formula "212"))
                                 (rule "pullOutSelect" (formula "298") (term "1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_6"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "179"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "263")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "171"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "149"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "299") (term "1,1,1") (inst "selectSK=java_util_Collection_seq_1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "180"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "172"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "150"))
                                 (rule "pullOutSelect" (formula "300") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_6"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "181"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "265")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "173"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "151"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "301") (term "1,0,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_2"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "222"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEq" (formula "215") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "215") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "215") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "215") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "215") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "213"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "replaceKnownSelect_taclet21100000000_123" (formula "1") (term "0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet21100000000_124" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "215") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "215") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "215") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "302") (term "1,0,1,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "215") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "215") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "214") (term "0,0,0,0") (ifseqformula "238"))
                                  (builtin "One Step Simplification" (formula "214") (ifInst ""  (formula "23")))
                                 (rule "replace_known_left" (formula "191") (term "1,1") (ifseqformula "214"))
                                  (builtin "One Step Simplification" (formula "191"))
                                 (rule "true_left" (formula "191"))
                                 (rule "pullOutSelect" (formula "300") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_7"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "221"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "265")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "212"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "190"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "301") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_7"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "222"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "266")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "213"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "191"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_8"))
                                 (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "176"))
                                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "267")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "0,0,0") (ifseqformula "154"))
                                 (rule "ifthenelse_negated" (formula "5") (term "0"))
                                 (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=java_util_Collection_seq_2"))
                                 (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "177"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,1,0,0") (ifseqformula "155"))
                                 (rule "pullOutSelect" (formula "5") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_3"))
                                 (rule "applyEq" (formula "4") (term "0,0,0,0,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "4") (term "1,0,0,0,1,0,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "6") (term "1,0,1,0,0,1,0,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "6") (term "1,0,1,0,1,0,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "4") (term "1,0,1,0,1,0,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "6") (term "0,0,0,0,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "6") (term "1,0,0,0,0,1,0,0") (ifseqformula "5"))
                                 (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "186"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "replaceKnownSelect_taclet21100000000_120" (formula "5") (term "0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet21100000000_122" (formula "5") (term "0"))
                                 (rule "applyEqReverse" (formula "6") (term "1,1,0") (ifseqformula "5"))
                                 (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "5"))
                                 (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "5"))
                                 (rule "applyEqReverse" (formula "4") (term "1,0,0,0,1,0,0") (ifseqformula "5"))
                                 (rule "applyEqReverse" (formula "6") (term "1,0,1,0,0,1,0,0") (ifseqformula "5"))
                                 (rule "applyEqReverse" (formula "6") (term "1,0,1,0,1,0,0") (ifseqformula "5"))
                                 (rule "applyEqReverse" (formula "4") (term "1,0,1,0,1,0,0") (ifseqformula "5"))
                                 (rule "applyEqReverse" (formula "6") (term "0,0,0,0,0") (ifseqformula "5"))
                                 (rule "applyEqReverse" (formula "4") (term "1,2,0") (ifseqformula "5"))
                                 (rule "replaceKnownSelect_taclet21100000000_127" (formula "4") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet21100000000_128" (formula "4") (term "2,0"))
                                 (rule "applyEqReverse" (formula "6") (term "1,0,0,0,0,1,0,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "replace_known_left" (formula "4") (term "0,0,1,0,0") (ifseqformula "85"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "275")))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_left" (formula "4") (term "0,0,0,1,0,0") (ifseqformula "84"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "274")))
                                 (rule "applyEqReverse" (formula "303") (term "1,1,1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_8"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "176"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "267")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "154"))
                                 (rule "ifthenelse_negated" (formula "3") (term "0"))
                                 (rule "pullOutSelect" (formula "303") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "224"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "241")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "215"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "193"))
                                 (rule "eqSymm" (formula "304") (term "1,1"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "27"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "215"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "241")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "193"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "27"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEq" (formula "217") (term "0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "193"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "241")) (ifInst ""  (formula "27")))
                                 (rule "eqSymm" (formula "217"))
                                 (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "217"))
                                 (rule "applyEqReverse" (formula "304") (term "1,1,1") (ifseqformula "217"))
                                  (builtin "One Step Simplification" (formula "304"))
                                 (rule "hideAuxiliaryEq" (formula "217"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "240")))
                                 (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_9"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "216"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "268")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "194"))
                                 (rule "ifthenelse_negated" (formula "3") (term "0"))
                                 (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_9"))
                                 (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "217"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "269")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "195"))
                                 (rule "ifthenelse_negated" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "8") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_10"))
                                 (rule "simplifySelectOfAnonEQ" (formula "8") (ifseqformula "158"))
                                  (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "270")))
                                 (rule "elementOfSingleton" (formula "8") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "270")))
                                 (rule "ifthenelse_negated" (formula "8") (term "0"))
                                 (rule "applyEq" (formula "8") (term "0") (ifseqformula "65"))
                                 (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                 (rule "hideAuxiliaryEq" (formula "8"))
                                 (rule "pullOutSelect" (formula "6") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_10"))
                                 (rule "simplifySelectOfAnonEQ" (formula "6") (ifseqformula "158"))
                                  (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "270")))
                                 (rule "elementOfSingleton" (formula "6") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "270")))
                                 (rule "ifthenelse_negated" (formula "6") (term "0"))
                                 (rule "applyEq" (formula "6") (term "0") (ifseqformula "72"))
                                 (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "pullOutSelect" (formula "4") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_11"))
                                 (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "196"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "270")))
                                 (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "270")))
                                 (rule "ifthenelse_negated" (formula "4") (term "0"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "25"))
                                 (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_11"))
                                 (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "196"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "270")))
                                 (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "270")))
                                 (rule "ifthenelse_negated" (formula "2") (term "0"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "22"))
                                 (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "inEqSimp_and_subsumption3" (formula "134") (term "0,0,0"))
                                 (rule "leq_literals" (formula "134") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "134"))
                                 (rule "inEqSimp_and_subsumption3" (formula "103") (term "0,0,0"))
                                 (rule "leq_literals" (formula "103") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "103"))
                                 (rule "inEqSimp_and_subsumption3" (formula "133") (term "0,0,0"))
                                 (rule "leq_literals" (formula "133") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "133"))
                                 (rule "inEqSimp_and_subsumption3" (formula "104") (term "0,0,0"))
                                 (rule "leq_literals" (formula "104") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "104"))
                                 (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "210") (term "1,0,0") (inst "i=i") (inst "i_0=i_0"))
                                 (rule "replaceKnownSelect_taclet000000_67" (formula "210") (term "0,1,0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet000000_65" (formula "210") (term "0,0,0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "210") (term "0,1,0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "210") (term "0,0,0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet000000_67" (formula "210") (term "0,0,0,0,1,0,1,1,0,0"))
                                 (rule "replaceKnownSelect_taclet000000_67" (formula "210") (term "0,1,1,0,0,0,1,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "210") (term "0,0,0,0,1,0,1,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_68" (formula "210") (term "0,1,1,0,0,0,1,1,0,0"))
                                 (rule "replaceKnownSelect_taclet000000_65" (formula "210") (term "0,1,1,0,0,0,1,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet000000_65" (formula "210") (term "0,0,0,0,1,0,1,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "210") (term "0,1,1,0,0,0,1,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000000_66" (formula "210") (term "0,0,0,0,1,0,1,0,1,0,0"))
                                 (rule "expand_inInt" (formula "210") (term "1,0,0,1,1,0,0"))
                                 (rule "expand_inInt" (formula "210") (term "1,0,0,1,0,1,0,0"))
                                 (rule "replace_int_MIN" (formula "210") (term "0,1,1,0,0,1,1,0,0"))
                                 (rule "replace_int_MAX" (formula "210") (term "1,0,1,0,0,1,1,0,0"))
                                 (rule "replace_int_MIN" (formula "210") (term "0,1,1,0,0,1,0,1,0,0"))
                                 (rule "replace_int_MAX" (formula "210") (term "1,0,1,0,0,1,0,1,0,0"))
                                 (rule "eqSymm" (formula "210") (term "0,0,1,0,0"))
                                 (rule "replace_known_left" (formula "210") (term "0,0,1,0,0") (ifseqformula "132"))
                                  (builtin "One Step Simplification" (formula "210"))
                                 (rule "castedGetAny" (formula "210") (term "0,0,1,0,1,1,0,0"))
                                 (rule "castedGetAny" (formula "210") (term "0,0,1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "210") (term "1,0,0,0,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "210") (term "1,0,0,1,0,0,0,1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "210") (term "1,0,0,0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "210") (term "1,0,0,1,0,0,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "210") (term "0,0,0,0,1,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "210") (term "1,1,0,0,1,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "210") (term "0,0,0,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "210") (term "1,1,0,0,0,1,0,0"))
                                 (rule "applyEq" (formula "210") (term "0,1,0,0,1,0,0,0,1,1,0,0") (ifseqformula "132"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "210") (term "1,0,0,0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "210") (term "1,1,0,0,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "210") (term "1,1,0,0,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "210") (term "0,1,1,0,0,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "210") (term "1,1,1,0,0,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "210") (term "1,1,1,0,0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "210") (term "1,0,0,0,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "210") (term "1,1,0,0,0,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "210") (term "1,1,0,0,0,1,1,0,0"))
                                 (rule "mul_literals" (formula "210") (term "0,1,1,0,0,0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "210") (term "1,1,1,0,0,0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "210") (term "1,1,1,0,0,0,1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "124") (term "0"))
                                 (rule "nnf_imp2or" (formula "155") (term "0"))
                                 (rule "nnf_imp2or" (formula "142") (term "0"))
                                 (rule "nnf_imp2or" (formula "144") (term "0"))
                                 (rule "nnf_imp2or" (formula "137") (term "0"))
                                 (rule "nnf_imp2or" (formula "114") (term "0"))
                                 (rule "nnf_imp2or" (formula "107") (term "0"))
                                 (rule "nnf_imp2or" (formula "112") (term "0"))
                                 (rule "cut_direct" (formula "230") (term "0"))
                                 (branch "CUT: strContent(password_15_B) = strContent(password_15_A) TRUE"
                                     (builtin "One Step Simplification" (formula "231"))
                                    (rule "cut_direct" (formula "229") (term "0"))
                                    (branch "CUT: password_15_B = password_15_A TRUE"
                                        (builtin "One Step Simplification" (formula "230"))
                                       (rule "applyEqReverse" (formula "232") (term "0,1") (ifseqformula "230"))
                                        (builtin "One Step Simplification" (formula "232"))
                                       (rule "true_left" (formula "232"))
                                       (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "230"))
                                       (rule "applyEqReverse" (formula "269") (term "0") (ifseqformula "230"))
                                       (rule "hideAuxiliaryEq" (formula "230"))
                                       (rule "applyEq" (formula "129") (term "1,0") (ifseqformula "229"))
                                       (rule "applyEq" (formula "231") (term "1") (ifseqformula "229"))
                                       (rule "applyEq" (formula "230") (term "0,0") (ifseqformula "229"))
                                        (builtin "One Step Simplification" (formula "230"))
                                       (rule "true_left" (formula "230"))
                                       (rule "applyEq" (formula "264") (term "0") (ifseqformula "229"))
                                       (rule "seqGetAlphaCast" (formula "141") (term "0"))
                                       (rule "castedGetAny" (formula "141") (term "0"))
                                        (builtin "One Step Simplification" (formula "141"))
                                       (rule "true_left" (formula "141"))
                                       (rule "lenNonNegative" (formula "113") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "113"))
                                       (rule "lenNonNegative" (formula "139") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "139"))
                                       (rule "nnf_imp2or" (formula "134") (term "0"))
                                       (rule "nnf_imp2or" (formula "103") (term "0"))
                                       (rule "nnf_imp2or" (formula "133") (term "0"))
                                       (rule "nnf_imp2or" (formula "104") (term "0"))
                                       (rule "ifthenelse_split" (formula "64") (term "0"))
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "67") (term "1,0") (ifseqformula "65"))
                                          (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "65"))
                                          (rule "hideAuxiliaryEq" (formula "65"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "65") (term "1,0,0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "65"))
                                          (rule "applyEqReverse" (formula "67") (term "1,0") (ifseqformula "65"))
                                          (rule "hideAuxiliaryEq" (formula "65"))
                                          (rule "replace_known_left" (formula "71") (term "1,0,0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "71"))
                                          (rule "applyEqReverse" (formula "73") (term "1,0") (ifseqformula "71"))
                                          (rule "hideAuxiliaryEq" (formula "71"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "299") (term "1,1") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "71") (term "1,0,0") (ifseqformula "62"))
                                           (builtin "One Step Simplification" (formula "71"))
                                          (rule "applyEqReverse" (formula "231") (term "0") (ifseqformula "71"))
                                          (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "71"))
                                          (rule "hideAuxiliaryEq" (formula "71"))
                                          (rule "replace_known_left" (formula "59") (term "1,0,0") (ifseqformula "62"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "applyEqReverse" (formula "228") (term "0") (ifseqformula "59"))
                                          (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "59"))
                                          (rule "hideAuxiliaryEq" (formula "59"))
                                          (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "296") (term "1,0") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "295") (term "1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "65") (term "0,0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "65"))
                                          (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "65"))
                                          (rule "applyEqReverse" (formula "294") (term "1,1") (ifseqformula "65"))
                                          (rule "applyEqReverse" (formula "227") (term "0") (ifseqformula "65"))
                                          (rule "hideAuxiliaryEq" (formula "65"))
                                          (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "applyEqReverse" (formula "55") (term "1,0") (ifseqformula "53"))
                                          (rule "hideAuxiliaryEq" (formula "53"))
                                          (rule "replace_known_left" (formula "54") (term "1,0,0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "54"))
                                          (rule "applyEqReverse" (formula "223") (term "0") (ifseqformula "54"))
                                          (rule "hideAuxiliaryEq" (formula "54"))
                                          (rule "replace_known_left" (formula "60") (term "1,0,0") (ifseqformula "57"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "applyEqReverse" (formula "223") (term "0") (ifseqformula "60"))
                                          (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "60"))
                                          (rule "hideAuxiliaryEq" (formula "60"))
                                          (rule "eqSymm" (formula "290") (term "0"))
                                          (rule "eqSymm" (formula "290") (term "1"))
                                          (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "223"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "222"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "221"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "replace_known_left" (formula "176") (term "1") (ifseqformula "57"))
                                           (builtin "One Step Simplification" (formula "176"))
                                          (rule "true_left" (formula "176"))
                                          (rule "lenNonNegative" (formula "134") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "134"))
                                          (rule "seqGetAlphaCast" (formula "106") (term "0"))
                                          (rule "castedGetAny" (formula "106") (term "0"))
                                           (builtin "One Step Simplification" (formula "106"))
                                          (rule "true_left" (formula "106"))
                                          (rule "seqGetAlphaCast" (formula "99") (term "0"))
                                          (rule "castedGetAny" (formula "99") (term "0"))
                                           (builtin "One Step Simplification" (formula "99"))
                                          (rule "true_left" (formula "99"))
                                          (rule "seqGetAlphaCast" (formula "153") (term "0"))
                                          (rule "castedGetAny" (formula "153") (term "0"))
                                           (builtin "One Step Simplification" (formula "153"))
                                          (rule "true_left" (formula "153"))
                                          (rule "seqGetAlphaCast" (formula "150") (term "0"))
                                          (rule "castedGetAny" (formula "150") (term "0"))
                                           (builtin "One Step Simplification" (formula "150"))
                                          (rule "true_left" (formula "150"))
                                          (rule "seqGetAlphaCast" (formula "190") (term "0"))
                                          (rule "castedGetAny" (formula "190") (term "0"))
                                           (builtin "One Step Simplification" (formula "190"))
                                          (rule "true_left" (formula "190"))
                                          (rule "lenNonNegative" (formula "131") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "131"))
                                          (rule "ifthenelse_split" (formula "17") (term "0"))
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "19") (term "1,0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_left" (formula "19") (term "1,0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "eqSymm" (formula "19"))
                                             (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "288") (term "1,1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "287") (term "1,1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "13") (term "1,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "14") (term "1,0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_left" (formula "15") (term "1,0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "replace_known_left" (formula "17") (term "1,0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "16") (term "1,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "applyEqReverse" (formula "12") (term "1,0") (ifseqformula "11"))
                                             (rule "hideAuxiliaryEq" (formula "11"))
                                             (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "applyEqReverse" (formula "282") (term "1,1") (ifseqformula "14"))
                                             (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_left" (formula "11") (term "1,0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "281") (term "1,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "eqSymm" (formula "280") (term "1"))
                                             (rule "eqSymm" (formula "280") (term "0"))
                                             (rule "replace_known_left" (formula "280") (term "1") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "280") (ifInst ""  (formula "12")))
                                             (rule "closeTrue" (formula "280"))
                                          )
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "17"))
                                             (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "replace_known_right" (formula "20") (term "1,0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_right" (formula "16") (term "1,0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "218"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "218"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "applyEqReverse" (formula "15") (term "1,0") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_right" (formula "14") (term "1,0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "replace_known_right" (formula "211") (term "1") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "211"))
                                             (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "nnf_notAnd" (formula "107") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "107") (term "1,0,0"))
                                             (rule "mul_literals" (formula "107") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "107") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "1,0,0"))
                                             (rule "mul_literals" (formula "107") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "107") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "107") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "107") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "107") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "107") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "107") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "107") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "107") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "107") (term "1,0,0,0"))
                                             (rule "nnf_imp2or" (formula "107") (term "1,0"))
                                             (rule "nnf_imp2or" (formula "138") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "138") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "138") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "138") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "138") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "138") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "138") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "138") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "138") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "138") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "138") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "138") (term "1,0,0"))
                                             (rule "mul_literals" (formula "138") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "138") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "1,0,0"))
                                             (rule "mul_literals" (formula "138") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "125") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "125") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "125") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "125") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "125") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "125") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "125") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "125") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "125") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "125") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "125") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "125") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "125") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "125") (term "1,0,0"))
                                             (rule "mul_literals" (formula "125") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "127") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "127") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "127") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "127") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "127") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "127") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "127") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "127") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "127") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "127") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "127") (term "1,0,0"))
                                             (rule "mul_literals" (formula "127") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "127") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "127") (term "1,0,0"))
                                             (rule "mul_literals" (formula "127") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "120") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "120") (term "1,0,0"))
                                             (rule "mul_literals" (formula "120") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "120") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "120") (term "1,0,0"))
                                             (rule "mul_literals" (formula "120") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "120") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "120") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "120") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "120") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "120") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "120") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "120") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "120") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "120") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "97") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "97") (term "1,0,0"))
                                             (rule "mul_literals" (formula "97") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "97") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "1,0,0"))
                                             (rule "mul_literals" (formula "97") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "97") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "97") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "97") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "97") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "97") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "97") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "97") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "97") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "97") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "90") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "90") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "90") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "90") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "90") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "90") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "90") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "90") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "90") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "90") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "90") (term "1,0,0"))
                                             (rule "mul_literals" (formula "90") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "90") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "1,0,0"))
                                             (rule "mul_literals" (formula "90") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "95") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "95") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "95") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "95") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "1,0,0"))
                                             (rule "mul_literals" (formula "95") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "95") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "95") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "95") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "95") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "95") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "95") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "95") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "95") (term "1,0,0,0"))
                                             (rule "nnf_imp2or" (formula "192") (term "0,0,1,0,0"))
                                             (rule "seqGetAlphaCast" (formula "182") (term "0"))
                                             (rule "castedGetAny" (formula "182") (term "0"))
                                              (builtin "One Step Simplification" (formula "182"))
                                             (rule "true_left" (formula "182"))
                                             (rule "seqGetAlphaCast" (formula "132") (term "0"))
                                             (rule "castedGetAny" (formula "132") (term "0"))
                                              (builtin "One Step Simplification" (formula "132"))
                                             (rule "true_left" (formula "132"))
                                             (rule "nnf_imp2or" (formula "192") (term "0,1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "117") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "117") (term "1,0,0"))
                                             (rule "mul_literals" (formula "117") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "117") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "1,0,0"))
                                             (rule "mul_literals" (formula "117") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "87") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "87") (term "1,0,0"))
                                             (rule "mul_literals" (formula "87") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "87") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "1,0,0"))
                                             (rule "mul_literals" (formula "87") (term "1,1,0,0"))
                                             (rule "lenNonNegative" (formula "92") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "92"))
                                             (rule "lenNonNegative" (formula "99") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "99"))
                                             (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "192") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,0,0,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,1,0,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,0,0,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,1,0,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,0,0,0,1,0,1,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,0,0,0,1,0,1,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                             (rule "expand_inInt" (formula "192") (term "1,0,0,1,1,1,0"))
                                             (rule "expand_inInt" (formula "192") (term "1,0,0,1,0,1,1,0"))
                                             (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,1,1,0"))
                                             (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,1,1,0"))
                                             (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,0,1,1,0"))
                                             (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,0,1,1,0"))
                                             (rule "eqSymm" (formula "192") (term "0,0,1,1,0"))
                                             (rule "replace_known_left" (formula "192") (term "0,0,1,1,0") (ifseqformula "85"))
                                              (builtin "One Step Simplification" (formula "192"))
                                             (rule "castedGetAny" (formula "192") (term "0,0,1,0,0,1,1,0"))
                                             (rule "castedGetAny" (formula "192") (term "0,0,1,0,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,1,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,1,1,1,0"))
                                             (rule "applyEq" (formula "192") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "85"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,1,1,1,0"))
                                             (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,1,1,1,0"))
                                             (rule "nnf_notAnd" (formula "117") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "117") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "117") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "117") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "117") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "117") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "117") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "117") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "117") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "117") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "117") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "117") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "117") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "86") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "86") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "116") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "87") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "87") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "87") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "87") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "87") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "87") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "87") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "87") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "87") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "87") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "87") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "192") (term "0,0,1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "192") (term "0,0,0,1,0,0"))
                                             (rule "nnf_imp2or" (formula "192") (term "0,0,1,1,0"))
                                             (rule "nnf_imp2or" (formula "192") (term "0,1,1,1,0"))
                                             (rule "commute_or" (formula "5") (term "0,0"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "5"))
                                             (rule "eqSymm" (formula "17"))
                                             (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "17"))
                                             (rule "applyEqReverse" (formula "285") (term "1,1") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "285"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "commute_or" (formula "3") (term "0,0"))
                                             (rule "applyEq" (formula "16") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "16"))
                                             (rule "close" (formula "284") (ifseqformula "16"))
                                          )
                                       )
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "64"))
                                          (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "64"))
                                          (rule "hideAuxiliaryEq" (formula "64"))
                                          (rule "replace_known_right" (formula "57") (term "0,0") (ifseqformula "232"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "applyEqReverse" (formula "59") (term "1,0") (ifseqformula "57"))
                                          (rule "hideAuxiliaryEq" (formula "57"))
                                          (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_right" (formula "66") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "66"))
                                          (rule "replace_known_right" (formula "60") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "replace_known_right" (formula "9") (term "0,0,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "replace_known_right" (formula "58") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "replace_known_right" (formula "73") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "73"))
                                          (rule "replace_known_right" (formula "71") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "71"))
                                          (rule "replace_known_right" (formula "64") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "64"))
                                          (rule "replace_known_right" (formula "69") (term "0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "69"))
                                          (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "69"))
                                          (rule "applyEqReverse" (formula "71") (term "1,0") (ifseqformula "69"))
                                          (rule "hideAuxiliaryEq" (formula "69"))
                                          (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "230"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "230"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "replace_known_right" (formula "185") (term "1") (ifseqformula "230"))
                                           (builtin "One Step Simplification" (formula "185"))
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "70"))
                                          (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEq" (formula "63") (term "0") (ifseqformula "7"))
                                          (rule "applyEqReverse" (formula "65") (term "1,0") (ifseqformula "63"))
                                          (rule "hideAuxiliaryEq" (formula "63"))
                                          (rule "lenNonNegative" (formula "141") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "141"))
                                          (rule "seqGetAlphaCast" (formula "113") (term "0"))
                                          (rule "castedGetAny" (formula "113") (term "0"))
                                           (builtin "One Step Simplification" (formula "113"))
                                          (rule "true_left" (formula "113"))
                                          (rule "seqGetAlphaCast" (formula "106") (term "0"))
                                          (rule "castedGetAny" (formula "106") (term "0"))
                                           (builtin "One Step Simplification" (formula "106"))
                                          (rule "true_left" (formula "106"))
                                          (rule "seqGetAlphaCast" (formula "160") (term "0"))
                                          (rule "castedGetAny" (formula "160") (term "0"))
                                           (builtin "One Step Simplification" (formula "160"))
                                          (rule "true_left" (formula "160"))
                                          (rule "seqGetAlphaCast" (formula "157") (term "0"))
                                          (rule "castedGetAny" (formula "157") (term "0"))
                                           (builtin "One Step Simplification" (formula "157"))
                                          (rule "true_left" (formula "157"))
                                          (rule "seqGetAlphaCast" (formula "198") (term "0"))
                                          (rule "castedGetAny" (formula "198") (term "0"))
                                           (builtin "One Step Simplification" (formula "198"))
                                          (rule "true_left" (formula "198"))
                                          (rule "lenNonNegative" (formula "138") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "138"))
                                          (rule "ifthenelse_split" (formula "20") (term "0"))
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "21"))
                                             (rule "hideAuxiliaryEq" (formula "21"))
                                             (rule "replace_known_left" (formula "22") (term "1,0,0") (ifseqformula "20"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "applyEqReverse" (formula "230") (term "0") (ifseqformula "22"))
                                             (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "22"))
                                             (rule "hideAuxiliaryEq" (formula "22"))
                                             (rule "replace_known_left" (formula "24") (term "1,0,0") (ifseqformula "20"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "24"))
                                             (rule "applyEqReverse" (formula "230") (term "0") (ifseqformula "24"))
                                             (rule "hideAuxiliaryEq" (formula "24"))
                                             (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "20"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "22"))
                                             (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                                             (rule "hideAuxiliaryEq" (formula "22"))
                                             (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "20"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "replace_known_left" (formula "18") (term "1,0,0") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "225") (term "0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "293") (term "0,1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "291") (term "0,1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "290") (term "0,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "13") (term "1,0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "13"))
                                             (rule "applyEqReverse" (formula "220") (term "0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_left" (formula "15") (term "1,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "applyEqReverse" (formula "221") (term "0") (ifseqformula "15"))
                                             (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "15"))
                                             (rule "hideAuxiliaryEq" (formula "15"))
                                             (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "applyEqReverse" (formula "219") (term "0") (ifseqformula "14"))
                                             (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_left" (formula "210") (term "1") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "210"))
                                             (rule "true_left" (formula "210"))
                                             (rule "nnf_imp2or" (formula "107") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "107") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "107") (term "1,0,0"))
                                             (rule "mul_literals" (formula "107") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "107") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "1,0,0"))
                                             (rule "mul_literals" (formula "107") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "107") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "107") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "107") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "107") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "107") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "107") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "107") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "107") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "107") (term "1,0,0,0"))
                                             (rule "nnf_imp2or" (formula "138") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "138") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "138") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "138") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "138") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "138") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "138") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "138") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "138") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "138") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "138") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "138") (term "1,0,0"))
                                             (rule "mul_literals" (formula "138") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "138") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "1,0,0"))
                                             (rule "mul_literals" (formula "138") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "125") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "125") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "125") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "125") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "125") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "125") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "125") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "125") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "125") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "125") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "125") (term "1,0,0"))
                                             (rule "mul_literals" (formula "125") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "125") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "125") (term "1,0,0"))
                                             (rule "mul_literals" (formula "125") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "127") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "127") (term "1,0,0"))
                                             (rule "mul_literals" (formula "127") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "127") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "127") (term "1,0,0"))
                                             (rule "mul_literals" (formula "127") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "127") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "127") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "127") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "127") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "127") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "127") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "127") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "127") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "127") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "120") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "120") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "120") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "120") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "120") (term "1,0,0"))
                                             (rule "mul_literals" (formula "120") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "120") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "120") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "120") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "120") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "120") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "120") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "120") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "120") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "120") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "97") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "97") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "97") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "97") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "97") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "97") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "97") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "97") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "97") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "97") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "97") (term "1,0,0"))
                                             (rule "mul_literals" (formula "97") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "97") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "1,0,0"))
                                             (rule "mul_literals" (formula "97") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "90") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "90") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "90") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "90") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "1,0,0"))
                                             (rule "mul_literals" (formula "90") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "90") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "90") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "90") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "90") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "90") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "90") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "90") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "90") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "90") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "95") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "95") (term "1,0,0"))
                                             (rule "mul_literals" (formula "95") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "95") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "1,0,0"))
                                             (rule "mul_literals" (formula "95") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "95") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "95") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "95") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "95") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "95") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "95") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "95") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "95") (term "1,0,0,0"))
                                             (rule "nnf_imp2or" (formula "193") (term "0,0,1,0,0"))
                                             (rule "seqGetAlphaCast" (formula "183") (term "0"))
                                             (rule "castedGetAny" (formula "183") (term "0"))
                                              (builtin "One Step Simplification" (formula "183"))
                                             (rule "true_left" (formula "183"))
                                             (rule "seqGetAlphaCast" (formula "132") (term "0"))
                                             (rule "castedGetAny" (formula "132") (term "0"))
                                              (builtin "One Step Simplification" (formula "132"))
                                             (rule "true_left" (formula "132"))
                                             (rule "nnf_imp2or" (formula "193") (term "0,1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "117") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "117") (term "1,0,0"))
                                             (rule "mul_literals" (formula "117") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "117") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "1,0,0"))
                                             (rule "mul_literals" (formula "117") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "87") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "87") (term "1,0,0"))
                                             (rule "mul_literals" (formula "87") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "87") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "1,0,0"))
                                             (rule "mul_literals" (formula "87") (term "1,1,0,0"))
                                             (rule "lenNonNegative" (formula "92") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "92"))
                                             (rule "lenNonNegative" (formula "99") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "99"))
                                             (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "193") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,1,0,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,0,0,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,1,0,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,0,0,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,0,0,0,1,0,1,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,0,0,0,1,0,1,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                             (rule "expand_inInt" (formula "193") (term "1,0,0,1,1,1,0"))
                                             (rule "expand_inInt" (formula "193") (term "1,0,0,1,0,1,1,0"))
                                             (rule "replace_int_MIN" (formula "193") (term "0,1,1,0,0,1,1,1,0"))
                                             (rule "replace_int_MAX" (formula "193") (term "1,0,1,0,0,1,1,1,0"))
                                             (rule "replace_int_MIN" (formula "193") (term "0,1,1,0,0,1,0,1,1,0"))
                                             (rule "replace_int_MAX" (formula "193") (term "1,0,1,0,0,1,0,1,1,0"))
                                             (rule "eqSymm" (formula "193") (term "0,0,1,1,0"))
                                             (rule "replace_known_left" (formula "193") (term "0,0,1,1,0") (ifseqformula "85"))
                                              (builtin "One Step Simplification" (formula "193"))
                                             (rule "castedGetAny" (formula "193") (term "0,0,1,0,1,1,1,0"))
                                             (rule "castedGetAny" (formula "193") (term "0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "193") (term "1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "193") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "193") (term "1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "193") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "193") (term "1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "193") (term "0,0,0,0,1,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "193") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "193") (term "1,1,0,0,1,1,1,0"))
                                             (rule "applyEq" (formula "193") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "85"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "193") (term "1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "193") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "193") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "193") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "193") (term "0,1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "193") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "193") (term "1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "193") (term "1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "193") (term "1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "193") (term "1,1,1,0,0,0,1,1,1,0"))
                                             (rule "mul_literals" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "193") (term "1,1,1,0,0,0,1,1,1,0"))
                                             (rule "nnf_notAnd" (formula "117") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "117") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "117") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "117") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "117") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "117") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "117") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "117") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "117") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "117") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "117") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "117") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "117") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "86") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "116") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "116") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                             (rule "commute_or" (formula "4") (term "0,0"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "52"))
                                             (rule "applyEqReverse" (formula "285") (term "1,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "285"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                             (rule "commute_or" (formula "2") (term "0,0"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "57"))
                                             (rule "close" (formula "284") (ifseqformula "2"))
                                          )
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_right" (formula "20") (term "1,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "replace_known_right" (formula "24") (term "1,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "22"))
                                             (rule "hideAuxiliaryEq" (formula "22"))
                                             (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "226"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "replace_known_right" (formula "219") (term "1") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "219"))
                                             (rule "applyEq" (formula "19") (term "0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "nnf_imp2or" (formula "114") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "114") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "114") (term "1,0,0"))
                                             (rule "mul_literals" (formula "114") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "114") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "114") (term "1,0,0"))
                                             (rule "mul_literals" (formula "114") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "114") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "114") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "114") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "114") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "114") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "114") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "114") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "114") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "114") (term "1,0,0,0"))
                                             (rule "nnf_imp2or" (formula "145") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "145") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "145") (term "1,0,0"))
                                             (rule "mul_literals" (formula "145") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "145") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "145") (term "1,0,0"))
                                             (rule "mul_literals" (formula "145") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "145") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "145") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "145") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "145") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "145") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "145") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "145") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "145") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "145") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "132") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "132") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "132") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "132") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "132") (term "1,0,0"))
                                             (rule "mul_literals" (formula "132") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "132") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "132") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "132") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "132") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "132") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "132") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "132") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "132") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "132") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "134") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "134") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "134") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "134") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "134") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "134") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "134") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "134") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "134") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "134") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "134") (term "1,0,0"))
                                             (rule "mul_literals" (formula "134") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "134") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "134") (term "1,0,0"))
                                             (rule "mul_literals" (formula "134") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "127") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "127") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "127") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "127") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "127") (term "1,0,0"))
                                             (rule "mul_literals" (formula "127") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "127") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "127") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "127") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "127") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "127") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "127") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "127") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "127") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "127") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "104") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "104") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "104") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "104") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "104") (term "1,0,0"))
                                             (rule "mul_literals" (formula "104") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "104") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "104") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "104") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "104") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "104") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "104") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "104") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "104") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "104") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "97") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "97") (term "1,0,0"))
                                             (rule "mul_literals" (formula "97") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "97") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "1,0,0"))
                                             (rule "mul_literals" (formula "97") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "97") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "97") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "97") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "97") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "97") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "97") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "97") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "97") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "97") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "102") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "102") (term "1,0,0"))
                                             (rule "mul_literals" (formula "102") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "102") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "102") (term "1,0,0"))
                                             (rule "mul_literals" (formula "102") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "102") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "102") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "102") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "102") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "102") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "102") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "102") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "102") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "102") (term "1,0,0,0"))
                                             (rule "nnf_imp2or" (formula "200") (term "0,0,1,0,0"))
                                             (rule "seqGetAlphaCast" (formula "190") (term "0"))
                                             (rule "castedGetAny" (formula "190") (term "0"))
                                              (builtin "One Step Simplification" (formula "190"))
                                             (rule "true_left" (formula "190"))
                                             (rule "seqGetAlphaCast" (formula "139") (term "0"))
                                             (rule "castedGetAny" (formula "139") (term "0"))
                                              (builtin "One Step Simplification" (formula "139"))
                                             (rule "true_left" (formula "139"))
                                             (rule "nnf_imp2or" (formula "200") (term "0,1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "124") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "124") (term "1,0,0"))
                                             (rule "mul_literals" (formula "124") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "124") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "124") (term "1,0,0"))
                                             (rule "mul_literals" (formula "124") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "93") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "93") (term "1,0,0"))
                                             (rule "mul_literals" (formula "93") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "93") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "1,0,0"))
                                             (rule "mul_literals" (formula "93") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "123") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "123") (term "1,0,0"))
                                             (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "123") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "1,0,0"))
                                             (rule "mul_literals" (formula "123") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "94") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "94") (term "1,0,0"))
                                             (rule "mul_literals" (formula "94") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "94") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "1,0,0"))
                                             (rule "mul_literals" (formula "94") (term "1,1,0,0"))
                                             (rule "lenNonNegative" (formula "99") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "99"))
                                             (rule "lenNonNegative" (formula "106") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "106"))
                                             (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "200") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,0,0,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,1,0,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,0,0,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,1,0,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,0,0,0,1,0,1,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,0,0,0,1,0,1,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                             (rule "expand_inInt" (formula "200") (term "1,0,0,1,1,1,0"))
                                             (rule "expand_inInt" (formula "200") (term "1,0,0,1,0,1,1,0"))
                                             (rule "replace_int_MIN" (formula "200") (term "0,1,1,0,0,1,1,1,0"))
                                             (rule "replace_int_MAX" (formula "200") (term "1,0,1,0,0,1,1,1,0"))
                                             (rule "replace_int_MIN" (formula "200") (term "0,1,1,0,0,1,0,1,1,0"))
                                             (rule "replace_int_MAX" (formula "200") (term "1,0,1,0,0,1,0,1,1,0"))
                                             (rule "eqSymm" (formula "200") (term "0,0,1,1,0"))
                                             (rule "replace_known_left" (formula "200") (term "0,0,1,1,0") (ifseqformula "92"))
                                              (builtin "One Step Simplification" (formula "200"))
                                             (rule "castedGetAny" (formula "200") (term "0,0,1,0,1,1,1,0"))
                                             (rule "castedGetAny" (formula "200") (term "0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "200") (term "1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "200") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "200") (term "1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "200") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "200") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "200") (term "1,1,0,0,1,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "200") (term "1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "200") (term "0,0,0,0,1,1,1,0"))
                                             (rule "applyEq" (formula "200") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "92"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "200") (term "1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "200") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "200") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "200") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "200") (term "0,1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "200") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "200") (term "1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "200") (term "1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "200") (term "1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "200") (term "1,1,1,0,0,0,1,1,1,0"))
                                             (rule "mul_literals" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "200") (term "1,1,1,0,0,0,1,1,1,0"))
                                             (rule "nnf_notAnd" (formula "124") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "124") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "124") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "124") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "124") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "124") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "124") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "124") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "124") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "124") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "124") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "124") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "93") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "93") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "93") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "93") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "93") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "93") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "93") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "93") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "93") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "93") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "93") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "93") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "123") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "123") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "123") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "123") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "123") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "123") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "123") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "123") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "123") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "123") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "123") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "123") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "123") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "94") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "94") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "94") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "94") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "94") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "94") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "94") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "94") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "94") (term "1,1,0,0,0"))
                                             (rule "commute_or" (formula "7") (term "0,0"))
                                             (rule "applyEq" (formula "59") (term "0") (ifseqformula "7"))
                                             (rule "applyEqReverse" (formula "226") (term "0") (ifseqformula "59"))
                                             (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "59"))
                                             (rule "hideAuxiliaryEq" (formula "59"))
                                             (rule "commute_or" (formula "5") (term "0,0"))
                                             (rule "applyEq" (formula "64") (term "0") (ifseqformula "5"))
                                             (rule "applyEqReverse" (formula "226") (term "0") (ifseqformula "64"))
                                             (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "64"))
                                             (rule "hideAuxiliaryEq" (formula "64"))
                                             (rule "nnf_notAnd" (formula "198") (term "0,0,1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "198") (term "0,0,0,1,0,0"))
                                             (rule "nnf_imp2or" (formula "198") (term "0,0,1,1,0"))
                                             (rule "commute_or" (formula "3") (term "0,0"))
                                             (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "224") (term "0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "292") (term "1,0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "292"))
                                             (rule "applyEqReverse" (formula "7") (term "1") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "nnf_imp2or" (formula "197") (term "0,1,1,1,0"))
                                             (rule "commute_or" (formula "4") (term "0,0"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "291") (term "0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "291"))
                                             (rule "closeTrue" (formula "291"))
                                          )
                                       )
                                    )
                                    (branch "CUT: password_15_B = password_15_A FALSE"
                                        (builtin "One Step Simplification" (formula "229"))
                                       (rule "true_left" (formula "229"))
                                       (rule "seqGetAlphaCast" (formula "141") (term "0"))
                                       (rule "castedGetAny" (formula "141") (term "0"))
                                        (builtin "One Step Simplification" (formula "141"))
                                       (rule "true_left" (formula "141"))
                                       (rule "lenNonNegative" (formula "113") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "113"))
                                       (rule "lenNonNegative" (formula "139") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "139"))
                                       (rule "nnf_imp2or" (formula "134") (term "0"))
                                       (rule "nnf_imp2or" (formula "103") (term "0"))
                                       (rule "nnf_imp2or" (formula "133") (term "0"))
                                       (rule "nnf_imp2or" (formula "104") (term "0"))
                                       (rule "ifthenelse_split" (formula "64") (term "0"))
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "67") (term "1,0") (ifseqformula "65"))
                                          (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "65"))
                                          (rule "hideAuxiliaryEq" (formula "65"))
                                          (rule "replace_known_left" (formula "66") (term "1,0,0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "66"))
                                          (rule "applyEqReverse" (formula "68") (term "1,0") (ifseqformula "66"))
                                          (rule "hideAuxiliaryEq" (formula "66"))
                                          (rule "replace_known_left" (formula "61") (term "1,0,0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "61"))
                                          (rule "applyEqReverse" (formula "268") (term "0") (ifseqformula "61"))
                                          (rule "applyEqReverse" (formula "229") (term "0,1") (ifseqformula "61"))
                                          (rule "hideAuxiliaryEq" (formula "61"))
                                          (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                          (rule "hideAuxiliaryEq" (formula "8"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "62"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "302") (term "1,1") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "54") (term "0,0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "applyEqReverse" (formula "56") (term "1,0") (ifseqformula "54"))
                                          (rule "hideAuxiliaryEq" (formula "54"))
                                          (rule "replace_known_left" (formula "67") (term "1,0,0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "67"))
                                          (rule "applyEqReverse" (formula "69") (term "1,0") (ifseqformula "67"))
                                          (rule "hideAuxiliaryEq" (formula "67"))
                                          (rule "replace_known_left" (formula "68") (term "1,0,0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "68"))
                                          (rule "applyEqReverse" (formula "230") (term "0") (ifseqformula "68"))
                                          (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "68"))
                                          (rule "hideAuxiliaryEq" (formula "68"))
                                          (rule "replace_known_left" (formula "65") (term "0,0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "65"))
                                          (rule "applyEqReverse" (formula "298") (term "1,1") (ifseqformula "65"))
                                          (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "65"))
                                          (rule "applyEqReverse" (formula "229") (term "0") (ifseqformula "65"))
                                          (rule "hideAuxiliaryEq" (formula "65"))
                                          (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "62"))
                                          (rule "applyEqReverse" (formula "227") (term "0") (ifseqformula "62"))
                                          (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "62"))
                                          (rule "hideAuxiliaryEq" (formula "62"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "296") (term "1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "54") (term "1,0,0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "applyEqReverse" (formula "219") (term "0,1") (ifseqformula "54"))
                                          (rule "applyEqReverse" (formula "258") (term "0") (ifseqformula "54"))
                                          (rule "hideAuxiliaryEq" (formula "54"))
                                          (rule "eqSymm" (formula "294") (term "1"))
                                          (rule "eqSymm" (formula "294") (term "0"))
                                          (rule "eqSymm" (formula "218"))
                                          (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "225"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "224"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "257"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "replace_known_left" (formula "176") (term "1") (ifseqformula "57"))
                                           (builtin "One Step Simplification" (formula "176"))
                                          (rule "true_left" (formula "176"))
                                          (rule "lenNonNegative" (formula "134") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "134"))
                                          (rule "seqGetAlphaCast" (formula "106") (term "0"))
                                          (rule "castedGetAny" (formula "106") (term "0"))
                                           (builtin "One Step Simplification" (formula "106"))
                                          (rule "true_left" (formula "106"))
                                          (rule "seqGetAlphaCast" (formula "99") (term "0"))
                                          (rule "castedGetAny" (formula "99") (term "0"))
                                           (builtin "One Step Simplification" (formula "99"))
                                          (rule "true_left" (formula "99"))
                                          (rule "seqGetAlphaCast" (formula "153") (term "0"))
                                          (rule "castedGetAny" (formula "153") (term "0"))
                                           (builtin "One Step Simplification" (formula "153"))
                                          (rule "true_left" (formula "153"))
                                          (rule "seqGetAlphaCast" (formula "150") (term "0"))
                                          (rule "castedGetAny" (formula "150") (term "0"))
                                           (builtin "One Step Simplification" (formula "150"))
                                          (rule "true_left" (formula "150"))
                                          (rule "seqGetAlphaCast" (formula "190") (term "0"))
                                          (rule "castedGetAny" (formula "190") (term "0"))
                                           (builtin "One Step Simplification" (formula "190"))
                                          (rule "true_left" (formula "190"))
                                          (rule "lenNonNegative" (formula "131") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "131"))
                                          (rule "ifthenelse_split" (formula "17") (term "0"))
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "19") (term "1,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_left" (formula "15") (term "1,0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "applyEqReverse" (formula "16") (term "1,0") (ifseqformula "15"))
                                             (rule "hideAuxiliaryEq" (formula "15"))
                                             (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "17") (term "1,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "applyEqReverse" (formula "214") (term "0,1") (ifseqformula "14"))
                                             (rule "applyEqReverse" (formula "219") (term "0") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "289") (term "1,1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "16") (term "1,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "287") (term "1,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "applyEqReverse" (formula "215") (term "0") (ifseqformula "11"))
                                             (rule "applyEqReverse" (formula "210") (term "0,1") (ifseqformula "11"))
                                             (rule "hideAuxiliaryEq" (formula "11"))
                                             (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "12"))
                                             (rule "hideAuxiliaryEq" (formula "12"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "284") (term "1,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "eqSymm" (formula "283") (term "1"))
                                             (rule "eqSymm" (formula "207"))
                                             (rule "eqSymm" (formula "283") (term "0"))
                                             (rule "replace_known_left" (formula "283") (term "1") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "283") (ifInst ""  (formula "11")))
                                             (rule "closeTrue" (formula "283"))
                                          )
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "17"))
                                             (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "220"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "replace_known_right" (formula "20") (term "1,0,0") (ifseqformula "220"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "220"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "replace_known_right" (formula "15") (term "1,0,0") (ifseqformula "220"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "220"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "220"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "220"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "replace_known_right" (formula "16") (term "1,0,0") (ifseqformula "220"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "220"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "219"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "applyEqReverse" (formula "15") (term "1,0") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_right" (formula "211") (term "1") (ifseqformula "218"))
                                              (builtin "One Step Simplification" (formula "211"))
                                             (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "17"))
                                             (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "nnf_notAnd" (formula "107") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "107") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "107") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "107") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "107") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "107") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "107") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "107") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "107") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "107") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "107") (term "1,0,0"))
                                             (rule "mul_literals" (formula "107") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "107") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "1,0,0"))
                                             (rule "mul_literals" (formula "107") (term "1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "107") (term "1,0"))
                                             (rule "nnf_imp2or" (formula "138") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "138") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "138") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "138") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "138") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "138") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "138") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "138") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "138") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "138") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "138") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "138") (term "1,0,0"))
                                             (rule "mul_literals" (formula "138") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "138") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "1,0,0"))
                                             (rule "mul_literals" (formula "138") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "125") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "125") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "125") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "125") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "125") (term "1,0,0"))
                                             (rule "mul_literals" (formula "125") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "125") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "125") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "125") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "125") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "125") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "125") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "125") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "125") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "125") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "127") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "127") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "127") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "127") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "127") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "127") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "127") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "127") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "127") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "127") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "127") (term "1,0,0"))
                                             (rule "mul_literals" (formula "127") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "127") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "127") (term "1,0,0"))
                                             (rule "mul_literals" (formula "127") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "120") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "120") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "120") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "120") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "120") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "120") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "120") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "120") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "120") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "120") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "120") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "120") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "120") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "120") (term "1,0,0"))
                                             (rule "mul_literals" (formula "120") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "97") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "97") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "97") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "97") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "97") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "97") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "97") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "97") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "97") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "97") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "97") (term "1,0,0"))
                                             (rule "mul_literals" (formula "97") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "97") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "1,0,0"))
                                             (rule "mul_literals" (formula "97") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "90") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "90") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "90") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "90") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "90") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "90") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "90") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "90") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "90") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "90") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "90") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "90") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "90") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "1,0,0"))
                                             (rule "mul_literals" (formula "90") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "95") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "95") (term "1,0,0"))
                                             (rule "mul_literals" (formula "95") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "95") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "1,0,0"))
                                             (rule "mul_literals" (formula "95") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "95") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "95") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "95") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "95") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "95") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "95") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "95") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "95") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "117") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "117") (term "1,0,0"))
                                             (rule "mul_literals" (formula "117") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "117") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "1,0,0"))
                                             (rule "mul_literals" (formula "117") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "192") (term "0,0,1,0,0"))
                                             (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "87") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "87") (term "1,0,0"))
                                             (rule "mul_literals" (formula "87") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "87") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "1,0,0"))
                                             (rule "mul_literals" (formula "87") (term "1,1,0,0"))
                                             (rule "seqGetAlphaCast" (formula "182") (term "0"))
                                             (rule "castedGetAny" (formula "182") (term "0"))
                                              (builtin "One Step Simplification" (formula "182"))
                                             (rule "true_left" (formula "182"))
                                             (rule "seqGetAlphaCast" (formula "132") (term "0"))
                                             (rule "castedGetAny" (formula "132") (term "0"))
                                              (builtin "One Step Simplification" (formula "132"))
                                             (rule "true_left" (formula "132"))
                                             (rule "nnf_imp2or" (formula "192") (term "0,1,1,0,0"))
                                             (rule "lenNonNegative" (formula "92") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "92"))
                                             (rule "lenNonNegative" (formula "99") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "99"))
                                             (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "192") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,0,0,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,1,0,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,0,0,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,1,0,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,0,0,0,1,0,1,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,0,0,0,1,0,1,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                             (rule "expand_inInt" (formula "192") (term "1,0,0,1,0,1,1,0"))
                                             (rule "expand_inInt" (formula "192") (term "1,0,0,1,1,1,0"))
                                             (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,0,1,1,0"))
                                             (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,0,1,1,0"))
                                             (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,1,1,0"))
                                             (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,1,1,0"))
                                             (rule "eqSymm" (formula "192") (term "0,0,1,1,0"))
                                             (rule "replace_known_left" (formula "192") (term "0,0,1,1,0") (ifseqformula "85"))
                                              (builtin "One Step Simplification" (formula "192"))
                                             (rule "castedGetAny" (formula "192") (term "0,0,1,0,0,1,1,0"))
                                             (rule "castedGetAny" (formula "192") (term "0,0,1,0,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,1,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,1,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,0,1,1,0"))
                                             (rule "applyEq" (formula "192") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "85"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,1,1,1,0"))
                                             (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,1,1,1,0"))
                                             (rule "nnf_notAnd" (formula "117") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "117") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "117") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "117") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "117") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "117") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "117") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "117") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "117") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "117") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "117") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "117") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "117") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "116") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "116") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "87") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "87") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "87") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "87") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "87") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "87") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "87") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "87") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "87") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "87") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "87") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "192") (term "0,0,1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "192") (term "0,0,0,1,0,0"))
                                             (rule "nnf_imp2or" (formula "192") (term "0,0,1,1,0"))
                                             (rule "nnf_imp2or" (formula "192") (term "0,1,1,1,0"))
                                             (rule "commute_or" (formula "4") (term "0,0"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "17"))
                                             (rule "applyEqReverse" (formula "289") (term "1,1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "289"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "commute_or" (formula "3") (term "0,0"))
                                             (rule "applyEq" (formula "14") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "14"))
                                             (rule "close" (formula "288") (ifseqformula "14"))
                                          )
                                       )
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "64"))
                                          (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "64"))
                                          (rule "hideAuxiliaryEq" (formula "64"))
                                          (rule "replace_known_right" (formula "72") (term "1,0,0") (ifseqformula "233"))
                                           (builtin "One Step Simplification" (formula "72"))
                                          (rule "replace_known_right" (formula "67") (term "1,0,0") (ifseqformula "233"))
                                           (builtin "One Step Simplification" (formula "67"))
                                          (rule "replace_known_right" (formula "61") (term "1,0,0") (ifseqformula "233"))
                                           (builtin "One Step Simplification" (formula "61"))
                                          (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "233"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "replace_known_right" (formula "59") (term "1,0,0") (ifseqformula "233"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "replace_known_right" (formula "74") (term "1,0,0") (ifseqformula "233"))
                                           (builtin "One Step Simplification" (formula "74"))
                                          (rule "replace_known_right" (formula "65") (term "1,0,0") (ifseqformula "233"))
                                           (builtin "One Step Simplification" (formula "65"))
                                          (rule "replace_known_right" (formula "9") (term "0,0,0,0") (ifseqformula "233"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "replace_known_right" (formula "57") (term "0,0") (ifseqformula "233"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "applyEqReverse" (formula "59") (term "1,0") (ifseqformula "57"))
                                          (rule "hideAuxiliaryEq" (formula "57"))
                                          (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "232"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "232"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_right" (formula "69") (term "0,0") (ifseqformula "232"))
                                           (builtin "One Step Simplification" (formula "69"))
                                          (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "69"))
                                          (rule "applyEqReverse" (formula "71") (term "1,0") (ifseqformula "69"))
                                          (rule "hideAuxiliaryEq" (formula "69"))
                                          (rule "replace_known_right" (formula "185") (term "1") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "185"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "64"))
                                          (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                          (rule "hideAuxiliaryEq" (formula "8"))
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "69"))
                                          (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "lenNonNegative" (formula "141") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "141"))
                                          (rule "seqGetAlphaCast" (formula "113") (term "0"))
                                          (rule "castedGetAny" (formula "113") (term "0"))
                                           (builtin "One Step Simplification" (formula "113"))
                                          (rule "true_left" (formula "113"))
                                          (rule "seqGetAlphaCast" (formula "106") (term "0"))
                                          (rule "castedGetAny" (formula "106") (term "0"))
                                           (builtin "One Step Simplification" (formula "106"))
                                          (rule "true_left" (formula "106"))
                                          (rule "seqGetAlphaCast" (formula "160") (term "0"))
                                          (rule "castedGetAny" (formula "160") (term "0"))
                                           (builtin "One Step Simplification" (formula "160"))
                                          (rule "true_left" (formula "160"))
                                          (rule "seqGetAlphaCast" (formula "157") (term "0"))
                                          (rule "castedGetAny" (formula "157") (term "0"))
                                           (builtin "One Step Simplification" (formula "157"))
                                          (rule "true_left" (formula "157"))
                                          (rule "seqGetAlphaCast" (formula "198") (term "0"))
                                          (rule "castedGetAny" (formula "198") (term "0"))
                                           (builtin "One Step Simplification" (formula "198"))
                                          (rule "true_left" (formula "198"))
                                          (rule "lenNonNegative" (formula "138") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "138"))
                                          (rule "ifthenelse_split" (formula "19") (term "0"))
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "replace_known_left" (formula "17") (term "1,0,0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "applyEqReverse" (formula "230") (term "0") (ifseqformula "17"))
                                             (rule "applyEqReverse" (formula "224") (term "0,0") (ifseqformula "17"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "replace_known_left" (formula "19") (term "1,0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "230") (term "0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "replace_known_left" (formula "20") (term "1,0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "applyEqReverse" (formula "229") (term "0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "18") (term "1,0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "227") (term "0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "295") (term "0,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "293") (term "0,1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "applyEqReverse" (formula "215") (term "0,0") (ifseqformula "12"))
                                             (rule "applyEqReverse" (formula "221") (term "0") (ifseqformula "12"))
                                             (rule "hideAuxiliaryEq" (formula "12"))
                                             (rule "replace_known_left" (formula "13") (term "1,0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "13"))
                                             (rule "applyEqReverse" (formula "221") (term "0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_left" (formula "210") (term "1") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "210"))
                                             (rule "true_left" (formula "210"))
                                             (rule "nnf_imp2or" (formula "107") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "107") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "107") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "107") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "107") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "107") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "107") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "107") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "107") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "107") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "107") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "107") (term "1,0,0"))
                                             (rule "mul_literals" (formula "107") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "107") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "1,0,0"))
                                             (rule "mul_literals" (formula "107") (term "1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "138") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "138") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "138") (term "1,0,0"))
                                             (rule "mul_literals" (formula "138") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "138") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "1,0,0"))
                                             (rule "mul_literals" (formula "138") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "138") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "138") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "138") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "138") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "138") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "138") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "138") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "138") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "138") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "125") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "125") (term "1,0,0"))
                                             (rule "mul_literals" (formula "125") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "125") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "125") (term "1,0,0"))
                                             (rule "mul_literals" (formula "125") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "125") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "125") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "125") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "125") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "125") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "125") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "125") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "125") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "125") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "127") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "127") (term "1,0,0"))
                                             (rule "mul_literals" (formula "127") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "127") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "127") (term "1,0,0"))
                                             (rule "mul_literals" (formula "127") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "127") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "127") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "127") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "127") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "127") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "127") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "127") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "127") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "127") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "120") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "120") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "120") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "120") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "120") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "120") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "120") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "120") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "120") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "120") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "120") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "120") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "120") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "120") (term "1,0,0"))
                                             (rule "mul_literals" (formula "120") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "97") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "97") (term "1,0,0"))
                                             (rule "mul_literals" (formula "97") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "97") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "1,0,0"))
                                             (rule "mul_literals" (formula "97") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "97") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "97") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "97") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "97") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "97") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "97") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "97") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "97") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "97") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "90") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "90") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "90") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "90") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "90") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "90") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "90") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "90") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "90") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "90") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "90") (term "1,0,0"))
                                             (rule "mul_literals" (formula "90") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "90") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "1,0,0"))
                                             (rule "mul_literals" (formula "90") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "95") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "95") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "95") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "95") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "1,0,0"))
                                             (rule "mul_literals" (formula "95") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "95") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "95") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "95") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "95") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "95") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "95") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "95") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "95") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "117") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "117") (term "1,0,0"))
                                             (rule "mul_literals" (formula "117") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "117") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "1,0,0"))
                                             (rule "mul_literals" (formula "117") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "193") (term "0,0,1,0,0"))
                                             (rule "nnf_notAnd" (formula "87") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "87") (term "1,0,0"))
                                             (rule "mul_literals" (formula "87") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "87") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "1,0,0"))
                                             (rule "mul_literals" (formula "87") (term "1,1,0,0"))
                                             (rule "seqGetAlphaCast" (formula "183") (term "0"))
                                             (rule "castedGetAny" (formula "183") (term "0"))
                                              (builtin "One Step Simplification" (formula "183"))
                                             (rule "true_left" (formula "183"))
                                             (rule "seqGetAlphaCast" (formula "132") (term "0"))
                                             (rule "castedGetAny" (formula "132") (term "0"))
                                              (builtin "One Step Simplification" (formula "132"))
                                             (rule "true_left" (formula "132"))
                                             (rule "nnf_imp2or" (formula "193") (term "0,1,1,0,0"))
                                             (rule "lenNonNegative" (formula "92") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "92"))
                                             (rule "lenNonNegative" (formula "99") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "99"))
                                             (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "193") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,0,0,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,1,0,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,0,0,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,1,0,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,0,0,0,1,0,1,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,0,0,0,1,0,1,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                             (rule "expand_inInt" (formula "193") (term "1,0,0,1,0,1,1,0"))
                                             (rule "expand_inInt" (formula "193") (term "1,0,0,1,1,1,0"))
                                             (rule "replace_int_MIN" (formula "193") (term "0,1,1,0,0,1,0,1,1,0"))
                                             (rule "replace_int_MAX" (formula "193") (term "1,0,1,0,0,1,0,1,1,0"))
                                             (rule "replace_int_MIN" (formula "193") (term "0,1,1,0,0,1,1,1,0"))
                                             (rule "replace_int_MAX" (formula "193") (term "1,0,1,0,0,1,1,1,0"))
                                             (rule "eqSymm" (formula "193") (term "0,0,1,1,0"))
                                             (rule "replace_known_left" (formula "193") (term "0,0,1,1,0") (ifseqformula "85"))
                                              (builtin "One Step Simplification" (formula "193"))
                                             (rule "castedGetAny" (formula "193") (term "0,0,1,0,0,1,1,0"))
                                             (rule "castedGetAny" (formula "193") (term "0,0,1,0,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "193") (term "1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "193") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "193") (term "1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "193") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "193") (term "1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "193") (term "1,1,0,0,1,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "193") (term "0,0,0,0,1,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "193") (term "0,0,0,0,0,1,1,0"))
                                             (rule "applyEq" (formula "193") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "85"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "193") (term "1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "193") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "193") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "193") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "193") (term "0,1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "193") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "193") (term "1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "193") (term "1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "193") (term "1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "193") (term "1,1,1,0,0,0,1,1,1,0"))
                                             (rule "mul_literals" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "193") (term "1,1,1,0,0,0,1,1,1,0"))
                                             (rule "nnf_notAnd" (formula "117") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "117") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "117") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "117") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "117") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "117") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "117") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "117") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "117") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "117") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "117") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "117") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "117") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "86") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "116") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "87") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "87") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "87") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "87") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "87") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "87") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "87") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "87") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "87") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "87") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "87") (term "1,1,0,0,0"))
                                             (rule "commute_or" (formula "3") (term "0,0"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "52"))
                                             (rule "applyEqReverse" (formula "289") (term "1,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "289"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "commute_or" (formula "2") (term "0,0"))
                                             (rule "applyEq" (formula "57") (term "0") (ifseqformula "2"))
                                             (rule "eqSymm" (formula "57"))
                                             (rule "close" (formula "288") (ifseqformula "57"))
                                          )
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "228"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "replace_known_right" (formula "22") (term "1,0,0") (ifseqformula "228"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "228"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "228"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "replace_known_right" (formula "20") (term "1,0,0") (ifseqformula "228"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "228"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "228"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "227"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "226"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "226"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "replace_known_right" (formula "219") (term "1") (ifseqformula "226"))
                                              (builtin "One Step Simplification" (formula "219"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "applyEq" (formula "18") (term "0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "19") (term "1,0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "nnf_imp2or" (formula "114") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "114") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "114") (term "1,0,0"))
                                             (rule "mul_literals" (formula "114") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "114") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "114") (term "1,0,0"))
                                             (rule "mul_literals" (formula "114") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "114") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "114") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "114") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "114") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "114") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "114") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "114") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "114") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "114") (term "1,0,0,0"))
                                             (rule "nnf_imp2or" (formula "145") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "145") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "145") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "145") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "145") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "145") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "145") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "145") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "145") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "145") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "145") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "145") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "145") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "145") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "145") (term "1,0,0"))
                                             (rule "mul_literals" (formula "145") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "132") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "132") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "132") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "132") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "132") (term "1,0,0"))
                                             (rule "mul_literals" (formula "132") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "132") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "132") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "132") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "132") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "132") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "132") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "132") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "132") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "132") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "134") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "134") (term "1,0,0"))
                                             (rule "mul_literals" (formula "134") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "134") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "134") (term "1,0,0"))
                                             (rule "mul_literals" (formula "134") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "134") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "134") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "134") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "134") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "134") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "134") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "134") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "134") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "134") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "127") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "127") (term "1,0,0"))
                                             (rule "mul_literals" (formula "127") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "127") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "127") (term "1,0,0"))
                                             (rule "mul_literals" (formula "127") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "127") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "127") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "127") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "127") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "127") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "127") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "127") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "127") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "127") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "104") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "104") (term "1,0,0"))
                                             (rule "mul_literals" (formula "104") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "104") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "104") (term "1,0,0"))
                                             (rule "mul_literals" (formula "104") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "104") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "104") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "104") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "104") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "104") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "104") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "104") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "104") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "104") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "97") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "97") (term "1,0,0"))
                                             (rule "mul_literals" (formula "97") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "97") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "1,0,0"))
                                             (rule "mul_literals" (formula "97") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "97") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "97") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "97") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "97") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "97") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "97") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "97") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "97") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "97") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "102") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "102") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "102") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "102") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "102") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "102") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "102") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "102") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "102") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "102") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "102") (term "1,0,0"))
                                             (rule "mul_literals" (formula "102") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "102") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "102") (term "1,0,0"))
                                             (rule "mul_literals" (formula "102") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "124") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "124") (term "1,0,0"))
                                             (rule "mul_literals" (formula "124") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "124") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "124") (term "1,0,0"))
                                             (rule "mul_literals" (formula "124") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "93") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "93") (term "1,0,0"))
                                             (rule "mul_literals" (formula "93") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "93") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "1,0,0"))
                                             (rule "mul_literals" (formula "93") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "123") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "123") (term "1,0,0"))
                                             (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "123") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "1,0,0"))
                                             (rule "mul_literals" (formula "123") (term "1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "200") (term "0,0,1,0,0"))
                                             (rule "nnf_notAnd" (formula "94") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "94") (term "1,0,0"))
                                             (rule "mul_literals" (formula "94") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "94") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "1,0,0"))
                                             (rule "mul_literals" (formula "94") (term "1,1,0,0"))
                                             (rule "seqGetAlphaCast" (formula "190") (term "0"))
                                             (rule "castedGetAny" (formula "190") (term "0"))
                                              (builtin "One Step Simplification" (formula "190"))
                                             (rule "true_left" (formula "190"))
                                             (rule "seqGetAlphaCast" (formula "139") (term "0"))
                                             (rule "castedGetAny" (formula "139") (term "0"))
                                              (builtin "One Step Simplification" (formula "139"))
                                             (rule "true_left" (formula "139"))
                                             (rule "nnf_imp2or" (formula "200") (term "0,1,1,0,0"))
                                             (rule "lenNonNegative" (formula "99") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "99"))
                                             (rule "lenNonNegative" (formula "106") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "106"))
                                             (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "200") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,0,0,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,1,0,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,0,0,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,1,0,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,0,0,0,1,0,1,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,0,0,0,1,0,1,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                             (rule "expand_inInt" (formula "200") (term "1,0,0,1,0,1,1,0"))
                                             (rule "expand_inInt" (formula "200") (term "1,0,0,1,1,1,0"))
                                             (rule "replace_int_MAX" (formula "200") (term "1,0,1,0,0,1,0,1,1,0"))
                                             (rule "replace_int_MIN" (formula "200") (term "0,1,1,0,0,1,0,1,1,0"))
                                             (rule "replace_int_MAX" (formula "200") (term "1,0,1,0,0,1,1,1,0"))
                                             (rule "replace_int_MIN" (formula "200") (term "0,1,1,0,0,1,1,1,0"))
                                             (rule "eqSymm" (formula "200") (term "0,0,1,1,0"))
                                             (rule "replace_known_left" (formula "200") (term "0,0,1,1,0") (ifseqformula "92"))
                                              (builtin "One Step Simplification" (formula "200"))
                                             (rule "castedGetAny" (formula "200") (term "0,0,1,0,0,1,1,0"))
                                             (rule "castedGetAny" (formula "200") (term "0,0,1,0,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "200") (term "1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "200") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "200") (term "1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "200") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "200") (term "1,1,0,0,1,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "200") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "200") (term "1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "200") (term "0,0,0,0,1,1,1,0"))
                                             (rule "applyEq" (formula "200") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "92"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "200") (term "1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "200") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "200") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "200") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "200") (term "0,1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "200") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "200") (term "1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "200") (term "1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "200") (term "1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "200") (term "1,1,1,0,0,0,1,1,1,0"))
                                             (rule "mul_literals" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "200") (term "1,1,1,0,0,0,1,1,1,0"))
                                             (rule "nnf_notAnd" (formula "124") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "124") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "124") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "124") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "124") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "124") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "124") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "124") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "124") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "124") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "124") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "124") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "93") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "93") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "93") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "93") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "93") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "93") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "93") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "93") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "93") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "93") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "93") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "93") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "123") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "123") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "123") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "123") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "123") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "123") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "123") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "123") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "123") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "123") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "123") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "123") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "123") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "123") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "94") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "94") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "94") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "94") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "94") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "94") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "94") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "94") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "94") (term "1,1,0,0,0"))
                                             (rule "commute_or" (formula "7") (term "0,0"))
                                             (rule "applyEq" (formula "59") (term "0") (ifseqformula "7"))
                                             (rule "applyEqReverse" (formula "228") (term "0") (ifseqformula "59"))
                                             (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "59"))
                                             (rule "hideAuxiliaryEq" (formula "59"))
                                             (rule "commute_or" (formula "6") (term "0,0"))
                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "64"))
                                             (rule "applyEqReverse" (formula "297") (term "1,1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "nnf_notAnd" (formula "198") (term "0,0,0,1,0,0"))
                                             (rule "nnf_notAnd" (formula "198") (term "0,0,1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "198") (term "0,0,1,1,0"))
                                             (rule "nnf_imp2or" (formula "198") (term "0,1,1,1,0"))
                                             (rule "commute_or" (formula "3") (term "0,0"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "17"))
                                             (rule "applyEqReverse" (formula "296") (term "0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "296"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "commute_or" (formula "4") (term "0,0"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "4"))
                                             (rule "close" (formula "295") (ifseqformula "17"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: strContent(password_15_B) = strContent(password_15_A) FALSE"
                                     (builtin "One Step Simplification" (formula "230"))
                                    (rule "true_left" (formula "230"))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "233") (inst "iv=iv"))
                                    (rule "inEqSimp_ltToLeq" (formula "233") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "233") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "233") (term "0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "233") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "233") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "233") (term "1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "233") (term "1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "233") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "233") (term "1,1,1,0,0,1"))
                                    (rule "cut_direct" (formula "229") (term "0"))
                                    (branch "CUT: password_15_B = password_15_A TRUE"
                                        (builtin "One Step Simplification" (formula "230"))
                                       (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "230"))
                                       (rule "applyEqReverse" (formula "269") (term "0") (ifseqformula "230"))
                                       (rule "hideAuxiliaryEq" (formula "230"))
                                       (rule "applyEq" (formula "233") (term "0,0,0,1,0,1") (ifseqformula "229"))
                                        (builtin "One Step Simplification" (formula "233"))
                                       (rule "applyEq" (formula "230") (term "1") (ifseqformula "229"))
                                       (rule "applyEq" (formula "129") (term "1,0") (ifseqformula "229"))
                                       (rule "applyEq" (formula "265") (term "0") (ifseqformula "229"))
                                       (rule "applyEq" (formula "233") (term "0,0,0") (ifseqformula "229"))
                                        (builtin "One Step Simplification" (formula "233"))
                                       (rule "closeTrue" (formula "233"))
                                    )
                                    (branch "CUT: password_15_B = password_15_A FALSE"
                                        (builtin "One Step Simplification" (formula "229"))
                                       (rule "true_left" (formula "229"))
                                       (rule "seqGetAlphaCast" (formula "141") (term "0"))
                                       (rule "castedGetAny" (formula "141") (term "0"))
                                        (builtin "One Step Simplification" (formula "141"))
                                       (rule "true_left" (formula "141"))
                                       (rule "lenNonNegative" (formula "113") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "113"))
                                       (rule "lenNonNegative" (formula "139") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "139"))
                                       (rule "nnf_imp2or" (formula "134") (term "0"))
                                       (rule "nnf_imp2or" (formula "103") (term "0"))
                                       (rule "nnf_imp2or" (formula "133") (term "0"))
                                       (rule "nnf_imp2or" (formula "104") (term "0"))
                                       (rule "ifthenelse_split" (formula "64") (term "0"))
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "65"))
                                          (rule "applyEqReverse" (formula "67") (term "1,0") (ifseqformula "65"))
                                          (rule "hideAuxiliaryEq" (formula "65"))
                                          (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "applyEqReverse" (formula "59") (term "1,0") (ifseqformula "57"))
                                          (rule "hideAuxiliaryEq" (formula "57"))
                                          (rule "replace_known_left" (formula "72") (term "1,0,0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "72"))
                                          (rule "applyEqReverse" (formula "74") (term "1,0") (ifseqformula "72"))
                                          (rule "hideAuxiliaryEq" (formula "72"))
                                          (rule "replace_known_left" (formula "60") (term "1,0,0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "applyEqReverse" (formula "266") (term "0") (ifseqformula "60"))
                                          (rule "hideAuxiliaryEq" (formula "60"))
                                          (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "62"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "302") (term "1,1") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "applyEqReverse" (formula "301") (term "1,0") (ifseqformula "8"))
                                          (rule "hideAuxiliaryEq" (formula "8"))
                                          (rule "replace_known_left" (formula "62") (term "1,0,0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "62"))
                                          (rule "applyEqReverse" (formula "64") (term "1,0") (ifseqformula "62"))
                                          (rule "hideAuxiliaryEq" (formula "62"))
                                          (rule "replace_known_left" (formula "69") (term "1,0,0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "69"))
                                          (rule "applyEqReverse" (formula "230") (term "0") (ifseqformula "69"))
                                          (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "69"))
                                          (rule "hideAuxiliaryEq" (formula "69"))
                                          (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "applyEqReverse" (formula "228") (term "0") (ifseqformula "63"))
                                          (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "63"))
                                          (rule "hideAuxiliaryEq" (formula "63"))
                                          (rule "replace_known_left" (formula "56") (term "1,0,0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "applyEqReverse" (formula "260") (term "0") (ifseqformula "56"))
                                          (rule "hideAuxiliaryEq" (formula "56"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "296") (term "1,1") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "63") (term "0,0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "applyEqReverse" (formula "226") (term "0") (ifseqformula "63"))
                                          (rule "applyEqReverse" (formula "295") (term "1,1") (ifseqformula "63"))
                                          (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "63"))
                                          (rule "hideAuxiliaryEq" (formula "63"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "294") (term "1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "eqSymm" (formula "293") (term "1"))
                                          (rule "eqSymm" (formula "293") (term "0"))
                                          (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "256"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "223"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "224"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "replace_known_left" (formula "176") (term "1") (ifseqformula "57"))
                                           (builtin "One Step Simplification" (formula "176"))
                                          (rule "true_left" (formula "176"))
                                          (rule "lenNonNegative" (formula "134") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "134"))
                                          (rule "seqGetAlphaCast" (formula "106") (term "0"))
                                          (rule "castedGetAny" (formula "106") (term "0"))
                                           (builtin "One Step Simplification" (formula "106"))
                                          (rule "true_left" (formula "106"))
                                          (rule "seqGetAlphaCast" (formula "99") (term "0"))
                                          (rule "castedGetAny" (formula "99") (term "0"))
                                           (builtin "One Step Simplification" (formula "99"))
                                          (rule "true_left" (formula "99"))
                                          (rule "seqGetAlphaCast" (formula "153") (term "0"))
                                          (rule "castedGetAny" (formula "153") (term "0"))
                                           (builtin "One Step Simplification" (formula "153"))
                                          (rule "true_left" (formula "153"))
                                          (rule "seqGetAlphaCast" (formula "150") (term "0"))
                                          (rule "castedGetAny" (formula "150") (term "0"))
                                           (builtin "One Step Simplification" (formula "150"))
                                          (rule "true_left" (formula "150"))
                                          (rule "seqGetAlphaCast" (formula "190") (term "0"))
                                          (rule "castedGetAny" (formula "190") (term "0"))
                                           (builtin "One Step Simplification" (formula "190"))
                                          (rule "true_left" (formula "190"))
                                          (rule "lenNonNegative" (formula "131") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "131"))
                                          (rule "ifthenelse_split" (formula "17") (term "0"))
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "19") (term "1,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_left" (formula "16") (term "1,0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "applyEqReverse" (formula "221") (term "0") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "replace_known_left" (formula "21") (term "1,0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "eqSymm" (formula "21"))
                                             (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "21"))
                                             (rule "hideAuxiliaryEq" (formula "21"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "16") (term "1,0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "288") (term "1,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "17") (term "1,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "287") (term "1,1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "11") (term "1,0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "applyEqReverse" (formula "215") (term "0") (ifseqformula "11"))
                                             (rule "hideAuxiliaryEq" (formula "11"))
                                             (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "14"))
                                             (rule "applyEqReverse" (formula "285") (term "1,1") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "applyEqReverse" (formula "213") (term "0") (ifseqformula "10"))
                                             (rule "hideAuxiliaryEq" (formula "10"))
                                             (rule "replace_known_left" (formula "11") (term "1,0,0") (ifseqformula "10"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "11"))
                                             (rule "hideAuxiliaryEq" (formula "11"))
                                             (rule "eqSymm" (formula "282") (term "0"))
                                             (rule "eqSymm" (formula "282") (term "1"))
                                             (rule "replace_known_left" (formula "282") (term "0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "282") (ifInst ""  (formula "12")))
                                             (rule "closeTrue" (formula "282"))
                                          )
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "17"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "218"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "218"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "20") (term "1,0,0") (ifseqformula "218"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "replace_known_right" (formula "16") (term "1,0,0") (ifseqformula "218"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "218"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "218"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "replace_known_right" (formula "15") (term "1,0,0") (ifseqformula "218"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "218"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "applyEqReverse" (formula "15") (term "1,0") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_right" (formula "20") (term "1,0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "217"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "applyEqReverse" (formula "19") (term "1,0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "216"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "216"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_right" (formula "211") (term "1") (ifseqformula "216"))
                                              (builtin "One Step Simplification" (formula "211"))
                                             (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "nnf_imp2or" (formula "107") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "107") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "107") (term "1,0,0"))
                                             (rule "mul_literals" (formula "107") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "107") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "1,0,0"))
                                             (rule "mul_literals" (formula "107") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "107") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "107") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "107") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "107") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "107") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "107") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "107") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "107") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "107") (term "1,0,0,0"))
                                             (rule "nnf_imp2or" (formula "138") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "138") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "138") (term "1,0,0"))
                                             (rule "mul_literals" (formula "138") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "138") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "1,0,0"))
                                             (rule "mul_literals" (formula "138") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "138") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "138") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "138") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "138") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "138") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "138") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "138") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "138") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "138") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "125") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "125") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "125") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "125") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "125") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "125") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "125") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "125") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "125") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "125") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "125") (term "1,0,0"))
                                             (rule "mul_literals" (formula "125") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "125") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "125") (term "1,0,0"))
                                             (rule "mul_literals" (formula "125") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "127") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "127") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "127") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "127") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "127") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "127") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "127") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "127") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "127") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "127") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "127") (term "1,0,0"))
                                             (rule "mul_literals" (formula "127") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "127") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "127") (term "1,0,0"))
                                             (rule "mul_literals" (formula "127") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "120") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "120") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "120") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "120") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "120") (term "1,0,0"))
                                             (rule "mul_literals" (formula "120") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "120") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "120") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "120") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "120") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "120") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "120") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "120") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "120") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "120") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "97") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "97") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "97") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "97") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "97") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "97") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "97") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "97") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "97") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "97") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "97") (term "1,0,0"))
                                             (rule "mul_literals" (formula "97") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "97") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "1,0,0"))
                                             (rule "mul_literals" (formula "97") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "90") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "90") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "90") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "90") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "90") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "90") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "90") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "90") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "90") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "90") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "90") (term "1,0,0"))
                                             (rule "mul_literals" (formula "90") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "90") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "1,0,0"))
                                             (rule "mul_literals" (formula "90") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "95") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "95") (term "1,0,0"))
                                             (rule "mul_literals" (formula "95") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "95") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "1,0,0"))
                                             (rule "mul_literals" (formula "95") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "95") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "95") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "95") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "95") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "95") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "95") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "95") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "95") (term "1,0,0,0"))
                                             (rule "nnf_imp2or" (formula "216") (term "0,1"))
                                             (rule "nnf_imp2or" (formula "192") (term "0,0,1,0,0"))
                                             (rule "seqGetAlphaCast" (formula "182") (term "0"))
                                             (rule "castedGetAny" (formula "182") (term "0"))
                                              (builtin "One Step Simplification" (formula "182"))
                                             (rule "true_left" (formula "182"))
                                             (rule "seqGetAlphaCast" (formula "132") (term "0"))
                                             (rule "castedGetAny" (formula "132") (term "0"))
                                              (builtin "One Step Simplification" (formula "132"))
                                             (rule "true_left" (formula "132"))
                                             (rule "nnf_imp2or" (formula "192") (term "0,1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "117") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "117") (term "1,0,0"))
                                             (rule "mul_literals" (formula "117") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "117") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "1,0,0"))
                                             (rule "mul_literals" (formula "117") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "87") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "87") (term "1,0,0"))
                                             (rule "mul_literals" (formula "87") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "87") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "1,0,0"))
                                             (rule "mul_literals" (formula "87") (term "1,1,0,0"))
                                             (rule "lenNonNegative" (formula "92") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "92"))
                                             (rule "lenNonNegative" (formula "99") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "99"))
                                             (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "192") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,1,0,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,0,0,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,1,0,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,0,0,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,0,0,0,1,0,1,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,0,0,0,1,0,1,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "192") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "192") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                             (rule "expand_inInt" (formula "192") (term "1,0,0,1,0,1,1,0"))
                                             (rule "expand_inInt" (formula "192") (term "1,0,0,1,1,1,0"))
                                             (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,0,1,1,0"))
                                             (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,0,1,1,0"))
                                             (rule "replace_int_MIN" (formula "192") (term "0,1,1,0,0,1,1,1,0"))
                                             (rule "replace_int_MAX" (formula "192") (term "1,0,1,0,0,1,1,1,0"))
                                             (rule "eqSymm" (formula "192") (term "0,0,1,1,0"))
                                             (rule "replace_known_left" (formula "192") (term "0,0,1,1,0") (ifseqformula "85"))
                                              (builtin "One Step Simplification" (formula "192"))
                                             (rule "castedGetAny" (formula "192") (term "0,0,1,0,1,1,1,0"))
                                             (rule "castedGetAny" (formula "192") (term "0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "192") (term "1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "192") (term "1,1,0,0,1,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "192") (term "0,0,0,0,1,1,1,0"))
                                             (rule "applyEq" (formula "192") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "85"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "192") (term "1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "192") (term "1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "192") (term "1,1,0,0,0,1,1,1,0"))
                                             (rule "mul_literals" (formula "192") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "192") (term "1,1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "192") (term "1,1,1,0,0,0,1,1,1,0"))
                                             (rule "nnf_notAnd" (formula "216") (term "0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "216") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "216") (term "1,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "216") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "216") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "216") (term "1,0,0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "216") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "216") (term "1,0,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "216") (term "0,1,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "216") (term "0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "216") (term "0,0,0,1,0,0,1"))
                                             (rule "add_zero_left" (formula "216") (term "0,0,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "216") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "216") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "216") (term "1,1,0,0,1"))
                                             (rule "nnf_notAnd" (formula "117") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "117") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "117") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "117") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "117") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "117") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "117") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "117") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "117") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "117") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "117") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "117") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "117") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "116") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "87") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "87") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "87") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "87") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "87") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "87") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "87") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "87") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "87") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "87") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "87") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "192") (term "0,0,1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "192") (term "0,0,0,1,0,0"))
                                             (rule "nnf_imp2or" (formula "192") (term "0,0,1,1,0"))
                                             (rule "commute_or" (formula "3") (term "0,0"))
                                             (rule "applyEq" (formula "16") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "16"))
                                             (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "16"))
                                             (rule "applyEqReverse" (formula "288") (term "1,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "288"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "nnf_imp2or" (formula "191") (term "0,1,1,1,0"))
                                             (rule "commute_or" (formula "5") (term "0,0"))
                                             (rule "applyEq" (formula "16") (term "0") (ifseqformula "5"))
                                             (rule "eqSymm" (formula "16"))
                                             (rule "close" (formula "287") (ifseqformula "16"))
                                          )
                                       )
                                       (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "64"))
                                          (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "64"))
                                          (rule "hideAuxiliaryEq" (formula "64"))
                                          (rule "replace_known_right" (formula "72") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "72"))
                                          (rule "replace_known_right" (formula "67") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "67"))
                                          (rule "replace_known_right" (formula "65") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "65"))
                                          (rule "replace_known_right" (formula "74") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "74"))
                                          (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_right" (formula "61") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "61"))
                                          (rule "replace_known_right" (formula "9") (term "0,0,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "replace_known_right" (formula "59") (term "1,0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "replace_known_right" (formula "57") (term "0,0") (ifseqformula "231"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "applyEqReverse" (formula "59") (term "1,0") (ifseqformula "57"))
                                          (rule "hideAuxiliaryEq" (formula "57"))
                                          (rule "replace_known_right" (formula "69") (term "0,0") (ifseqformula "230"))
                                           (builtin "One Step Simplification" (formula "69"))
                                          (rule "applyEqReverse" (formula "71") (term "1,0") (ifseqformula "69"))
                                          (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "69"))
                                          (rule "hideAuxiliaryEq" (formula "69"))
                                          (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "229"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "229"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "replace_known_right" (formula "185") (term "1") (ifseqformula "229"))
                                           (builtin "One Step Simplification" (formula "185"))
                                          (rule "applyEq" (formula "70") (term "0") (ifseqformula "6"))
                                          (rule "applyEqReverse" (formula "72") (term "1,0") (ifseqformula "70"))
                                          (rule "hideAuxiliaryEq" (formula "70"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "64"))
                                          (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "8"))
                                          (rule "hideAuxiliaryEq" (formula "8"))
                                          (rule "lenNonNegative" (formula "141") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "141"))
                                          (rule "seqGetAlphaCast" (formula "113") (term "0"))
                                          (rule "castedGetAny" (formula "113") (term "0"))
                                           (builtin "One Step Simplification" (formula "113"))
                                          (rule "true_left" (formula "113"))
                                          (rule "seqGetAlphaCast" (formula "106") (term "0"))
                                          (rule "castedGetAny" (formula "106") (term "0"))
                                           (builtin "One Step Simplification" (formula "106"))
                                          (rule "true_left" (formula "106"))
                                          (rule "seqGetAlphaCast" (formula "160") (term "0"))
                                          (rule "castedGetAny" (formula "160") (term "0"))
                                           (builtin "One Step Simplification" (formula "160"))
                                          (rule "true_left" (formula "160"))
                                          (rule "seqGetAlphaCast" (formula "157") (term "0"))
                                          (rule "castedGetAny" (formula "157") (term "0"))
                                           (builtin "One Step Simplification" (formula "157"))
                                          (rule "true_left" (formula "157"))
                                          (rule "seqGetAlphaCast" (formula "198") (term "0"))
                                          (rule "castedGetAny" (formula "198") (term "0"))
                                           (builtin "One Step Simplification" (formula "198"))
                                          (rule "true_left" (formula "198"))
                                          (rule "lenNonNegative" (formula "138") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "138"))
                                          (rule "ifthenelse_split" (formula "20") (term "0"))
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "21"))
                                             (rule "hideAuxiliaryEq" (formula "21"))
                                             (rule "replace_known_left" (formula "18") (term "1,0,0") (ifseqformula "20"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "applyEqReverse" (formula "19") (term "1,0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "300") (term "0,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "applyEqReverse" (formula "230") (term "0") (ifseqformula "23"))
                                             (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "23"))
                                             (rule "hideAuxiliaryEq" (formula "23"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "298") (term "0,1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "replace_known_left" (formula "19") (term "1,0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "226") (term "0") (ifseqformula "19"))
                                             (rule "hideAuxiliaryEq" (formula "19"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "295") (term "0,1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "294") (term "0,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "17") (term "1,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "17"))
                                             (rule "applyEqReverse" (formula "224") (term "0") (ifseqformula "17"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "applyEqReverse" (formula "221") (term "0") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "220") (term "0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "14"))
                                             (rule "applyEqReverse" (formula "220") (term "0") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_left" (formula "210") (term "1") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "210"))
                                             (rule "true_left" (formula "210"))
                                             (rule "nnf_imp2or" (formula "107") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "107") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "107") (term "1,0,0"))
                                             (rule "mul_literals" (formula "107") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "107") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "1,0,0"))
                                             (rule "mul_literals" (formula "107") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "107") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "107") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "107") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "107") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "107") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "107") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "107") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "107") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "107") (term "1,0,0,0"))
                                             (rule "nnf_imp2or" (formula "138") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "138") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "138") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "138") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "138") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "138") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "138") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "138") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "138") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "138") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "138") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "138") (term "1,0,0"))
                                             (rule "mul_literals" (formula "138") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "138") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "138") (term "1,0,0"))
                                             (rule "mul_literals" (formula "138") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "125") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "125") (term "1,0,0"))
                                             (rule "mul_literals" (formula "125") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "125") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "125") (term "1,0,0"))
                                             (rule "mul_literals" (formula "125") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "125") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "125") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "125") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "125") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "125") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "125") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "125") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "125") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "125") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "127") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "127") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "127") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "127") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "127") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "127") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "127") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "127") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "127") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "127") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "127") (term "1,0,0"))
                                             (rule "mul_literals" (formula "127") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "127") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "127") (term "1,0,0"))
                                             (rule "mul_literals" (formula "127") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "120") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "120") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "120") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "120") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "120") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "120") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "120") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "120") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "120") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "120") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "120") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "120") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "120") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "120") (term "1,0,0"))
                                             (rule "mul_literals" (formula "120") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "97") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "97") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "97") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "97") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "1,0,0"))
                                             (rule "mul_literals" (formula "97") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "97") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "97") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "97") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "97") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "97") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "97") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "97") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "97") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "97") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "90") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "90") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "90") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "90") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "90") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "90") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "90") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "90") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "90") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "90") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "90") (term "1,0,0"))
                                             (rule "mul_literals" (formula "90") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "90") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "1,0,0"))
                                             (rule "mul_literals" (formula "90") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "95") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "95") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "95") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "95") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "95") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "95") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "95") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "95") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "95") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "95") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "95") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "95") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "1,0,0"))
                                             (rule "mul_literals" (formula "95") (term "1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "216") (term "0,1"))
                                             (rule "nnf_imp2or" (formula "193") (term "0,0,1,0,0"))
                                             (rule "seqGetAlphaCast" (formula "183") (term "0"))
                                             (rule "castedGetAny" (formula "183") (term "0"))
                                              (builtin "One Step Simplification" (formula "183"))
                                             (rule "true_left" (formula "183"))
                                             (rule "seqGetAlphaCast" (formula "132") (term "0"))
                                             (rule "castedGetAny" (formula "132") (term "0"))
                                              (builtin "One Step Simplification" (formula "132"))
                                             (rule "true_left" (formula "132"))
                                             (rule "nnf_imp2or" (formula "193") (term "0,1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "117") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "117") (term "1,0,0"))
                                             (rule "mul_literals" (formula "117") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "117") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "1,0,0"))
                                             (rule "mul_literals" (formula "117") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "86") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "86") (term "1,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "116") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "116") (term "1,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "87") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "87") (term "1,0,0"))
                                             (rule "mul_literals" (formula "87") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "87") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "1,0,0"))
                                             (rule "mul_literals" (formula "87") (term "1,1,0,0"))
                                             (rule "lenNonNegative" (formula "92") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "92"))
                                             (rule "lenNonNegative" (formula "99") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "99"))
                                             (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "193") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,1,0,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,0,0,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,1,0,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,0,0,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "193") (term "0,0,0,0,1,0,1,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "193") (term "0,0,0,0,1,0,1,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "193") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "193") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                             (rule "expand_inInt" (formula "193") (term "1,0,0,1,1,1,0"))
                                             (rule "expand_inInt" (formula "193") (term "1,0,0,1,0,1,1,0"))
                                             (rule "replace_int_MAX" (formula "193") (term "1,0,1,0,0,1,1,1,0"))
                                             (rule "replace_int_MIN" (formula "193") (term "0,1,1,0,0,1,1,1,0"))
                                             (rule "replace_int_MAX" (formula "193") (term "1,0,1,0,0,1,0,1,1,0"))
                                             (rule "replace_int_MIN" (formula "193") (term "0,1,1,0,0,1,0,1,1,0"))
                                             (rule "eqSymm" (formula "193") (term "0,0,1,1,0"))
                                             (rule "replace_known_left" (formula "193") (term "0,0,1,1,0") (ifseqformula "85"))
                                              (builtin "One Step Simplification" (formula "193"))
                                             (rule "castedGetAny" (formula "193") (term "0,0,1,0,1,1,1,0"))
                                             (rule "castedGetAny" (formula "193") (term "0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "193") (term "1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "193") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "193") (term "1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "193") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "193") (term "0,0,0,0,1,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "193") (term "1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "193") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "193") (term "1,1,0,0,1,1,1,0"))
                                             (rule "applyEq" (formula "193") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "85"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "193") (term "1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "193") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "193") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "193") (term "0,1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "193") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "193") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "193") (term "1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "193") (term "1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "193") (term "1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "193") (term "1,1,1,0,0,0,1,1,1,0"))
                                             (rule "mul_literals" (formula "193") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "193") (term "1,1,1,0,0,0,1,1,1,0"))
                                             (rule "nnf_notAnd" (formula "216") (term "0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "216") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "216") (term "1,0,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "216") (term "0,1,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "216") (term "0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "216") (term "0,0,0,1,0,0,1"))
                                             (rule "add_zero_left" (formula "216") (term "0,0,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "216") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "216") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "216") (term "1,1,0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "216") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "216") (term "1,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "216") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "216") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "216") (term "1,0,0,0,1"))
                                             (rule "nnf_notAnd" (formula "117") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "117") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "117") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "117") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "117") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "117") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "117") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "117") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "117") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "117") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "117") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "117") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "117") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "86") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "86") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "86") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "86") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "86") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "86") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "86") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "86") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "116") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "116") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "116") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "116") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "116") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "116") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "116") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "116") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "116") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "116") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "87") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "87") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "87") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "87") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "87") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "87") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "87") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "87") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "87") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "87") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "87") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "87") (term "1,1,0,0,0"))
                                             (rule "commute_or" (formula "4") (term "0,0"))
                                             (rule "applyEq" (formula "53") (term "0") (ifseqformula "4"))
                                             (rule "eqSymm" (formula "53"))
                                             (rule "applyEqReverse" (formula "288") (term "1,0") (ifseqformula "53"))
                                              (builtin "One Step Simplification" (formula "288"))
                                             (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "53"))
                                             (rule "hideAuxiliaryEq" (formula "53"))
                                             (rule "commute_or" (formula "3") (term "0,0"))
                                             (rule "applyEq" (formula "57") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "57"))
                                             (rule "close" (formula "287") (ifseqformula "57"))
                                          )
                                          (branch " resultAtPost_103_A.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "20"))
                                             (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "226"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "226"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "22"))
                                             (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "22"))
                                             (rule "hideAuxiliaryEq" (formula "22"))
                                             (rule "replace_known_right" (formula "22") (term "1,0,0") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "225"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "applyEqReverse" (formula "18") (term "1,0") (ifseqformula "17"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "224"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "replace_known_right" (formula "22") (term "1,0,0") (ifseqformula "224"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "224"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "replace_known_right" (formula "20") (term "1,0,0") (ifseqformula "224"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "224"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "224"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_right" (formula "19") (term "1,0,0") (ifseqformula "224"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "replace_known_right" (formula "219") (term "1") (ifseqformula "224"))
                                              (builtin "One Step Simplification" (formula "219"))
                                             (rule "applyEq" (formula "21") (term "0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "21"))
                                             (rule "hideAuxiliaryEq" (formula "21"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "nnf_imp2or" (formula "114") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "114") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "114") (term "1,0,0"))
                                             (rule "mul_literals" (formula "114") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "114") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "114") (term "1,0,0"))
                                             (rule "mul_literals" (formula "114") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "114") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "114") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "114") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "114") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "114") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "114") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "114") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "114") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "114") (term "1,0,0,0"))
                                             (rule "nnf_imp2or" (formula "145") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "145") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "145") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "145") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "145") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "145") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "145") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "145") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "145") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "145") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "145") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "145") (term "1,0,0"))
                                             (rule "mul_literals" (formula "145") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "145") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "145") (term "1,0,0"))
                                             (rule "mul_literals" (formula "145") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "132") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "132") (term "1,0,0"))
                                             (rule "mul_literals" (formula "132") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "132") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "132") (term "1,0,0"))
                                             (rule "mul_literals" (formula "132") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "132") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "132") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "132") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "132") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "132") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "132") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "132") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "132") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "132") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "134") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "134") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "134") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "134") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "134") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "134") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "134") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "134") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "134") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "134") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "134") (term "1,0,0"))
                                             (rule "mul_literals" (formula "134") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "134") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "134") (term "1,0,0"))
                                             (rule "mul_literals" (formula "134") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "127") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "127") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "127") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "127") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "127") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "127") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "127") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "127") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "127") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "127") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "127") (term "1,0,0"))
                                             (rule "mul_literals" (formula "127") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "127") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "127") (term "1,0,0"))
                                             (rule "mul_literals" (formula "127") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "104") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "104") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "104") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "104") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "104") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "104") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "104") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "104") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "104") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "104") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "104") (term "1,0,0"))
                                             (rule "mul_literals" (formula "104") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "104") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "104") (term "1,0,0"))
                                             (rule "mul_literals" (formula "104") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "97") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "97") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "97") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "97") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "97") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "97") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "97") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "97") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "97") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "97") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "97") (term "1,0,0"))
                                             (rule "mul_literals" (formula "97") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "97") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "1,0,0"))
                                             (rule "mul_literals" (formula "97") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "102") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "102") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "102") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "102") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "102") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "102") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "102") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "102") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "102") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "102") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "102") (term "1,0,0"))
                                             (rule "mul_literals" (formula "102") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "102") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "102") (term "1,0,0"))
                                             (rule "mul_literals" (formula "102") (term "1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "225") (term "0,1"))
                                             (rule "nnf_imp2or" (formula "200") (term "0,0,1,0,0"))
                                             (rule "seqGetAlphaCast" (formula "190") (term "0"))
                                             (rule "castedGetAny" (formula "190") (term "0"))
                                              (builtin "One Step Simplification" (formula "190"))
                                             (rule "true_left" (formula "190"))
                                             (rule "seqGetAlphaCast" (formula "139") (term "0"))
                                             (rule "castedGetAny" (formula "139") (term "0"))
                                              (builtin "One Step Simplification" (formula "139"))
                                             (rule "true_left" (formula "139"))
                                             (rule "nnf_imp2or" (formula "200") (term "0,1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "124") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "124") (term "1,0,0"))
                                             (rule "mul_literals" (formula "124") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "124") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "124") (term "1,0,0"))
                                             (rule "mul_literals" (formula "124") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "93") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "93") (term "1,0,0"))
                                             (rule "mul_literals" (formula "93") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "93") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "1,0,0"))
                                             (rule "mul_literals" (formula "93") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "123") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "123") (term "1,0,0"))
                                             (rule "mul_literals" (formula "123") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "123") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "1,0,0"))
                                             (rule "mul_literals" (formula "123") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "94") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "94") (term "1,0,0"))
                                             (rule "mul_literals" (formula "94") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "94") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "1,0,0"))
                                             (rule "mul_literals" (formula "94") (term "1,1,0,0"))
                                             (rule "lenNonNegative" (formula "99") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "99"))
                                             (rule "lenNonNegative" (formula "106") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "106"))
                                             (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "200") (term "1,1,0") (inst "i=i") (inst "i_0=i_0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,1,0,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,0,0,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,1,0,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,0,0,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,0,0,0,1,0,1,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_8" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,0,0,0,1,0,1,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet00_6" (formula "200") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "200") (term "0,1,1,0,0,0,1,0,1,1,0"))
                                             (rule "expand_inInt" (formula "200") (term "1,0,0,1,0,1,1,0"))
                                             (rule "expand_inInt" (formula "200") (term "1,0,0,1,1,1,0"))
                                             (rule "replace_int_MAX" (formula "200") (term "1,0,1,0,0,1,0,1,1,0"))
                                             (rule "replace_int_MIN" (formula "200") (term "0,1,1,0,0,1,0,1,1,0"))
                                             (rule "replace_int_MIN" (formula "200") (term "0,1,1,0,0,1,1,1,0"))
                                             (rule "replace_int_MAX" (formula "200") (term "1,0,1,0,0,1,1,1,0"))
                                             (rule "eqSymm" (formula "200") (term "0,0,1,1,0"))
                                             (rule "replace_known_left" (formula "200") (term "0,0,1,1,0") (ifseqformula "92"))
                                              (builtin "One Step Simplification" (formula "200"))
                                             (rule "castedGetAny" (formula "200") (term "0,0,1,0,1,1,1,0"))
                                             (rule "castedGetAny" (formula "200") (term "0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "200") (term "1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "200") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "200") (term "1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "200") (term "1,0,0,1,0,0,0,1,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "200") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "200") (term "1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "200") (term "1,1,0,0,1,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "200") (term "0,0,0,0,1,1,1,0"))
                                             (rule "applyEq" (formula "200") (term "0,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "92"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "200") (term "1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "200") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "200") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "200") (term "0,1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "200") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "200") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "200") (term "1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "200") (term "1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "200") (term "1,1,0,0,0,1,1,1,0"))
                                             (rule "mul_literals" (formula "200") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "200") (term "1,1,1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "200") (term "1,1,1,0,0,0,1,1,1,0"))
                                             (rule "nnf_notAnd" (formula "225") (term "0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "225") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "225") (term "1,0,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "225") (term "0,1,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "225") (term "0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "225") (term "0,0,0,1,0,0,1"))
                                             (rule "add_zero_left" (formula "225") (term "0,0,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "225") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "225") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "225") (term "1,1,0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "225") (term "0,0,0,1"))
                                             (rule "times_zero_1" (formula "225") (term "1,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "225") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "225") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "225") (term "1,0,0,0,1"))
                                             (rule "nnf_notAnd" (formula "124") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "124") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "124") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "124") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "124") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "124") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "124") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "124") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "124") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "124") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "124") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "124") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "124") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "124") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "124") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "93") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "93") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "93") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "93") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "93") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "93") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "93") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "93") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "93") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "93") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "93") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "93") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "93") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "123") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "123") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "123") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "123") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "123") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "123") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "123") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "123") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "123") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "123") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "123") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "123") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "123") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "123") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "94") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "94") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "94") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "94") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "94") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "94") (term "1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "94") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "94") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "94") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "94") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "94") (term "1,1,0,0,0"))
                                             (rule "commute_or" (formula "7") (term "0,0"))
                                             (rule "applyEq" (formula "7") (term "0") (ifseqformula "60"))
                                             (rule "applyEqReverse" (formula "297") (term "1,0") (ifseqformula "7"))
                                             (rule "hideAuxiliaryEq" (formula "7"))
                                             (rule "commute_or" (formula "6") (term "0,0"))
                                             (rule "applyEq" (formula "64") (term "0") (ifseqformula "6"))
                                             (rule "applyEqReverse" (formula "227") (term "0") (ifseqformula "64"))
                                             (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "64"))
                                             (rule "hideAuxiliaryEq" (formula "64"))
                                             (rule "nnf_notAnd" (formula "198") (term "0,0,1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "198") (term "0,0,0,1,0,0"))
                                             (rule "nnf_imp2or" (formula "198") (term "0,0,1,1,0"))
                                             (rule "commute_or" (formula "2") (term "0,0"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "18"))
                                             (rule "applyEqReverse" (formula "295") (term "0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "295"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "nnf_imp2or" (formula "197") (term "0,1,1,1,0"))
                                             (rule "commute_or" (formula "3") (term "0,0"))
                                             (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                             (rule "close" (formula "294") (ifseqformula "18"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "Exceptional Post (generateDataForVoter)"
                         (builtin "One Step Simplification" (formula "198"))
                         (builtin "One Step Simplification" (formula "227"))
                        (rule "andLeft" (formula "198"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "199") (term "1,0") (ifseqformula "198"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "199") (term "0,1,0") (ifseqformula "191"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "199") (term "0,0,1,0") (ifseqformula "170"))
                        (rule "andLeft" (formula "199"))
                        (rule "andLeft" (formula "199"))
                        (rule "andLeft" (formula "201"))
                        (rule "notLeft" (formula "199"))
                        (rule "close" (formula "202") (ifseqformula "201"))
                     )
                     (branch "Pre (generateDataForVoter)"
                         (builtin "One Step Simplification" (formula "225") (ifInst ""  (formula "197")) (ifInst ""  (formula "226")) (ifInst ""  (formula "197")) (ifInst ""  (formula "226")))
                        (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "225") (term "0,1,0") (userinteraction))
                        (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "225") (term "0,0") (userinteraction))
                        (rule "andRight" (formula "225"))
                        (branch "Case 1"
                           (rule "andRight" (formula "225"))
                           (branch
                              (rule "andRight" (formula "225"))
                              (branch
                                 (rule "andRight" (formula "225"))
                                 (branch
                                    (rule "insert_constant_string_value" (formula "225") (term "0,0") (ifseqformula "141"))
                                     (builtin "One Step Simplification" (formula "225"))
                                    (rule "castDel" (formula "225") (term "0,0,0"))
                                    (rule "notRight" (formula "225"))
                                    (rule "close" (formula "261") (ifseqformula "1"))
                                 )
                                 (branch
                                    (rule "notRight" (formula "225"))
                                    (rule "eqSymm" (formula "269") (term "0,1"))
                                    (rule "eqSymm" (formula "269") (term "1,1"))
                                    (rule "eqSymm" (formula "269") (term "0,0"))
                                    (rule "eqSymm" (formula "269") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "146"))
                                    (rule "polySimp_mulComm0" (formula "146") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "146") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "182"))
                                    (rule "polySimp_mulComm0" (formula "182") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "182") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "188"))
                                    (rule "polySimp_mulComm0" (formula "188") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "188") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "160"))
                                    (rule "polySimp_mulComm0" (formula "160") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "160") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "116"))
                                    (rule "polySimp_mulComm0" (formula "116") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "116") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "83") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "90") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "86"))
                                    (rule "polySimp_mulComm0" (formula "86") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "86") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "196"))
                                    (rule "polySimp_mulComm0" (formula "196") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "196") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "197"))
                                    (rule "mul_literals" (formula "197") (term "1,0,0"))
                                    (rule "add_literals" (formula "197") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "128"))
                                    (rule "polySimp_mulComm0" (formula "128") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "128") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "100") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "100") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "120") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "120") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "151"))
                                    (rule "polySimp_mulComm0" (formula "151") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "151") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "109") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "109") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "100") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "100") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "131") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "131") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "137"))
                                    (rule "polySimp_mulComm0" (formula "137") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "137") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "131") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "131") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "140"))
                                    (rule "polySimp_mulComm0" (formula "140") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "140") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "110") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "110") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "124"))
                                    (rule "polySimp_mulComm0" (formula "124") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "124") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "113") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "113") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "79") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "178"))
                                    (rule "polySimp_mulComm0" (formula "178") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "178") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "118") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "118") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "175"))
                                    (rule "polySimp_mulComm0" (formula "175") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "175") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "161"))
                                    (rule "mul_literals" (formula "161") (term "1,0,0"))
                                    (rule "add_literals" (formula "161") (term "0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "131") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "131") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "131") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "93"))
                                    (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "88") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "97"))
                                    (rule "polySimp_mulComm0" (formula "97") (term "1,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "100") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "100") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "100") (term "0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "93") (term "0"))
                                    (rule "polySimp_addComm1" (formula "97") (term "0"))
                                    (rule "applyEq" (formula "93") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "90") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "269") (term "0,1,1,0") (ifseqformula "24"))
                                    (rule "applyEq" (formula "166") (term "4") (ifseqformula "165"))
                                    (rule "applyEq" (formula "63") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "46") (term "1,2,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "164") (term "1,0,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "164") (term "1,0,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "94") (term "1,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "31") (term "1,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "57") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "45") (term "1,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "50") (term "1,0,1,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "232") (term "0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "135") (term "0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "49") (term "1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "50") (term "1,2,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "37") (term "1,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "258") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "58") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "40") (term "1,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "64") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "50") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "135") (term "2") (ifseqformula "21"))
                                    (rule "applyEq" (formula "34") (term "1,2,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "99") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEqRigid" (formula "234") (term "0") (ifseqformula "82"))
                                    (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "39") (term "1,2,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "48") (term "1,2,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "43") (term "1,0,1,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "92") (term "1,1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "137") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "33") (term "1,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "34") (term "1,0,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "43") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "98") (term "1,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "30") (term "1,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "48") (term "1,0,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "88") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "258") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "44") (term "1,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "77") (term "0") (ifseqformula "78"))
                                    (rule "applyEq" (formula "34") (term "1,0,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "46") (term "1,1,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "45") (term "1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "40") (term "1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "251") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "52") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "38") (term "1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "59") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "146") (term "1,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "35") (term "1,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "39") (term "1,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "36") (term "1,2,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "50") (term "1,0,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "267") (term "0,1,0,0") (ifseqformula "24"))
                                    (rule "applyEqRigid" (formula "267") (term "0,1,1,1,1") (ifseqformula "24"))
                                    (rule "applyEq" (formula "48") (term "1,0,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "38") (term "1,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "36") (term "1,0,1,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "86") (term "1,1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "41") (term "1,0,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "248") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "43") (term "1,2,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "84") (term "1,1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "253") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "99") (term "1,1,0,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "36") (term "1,0,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "87") (term "1,1,0,0,0,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "82") (term "1,1,0,0,0,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "44") (term "1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "35") (term "1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "65") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "93") (term "1,1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "246") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "151") (term "1,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "140") (term "1,1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "247") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "266") (term "0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "137") (term "1,1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "163") (term "1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "250") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "53") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "245") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEqRigid" (formula "267") (term "0,1,1,1") (ifseqformula "24"))
                                    (rule "applyEq" (formula "89") (term "1,1,0,0,0,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "56") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "148") (term "1,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "85") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "41") (term "1,0,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "244") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "51") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "42") (term "1,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "137") (term "1,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "140") (term "1,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "86") (term "1,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "255") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "82") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "156") (term "4") (ifseqformula "155"))
                                    (rule "applyEq" (formula "252") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "156") (term "3") (ifseqformula "21"))
                                    (rule "applyEq" (formula "163") (term "1,0,1,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "134") (term "3") (ifseqformula "133"))
                                    (rule "applyEq" (formula "60") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "249") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "32") (term "1,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "36") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "37") (term "1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "41") (term "1,2,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "148") (term "5") (ifseqformula "142"))
                                    (rule "applyEq" (formula "49") (term "1,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "46") (term "1,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "71") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "43") (term "1,0,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "72") (term "0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "139") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "156") (term "0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "42") (term "1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "165") (term "3") (ifseqformula "22"))
                                    (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "32") (term "1,2,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "54") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "254") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "88") (term "1,1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "47") (term "1,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "79") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "77"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "145"))
                                    (rule "polySimp_mulLiterals" (formula "145") (term "0"))
                                    (rule "polySimp_elimOne" (formula "145") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "181"))
                                    (rule "polySimp_mulLiterals" (formula "181") (term "0"))
                                    (rule "polySimp_elimOne" (formula "181") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "187"))
                                    (rule "polySimp_mulLiterals" (formula "187") (term "0"))
                                    (rule "polySimp_elimOne" (formula "187") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "159"))
                                    (rule "polySimp_mulLiterals" (formula "159") (term "0"))
                                    (rule "polySimp_elimOne" (formula "159") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "115"))
                                    (rule "polySimp_mulLiterals" (formula "115") (term "0"))
                                    (rule "polySimp_elimOne" (formula "115") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "195"))
                                    (rule "polySimp_mulLiterals" (formula "195") (term "0"))
                                    (rule "polySimp_elimOne" (formula "195") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "196"))
                                    (rule "mul_literals" (formula "196") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "127"))
                                    (rule "polySimp_mulLiterals" (formula "127") (term "0"))
                                    (rule "polySimp_elimOne" (formula "127") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "99") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "99") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "99") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "99") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "119") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "119") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "119") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "119") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "150"))
                                    (rule "polySimp_mulLiterals" (formula "150") (term "0"))
                                    (rule "polySimp_elimOne" (formula "150") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "108") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "108") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "108") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "108") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "108") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "108") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "99") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "99") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "99") (term "1,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "99") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "99") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "130") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "130") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "130") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "130") (term "1,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "130") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "130") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "130") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "130") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "130") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "130") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "130") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "130") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "109") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "109") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "109") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "109") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "109") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "109") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "123"))
                                    (rule "polySimp_mulLiterals" (formula "123") (term "0"))
                                    (rule "polySimp_elimOne" (formula "123") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "112") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "112") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "112") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "112") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "112") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "78") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "177"))
                                    (rule "polySimp_mulLiterals" (formula "177") (term "0"))
                                    (rule "polySimp_elimOne" (formula "177") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "117") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "117") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "117") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "117") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "117") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "174"))
                                    (rule "polySimp_mulLiterals" (formula "174") (term "0"))
                                    (rule "polySimp_elimOne" (formula "174") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "160"))
                                    (rule "mul_literals" (formula "160") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "130") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "130") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "99") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "99") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "96"))
                                    (rule "polySimp_mulLiterals" (formula "96") (term "0"))
                                    (rule "polySimp_elimOne" (formula "96") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "92"))
                                    (rule "polySimp_mulLiterals" (formula "92") (term "0"))
                                    (rule "polySimp_elimOne" (formula "92") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "89") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "136"))
                                    (rule "polySimp_mulLiterals" (formula "136") (term "0"))
                                    (rule "polySimp_elimOne" (formula "136") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "87") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "87") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "87") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "85"))
                                    (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                                    (rule "polySimp_elimOne" (formula "85") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "82") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "82") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "139"))
                                    (rule "polySimp_mulLiterals" (formula "139") (term "0"))
                                    (rule "polySimp_elimOne" (formula "139") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "79") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0,0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SECURE_RANDOM_1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "192"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "171"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "close" (formula "221") (ifseqformula "2"))
                                 )
                              )
                              (branch
                                 (rule "notRight" (formula "225"))
                                 (rule "eqSymm" (formula "269") (term "0,1"))
                                 (rule "eqSymm" (formula "269") (term "1,1"))
                                 (rule "eqSymm" (formula "269") (term "0,0"))
                                 (rule "eqSymm" (formula "269") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "146"))
                                 (rule "polySimp_mulComm0" (formula "146") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "146") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "182"))
                                 (rule "polySimp_mulComm0" (formula "182") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "182") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "188"))
                                 (rule "polySimp_mulComm0" (formula "188") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "188") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "86"))
                                 (rule "polySimp_mulComm0" (formula "86") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "86") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "196"))
                                 (rule "polySimp_mulComm0" (formula "196") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "196") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "178"))
                                 (rule "polySimp_mulComm0" (formula "178") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "178") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "160"))
                                 (rule "polySimp_mulComm0" (formula "160") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "160") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "83") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "90") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "116"))
                                 (rule "polySimp_mulComm0" (formula "116") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "116") (term "0"))
                                 (rule "inEqSimp_gtToGeq" (formula "197"))
                                 (rule "mul_literals" (formula "197") (term "1,0,0"))
                                 (rule "add_literals" (formula "197") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "128"))
                                 (rule "polySimp_mulComm0" (formula "128") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "128") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "100") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "100") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "120") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "120") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "151"))
                                 (rule "polySimp_mulComm0" (formula "151") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "151") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "109") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "109") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "100") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "100") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "131") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "131") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "161"))
                                 (rule "mul_literals" (formula "161") (term "1,0,0"))
                                 (rule "add_literals" (formula "161") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "131") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "131") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "118") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "118") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "175"))
                                 (rule "polySimp_mulComm0" (formula "175") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "175") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "140"))
                                 (rule "polySimp_mulComm0" (formula "140") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "140") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "113") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "113") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "79") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "137"))
                                 (rule "polySimp_mulComm0" (formula "137") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "137") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "110") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "110") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "124"))
                                 (rule "polySimp_mulComm0" (formula "124") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "124") (term "0"))
                                 (rule "inEqSimp_gtToGeq" (formula "131") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "131") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "131") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "93"))
                                 (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "97"))
                                 (rule "polySimp_mulComm0" (formula "97") (term "1,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "100") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "100") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "100") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "88") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "93") (term "0"))
                                 (rule "polySimp_addComm1" (formula "97") (term "0"))
                                 (rule "applyEq" (formula "140") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "252") (term "1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "90") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "72") (term "0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "88") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "93") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "35") (term "1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "56") (term "1,1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "49") (term "1,1,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "141") (term "1,1,0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "269") (term "0,1,0,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "34") (term "1,0,1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "43") (term "1,2,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "247") (term "1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "157") (term "0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "92") (term "1,1,0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "149") (term "1,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "232") (term "0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "88") (term "1,1,0,0,0,1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "47") (term "1,1,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "137") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "36") (term "1,0,1,0,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "40") (term "1,1,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "63") (term "1,1,0") (ifseqformula "21"))
                                 (rule "applyEqRigid" (formula "269") (term "0,1,1,1,1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "30") (term "1,1,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "32") (term "1,0,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "157") (term "3") (ifseqformula "21"))
                                 (rule "applyEq" (formula "268") (term "0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "94") (term "1,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "45") (term "1,1,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "31") (term "1,1,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "46") (term "1,1,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "45") (term "1,0,0") (ifseqformula "22"))
                                 (rule "applyEqRigid" (formula "269") (term "0,1,1,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "135") (term "2") (ifseqformula "21"))
                                 (rule "applyEq" (formula "34") (term "1,2,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "50") (term "1,2,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "87") (term "1,1,0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "157") (term "4") (ifseqformula "156"))
                                 (rule "applyEq" (formula "42") (term "1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "90") (term "1,1,0,0,0,1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "83") (term "1,1,0,0,0,1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "251") (term "1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "36") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                 (rule "applyEqRigid" (formula "234") (term "0") (ifseqformula "82"))
                                 (rule "applyEq" (formula "166") (term "3") (ifseqformula "22"))
                                 (rule "applyEq" (formula "41") (term "1,0,0,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "252") (term "1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "166") (term "4") (ifseqformula "165"))
                                 (rule "applyEq" (formula "83") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "48") (term "1,0,0,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "245") (term "1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "50") (term "1,0,1,0,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "268") (term "0,1,1,1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "257") (term "1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "248") (term "1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "36") (term "1,2,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "42") (term "1,1,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "64") (term "1,1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "36") (term "1,0,1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "87") (term "1,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "51") (term "1,1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "77") (term "0") (ifseqformula "78"))
                                 (rule "applyEq" (formula "48") (term "1,2,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "257") (term "1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "246") (term "1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "44") (term "1,1,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "50") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "46") (term "1,2,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "71") (term "1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "151") (term "1,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "43") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "60") (term "1,1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "97") (term "1,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "140") (term "1,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "44") (term "1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "33") (term "1,1,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "98") (term "1,1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "252") (term "1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "134") (term "3") (ifseqformula "133"))
                                 (rule "applyEq" (formula "57") (term "1,1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "40") (term "1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "41") (term "1,0,1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "35") (term "1,1,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "52") (term "1,1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "58") (term "1,1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "255") (term "1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "41") (term "1,2,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "37") (term "1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "137") (term "1,1,0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "49") (term "1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "99") (term "1,1,0,1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "65") (term "1,1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "163") (term "1,0,1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "163") (term "1,0,0,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "93") (term "1,1,0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "134") (term "0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "88") (term "1,1,0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "254") (term "1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "163") (term "1,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "53") (term "1,1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "84") (term "1,1,0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "59") (term "1,1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "37") (term "1,1,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "248") (term "1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "46") (term "1,0,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "38") (term "1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "54") (term "1,1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "137") (term "1,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "32") (term "1,2,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "34") (term "1,0,0,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "43") (term "1,0,1,0,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "43") (term "1,0,1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "163") (term "1,0,1,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "38") (term "1,1,0,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "50") (term "1,0,1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "48") (term "1,0,1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "85") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "39") (term "1,2,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "39") (term "1,0,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "146") (term "1,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "148") (term "5") (ifseqformula "142"))
                                 (rule "applyEq" (formula "253") (term "1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "79") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "77"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "145"))
                                 (rule "polySimp_mulLiterals" (formula "145") (term "0"))
                                 (rule "polySimp_elimOne" (formula "145") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "181"))
                                 (rule "polySimp_mulLiterals" (formula "181") (term "0"))
                                 (rule "polySimp_elimOne" (formula "181") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "187"))
                                 (rule "polySimp_mulLiterals" (formula "187") (term "0"))
                                 (rule "polySimp_elimOne" (formula "187") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "195"))
                                 (rule "polySimp_mulLiterals" (formula "195") (term "0"))
                                 (rule "polySimp_elimOne" (formula "195") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "177"))
                                 (rule "polySimp_mulLiterals" (formula "177") (term "0"))
                                 (rule "polySimp_elimOne" (formula "177") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "159"))
                                 (rule "polySimp_mulLiterals" (formula "159") (term "0"))
                                 (rule "polySimp_elimOne" (formula "159") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "115"))
                                 (rule "polySimp_mulLiterals" (formula "115") (term "0"))
                                 (rule "polySimp_elimOne" (formula "115") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "196"))
                                 (rule "mul_literals" (formula "196") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "127"))
                                 (rule "polySimp_mulLiterals" (formula "127") (term "0"))
                                 (rule "polySimp_elimOne" (formula "127") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "99") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "99") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "99") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "99") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "119") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "119") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "119") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "119") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "150"))
                                 (rule "polySimp_mulLiterals" (formula "150") (term "0"))
                                 (rule "polySimp_elimOne" (formula "150") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "108") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "108") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "108") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "108") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "108") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "108") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "99") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "99") (term "1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "99") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "99") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "99") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "130") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "130") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "130") (term "1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "130") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "130") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "130") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "160"))
                                 (rule "mul_literals" (formula "160") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "130") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "130") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "130") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "130") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "130") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "130") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "117") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "117") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "117") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "117") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "117") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "174"))
                                 (rule "polySimp_mulLiterals" (formula "174") (term "0"))
                                 (rule "polySimp_elimOne" (formula "174") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "112") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "112") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "112") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "112") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "112") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "78") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "109") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "109") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "109") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "109") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "109") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "109") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "123"))
                                 (rule "polySimp_mulLiterals" (formula "123") (term "0"))
                                 (rule "polySimp_elimOne" (formula "123") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "130") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "130") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "99") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "99") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "96"))
                                 (rule "polySimp_mulLiterals" (formula "96") (term "0"))
                                 (rule "polySimp_elimOne" (formula "96") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "139"))
                                 (rule "polySimp_mulLiterals" (formula "139") (term "0"))
                                 (rule "polySimp_elimOne" (formula "139") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "89") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "87") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "87") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "87") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "92"))
                                 (rule "polySimp_mulLiterals" (formula "92") (term "0"))
                                 (rule "polySimp_elimOne" (formula "92") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "136"))
                                 (rule "polySimp_mulLiterals" (formula "136") (term "0"))
                                 (rule "polySimp_elimOne" (formula "136") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "82") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "82") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "85"))
                                 (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                                 (rule "polySimp_elimOne" (formula "85") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "79") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0,0,0,0"))
                                 (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SHA_256_DIGEST_1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "192"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "171"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                 (rule "close" (formula "222") (ifseqformula "2"))
                              )
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "225"))
                              (branch
                                 (rule "andRight" (formula "225"))
                                 (branch
                                    (rule "notRight" (formula "225"))
                                    (rule "eqSymm" (formula "269") (term "0,1"))
                                    (rule "eqSymm" (formula "269") (term "1,1"))
                                    (rule "eqSymm" (formula "269") (term "0,0"))
                                    (rule "eqSymm" (formula "269") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "146"))
                                    (rule "polySimp_mulComm0" (formula "146") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "146") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "182"))
                                    (rule "polySimp_mulComm0" (formula "182") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "182") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "188"))
                                    (rule "polySimp_mulComm0" (formula "188") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "188") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "86"))
                                    (rule "polySimp_mulComm0" (formula "86") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "86") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "196"))
                                    (rule "polySimp_mulComm0" (formula "196") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "196") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "178"))
                                    (rule "polySimp_mulComm0" (formula "178") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "178") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "160"))
                                    (rule "polySimp_mulComm0" (formula "160") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "160") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "83") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "90") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "116"))
                                    (rule "polySimp_mulComm0" (formula "116") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "116") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "197"))
                                    (rule "mul_literals" (formula "197") (term "1,0,0"))
                                    (rule "add_literals" (formula "197") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "128"))
                                    (rule "polySimp_mulComm0" (formula "128") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "128") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "100") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "100") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "120") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "120") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "151"))
                                    (rule "polySimp_mulComm0" (formula "151") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "151") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "109") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "109") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "100") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "100") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "131") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "131") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "161"))
                                    (rule "mul_literals" (formula "161") (term "1,0,0"))
                                    (rule "add_literals" (formula "161") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "131") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "131") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "118") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "118") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "175"))
                                    (rule "polySimp_mulComm0" (formula "175") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "175") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "140"))
                                    (rule "polySimp_mulComm0" (formula "140") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "140") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "113") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "113") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "79") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "137"))
                                    (rule "polySimp_mulComm0" (formula "137") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "137") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "110") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "110") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "124"))
                                    (rule "polySimp_mulComm0" (formula "124") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "124") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "131") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "131") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "131") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "93"))
                                    (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "97"))
                                    (rule "polySimp_mulComm0" (formula "97") (term "1,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "100") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "100") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "100") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "88") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "93") (term "0"))
                                    (rule "polySimp_addComm1" (formula "97") (term "0"))
                                    (rule "applyEq" (formula "140") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "252") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "90") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "72") (term "0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "88") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "93") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "35") (term "1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "56") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "49") (term "1,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "141") (term "1,1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "269") (term "0,1,0,0") (ifseqformula "24"))
                                    (rule "applyEq" (formula "34") (term "1,0,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "43") (term "1,2,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "247") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "157") (term "0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "92") (term "1,1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "149") (term "1,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "232") (term "0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "88") (term "1,1,0,0,0,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "47") (term "1,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "137") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "36") (term "1,0,1,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "40") (term "1,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "63") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEqRigid" (formula "269") (term "0,1,1,1,1") (ifseqformula "24"))
                                    (rule "applyEq" (formula "30") (term "1,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "32") (term "1,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "157") (term "3") (ifseqformula "21"))
                                    (rule "applyEq" (formula "268") (term "0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "94") (term "1,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "45") (term "1,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "31") (term "1,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "46") (term "1,1,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "45") (term "1,0,0") (ifseqformula "22"))
                                    (rule "applyEqRigid" (formula "269") (term "0,1,1,0") (ifseqformula "24"))
                                    (rule "applyEq" (formula "135") (term "2") (ifseqformula "21"))
                                    (rule "applyEq" (formula "34") (term "1,2,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "50") (term "1,2,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "87") (term "1,1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "157") (term "4") (ifseqformula "156"))
                                    (rule "applyEq" (formula "42") (term "1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "90") (term "1,1,0,0,0,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "83") (term "1,1,0,0,0,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "251") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "36") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                    (rule "applyEqRigid" (formula "234") (term "0") (ifseqformula "82"))
                                    (rule "applyEq" (formula "166") (term "3") (ifseqformula "22"))
                                    (rule "applyEq" (formula "41") (term "1,0,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "252") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "166") (term "4") (ifseqformula "165"))
                                    (rule "applyEq" (formula "83") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "48") (term "1,0,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "245") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "50") (term "1,0,1,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "268") (term "0,1,1,1") (ifseqformula "24"))
                                    (rule "applyEq" (formula "257") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "248") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "36") (term "1,2,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "42") (term "1,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "64") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "36") (term "1,0,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "87") (term "1,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "51") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "77") (term "0") (ifseqformula "78"))
                                    (rule "applyEq" (formula "48") (term "1,2,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "257") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "246") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "44") (term "1,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "50") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "46") (term "1,2,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "71") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "151") (term "1,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "43") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "60") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "97") (term "1,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "140") (term "1,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "44") (term "1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "33") (term "1,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "98") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "252") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "134") (term "3") (ifseqformula "133"))
                                    (rule "applyEq" (formula "57") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "40") (term "1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "41") (term "1,0,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "35") (term "1,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "52") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "58") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "255") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "41") (term "1,2,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "37") (term "1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "137") (term "1,1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "49") (term "1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "99") (term "1,1,0,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "65") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "163") (term "1,0,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "163") (term "1,0,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "93") (term "1,1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "134") (term "0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "88") (term "1,1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "254") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "163") (term "1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "53") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "84") (term "1,1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "59") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "37") (term "1,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "248") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "46") (term "1,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "38") (term "1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "54") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "137") (term "1,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "32") (term "1,2,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "34") (term "1,0,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "43") (term "1,0,1,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "43") (term "1,0,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "163") (term "1,0,1,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "38") (term "1,1,0,1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "50") (term "1,0,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "48") (term "1,0,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "85") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "39") (term "1,2,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "39") (term "1,0,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "146") (term "1,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "148") (term "5") (ifseqformula "142"))
                                    (rule "applyEq" (formula "253") (term "1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "79") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "77"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "145"))
                                    (rule "polySimp_mulLiterals" (formula "145") (term "0"))
                                    (rule "polySimp_elimOne" (formula "145") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "181"))
                                    (rule "polySimp_mulLiterals" (formula "181") (term "0"))
                                    (rule "polySimp_elimOne" (formula "181") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "187"))
                                    (rule "polySimp_mulLiterals" (formula "187") (term "0"))
                                    (rule "polySimp_elimOne" (formula "187") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "195"))
                                    (rule "polySimp_mulLiterals" (formula "195") (term "0"))
                                    (rule "polySimp_elimOne" (formula "195") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "177"))
                                    (rule "polySimp_mulLiterals" (formula "177") (term "0"))
                                    (rule "polySimp_elimOne" (formula "177") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "159"))
                                    (rule "polySimp_mulLiterals" (formula "159") (term "0"))
                                    (rule "polySimp_elimOne" (formula "159") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "115"))
                                    (rule "polySimp_mulLiterals" (formula "115") (term "0"))
                                    (rule "polySimp_elimOne" (formula "115") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "196"))
                                    (rule "mul_literals" (formula "196") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "127"))
                                    (rule "polySimp_mulLiterals" (formula "127") (term "0"))
                                    (rule "polySimp_elimOne" (formula "127") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "99") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "99") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "99") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "99") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "119") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "119") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "119") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "119") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "150"))
                                    (rule "polySimp_mulLiterals" (formula "150") (term "0"))
                                    (rule "polySimp_elimOne" (formula "150") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "108") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "108") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "108") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "108") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "108") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "108") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "99") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "99") (term "1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "99") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "99") (term "1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "99") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "130") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "130") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "130") (term "1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "130") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "130") (term "1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "130") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "160"))
                                    (rule "mul_literals" (formula "160") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "130") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "130") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "130") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "130") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "130") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "130") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "117") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "117") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "117") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "117") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "117") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "174"))
                                    (rule "polySimp_mulLiterals" (formula "174") (term "0"))
                                    (rule "polySimp_elimOne" (formula "174") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "112") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "112") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "112") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "112") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "112") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "78") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "109") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "109") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "109") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "109") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "109") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "109") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "123"))
                                    (rule "polySimp_mulLiterals" (formula "123") (term "0"))
                                    (rule "polySimp_elimOne" (formula "123") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "130") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "130") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "99") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "99") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "96"))
                                    (rule "polySimp_mulLiterals" (formula "96") (term "0"))
                                    (rule "polySimp_elimOne" (formula "96") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "139"))
                                    (rule "polySimp_mulLiterals" (formula "139") (term "0"))
                                    (rule "polySimp_elimOne" (formula "139") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "89") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "87") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "87") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "87") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "92"))
                                    (rule "polySimp_mulLiterals" (formula "92") (term "0"))
                                    (rule "polySimp_elimOne" (formula "92") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "136"))
                                    (rule "polySimp_mulLiterals" (formula "136") (term "0"))
                                    (rule "polySimp_elimOne" (formula "136") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "82") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "82") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "85"))
                                    (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                                    (rule "polySimp_elimOne" (formula "85") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "79") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0,0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_math_BigInteger_ZERO_1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "192"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "171"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "close" (formula "225") (ifseqformula "2"))
                                 )
                                 (branch
                                    (rule "eqSymm" (formula "269") (term "0,1"))
                                    (rule "eqSymm" (formula "269") (term "1,0"))
                                    (rule "eqSymm" (formula "269") (term "1,1"))
                                    (rule "eqSymm" (formula "269") (term "0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "99") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "99") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "99") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "159"))
                                    (rule "polySimp_mulComm0" (formula "159") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "159") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "130") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "130") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "85"))
                                    (rule "polySimp_mulComm0" (formula "85") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "85") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "130") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "130") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "130") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "130") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "130") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "115"))
                                    (rule "polySimp_mulComm0" (formula "115") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "115") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "136"))
                                    (rule "polySimp_mulComm0" (formula "136") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "136") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "79") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "112") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "112") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "92"))
                                    (rule "polySimp_mulComm0" (formula "92") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "92") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "160"))
                                    (rule "mul_literals" (formula "160") (term "1,0,0"))
                                    (rule "add_literals" (formula "160") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "145"))
                                    (rule "polySimp_mulComm0" (formula "145") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "145") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "119") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "119") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "109") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "109") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "96"))
                                    (rule "polySimp_mulComm0" (formula "96") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "96") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "127"))
                                    (rule "polySimp_mulComm0" (formula "127") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "127") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "174"))
                                    (rule "polySimp_mulComm0" (formula "174") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "174") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "123"))
                                    (rule "polySimp_mulComm0" (formula "123") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "123") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "181"))
                                    (rule "polySimp_mulComm0" (formula "181") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "181") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "117") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "117") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "108") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "108") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "82") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "87") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "187"))
                                    (rule "polySimp_mulComm0" (formula "187") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "187") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "196"))
                                    (rule "mul_literals" (formula "196") (term "1,0,0"))
                                    (rule "add_literals" (formula "196") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "150"))
                                    (rule "polySimp_mulComm0" (formula "150") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "150") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "89") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "177"))
                                    (rule "polySimp_mulComm0" (formula "177") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "78") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "99") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "139"))
                                    (rule "polySimp_mulComm0" (formula "139") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "195"))
                                    (rule "polySimp_mulComm0" (formula "195") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "177") (term "0"))
                                    (rule "polySimp_addComm1" (formula "139") (term "0"))
                                    (rule "polySimp_addComm1" (formula "195") (term "0"))
                                    (rule "applyEqRigid" (formula "269") (term "0,1,1,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "31") (term "1,0,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "35") (term "1,0,1,0,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "255") (term "1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "42") (term "1,2,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "40") (term "1,2,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "64") (term "1,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "84") (term "1,1,0,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "52") (term "1,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "42") (term "1,0,1,0,0") (ifseqformula "21"))
                                    (rule "applyEqRigid" (formula "269") (term "0,1,1,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "165") (term "4") (ifseqformula "164"))
                                    (rule "applyEq" (formula "29") (term "1,1,0,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "163") (term "1,0,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "31") (term "1,2,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "98") (term "1,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEqRigid" (formula "269") (term "0,1,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "34") (term "1,1,0,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "251") (term "1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "35") (term "1,2,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "54") (term "1,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "148") (term "1,1") (ifseqformula "20"))
                                    (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "85") (term "1,1,0,0,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "163") (term "1,0,1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "232") (term "0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "89") (term "1,1,0,0,0,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "134") (term "2") (ifseqformula "20"))
                                    (rule "applyEq" (formula "48") (term "1,1,0,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "49") (term "1,0,1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "35") (term "1,0,0,0,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "47") (term "1,0,0,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "134") (term "3") (ifseqformula "133"))
                                    (rule "applyEq" (formula "86") (term "1,1,0,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "246") (term "1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "254") (term "1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "41") (term "1,1,0,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "43") (term "1,1,0,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "97") (term "1,1") (ifseqformula "20"))
                                    (rule "applyEq" (formula "56") (term "1,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "86") (term "1,1") (ifseqformula "20"))
                                    (rule "applyEq" (formula "38") (term "1,0,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "33") (term "1,0,0,0,0") (ifseqformula "21"))
                                    (rule "applyEqRigid" (formula "269") (term "0,1,1,1,1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "30") (term "1,1,0,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "82") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "247") (term "1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "89") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "76") (term "0") (ifseqformula "77"))
                                    (rule "applyEq" (formula "155") (term "0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "35") (term "1,0,1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "92") (term "1,1,0,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "138") (term "1,1,0,0,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "98") (term "1,1,0,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "247") (term "1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "49") (term "1,0,1,0,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "44") (term "1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "136") (term "1,1,0,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "59") (term "1,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "155") (term "3") (ifseqformula "20"))
                                    (rule "applyEq" (formula "40") (term "1,0,1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "47") (term "1,0,1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "145") (term "1,1") (ifseqformula "20"))
                                    (rule "applyEq" (formula "58") (term "1,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "91") (term "1,1,0,0,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "33") (term "1,0,1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "92") (term "1,1") (ifseqformula "20"))
                                    (rule "applyEq" (formula "136") (term "1,1") (ifseqformula "20"))
                                    (rule "applyEq" (formula "45") (term "1,2,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "33") (term "1,2,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "139") (term "1,1") (ifseqformula "20"))
                                    (rule "applyEq" (formula "49") (term "1,0,0,0,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "63") (term "1,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "257") (term "1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "139") (term "1,1,0,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "147") (term "5") (ifseqformula "141"))
                                    (rule "applyEq" (formula "248") (term "1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "48") (term "1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "90") (term "1,1,0,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "62") (term "1,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "51") (term "1,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "233") (term "0") (ifseqformula "80"))
                                    (rule "applyEq" (formula "57") (term "1,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "266") (term "0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "86") (term "1,1,0,0,0,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "46") (term "1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "86") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "53") (term "1,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "45") (term "1,0,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "135") (term "1,1,0,0,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "34") (term "1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "39") (term "1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "38") (term "1,2,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "257") (term "1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "37") (term "1,1,0,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "42") (term "1,0,0,0,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "133") (term "0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "32") (term "1,1,0,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "162") (term "1,0,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "71") (term "0,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "248") (term "1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "250") (term "1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "42") (term "1,0,1,0,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "251") (term "1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "29") (term "1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "47") (term "1,2,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "164") (term "3") (ifseqformula "21"))
                                    (rule "applyEq" (formula "36") (term "1,1,0,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "87") (term "1,1,0,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "254") (term "1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "150") (term "1,1") (ifseqformula "20"))
                                    (rule "applyEq" (formula "43") (term "1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "40") (term "1,0,0,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "255") (term "1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "50") (term "1,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "36") (term "1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "46") (term "1,1,0,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "41") (term "1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "155") (term "4") (ifseqformula "154"))
                                    (rule "applyEq" (formula "81") (term "1,1,0,0,0,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "70") (term "1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "162") (term "1,0,0,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "37") (term "1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "44") (term "1,1,0,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "45") (term "1,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "39") (term "1,1,0,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "49") (term "1,2,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "78") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "76"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "98") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "98") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "158"))
                                    (rule "polySimp_mulLiterals" (formula "158") (term "0"))
                                    (rule "polySimp_elimOne" (formula "158") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "129") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "129") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "129") (term "1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "129") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "129") (term "1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "129") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "129") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "129") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "129") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "129") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "129") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "129") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "129") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "129") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "114"))
                                    (rule "polySimp_mulLiterals" (formula "114") (term "0"))
                                    (rule "polySimp_elimOne" (formula "114") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "111") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "111") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "111") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "111") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "111") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "111") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "98") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "98") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "159"))
                                    (rule "mul_literals" (formula "159") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "144"))
                                    (rule "polySimp_mulLiterals" (formula "144") (term "0"))
                                    (rule "polySimp_elimOne" (formula "144") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "118") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "118") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "118") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "118") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "118") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "118") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "108") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "108") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "108") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "108") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "108") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "108") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "95"))
                                    (rule "polySimp_mulLiterals" (formula "95") (term "0"))
                                    (rule "polySimp_elimOne" (formula "95") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "126"))
                                    (rule "polySimp_mulLiterals" (formula "126") (term "0"))
                                    (rule "polySimp_elimOne" (formula "126") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "173"))
                                    (rule "polySimp_mulLiterals" (formula "173") (term "0"))
                                    (rule "polySimp_elimOne" (formula "173") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "122"))
                                    (rule "polySimp_mulLiterals" (formula "122") (term "0"))
                                    (rule "polySimp_elimOne" (formula "122") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "180"))
                                    (rule "polySimp_mulLiterals" (formula "180") (term "0"))
                                    (rule "polySimp_elimOne" (formula "180") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "116") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "116") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "116") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "107") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "107") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "107") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "107") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "107") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "186"))
                                    (rule "polySimp_mulLiterals" (formula "186") (term "0"))
                                    (rule "polySimp_elimOne" (formula "186") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "195"))
                                    (rule "mul_literals" (formula "195") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "149"))
                                    (rule "polySimp_mulLiterals" (formula "149") (term "0"))
                                    (rule "polySimp_elimOne" (formula "149") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "77") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "77") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "98") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "98") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "98") (term "1,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "98") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "98") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "176"))
                                    (rule "polySimp_mulLiterals" (formula "176") (term "0"))
                                    (rule "polySimp_elimOne" (formula "176") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "194"))
                                    (rule "polySimp_mulLiterals" (formula "194") (term "0"))
                                    (rule "polySimp_elimOne" (formula "194") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "84"))
                                    (rule "polySimp_mulLiterals" (formula "84") (term "0"))
                                    (rule "polySimp_elimOne" (formula "84") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "81") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "88") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "88") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "138"))
                                    (rule "polySimp_mulLiterals" (formula "138") (term "0"))
                                    (rule "polySimp_elimOne" (formula "138") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "91"))
                                    (rule "polySimp_mulLiterals" (formula "91") (term "0"))
                                    (rule "polySimp_elimOne" (formula "91") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "86") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "86") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "135"))
                                    (rule "polySimp_mulLiterals" (formula "135") (term "0"))
                                    (rule "polySimp_elimOne" (formula "135") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "78") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0,0,0,0"))
                                    (rule "pullOutSelect" (formula "224") (term "1,0") (inst "selectSK=java_math_BigInteger_ZERO_1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "191"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "170"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "225") (term "1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "267") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_3"))
                                    (rule "eqSymm" (formula "268") (term "1,0"))
                                    (rule "pullOutSelect" (formula "268") (term "1,0,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                                    (rule "pullOutSelect" (formula "269") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_3"))
                                    (rule "eqSymm" (formula "270") (term "0,0"))
                                    (rule "pullOutSelect" (formula "270") (term "1,1,1") (inst "selectSK=java_util_Collection_seq_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "165"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "157"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "135"))
                                    (rule "pullOutSelect" (formula "228") (term "0") (inst "selectSK=java_math_BigInteger_value_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "195"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "228")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "174"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "109"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "174"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "228")) (ifInst ""  (formula "109")))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "228")))
                                    (rule "applyEqReverse" (formula "229") (term "0") (ifseqformula "1"))
                                    (rule "close" (formula "229") (ifseqformula "110"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "225") (userinteraction))
                                 (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "225") (term "1") (userinteraction))
                                 (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "225") (term "1,0") (userinteraction))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "225") (term "1,1,1,0") (userinteraction))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "225") (term "1,1,1,1,0") (userinteraction))
                                 (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "225") (term "0,1,1,0") (userinteraction))
                                 (rule "andRight" (formula "225"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "225"))
                                    (branch
                                       (rule "andRight" (formula "225"))
                                       (branch
                                          (rule "notRight" (formula "225"))
                                          (rule "eqSymm" (formula "269") (term "0,1"))
                                          (rule "eqSymm" (formula "269") (term "1,1"))
                                          (rule "eqSymm" (formula "269") (term "0,0"))
                                          (rule "eqSymm" (formula "269") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "146"))
                                          (rule "polySimp_mulComm0" (formula "146") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "146") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "182"))
                                          (rule "polySimp_mulComm0" (formula "182") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "182") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "188"))
                                          (rule "polySimp_mulComm0" (formula "188") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "188") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "86"))
                                          (rule "polySimp_mulComm0" (formula "86") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "86") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "196"))
                                          (rule "polySimp_mulComm0" (formula "196") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "196") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "178"))
                                          (rule "polySimp_mulComm0" (formula "178") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "178") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "160"))
                                          (rule "polySimp_mulComm0" (formula "160") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "160") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "83") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "90") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "116"))
                                          (rule "polySimp_mulComm0" (formula "116") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "116") (term "0"))
                                          (rule "inEqSimp_gtToGeq" (formula "197"))
                                          (rule "mul_literals" (formula "197") (term "1,0,0"))
                                          (rule "add_literals" (formula "197") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "128"))
                                          (rule "polySimp_mulComm0" (formula "128") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "128") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "100") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "100") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "120") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "120") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "151"))
                                          (rule "polySimp_mulComm0" (formula "151") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "151") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "109") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "109") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "100") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "100") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "131") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "131") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "161"))
                                          (rule "mul_literals" (formula "161") (term "1,0,0"))
                                          (rule "add_literals" (formula "161") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "131") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "131") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "118") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "118") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "175"))
                                          (rule "polySimp_mulComm0" (formula "175") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "175") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "140"))
                                          (rule "polySimp_mulComm0" (formula "140") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "140") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "113") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "113") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "79") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "137"))
                                          (rule "polySimp_mulComm0" (formula "137") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "137") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "110") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "110") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "124"))
                                          (rule "polySimp_mulComm0" (formula "124") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "124") (term "0"))
                                          (rule "inEqSimp_gtToGeq" (formula "131") (term "0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "131") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "131") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "93"))
                                          (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "97"))
                                          (rule "polySimp_mulComm0" (formula "97") (term "1,0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "100") (term "0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "100") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "100") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "88") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "93") (term "0"))
                                          (rule "polySimp_addComm1" (formula "97") (term "0"))
                                          (rule "applyEq" (formula "140") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "252") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "90") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "72") (term "0,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "88") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "93") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "35") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "56") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "49") (term "1,1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "141") (term "1,1,0,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "269") (term "0,1,0,0") (ifseqformula "24"))
                                          (rule "applyEq" (formula "34") (term "1,0,1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "43") (term "1,2,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "247") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "157") (term "0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "92") (term "1,1,0,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "149") (term "1,1") (ifseqformula "21"))
                                          (rule "applyEq" (formula "232") (term "0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "88") (term "1,1,0,0,0,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "47") (term "1,1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "137") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "36") (term "1,0,1,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "40") (term "1,1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "63") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEqRigid" (formula "269") (term "0,1,1,1,1") (ifseqformula "24"))
                                          (rule "applyEq" (formula "30") (term "1,1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "32") (term "1,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "157") (term "3") (ifseqformula "21"))
                                          (rule "applyEq" (formula "268") (term "0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "94") (term "1,1") (ifseqformula "21"))
                                          (rule "applyEq" (formula "45") (term "1,1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "31") (term "1,1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "46") (term "1,1,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "45") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEqRigid" (formula "269") (term "0,1,1,0") (ifseqformula "24"))
                                          (rule "applyEq" (formula "135") (term "2") (ifseqformula "21"))
                                          (rule "applyEq" (formula "34") (term "1,2,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "50") (term "1,2,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "87") (term "1,1,0,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "157") (term "4") (ifseqformula "156"))
                                          (rule "applyEq" (formula "42") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "90") (term "1,1,0,0,0,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "83") (term "1,1,0,0,0,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "251") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "36") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                          (rule "applyEqRigid" (formula "234") (term "0") (ifseqformula "82"))
                                          (rule "applyEq" (formula "166") (term "3") (ifseqformula "22"))
                                          (rule "applyEq" (formula "41") (term "1,0,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "252") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "166") (term "4") (ifseqformula "165"))
                                          (rule "applyEq" (formula "83") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "48") (term "1,0,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "245") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "50") (term "1,0,1,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "268") (term "0,1,1,1") (ifseqformula "24"))
                                          (rule "applyEq" (formula "257") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "248") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "36") (term "1,2,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "42") (term "1,1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "64") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "36") (term "1,0,1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "87") (term "1,1") (ifseqformula "21"))
                                          (rule "applyEq" (formula "51") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "77") (term "0") (ifseqformula "78"))
                                          (rule "applyEq" (formula "48") (term "1,2,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "257") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "246") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "44") (term "1,1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "50") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "46") (term "1,2,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "71") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "151") (term "1,1") (ifseqformula "21"))
                                          (rule "applyEq" (formula "43") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "60") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "97") (term "1,1") (ifseqformula "21"))
                                          (rule "applyEq" (formula "140") (term "1,1") (ifseqformula "21"))
                                          (rule "applyEq" (formula "44") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "33") (term "1,1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "98") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "252") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "134") (term "3") (ifseqformula "133"))
                                          (rule "applyEq" (formula "57") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "40") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "41") (term "1,0,1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "35") (term "1,1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "52") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "58") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "255") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "41") (term "1,2,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "37") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "137") (term "1,1,0,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "49") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "99") (term "1,1,0,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "65") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "163") (term "1,0,1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "163") (term "1,0,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "93") (term "1,1,0,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "134") (term "0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "88") (term "1,1,0,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "254") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "163") (term "1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "53") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "84") (term "1,1,0,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "59") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "37") (term "1,1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "248") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "46") (term "1,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "38") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "54") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "137") (term "1,1") (ifseqformula "21"))
                                          (rule "applyEq" (formula "32") (term "1,2,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "34") (term "1,0,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "43") (term "1,0,1,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "43") (term "1,0,1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "163") (term "1,0,1,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "38") (term "1,1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "50") (term "1,0,1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "48") (term "1,0,1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "85") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "39") (term "1,2,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "39") (term "1,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "146") (term "1,1") (ifseqformula "21"))
                                          (rule "applyEq" (formula "148") (term "5") (ifseqformula "142"))
                                          (rule "applyEq" (formula "253") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "79") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "77"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "145"))
                                          (rule "polySimp_mulLiterals" (formula "145") (term "0"))
                                          (rule "polySimp_elimOne" (formula "145") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "181"))
                                          (rule "polySimp_mulLiterals" (formula "181") (term "0"))
                                          (rule "polySimp_elimOne" (formula "181") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "187"))
                                          (rule "polySimp_mulLiterals" (formula "187") (term "0"))
                                          (rule "polySimp_elimOne" (formula "187") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "195"))
                                          (rule "polySimp_mulLiterals" (formula "195") (term "0"))
                                          (rule "polySimp_elimOne" (formula "195") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "177"))
                                          (rule "polySimp_mulLiterals" (formula "177") (term "0"))
                                          (rule "polySimp_elimOne" (formula "177") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "159"))
                                          (rule "polySimp_mulLiterals" (formula "159") (term "0"))
                                          (rule "polySimp_elimOne" (formula "159") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "115"))
                                          (rule "polySimp_mulLiterals" (formula "115") (term "0"))
                                          (rule "polySimp_elimOne" (formula "115") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "196"))
                                          (rule "mul_literals" (formula "196") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "127"))
                                          (rule "polySimp_mulLiterals" (formula "127") (term "0"))
                                          (rule "polySimp_elimOne" (formula "127") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "99") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "99") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "99") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "99") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "119") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "119") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "119") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "119") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "150"))
                                          (rule "polySimp_mulLiterals" (formula "150") (term "0"))
                                          (rule "polySimp_elimOne" (formula "150") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "108") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "108") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "108") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "108") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "108") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "108") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "99") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "99") (term "1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "99") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "99") (term "1,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "99") (term "1,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "130") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "130") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "130") (term "1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "130") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "130") (term "1,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "130") (term "1,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "160"))
                                          (rule "mul_literals" (formula "160") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "130") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "130") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "130") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "130") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "130") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "130") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "117") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "117") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "117") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "117") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "117") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "174"))
                                          (rule "polySimp_mulLiterals" (formula "174") (term "0"))
                                          (rule "polySimp_elimOne" (formula "174") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "112") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "112") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "112") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "112") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "112") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "78") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "109") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "109") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "109") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "109") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "109") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "109") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "123"))
                                          (rule "polySimp_mulLiterals" (formula "123") (term "0"))
                                          (rule "polySimp_elimOne" (formula "123") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "130") (term "0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "130") (term "1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "99") (term "0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "99") (term "1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "96"))
                                          (rule "polySimp_mulLiterals" (formula "96") (term "0"))
                                          (rule "polySimp_elimOne" (formula "96") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "139"))
                                          (rule "polySimp_mulLiterals" (formula "139") (term "0"))
                                          (rule "polySimp_elimOne" (formula "139") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "89") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "87") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "87") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "87") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "92"))
                                          (rule "polySimp_mulLiterals" (formula "92") (term "0"))
                                          (rule "polySimp_elimOne" (formula "92") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "136"))
                                          (rule "polySimp_mulLiterals" (formula "136") (term "0"))
                                          (rule "polySimp_elimOne" (formula "136") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "82") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "82") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "85"))
                                          (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                                          (rule "polySimp_elimOne" (formula "85") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "79") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0,0,0,0"))
                                          (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GROUP_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "192"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "171"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "close" (formula "224") (ifseqformula "2"))
                                       )
                                       (branch
                                          (rule "notRight" (formula "225"))
                                          (rule "eqSymm" (formula "269") (term "0,1"))
                                          (rule "eqSymm" (formula "269") (term "1,1"))
                                          (rule "eqSymm" (formula "269") (term "0,0"))
                                          (rule "eqSymm" (formula "269") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "146"))
                                          (rule "polySimp_mulComm0" (formula "146") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "146") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "182"))
                                          (rule "polySimp_mulComm0" (formula "182") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "182") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "188"))
                                          (rule "polySimp_mulComm0" (formula "188") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "188") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "160"))
                                          (rule "polySimp_mulComm0" (formula "160") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "160") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "116"))
                                          (rule "polySimp_mulComm0" (formula "116") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "116") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "83") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "90") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "86"))
                                          (rule "polySimp_mulComm0" (formula "86") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "86") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "196"))
                                          (rule "polySimp_mulComm0" (formula "196") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "196") (term "0"))
                                          (rule "inEqSimp_gtToGeq" (formula "197"))
                                          (rule "mul_literals" (formula "197") (term "1,0,0"))
                                          (rule "add_literals" (formula "197") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "128"))
                                          (rule "polySimp_mulComm0" (formula "128") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "128") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "100") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "100") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "120") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "120") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "151"))
                                          (rule "polySimp_mulComm0" (formula "151") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "151") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "109") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "109") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "100") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "100") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "131") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "131") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "137"))
                                          (rule "polySimp_mulComm0" (formula "137") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "137") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "131") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "131") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "140"))
                                          (rule "polySimp_mulComm0" (formula "140") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "140") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "110") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "110") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "124"))
                                          (rule "polySimp_mulComm0" (formula "124") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "124") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "113") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "113") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "79") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "178"))
                                          (rule "polySimp_mulComm0" (formula "178") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "178") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "118") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "118") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "175"))
                                          (rule "polySimp_mulComm0" (formula "175") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "175") (term "0"))
                                          (rule "inEqSimp_gtToGeq" (formula "161"))
                                          (rule "mul_literals" (formula "161") (term "1,0,0"))
                                          (rule "add_literals" (formula "161") (term "0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "131") (term "0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "131") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "131") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "93"))
                                          (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "88") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "97"))
                                          (rule "polySimp_mulComm0" (formula "97") (term "1,0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "100") (term "0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "100") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "100") (term "0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "93") (term "0"))
                                          (rule "polySimp_addComm1" (formula "97") (term "0"))
                                          (rule "applyEq" (formula "93") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "90") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "269") (term "0,1,1,0") (ifseqformula "24"))
                                          (rule "applyEq" (formula "166") (term "4") (ifseqformula "165"))
                                          (rule "applyEq" (formula "63") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "46") (term "1,2,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "164") (term "1,0,1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "164") (term "1,0,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "94") (term "1,1") (ifseqformula "21"))
                                          (rule "applyEq" (formula "31") (term "1,1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "57") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "45") (term "1,1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "50") (term "1,0,1,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "232") (term "0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "135") (term "0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "49") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "50") (term "1,2,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "37") (term "1,1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "258") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "58") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "40") (term "1,1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "64") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "50") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "135") (term "2") (ifseqformula "21"))
                                          (rule "applyEq" (formula "34") (term "1,2,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "99") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEqRigid" (formula "234") (term "0") (ifseqformula "82"))
                                          (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "39") (term "1,2,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "48") (term "1,2,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "43") (term "1,0,1,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "92") (term "1,1,0,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "137") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "33") (term "1,1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "34") (term "1,0,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "43") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "98") (term "1,1") (ifseqformula "21"))
                                          (rule "applyEq" (formula "30") (term "1,1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "48") (term "1,0,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "88") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "258") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "44") (term "1,1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "77") (term "0") (ifseqformula "78"))
                                          (rule "applyEq" (formula "34") (term "1,0,1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "46") (term "1,1,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "45") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "40") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "251") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "52") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "38") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "59") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "146") (term "1,1") (ifseqformula "21"))
                                          (rule "applyEq" (formula "35") (term "1,1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "39") (term "1,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "36") (term "1,2,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "50") (term "1,0,1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "267") (term "0,1,0,0") (ifseqformula "24"))
                                          (rule "applyEqRigid" (formula "267") (term "0,1,1,1,1") (ifseqformula "24"))
                                          (rule "applyEq" (formula "48") (term "1,0,1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "38") (term "1,1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "36") (term "1,0,1,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "86") (term "1,1,0,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "41") (term "1,0,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "248") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "43") (term "1,2,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "84") (term "1,1,0,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "253") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "99") (term "1,1,0,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "36") (term "1,0,1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "87") (term "1,1,0,0,0,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "82") (term "1,1,0,0,0,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "44") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "35") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "65") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "93") (term "1,1,0,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "246") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "151") (term "1,1") (ifseqformula "21"))
                                          (rule "applyEq" (formula "140") (term "1,1,0,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "247") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "266") (term "0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "137") (term "1,1,0,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "163") (term "1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "250") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "53") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "245") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEqRigid" (formula "267") (term "0,1,1,1") (ifseqformula "24"))
                                          (rule "applyEq" (formula "89") (term "1,1,0,0,0,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "56") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "148") (term "1,1") (ifseqformula "21"))
                                          (rule "applyEq" (formula "85") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "41") (term "1,0,1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "244") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "51") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "42") (term "1,1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "137") (term "1,1") (ifseqformula "21"))
                                          (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "140") (term "1,1") (ifseqformula "21"))
                                          (rule "applyEq" (formula "86") (term "1,1") (ifseqformula "21"))
                                          (rule "applyEq" (formula "255") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "82") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "156") (term "4") (ifseqformula "155"))
                                          (rule "applyEq" (formula "252") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "156") (term "3") (ifseqformula "21"))
                                          (rule "applyEq" (formula "163") (term "1,0,1,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "134") (term "3") (ifseqformula "133"))
                                          (rule "applyEq" (formula "60") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "249") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "32") (term "1,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "36") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "37") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "41") (term "1,2,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "148") (term "5") (ifseqformula "142"))
                                          (rule "applyEq" (formula "49") (term "1,1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "46") (term "1,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "71") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "43") (term "1,0,1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "72") (term "0,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "139") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "156") (term "0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "42") (term "1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "165") (term "3") (ifseqformula "22"))
                                          (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "32") (term "1,2,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "54") (term "1,1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "254") (term "1,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "88") (term "1,1,0,0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "47") (term "1,1,0,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "79") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "77"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "145"))
                                          (rule "polySimp_mulLiterals" (formula "145") (term "0"))
                                          (rule "polySimp_elimOne" (formula "145") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "181"))
                                          (rule "polySimp_mulLiterals" (formula "181") (term "0"))
                                          (rule "polySimp_elimOne" (formula "181") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "187"))
                                          (rule "polySimp_mulLiterals" (formula "187") (term "0"))
                                          (rule "polySimp_elimOne" (formula "187") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "159"))
                                          (rule "polySimp_mulLiterals" (formula "159") (term "0"))
                                          (rule "polySimp_elimOne" (formula "159") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "115"))
                                          (rule "polySimp_mulLiterals" (formula "115") (term "0"))
                                          (rule "polySimp_elimOne" (formula "115") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "195"))
                                          (rule "polySimp_mulLiterals" (formula "195") (term "0"))
                                          (rule "polySimp_elimOne" (formula "195") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "196"))
                                          (rule "mul_literals" (formula "196") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "127"))
                                          (rule "polySimp_mulLiterals" (formula "127") (term "0"))
                                          (rule "polySimp_elimOne" (formula "127") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "99") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "99") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "99") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "99") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "119") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "119") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "119") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "119") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "150"))
                                          (rule "polySimp_mulLiterals" (formula "150") (term "0"))
                                          (rule "polySimp_elimOne" (formula "150") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "108") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "108") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "108") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "108") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "108") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "108") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "99") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "99") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "99") (term "1,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "99") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "99") (term "1,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "130") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "130") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "130") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "130") (term "1,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "130") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "130") (term "1,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "130") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "130") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "130") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "130") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "130") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "130") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "109") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "109") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "109") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "109") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "109") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "109") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "123"))
                                          (rule "polySimp_mulLiterals" (formula "123") (term "0"))
                                          (rule "polySimp_elimOne" (formula "123") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "112") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "112") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "112") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "112") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "112") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "78") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "177"))
                                          (rule "polySimp_mulLiterals" (formula "177") (term "0"))
                                          (rule "polySimp_elimOne" (formula "177") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "117") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "117") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "117") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "117") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "117") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "174"))
                                          (rule "polySimp_mulLiterals" (formula "174") (term "0"))
                                          (rule "polySimp_elimOne" (formula "174") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "160"))
                                          (rule "mul_literals" (formula "160") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "130") (term "0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "130") (term "1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "99") (term "0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "99") (term "1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "96"))
                                          (rule "polySimp_mulLiterals" (formula "96") (term "0"))
                                          (rule "polySimp_elimOne" (formula "96") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "92"))
                                          (rule "polySimp_mulLiterals" (formula "92") (term "0"))
                                          (rule "polySimp_elimOne" (formula "92") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "89") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "136"))
                                          (rule "polySimp_mulLiterals" (formula "136") (term "0"))
                                          (rule "polySimp_elimOne" (formula "136") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "87") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "87") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "87") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "85"))
                                          (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                                          (rule "polySimp_elimOne" (formula "85") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "82") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "82") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "139"))
                                          (rule "polySimp_mulLiterals" (formula "139") (term "0"))
                                          (rule "polySimp_elimOne" (formula "139") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "79") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0,0,0,0"))
                                          (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_RANDOM_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "192"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "171"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "close" (formula "223") (ifseqformula "2"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "andRight" (formula "225"))
                                       (branch
                                          (rule "andRight" (formula "225"))
                                          (branch
                                             (rule "notRight" (formula "225"))
                                             (rule "eqSymm" (formula "269") (term "1,1"))
                                             (rule "eqSymm" (formula "269") (term "0,1"))
                                             (rule "eqSymm" (formula "269") (term "1,0"))
                                             (rule "eqSymm" (formula "269") (term "0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "197"))
                                             (rule "mul_literals" (formula "197") (term "1,0,0"))
                                             (rule "add_literals" (formula "197") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "120") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "120") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "131") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "131") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "188"))
                                             (rule "polySimp_mulComm0" (formula "188") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "188") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "93"))
                                             (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "93") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "151"))
                                             (rule "polySimp_mulComm0" (formula "151") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "151") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "100") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "100") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "161"))
                                             (rule "mul_literals" (formula "161") (term "1,0,0"))
                                             (rule "add_literals" (formula "161") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "116"))
                                             (rule "polySimp_mulComm0" (formula "116") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "116") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "196"))
                                             (rule "polySimp_mulComm0" (formula "196") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "196") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "182"))
                                             (rule "polySimp_mulComm0" (formula "182") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "182") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "146"))
                                             (rule "polySimp_mulComm0" (formula "146") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "146") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "88") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "131") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "131") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "137"))
                                             (rule "polySimp_mulComm0" (formula "137") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "137") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "90") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "100") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "100") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "110") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "110") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "113") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "113") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "109") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "109") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "118") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "118") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "175"))
                                             (rule "polySimp_mulComm0" (formula "175") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "175") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "79") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "97"))
                                             (rule "polySimp_mulComm0" (formula "97") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "97") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "86"))
                                             (rule "polySimp_mulComm0" (formula "86") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "86") (term "0"))
                                             (rule "inEqSimp_gtToGeq" (formula "100") (term "0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "100") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "100") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "178"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "178") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "128"))
                                             (rule "polySimp_mulComm0" (formula "128") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "128") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "160"))
                                             (rule "polySimp_mulComm0" (formula "160") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "124"))
                                             (rule "polySimp_mulComm0" (formula "124") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "83") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "131") (term "0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "131") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "131") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "140"))
                                             (rule "polySimp_mulComm0" (formula "140") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "160") (term "0"))
                                             (rule "polySimp_addComm1" (formula "124") (term "0"))
                                             (rule "polySimp_addComm1" (formula "140") (term "0"))
                                             (rule "applyEq" (formula "83") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "31") (term "1,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "259") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "253") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "138") (term "1,1,0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "43") (term "1,0,1,0,0") (ifseqformula "22"))
                                             (rule "applyEqRigid" (formula "269") (term "0,1,1,1,1") (ifseqformula "24"))
                                             (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "54") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "34") (term "1,0,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "250") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "59") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "269") (term "0,1,1,0") (ifseqformula "24"))
                                             (rule "applyEq" (formula "269") (term "0,1,0,0") (ifseqformula "24"))
                                             (rule "applyEq" (formula "249") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "252") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "268") (term "0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "30") (term "1,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "44") (term "1,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "147") (term "1,1") (ifseqformula "21"))
                                             (rule "applyEq" (formula "58") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "93") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "50") (term "1,0,1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "88") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "42") (term "1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "45") (term "1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "37") (term "1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "47") (term "1,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "39") (term "1,2,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "86") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "90") (term "1,1,0,0,0,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "64") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "45") (term "1,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "49") (term "1,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "36") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "135") (term "3") (ifseqformula "134"))
                                             (rule "applyEq" (formula "48") (term "1,0,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "138") (term "1,1") (ifseqformula "21"))
                                             (rule "applyEq" (formula "43") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "149") (term "1,1") (ifseqformula "21"))
                                             (rule "applyEq" (formula "137") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "34") (term "1,0,1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "140") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "65") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "149") (term "5") (ifseqformula "143"))
                                             (rule "applyEq" (formula "53") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "39") (term "1,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "232") (term "0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "40") (term "1,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "166") (term "3") (ifseqformula "22"))
                                             (rule "applyEq" (formula "72") (term "0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "164") (term "1,0,1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "157") (term "0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "44") (term "1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "46") (term "1,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "38") (term "1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "152") (term "1,1") (ifseqformula "21"))
                                             (rule "applyEq" (formula "71") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "36") (term "1,0,1,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "89") (term "1,1,0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "94") (term "1,1,0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "94") (term "1,1") (ifseqformula "21"))
                                             (rule "applyEq" (formula "256") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "33") (term "1,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "46") (term "1,2,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "269") (term "0,1,1,1") (ifseqformula "24"))
                                             (rule "applyEq" (formula "32") (term "1,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "100") (term "1,1,0,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "41") (term "1,0,1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "35") (term "1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "164") (term "1,0,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "98") (term "1,1") (ifseqformula "21"))
                                             (rule "applyEq" (formula "63") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "247") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "48") (term "1,0,1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "248") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "50") (term "1,0,1,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "49") (term "1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "52") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "56") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "257") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "42") (term "1,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "50") (term "1,2,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "77") (term "0") (ifseqformula "78"))
                                             (rule "applyEq" (formula "91") (term "1,1,0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "134") (term "0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "35") (term "1,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "163") (term "1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "60") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "57") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "34") (term "1,2,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "245") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "89") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "40") (term "1,0,0") (ifseqformula "22"))
                                             (rule "applyEqRigid" (formula "233") (term "0") (ifseqformula "81"))
                                             (rule "applyEq" (formula "41") (term "1,2,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "46") (term "1,1,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "249") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "43") (term "1,0,1,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "38") (term "1,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "163") (term "1,0,1,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "256") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "43") (term "1,2,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "140") (term "1,1") (ifseqformula "21"))
                                             (rule "applyEq" (formula "36") (term "1,2,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "156") (term "4") (ifseqformula "155"))
                                             (rule "applyEq" (formula "98") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "165") (term "4") (ifseqformula "164"))
                                             (rule "applyEq" (formula "50") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "32") (term "1,2,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "86") (term "1,1") (ifseqformula "21"))
                                             (rule "applyEq" (formula "86") (term "1,1,0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "41") (term "1,0,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "156") (term "3") (ifseqformula "21"))
                                             (rule "applyEq" (formula "84") (term "1,1,0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "134") (term "2") (ifseqformula "21"))
                                             (rule "applyEq" (formula "36") (term "1,0,1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "51") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "48") (term "1,2,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "253") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "252") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "140") (term "1,1,0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "82") (term "1,1,0,0,0,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "87") (term "1,1,0,0,0,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "37") (term "1,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "79") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "77"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "196"))
                                             (rule "mul_literals" (formula "196") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "119") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "119") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "119") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "119") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "130") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "130") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "130") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "130") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "130") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "130") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "187"))
                                             (rule "polySimp_mulLiterals" (formula "187") (term "0"))
                                             (rule "polySimp_elimOne" (formula "187") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "150"))
                                             (rule "polySimp_mulLiterals" (formula "150") (term "0"))
                                             (rule "polySimp_elimOne" (formula "150") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "99") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "99") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "99") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "99") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "160"))
                                             (rule "mul_literals" (formula "160") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "115"))
                                             (rule "polySimp_mulLiterals" (formula "115") (term "0"))
                                             (rule "polySimp_elimOne" (formula "115") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "195"))
                                             (rule "polySimp_mulLiterals" (formula "195") (term "0"))
                                             (rule "polySimp_elimOne" (formula "195") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "181"))
                                             (rule "polySimp_mulLiterals" (formula "181") (term "0"))
                                             (rule "polySimp_elimOne" (formula "181") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "145"))
                                             (rule "polySimp_mulLiterals" (formula "145") (term "0"))
                                             (rule "polySimp_elimOne" (formula "145") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "130") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "130") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "130") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "130") (term "1,1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "130") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "130") (term "1,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "99") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "99") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "99") (term "1,1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "99") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "99") (term "1,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "109") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "109") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "109") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "109") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "109") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "109") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "112") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "112") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "112") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "112") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "112") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "108") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "108") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "108") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "108") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "108") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "108") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "117") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "117") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "117") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "117") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "117") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "174"))
                                             (rule "polySimp_mulLiterals" (formula "174") (term "0"))
                                             (rule "polySimp_elimOne" (formula "174") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "78") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "96"))
                                             (rule "polySimp_mulLiterals" (formula "96") (term "0"))
                                             (rule "polySimp_elimOne" (formula "96") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "99") (term "0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "99") (term "1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "177"))
                                             (rule "polySimp_mulLiterals" (formula "177") (term "0"))
                                             (rule "polySimp_elimOne" (formula "177") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "127"))
                                             (rule "polySimp_mulLiterals" (formula "127") (term "0"))
                                             (rule "polySimp_elimOne" (formula "127") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "130") (term "0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "130") (term "1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "159"))
                                             (rule "polySimp_mulLiterals" (formula "159") (term "0"))
                                             (rule "polySimp_elimOne" (formula "159") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "123"))
                                             (rule "polySimp_mulLiterals" (formula "123") (term "0"))
                                             (rule "polySimp_elimOne" (formula "123") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "82") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "82") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "92"))
                                             (rule "polySimp_mulLiterals" (formula "92") (term "0"))
                                             (rule "polySimp_elimOne" (formula "92") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "87") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "87") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "87") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "85"))
                                             (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                                             (rule "polySimp_elimOne" (formula "85") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "136"))
                                             (rule "polySimp_mulLiterals" (formula "136") (term "0"))
                                             (rule "polySimp_elimOne" (formula "136") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "139"))
                                             (rule "polySimp_mulLiterals" (formula "139") (term "0"))
                                             (rule "polySimp_elimOne" (formula "139") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "89") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "79") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0,0,0,0"))
                                             (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GROUP_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "192"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "171"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "267") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_0"))
                                             (rule "eqSymm" (formula "268") (term "1,1"))
                                             (rule "pullOutSelect" (formula "268") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_3"))
                                             (rule "eqSymm" (formula "269") (term "1,0"))
                                             (rule "pullOutSelect" (formula "269") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_3"))
                                             (rule "eqSymm" (formula "270") (term "0,0"))
                                             (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "195"))
                                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "227")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0") (ifseqformula "174"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "174"))
                                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "227")) (ifInst ""  (formula "24")))
                                             (rule "elementOfSingleton" (formula "4") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "227")))
                                             (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "4"))
                                             (rule "close" (formula "205") (ifseqformula "5"))
                                          )
                                          (branch
                                             (rule "notRight" (formula "225"))
                                             (rule "eqSymm" (formula "269") (term "1,1"))
                                             (rule "eqSymm" (formula "269") (term "0,1"))
                                             (rule "eqSymm" (formula "269") (term "1,0"))
                                             (rule "eqSymm" (formula "269") (term "0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "197"))
                                             (rule "mul_literals" (formula "197") (term "1,0,0"))
                                             (rule "add_literals" (formula "197") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "120") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "120") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "131") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "131") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "188"))
                                             (rule "polySimp_mulComm0" (formula "188") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "188") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "93"))
                                             (rule "polySimp_mulComm0" (formula "93") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "93") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "151"))
                                             (rule "polySimp_mulComm0" (formula "151") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "151") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "100") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "100") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "161"))
                                             (rule "mul_literals" (formula "161") (term "1,0,0"))
                                             (rule "add_literals" (formula "161") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "116"))
                                             (rule "polySimp_mulComm0" (formula "116") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "116") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "196"))
                                             (rule "polySimp_mulComm0" (formula "196") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "196") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "182"))
                                             (rule "polySimp_mulComm0" (formula "182") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "182") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "146"))
                                             (rule "polySimp_mulComm0" (formula "146") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "146") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "88") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "131") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "131") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "137"))
                                             (rule "polySimp_mulComm0" (formula "137") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "137") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "90") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "100") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "100") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "110") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "110") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "113") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "113") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "109") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "109") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "118") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "118") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "175"))
                                             (rule "polySimp_mulComm0" (formula "175") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "175") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "79") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "97"))
                                             (rule "polySimp_mulComm0" (formula "97") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "97") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "86"))
                                             (rule "polySimp_mulComm0" (formula "86") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "86") (term "0"))
                                             (rule "inEqSimp_gtToGeq" (formula "100") (term "0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "100") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "100") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "178"))
                                             (rule "polySimp_mulComm0" (formula "178") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "178") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "128"))
                                             (rule "polySimp_mulComm0" (formula "128") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "128") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "160"))
                                             (rule "polySimp_mulComm0" (formula "160") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "124"))
                                             (rule "polySimp_mulComm0" (formula "124") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "83") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "131") (term "0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "131") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "131") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "140"))
                                             (rule "polySimp_mulComm0" (formula "140") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "160") (term "0"))
                                             (rule "polySimp_addComm1" (formula "124") (term "0"))
                                             (rule "polySimp_addComm1" (formula "140") (term "0"))
                                             (rule "applyEq" (formula "83") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "31") (term "1,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "259") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "253") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "138") (term "1,1,0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "43") (term "1,0,1,0,0") (ifseqformula "22"))
                                             (rule "applyEqRigid" (formula "269") (term "0,1,1,1,1") (ifseqformula "24"))
                                             (rule "applyEq" (formula "55") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "54") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "34") (term "1,0,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "250") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "59") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "269") (term "0,1,1,0") (ifseqformula "24"))
                                             (rule "applyEq" (formula "269") (term "0,1,0,0") (ifseqformula "24"))
                                             (rule "applyEq" (formula "249") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "252") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "268") (term "0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "30") (term "1,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "44") (term "1,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "147") (term "1,1") (ifseqformula "21"))
                                             (rule "applyEq" (formula "58") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "93") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "50") (term "1,0,1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "88") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "42") (term "1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "45") (term "1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "37") (term "1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "47") (term "1,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "39") (term "1,2,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "86") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "90") (term "1,1,0,0,0,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "64") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "45") (term "1,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "49") (term "1,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "36") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "135") (term "3") (ifseqformula "134"))
                                             (rule "applyEq" (formula "48") (term "1,0,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "138") (term "1,1") (ifseqformula "21"))
                                             (rule "applyEq" (formula "43") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "149") (term "1,1") (ifseqformula "21"))
                                             (rule "applyEq" (formula "137") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "34") (term "1,0,1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "140") (term "1,1,0,0,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "65") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "149") (term "5") (ifseqformula "143"))
                                             (rule "applyEq" (formula "53") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "39") (term "1,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "232") (term "0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "40") (term "1,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "166") (term "3") (ifseqformula "22"))
                                             (rule "applyEq" (formula "72") (term "0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "164") (term "1,0,1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "157") (term "0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "44") (term "1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "46") (term "1,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "38") (term "1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "152") (term "1,1") (ifseqformula "21"))
                                             (rule "applyEq" (formula "71") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "36") (term "1,0,1,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "89") (term "1,1,0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "94") (term "1,1,0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "94") (term "1,1") (ifseqformula "21"))
                                             (rule "applyEq" (formula "256") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "33") (term "1,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "46") (term "1,2,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "269") (term "0,1,1,1") (ifseqformula "24"))
                                             (rule "applyEq" (formula "32") (term "1,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "100") (term "1,1,0,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "41") (term "1,0,1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "35") (term "1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "164") (term "1,0,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "98") (term "1,1") (ifseqformula "21"))
                                             (rule "applyEq" (formula "63") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "247") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "48") (term "1,0,1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "248") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "50") (term "1,0,1,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "49") (term "1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "52") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "56") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "257") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "42") (term "1,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "50") (term "1,2,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "77") (term "0") (ifseqformula "78"))
                                             (rule "applyEq" (formula "91") (term "1,1,0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "134") (term "0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "35") (term "1,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "163") (term "1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "60") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "57") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "34") (term "1,2,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "245") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "89") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "40") (term "1,0,0") (ifseqformula "22"))
                                             (rule "applyEqRigid" (formula "233") (term "0") (ifseqformula "81"))
                                             (rule "applyEq" (formula "41") (term "1,2,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "46") (term "1,1,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "249") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "43") (term "1,0,1,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "38") (term "1,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "163") (term "1,0,1,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "256") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "43") (term "1,2,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "140") (term "1,1") (ifseqformula "21"))
                                             (rule "applyEq" (formula "36") (term "1,2,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "156") (term "4") (ifseqformula "155"))
                                             (rule "applyEq" (formula "98") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "165") (term "4") (ifseqformula "164"))
                                             (rule "applyEq" (formula "50") (term "1,0,0,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "32") (term "1,2,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "86") (term "1,1") (ifseqformula "21"))
                                             (rule "applyEq" (formula "86") (term "1,1,0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "41") (term "1,0,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "156") (term "3") (ifseqformula "21"))
                                             (rule "applyEq" (formula "84") (term "1,1,0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "134") (term "2") (ifseqformula "21"))
                                             (rule "applyEq" (formula "36") (term "1,0,1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "51") (term "1,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "48") (term "1,2,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "253") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "252") (term "1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "140") (term "1,1,0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "82") (term "1,1,0,0,0,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "87") (term "1,1,0,0,0,1,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "37") (term "1,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "79") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "77"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "196"))
                                             (rule "mul_literals" (formula "196") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "119") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "119") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "119") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "119") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "119") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "119") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "130") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "130") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "130") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "130") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "130") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "130") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "187"))
                                             (rule "polySimp_mulLiterals" (formula "187") (term "0"))
                                             (rule "polySimp_elimOne" (formula "187") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "150"))
                                             (rule "polySimp_mulLiterals" (formula "150") (term "0"))
                                             (rule "polySimp_elimOne" (formula "150") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "99") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "99") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "99") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "99") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "160"))
                                             (rule "mul_literals" (formula "160") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "115"))
                                             (rule "polySimp_mulLiterals" (formula "115") (term "0"))
                                             (rule "polySimp_elimOne" (formula "115") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "195"))
                                             (rule "polySimp_mulLiterals" (formula "195") (term "0"))
                                             (rule "polySimp_elimOne" (formula "195") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "181"))
                                             (rule "polySimp_mulLiterals" (formula "181") (term "0"))
                                             (rule "polySimp_elimOne" (formula "181") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "145"))
                                             (rule "polySimp_mulLiterals" (formula "145") (term "0"))
                                             (rule "polySimp_elimOne" (formula "145") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "130") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "130") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "130") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "130") (term "1,1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "130") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "130") (term "1,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "99") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "99") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "99") (term "1,1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "99") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "99") (term "1,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "109") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "109") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "109") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "109") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "109") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "109") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "112") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "112") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "112") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "112") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "112") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "108") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "108") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "108") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "108") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "108") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "108") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "117") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "117") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "117") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "117") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "117") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "117") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "174"))
                                             (rule "polySimp_mulLiterals" (formula "174") (term "0"))
                                             (rule "polySimp_elimOne" (formula "174") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "78") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "96"))
                                             (rule "polySimp_mulLiterals" (formula "96") (term "0"))
                                             (rule "polySimp_elimOne" (formula "96") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "99") (term "0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "99") (term "1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "177"))
                                             (rule "polySimp_mulLiterals" (formula "177") (term "0"))
                                             (rule "polySimp_elimOne" (formula "177") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "127"))
                                             (rule "polySimp_mulLiterals" (formula "127") (term "0"))
                                             (rule "polySimp_elimOne" (formula "127") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "130") (term "0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "130") (term "1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "159"))
                                             (rule "polySimp_mulLiterals" (formula "159") (term "0"))
                                             (rule "polySimp_elimOne" (formula "159") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "123"))
                                             (rule "polySimp_mulLiterals" (formula "123") (term "0"))
                                             (rule "polySimp_elimOne" (formula "123") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "82") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "82") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "92"))
                                             (rule "polySimp_mulLiterals" (formula "92") (term "0"))
                                             (rule "polySimp_elimOne" (formula "92") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "87") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "87") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "87") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "85"))
                                             (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                                             (rule "polySimp_elimOne" (formula "85") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "136"))
                                             (rule "polySimp_mulLiterals" (formula "136") (term "0"))
                                             (rule "polySimp_elimOne" (formula "136") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "139"))
                                             (rule "polySimp_mulLiterals" (formula "139") (term "0"))
                                             (rule "polySimp_elimOne" (formula "139") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "89") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "79") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0,0,0,0"))
                                             (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GROUP_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "192"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "171"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "267") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_0"))
                                             (rule "eqSymm" (formula "268") (term "1,1"))
                                             (rule "pullOutSelect" (formula "268") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_3"))
                                             (rule "eqSymm" (formula "269") (term "1,0"))
                                             (rule "pullOutSelect" (formula "269") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_3"))
                                             (rule "eqSymm" (formula "270") (term "0,0"))
                                             (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "195"))
                                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "227")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0") (ifseqformula "174"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "174"))
                                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "227")) (ifInst ""  (formula "24")))
                                             (rule "elementOfSingleton" (formula "4") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "227")))
                                             (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "4"))
                                             (rule "close" (formula "204") (ifseqformula "5"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "225"))
                                          (branch
                                             (rule "closeTrue" (formula "225"))
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "225"))
                                             (branch "Case 1"
                                                (rule "selectOfAnonEQ" (formula "225") (term "1,1,0,0") (ifseqformula "191"))
                                                 (builtin "One Step Simplification" (formula "225"))
                                                (rule "selectOfAnonEQ" (formula "225") (term "0,0") (ifseqformula "191"))
                                                 (builtin "One Step Simplification" (formula "225"))
                                                (rule "ifthenelse_split" (formula "225") (term "0,0"))
                                                (branch " ¬ (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0).group@heapAfter_exitIfIdInvalid_0 = null ∧ ¬ ((de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0).group@heapAfter_exitIfIdInvalid_0).<created>@heapAfter_printStatus_0 = TRUE TRUE"
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "172"))
                                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                   (rule "ifthenelse_negated" (formula "2") (term "0,0"))
                                                   (rule "selectOfAnonEQ" (formula "1") (term "1,0,0") (ifseqformula "172"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0,0"))
                                                   (branch " ((de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0).group@heapAfter_exitIfIdInvalid_0).<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                                      (rule "selectOfAnonEQ" (formula "228") (term "1,1,0,0") (ifseqformula "173"))
                                                       (builtin "One Step Simplification" (formula "228"))
                                                      (rule "ifthenelse_split" (formula "228") (term "1,1,0,0"))
                                                      (branch "(null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)} TRUE"
                                                         (rule "elementOfSingleton" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "(null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)} FALSE"
                                                         (rule "elementOfSingleton" (formula "228"))
                                                          (builtin "One Step Simplification" (formula "228"))
                                                         (rule "selectOfAnonEQ" (formula "1") (term "0,0") (ifseqformula "194"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "226")))
                                                         (rule "ifthenelse_negated" (formula "1") (term "0,0"))
                                                         (rule "ifthenelse_split" (formula "1") (term "0,0"))
                                                         (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE TRUE"
                                                            (rule "selectOfAnonEQ" (formula "230") (term "1,0,0") (ifseqformula "195"))
                                                             (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "227")) (ifInst ""  (formula "1")))
                                                            (rule "selectOfAnonEQ" (formula "4") (term "1,1,0,0") (ifseqformula "174"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "elementOfSingleton" (formula "4") (term "0,1,1,0,0"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "selectOfAnonEQ" (formula "3") (term "1,1,0") (ifseqformula "174"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "elementOfSingleton" (formula "3") (term "0,1,1,0"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "selectOfAnonEQ" (formula "230") (term "1,0,0") (ifseqformula "174"))
                                                             (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "227")) (ifInst ""  (formula "23")))
                                                            (rule "elementOfSingleton" (formula "230") (term "0,1,0,0"))
                                                             (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "227")))
                                                            (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "174"))
                                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "227")) (ifInst ""  (formula "23")))
                                                            (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "227")) (ifInst ""  (formula "204")))
                                                            (rule "selectOfAnonEQ" (formula "4") (term "1,0,0") (ifseqformula "195"))
                                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "227")) (ifInst ""  (formula "1")))
                                                            (rule "selectCreatedOfAnonEQ" (formula "1") (term "0") (ifseqformula "174"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                                            (rule "selectOfAnonEQ" (formula "2") (term "1,0") (ifseqformula "194"))
                                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "226")))
                                                            (rule "ifthenelse_negated" (formula "2") (term "1,0"))
                                                            (rule "ifthenelse_split" (formula "2") (term "1,0"))
                                                            (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE TRUE"
                                                               (rule "selectOfAnonEQ" (formula "4") (term "1,0,0") (ifseqformula "174"))
                                                                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "227")) (ifInst ""  (formula "23")))
                                                               (rule "elementOfSingleton" (formula "4") (term "0,1,0,0"))
                                                                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "227")))
                                                               (rule "selectOfAnonEQ" (formula "2") (term "0") (ifseqformula "174"))
                                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "227")) (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
                                                               (rule "selectOfAnonEQ" (formula "2") (term "1,0") (ifseqformula "173"))
                                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "226")) (ifInst ""  (formula "22")))
                                                               (rule "elementOfSingleton" (formula "2") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "226")))
                                                               (rule "false_right" (formula "228"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "notRight" (formula "227"))
                                                               (rule "notLeft" (formula "3"))
                                                               (rule "close" (formula "199") (ifseqformula "2"))
                                                            )
                                                            (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE FALSE"
                                                               (rule "selectOfAnonEQ" (formula "3") (term "1,0,0") (ifseqformula "173"))
                                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "227")) (ifInst ""  (formula "22")))
                                                               (rule "elementOfSingleton" (formula "3") (term "0,1,0,0"))
                                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "227")))
                                                               (rule "selectCreatedOfAnonEQ" (formula "200") (term "0") (ifseqformula "173"))
                                                                (builtin "One Step Simplification" (formula "200") (ifInst ""  (formula "22")))
                                                               (rule "closeTrue" (formula "200"))
                                                            )
                                                         )
                                                         (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE FALSE"
                                                            (rule "selectOfAnonEQ" (formula "230") (term "1,0,0") (ifseqformula "194"))
                                                             (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "227")) (ifInst ""  (formula "200")))
                                                            (rule "selectCreatedOfAnonEQ" (formula "200") (term "0") (ifseqformula "173"))
                                                             (builtin "One Step Simplification" (formula "200") (ifInst ""  (formula "22")))
                                                            (rule "closeTrue" (formula "200"))
                                                         )
                                                      )
                                                   )
                                                   (branch " ((de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0).group@heapAfter_exitIfIdInvalid_0).<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                                      (rule "selectOfAnonEQ" (formula "228") (term "1,1,0,0") (ifseqformula "172"))
                                                       (builtin "One Step Simplification" (formula "228"))
                                                      (rule "ifthenelse_split" (formula "228") (term "1,1,0,0"))
                                                      (branch "(null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)} TRUE"
                                                         (rule "elementOfSingleton" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "(null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)} FALSE"
                                                         (rule "elementOfSingleton" (formula "228"))
                                                          (builtin "One Step Simplification" (formula "228"))
                                                         (rule "selectOfAnonEQ" (formula "1") (term "0,0") (ifseqformula "193"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "226")))
                                                         (rule "ifthenelse_negated" (formula "1") (term "0,0"))
                                                         (rule "ifthenelse_split" (formula "1") (term "0,0"))
                                                         (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE TRUE"
                                                            (rule "selectOfAnonEQ" (formula "230") (term "1,0,0") (ifseqformula "194"))
                                                             (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "227")) (ifInst ""  (formula "1")))
                                                            (rule "selectOfAnonEQ" (formula "3") (term "1,1,0,0") (ifseqformula "173"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "elementOfSingleton" (formula "3") (term "0,1,1,0,0"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "selectCreatedOfAnonEQ" (formula "1") (term "0") (ifseqformula "173"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                                            (rule "selectOfAnonEQ" (formula "200") (term "1,1,0") (ifseqformula "173"))
                                                             (builtin "One Step Simplification" (formula "200"))
                                                            (rule "elementOfSingleton" (formula "200") (term "0,1,1,0"))
                                                             (builtin "One Step Simplification" (formula "200"))
                                                            (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "173"))
                                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "227")) (ifInst ""  (formula "22")))
                                                            (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "227")) (ifInst ""  (formula "204")))
                                                            (rule "selectOfAnonEQ" (formula "229") (term "1,0,0") (ifseqformula "172"))
                                                             (builtin "One Step Simplification" (formula "229") (ifInst ""  (formula "226")) (ifInst ""  (formula "21")))
                                                            (rule "ifthenelse_split" (formula "229") (term "1,0,0"))
                                                            (branch "(de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction», de.polyas.core3.open.crypto.groups.ECGroup::$group) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)} TRUE"
                                                               (rule "elementOfSingleton" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "227")))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "(de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction», de.polyas.core3.open.crypto.groups.ECGroup::$group) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)} FALSE"
                                                               (rule "elementOfSingleton" (formula "229"))
                                                                (builtin "One Step Simplification" (formula "229") (ifInst ""  (formula "226")))
                                                               (rule "selectOfAnonEQ" (formula "199") (term "1,0") (ifseqformula "193"))
                                                                (builtin "One Step Simplification" (formula "199") (ifInst ""  (formula "226")))
                                                               (rule "ifthenelse_negated" (formula "199") (term "1,0"))
                                                               (rule "ifthenelse_split" (formula "199") (term "1,0"))
                                                               (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE TRUE"
                                                                  (rule "selectOfAnonEQ" (formula "3") (term "1,0,0") (ifseqformula "194"))
                                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "227")) (ifInst ""  (formula "1")))
                                                                  (rule "selectCreatedOfAnonEQ" (formula "1") (term "0") (ifseqformula "173"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                                                  (rule "selectOfAnonEQ" (formula "2") (term "1,0,0") (ifseqformula "172"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "226")) (ifInst ""  (formula "21")))
                                                                  (rule "elementOfSingleton" (formula "2") (term "0,1,0,0"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "226")))
                                                                  (rule "selectOfAnonEQ" (formula "199") (term "1,0") (ifseqformula "172"))
                                                                   (builtin "One Step Simplification" (formula "199") (ifInst ""  (formula "226")) (ifInst ""  (formula "21")))
                                                                  (rule "elementOfSingleton" (formula "199") (term "0,1,0"))
                                                                   (builtin "One Step Simplification" (formula "199") (ifInst ""  (formula "226")))
                                                                  (rule "false_right" (formula "228"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "198") (ifseqformula "202"))
                                                                  (rule "close" (formula "198") (ifseqformula "101"))
                                                               )
                                                               (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE FALSE"
                                                                  (rule "selectOfAnonEQ" (formula "2") (term "1,0,0") (ifseqformula "193"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "227")) (ifInst ""  (formula "199")))
                                                                  (rule "selectCreatedOfAnonEQ" (formula "199") (term "0") (ifseqformula "172"))
                                                                   (builtin "One Step Simplification" (formula "199") (ifInst ""  (formula "21")))
                                                                  (rule "closeTrue" (formula "199"))
                                                               )
                                                            )
                                                         )
                                                         (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE FALSE"
                                                            (rule "selectOfAnonEQ" (formula "230") (term "1,0,0") (ifseqformula "193"))
                                                             (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "227")) (ifInst ""  (formula "199")))
                                                            (rule "selectOfAnonEQ" (formula "2") (term "1,1,0,0") (ifseqformula "172"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "elementOfSingleton" (formula "2") (term "0,1,1,0,0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "selectOfAnonEQ" (formula "200") (term "1,1,0") (ifseqformula "172"))
                                                             (builtin "One Step Simplification" (formula "200"))
                                                            (rule "elementOfSingleton" (formula "200") (term "0,1,1,0"))
                                                             (builtin "One Step Simplification" (formula "200"))
                                                            (rule "selectOfAnonEQ" (formula "2") (term "1,0,0") (ifseqformula "193"))
                                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "227")) (ifInst ""  (formula "199")))
                                                            (rule "selectOfAnonEQ" (formula "200") (term "1,0") (ifseqformula "193"))
                                                             (builtin "One Step Simplification" (formula "200") (ifInst ""  (formula "227")) (ifInst ""  (formula "199")))
                                                            (rule "selectOfAnonEQ" (formula "199") (term "0") (ifseqformula "172"))
                                                             (builtin "One Step Simplification" (formula "199") (ifInst ""  (formula "227")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")))
                                                            (rule "closeTrue" (formula "199"))
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch " ¬ (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0).group@heapAfter_exitIfIdInvalid_0 = null ∧ ¬ ((de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0).group@heapAfter_exitIfIdInvalid_0).<created>@heapAfter_printStatus_0 = TRUE FALSE"
                                                   (rule "selectOfAnonEQ" (formula "225") (term "1,1,0,0,1") (ifseqformula "170"))
                                                    (builtin "One Step Simplification" (formula "225"))
                                                   (rule "elementOfSingleton" (formula "225") (term "0,1,1,0,0,1"))
                                                    (builtin "One Step Simplification" (formula "225"))
                                                   (rule "selectOfAnonEQ" (formula "226") (term "1,1,0,0") (ifseqformula "170"))
                                                    (builtin "One Step Simplification" (formula "226"))
                                                   (rule "selectOfAnonEQ" (formula "225") (term "0,0,1") (ifseqformula "170"))
                                                    (builtin "One Step Simplification" (formula "225"))
                                                   (rule "ifthenelse_split" (formula "225") (term "0,0,1"))
                                                   (branch " ¬ (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).group@heapAfter_exitIfIdInvalid_0 = null ∧ ¬ ((de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).group@heapAfter_exitIfIdInvalid_0).<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "selectOfAnonEQ" (formula "228") (term "0,0") (ifseqformula "172"))
                                                       (builtin "One Step Simplification" (formula "228"))
                                                      (rule "elementOfSingleton" (formula "228") (term "0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "228"))
                                                      (rule "ifthenelse_split" (formula "228") (term "1,0,0,0,0,0,0"))
                                                      (branch "(null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)} TRUE"
                                                         (rule "elementOfSingleton" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "(null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)} FALSE"
                                                         (rule "elementOfSingleton" (formula "228"))
                                                          (builtin "One Step Simplification" (formula "228"))
                                                         (rule "selectOfAnonEQ" (formula "227") (term "0,0,0") (ifseqformula "193"))
                                                          (builtin "One Step Simplification" (formula "227"))
                                                         (rule "ifthenelse_split" (formula "229") (term "1,1,2,0,0"))
                                                         (branch "(null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)} TRUE"
                                                            (rule "elementOfSingleton" (formula "1"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                         (branch "(null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)} FALSE"
                                                            (rule "elementOfSingleton" (formula "229"))
                                                             (builtin "One Step Simplification" (formula "229"))
                                                            (rule "ifthenelse_split" (formula "229") (term "1,1,0,0,1,0,0,0"))
                                                            (branch "(null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)} TRUE"
                                                               (rule "elementOfSingleton" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "(null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)} FALSE"
                                                               (rule "elementOfSingleton" (formula "229"))
                                                                (builtin "One Step Simplification" (formula "229"))
                                                               (rule "ifthenelse_split" (formula "229") (term "0,0"))
                                                               (branch " ¬ (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).group@heapAfter_exitIfIdInvalid_0 = null ∧ ¬ ((de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).group@heapAfter_exitIfIdInvalid_0).<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "ifthenelse_split" (formula "227") (term "0,0,0"))
                                                                  (branch " ¬ de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0 = null ∧ ¬ de.polyas.core3.open.cred.CredentialGenerator.GROUP.<created>@heapAfter_printStatus_0 = TRUE TRUE"
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "selectOfAnonEQ" (formula "4") (term "1,0,0") (ifseqformula "195"))
                                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "227")))
                                                                     (rule "ifthenelse_negated" (formula "4") (term "1,0,0"))
                                                                     (rule "selectOfAnonEQ" (formula "229") (term "1,0,0,1") (ifseqformula "195"))
                                                                      (builtin "One Step Simplification" (formula "229") (ifInst ""  (formula "227")))
                                                                     (rule "ifthenelse_negated" (formula "229") (term "1,0,0,1"))
                                                                     (rule "selectOfAnonEQ" (formula "4") (term "1,1,0,0") (ifseqformula "174"))
                                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "227")) (ifInst ""  (formula "23")))
                                                                     (rule "elementOfSingleton" (formula "4") (term "0,1,1,0,0"))
                                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "227")))
                                                                     (rule "ifthenelse_split" (formula "4") (term "1,0,0"))
                                                                     (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE TRUE"
                                                                        (rule "selectOfAnonEQ" (formula "3") (term "0,0") (ifseqformula "196"))
                                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "228")) (ifInst ""  (formula "4")))
                                                                        (rule "selectCreatedOfAnonEQ" (formula "4") (term "0") (ifseqformula "175"))
                                                                         (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "24")))
                                                                        (rule "selectOfAnonEQ" (formula "232") (term "1,0,0") (ifseqformula "196"))
                                                                         (builtin "One Step Simplification" (formula "232"))
                                                                        (rule "ifthenelse_split" (formula "230") (term "1,0,0,1"))
                                                                        (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE TRUE"
                                                                           (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "176"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "229")))
                                                                           (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "175"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "selectOfAnonEQ" (formula "3") (term "0,0") (ifseqformula "175"))
                                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "228")) (ifInst ""  (formula "24")))
                                                                           (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "228")) (ifInst ""  (formula "205")))
                                                                           (rule "selectOfAnonEQ" (formula "229") (term "1,0,0,0") (ifseqformula "174"))
                                                                            (builtin "One Step Simplification" (formula "229"))
                                                                           (rule "elementOfSingleton" (formula "229") (term "0,1,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "229"))
                                                                           (rule "selectOfAnonEQ" (formula "231") (term "2,1,0,0") (ifseqformula "174"))
                                                                            (builtin "One Step Simplification" (formula "231"))
                                                                           (rule "elementOfSingleton" (formula "231") (term "0,0,2,1,0,0"))
                                                                            (builtin "One Step Simplification" (formula "231"))
                                                                           (rule "ifthenelse_split" (formula "231") (term "2,1,0,0"))
                                                                           (branch " ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction») = null ∧ ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                                                              (rule "andLeft" (formula "1"))
                                                                              (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "229")))
                                                                              (rule "elementOfSingleton" (formula "1") (term "0,1,0,0"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                                                              (rule "closeFalse" (formula "1"))
                                                                           )
                                                                           (branch " ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction») = null ∧ ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                                                              (rule "elementOfSingleton" (formula "231") (term "0,1,0,0,1"))
                                                                               (builtin "One Step Simplification" (formula "231") (ifInst ""  (formula "23")))
                                                                              (rule "selectOfAnonEQ" (formula "231") (term "0,0,1,0,1,0,0") (ifseqformula "174"))
                                                                               (builtin "One Step Simplification" (formula "231"))
                                                                              (rule "ifthenelse_split" (formula "231") (term "1,0,0"))
                                                                              (branch " ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction») = null ∧ ¬ if ( ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction») = null ∧ ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAtPre_B«anonHeapFunction» = TRUE) then (if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@anon_heap_printStatus_0«anonHeapFunction») else (if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAtPre_B«anonHeapFunction») = TRUE TRUE"
                                                                                 (rule "andLeft" (formula "1"))
                                                                                 (rule "elementOfSingleton" (formula "2") (term "0,0,0,0,0,0,0"))
                                                                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "229")))
                                                                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "229")))
                                                                                 (rule "elementOfSingleton" (formula "1") (term "0,1,1,0,0"))
                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "ifthenelse_negated" (formula "1") (term "0,0"))
                                                                                 (rule "elementOfSingleton" (formula "1") (term "0,1,1,0,0"))
                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "elementOfSingleton" (formula "1") (term "0,1,0,0,0,0"))
                                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                                                                                 (rule "closeFalse" (formula "1"))
                                                                              )
                                                                              (branch " ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction») = null ∧ ¬ if ( ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction») = null ∧ ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAtPre_B«anonHeapFunction» = TRUE) then (if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@anon_heap_printStatus_0«anonHeapFunction») else (if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAtPre_B«anonHeapFunction») = TRUE FALSE"
                                                                                 (rule "elementOfSingleton" (formula "231") (term "0,1,2,0,0,1"))
                                                                                  (builtin "One Step Simplification" (formula "231"))
                                                                                 (rule "elementOfSingleton" (formula "231") (term "0,0,0,0,0,0,0,1"))
                                                                                  (builtin "One Step Simplification" (formula "231") (ifInst ""  (formula "227")))
                                                                                 (rule "elementOfSingleton" (formula "231") (term "0,1,1,0,0,1"))
                                                                                  (builtin "One Step Simplification" (formula "231"))
                                                                                 (rule "elementOfSingleton" (formula "231") (term "0,0,0,0"))
                                                                                  (builtin "One Step Simplification" (formula "231") (ifInst ""  (formula "227")))
                                                                                 (rule "elementOfSingleton" (formula "231") (term "0,1,0,0,0,0,0"))
                                                                                  (builtin "One Step Simplification" (formula "231") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
                                                                                 (rule "selectOfAnonEQ" (formula "2") (term "1,0,0,0") (ifseqformula "174"))
                                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                                 (rule "elementOfSingleton" (formula "2") (term "0,1,0,0,0"))
                                                                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "23")))
                                                                                 (rule "closeFalse" (formula "2"))
                                                                              )
                                                                           )
                                                                        )
                                                                        (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE FALSE"
                                                                           (rule "selectOfAnonEQ" (formula "1") (term "0,0") (ifseqformula "175"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "228")))
                                                                           (rule "selectOfAnonEQ" (formula "232") (term "2,1,0,0") (ifseqformula "174"))
                                                                            (builtin "One Step Simplification" (formula "232"))
                                                                           (rule "elementOfSingleton" (formula "232") (term "0,0,2,1,0,0"))
                                                                            (builtin "One Step Simplification" (formula "232"))
                                                                           (rule "selectOfAnonEQ" (formula "230") (term "1,0,0,0") (ifseqformula "174"))
                                                                            (builtin "One Step Simplification" (formula "230"))
                                                                           (rule "elementOfSingleton" (formula "230") (term "0,1,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "230"))
                                                                           (rule "selectCreatedOfAnonEQ" (formula "232") (term "0,0,1,0,1,0,0") (ifseqformula "174"))
                                                                            (builtin "One Step Simplification" (formula "232"))
                                                                           (rule "ifthenelse_split" (formula "232") (term "2,1,0,0"))
                                                                           (branch " ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction») = null ∧ ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                                                              (rule "andLeft" (formula "1"))
                                                                              (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "229")))
                                                                              (rule "elementOfSingleton" (formula "1") (term "0,1,0,0"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                                                              (rule "closeFalse" (formula "1"))
                                                                           )
                                                                           (branch " ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction») = null ∧ ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                                                              (rule "elementOfSingleton" (formula "232") (term "0,0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "232") (ifInst ""  (formula "227")))
                                                                              (rule "elementOfSingleton" (formula "232") (term "0,1,0,0"))
                                                                               (builtin "One Step Simplification" (formula "232") (ifInst ""  (formula "23")))
                                                                              (rule "ifthenelse_split" (formula "232") (term "1,0,0"))
                                                                              (branch " ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction») = null ∧ ¬( if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAtPre_B«anonHeapFunction» = TRUE ∨ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@anon_heap_printStatus_0«anonHeapFunction» = TRUE) TRUE"
                                                                                 (rule "andLeft" (formula "1"))
                                                                                 (rule "elementOfSingleton" (formula "2") (term "0,1,0,0,0"))
                                                                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "25")))
                                                                                 (rule "closeFalse" (formula "2"))
                                                                              )
                                                                              (branch " ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction») = null ∧ ¬( if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAtPre_B«anonHeapFunction» = TRUE ∨ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@anon_heap_printStatus_0«anonHeapFunction» = TRUE) FALSE"
                                                                                 (rule "elementOfSingleton" (formula "232") (term "0,1,0,0,0,1"))
                                                                                  (builtin "One Step Simplification" (formula "232") (ifInst ""  (formula "23")))
                                                                                 (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "174"))
                                                                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "227")) (ifInst ""  (formula "23")))
                                                                                 (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                                                                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "227")) (ifInst ""  (formula "204")))
                                                                                 (rule "selectCreatedOfAnonEQ" (formula "1") (term "0,0") (ifseqformula "173"))
                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "selectCreatedOfAnonEQ" (formula "228") (term "0") (ifseqformula "173"))
                                                                                  (builtin "One Step Simplification" (formula "228") (ifInst ""  (formula "22")))
                                                                                 (rule "closeTrue" (formula "228"))
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                     (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE FALSE"
                                                                        (rule "selectOfAnonEQ" (formula "3") (term "0,0") (ifseqformula "195"))
                                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "228")) (ifInst ""  (formula "201")))
                                                                        (rule "selectOfAnonEQ" (formula "201") (term "0") (ifseqformula "174"))
                                                                         (builtin "One Step Simplification" (formula "201") (ifInst ""  (formula "228")) (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
                                                                        (rule "closeTrue" (formula "201"))
                                                                     )
                                                                  )
                                                                  (branch " ¬ de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0 = null ∧ ¬ de.polyas.core3.open.cred.CredentialGenerator.GROUP.<created>@heapAfter_printStatus_0 = TRUE FALSE"
                                                                     (rule "selectOfAnonEQ" (formula "228") (term "1,0,0,1") (ifseqformula "193"))
                                                                      (builtin "One Step Simplification" (formula "228") (ifInst ""  (formula "225")))
                                                                     (rule "ifthenelse_negated" (formula "228") (term "1,0,0,1"))
                                                                     (rule "selectOfAnonEQ" (formula "227") (term "0,0,1") (ifseqformula "172"))
                                                                      (builtin "One Step Simplification" (formula "227"))
                                                                     (rule "ifthenelse_split" (formula "227") (term "0,0,1"))
                                                                     (branch " ¬ de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0 = null ∧ ¬ (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0).<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                                                        (rule "andLeft" (formula "1"))
                                                                        (rule "selectOfAnonEQ" (formula "230") (term "1,0,0,0") (ifseqformula "174"))
                                                                         (builtin "One Step Simplification" (formula "230"))
                                                                        (rule "elementOfSingleton" (formula "230") (term "0,1,0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "230"))
                                                                        (rule "ifthenelse_split" (formula "230") (term "1,0,0,1"))
                                                                        (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE TRUE"
                                                                           (rule "selectOfAnonEQ" (formula "4") (term "0,0") (ifseqformula "196"))
                                                                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "228")) (ifInst ""  (formula "1")))
                                                                           (rule "selectOfAnonEQ" (formula "231") (term "0,0,0") (ifseqformula "175"))
                                                                            (builtin "One Step Simplification" (formula "231") (ifInst ""  (formula "228")) (ifInst ""  (formula "24")))
                                                                           (rule "elementOfSingleton" (formula "231") (term "0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "231") (ifInst ""  (formula "228")) (ifInst ""  (formula "205")))
                                                                           (rule "selectOfAnonEQ" (formula "4") (term "0,0") (ifseqformula "175"))
                                                                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "228")) (ifInst ""  (formula "24")))
                                                                           (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "228")) (ifInst ""  (formula "205")))
                                                                           (rule "selectOfAnonEQ" (formula "231") (term "1,0,0") (ifseqformula "175"))
                                                                            (builtin "One Step Simplification" (formula "231") (ifInst ""  (formula "228")) (ifInst ""  (formula "24")))
                                                                           (rule "elementOfSingleton" (formula "231") (term "0,1,0,0"))
                                                                            (builtin "One Step Simplification" (formula "231") (ifInst ""  (formula "228")))
                                                                           (rule "selectOfAnonEQ" (formula "230") (term "0,0,0") (ifseqformula "175"))
                                                                            (builtin "One Step Simplification" (formula "230"))
                                                                           (rule "elementOfSingleton" (formula "230") (term "0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "228")))
                                                                           (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "175"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "228")))
                                                                           (rule "selectOfAnonEQ" (formula "229") (term "1,0,0") (ifseqformula "174"))
                                                                            (builtin "One Step Simplification" (formula "229"))
                                                                           (rule "elementOfSingleton" (formula "229") (term "0,1,0,0"))
                                                                            (builtin "One Step Simplification" (formula "229"))
                                                                           (rule "selectOfAnonEQ" (formula "232") (term "1,0,0") (ifseqformula "195"))
                                                                            (builtin "One Step Simplification" (formula "232"))
                                                                           (rule "ifthenelse_split" (formula "232") (term "1,0,0"))
                                                                           (branch " ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction») = null ∧ ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE TRUE"
                                                                              (rule "andLeft" (formula "1"))
                                                                              (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "229")))
                                                                              (rule "elementOfSingleton" (formula "1") (term "0,1,0,0"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                                                              (rule "closeFalse" (formula "1"))
                                                                           )
                                                                           (branch " ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction») = null ∧ ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE FALSE"
                                                                              (rule "elementOfSingleton" (formula "232") (term "0,1,0,0,1"))
                                                                               (builtin "One Step Simplification" (formula "232") (ifInst ""  (formula "1")))
                                                                              (rule "selectOfAnonEQ" (formula "4") (term "1,0,0") (ifseqformula "195"))
                                                                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "227")) (ifInst ""  (formula "1")))
                                                                              (rule "selectOfAnonEQ" (formula "2") (term "1,0,0") (ifseqformula "174"))
                                                                               (builtin "One Step Simplification" (formula "2"))
                                                                              (rule "elementOfSingleton" (formula "2") (term "0,1,0,0"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "23")))
                                                                              (rule "closeFalse" (formula "2"))
                                                                           )
                                                                        )
                                                                        (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE FALSE"
                                                                           (rule "selectOfAnonEQ" (formula "229") (term "0,0,0") (ifseqformula "174"))
                                                                            (builtin "One Step Simplification" (formula "229"))
                                                                           (rule "elementOfSingleton" (formula "229") (term "0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "229") (ifInst ""  (formula "227")))
                                                                           (rule "selectOfAnonEQ" (formula "231") (term "0,0,0") (ifseqformula "174"))
                                                                            (builtin "One Step Simplification" (formula "231") (ifInst ""  (formula "227")) (ifInst ""  (formula "23")))
                                                                           (rule "elementOfSingleton" (formula "231") (term "0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "231") (ifInst ""  (formula "227")) (ifInst ""  (formula "204")))
                                                                           (rule "selectOfAnonEQ" (formula "1") (term "0,0") (ifseqformula "174"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "227")))
                                                                           (rule "selectOfAnonEQ" (formula "233") (term "1,0,0") (ifseqformula "195"))
                                                                            (builtin "One Step Simplification" (formula "233"))
                                                                           (rule "selectOfAnonEQ" (formula "2") (term "1,0,0") (ifseqformula "174"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "elementOfSingleton" (formula "2") (term "0,1,0,0"))
                                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "23")))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                     )
                                                                     (branch " ¬ de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0 = null ∧ ¬ (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0).<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                                                        (rule "selectOfAnonEQ" (formula "228") (term "1,0,0,0") (ifseqformula "172"))
                                                                         (builtin "One Step Simplification" (formula "228"))
                                                                        (rule "elementOfSingleton" (formula "228") (term "0,1,0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "228"))
                                                                        (rule "selectOfAnonEQ" (formula "227") (term "0,0,0") (ifseqformula "172"))
                                                                         (builtin "One Step Simplification" (formula "227"))
                                                                        (rule "elementOfSingleton" (formula "227") (term "0,0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "227") (ifInst ""  (formula "225")))
                                                                        (rule "selectOfAnonEQ" (formula "228") (term "0,0,1,0,0,1") (ifseqformula "172"))
                                                                         (builtin "One Step Simplification" (formula "228") (ifInst ""  (formula "225")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")))
                                                                        (rule "selectOfAnonEQ" (formula "227") (term "1,0,0") (ifseqformula "172"))
                                                                         (builtin "One Step Simplification" (formula "227"))
                                                                        (rule "elementOfSingleton" (formula "227") (term "0,1,0,0"))
                                                                         (builtin "One Step Simplification" (formula "227") (ifInst ""  (formula "21")))
                                                                        (rule "selectOfAnonEQ" (formula "227") (term "1,0,0,1") (ifseqformula "172"))
                                                                         (builtin "One Step Simplification" (formula "227") (ifInst ""  (formula "225")) (ifInst ""  (formula "21")))
                                                                        (rule "elementOfSingleton" (formula "227") (term "0,1,0,0,1"))
                                                                         (builtin "One Step Simplification" (formula "227") (ifInst ""  (formula "225")))
                                                                        (rule "selectOfAnonEQ" (formula "1") (term "0,0") (ifseqformula "193"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "225")))
                                                                        (rule "ifthenelse_negated" (formula "1") (term "0,0"))
                                                                        (rule "selectOfAnonEQ" (formula "229") (term "1,0,0") (ifseqformula "193"))
                                                                         (builtin "One Step Simplification" (formula "229"))
                                                                        (rule "ifthenelse_split" (formula "229") (term "1,0,0"))
                                                                        (branch " ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction») = null ∧ ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE TRUE"
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "elementOfSingleton" (formula "2") (term "0,1,0,0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "227")))
                                                                           (rule "ifthenelse_split" (formula "3") (term "0,0"))
                                                                           (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE TRUE"
                                                                              (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "175"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")))
                                                                              (rule "closeFalse" (formula "2"))
                                                                           )
                                                                           (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE FALSE"
                                                                              (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "174"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "23")))
                                                                              (rule "closeFalse" (formula "2"))
                                                                           )
                                                                        )
                                                                        (branch " ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction») = null ∧ ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE FALSE"
                                                                           (rule "elementOfSingleton" (formula "229") (term "0,1,0,0,1"))
                                                                            (builtin "One Step Simplification" (formula "229"))
                                                                           (rule "elementOfSingleton" (formula "229") (term "0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "229") (ifInst ""  (formula "225")))
                                                                           (rule "selectOfAnonEQ" (formula "2") (term "1,0,0") (ifseqformula "193"))
                                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "225")) (ifInst ""  (formula "229")))
                                                                           (rule "selectOfAnonEQ" (formula "229") (term "0,0") (ifseqformula "172"))
                                                                            (builtin "One Step Simplification" (formula "229") (ifInst ""  (formula "225")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")))
                                                                           (rule "selectOfAnonEQ" (formula "1") (term "0,0,0,0") (ifseqformula "172"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "225")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")))
                                                                           (rule "selectOfAnonEQ" (formula "227") (term "0,0,0") (ifseqformula "172"))
                                                                            (builtin "One Step Simplification" (formula "227") (ifInst ""  (formula "225")) (ifInst ""  (formula "21")))
                                                                           (rule "elementOfSingleton" (formula "227") (term "0,0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "227") (ifInst ""  (formula "225")) (ifInst ""  (formula "202")))
                                                                           (rule "selectOfAnonEQ" (formula "2") (term "1,0,0") (ifseqformula "172"))
                                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "225")) (ifInst ""  (formula "21")))
                                                                           (rule "elementOfSingleton" (formula "2") (term "0,1,0,0"))
                                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "225")))
                                                                           (rule "selectOfAnonEQ" (formula "1") (term "0,0") (ifseqformula "172"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "225")) (ifInst ""  (formula "21")))
                                                                           (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "225")) (ifInst ""  (formula "202")))
                                                                           (rule "selectOfAnonEQ" (formula "229") (term "1,0,0") (ifseqformula "172"))
                                                                            (builtin "One Step Simplification" (formula "229"))
                                                                           (rule "elementOfSingleton" (formula "229") (term "0,0,1,0,0"))
                                                                            (builtin "One Step Simplification" (formula "229"))
                                                                           (rule "ifthenelse_split" (formula "229") (term "1,0,0"))
                                                                           (branch " ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction») = null ∧ ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                                                              (rule "andLeft" (formula "1"))
                                                                              (rule "elementOfSingleton" (formula "2") (term "0,1,0,0"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "23")))
                                                                              (rule "closeFalse" (formula "2"))
                                                                           )
                                                                           (branch " ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction») = null ∧ ¬ if ((null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)}) then (de.polyas.core3.open.cred.CredentialGenerator.GROUP@anon_heap_printStatus_0«anonHeapFunction») else (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                                                              (rule "elementOfSingleton" (formula "229") (term "0,0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "229") (ifInst ""  (formula "225")))
                                                                              (rule "elementOfSingleton" (formula "229") (term "0,1,0,0"))
                                                                               (builtin "One Step Simplification" (formula "229") (ifInst ""  (formula "21")))
                                                                              (rule "false_right" (formula "228"))
                                                                              (rule "true_left" (formula "1"))
                                                                              (rule "notRight" (formula "226"))
                                                                              (rule "notRight" (formula "227"))
                                                                              (rule "notLeft" (formula "3"))
                                                                              (rule "referencedObjectIsCreatedRight" (formula "199") (ifseqformula "203"))
                                                                              (rule "close" (formula "199") (ifseqformula "102"))
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                               (branch " ¬ (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).group@heapAfter_exitIfIdInvalid_0 = null ∧ ¬ ((de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).group@heapAfter_exitIfIdInvalid_0).<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                                                  (rule "ifthenelse_split" (formula "227") (term "0,0,0"))
                                                                  (branch " ¬ de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0 = null ∧ ¬ de.polyas.core3.open.cred.CredentialGenerator.GROUP.<created>@heapAfter_printStatus_0 = TRUE TRUE"
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "selectOfAnonEQ" (formula "229") (term "1,0,0,1") (ifseqformula "195"))
                                                                      (builtin "One Step Simplification" (formula "229") (ifInst ""  (formula "227")))
                                                                     (rule "ifthenelse_negated" (formula "229") (term "1,0,0,1"))
                                                                     (rule "ifthenelse_split" (formula "229") (term "1,0,0,1"))
                                                                     (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE TRUE"
                                                                        (rule "selectOfAnonEQ" (formula "3") (term "1,0,0") (ifseqformula "175"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "elementOfSingleton" (formula "3") (term "0,1,0,0"))
                                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                                                                        (rule "closeFalse" (formula "3"))
                                                                     )
                                                                     (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE FALSE"
                                                                        (rule "selectOfAnonEQ" (formula "2") (term "1,0,0") (ifseqformula "174"))
                                                                         (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "elementOfSingleton" (formula "2") (term "0,1,0,0"))
                                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "229")))
                                                                        (rule "selectCreatedOfAnonEQ" (formula "229") (term "0") (ifseqformula "174"))
                                                                         (builtin "One Step Simplification" (formula "229") (ifInst ""  (formula "23")))
                                                                        (rule "closeTrue" (formula "229"))
                                                                     )
                                                                  )
                                                                  (branch " ¬ de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0 = null ∧ ¬ de.polyas.core3.open.cred.CredentialGenerator.GROUP.<created>@heapAfter_printStatus_0 = TRUE FALSE"
                                                                     (rule "selectOfAnonEQ" (formula "228") (term "1,0,0,1") (ifseqformula "193"))
                                                                      (builtin "One Step Simplification" (formula "228") (ifInst ""  (formula "225")))
                                                                     (rule "ifthenelse_negated" (formula "228") (term "1,0,0,1"))
                                                                     (rule "selectOfAnonEQ" (formula "227") (term "1,0,0,1") (ifseqformula "172"))
                                                                      (builtin "One Step Simplification" (formula "227"))
                                                                     (rule "elementOfSingleton" (formula "227") (term "0,1,0,0,1"))
                                                                      (builtin "One Step Simplification" (formula "227"))
                                                                     (rule "selectOfAnonEQ" (formula "228") (term "1,0,0,0") (ifseqformula "172"))
                                                                      (builtin "One Step Simplification" (formula "228"))
                                                                     (rule "elementOfSingleton" (formula "228") (term "0,1,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "228"))
                                                                     (rule "ifthenelse_split" (formula "228") (term "1,0,0,1"))
                                                                     (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE TRUE"
                                                                        (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "194"))
                                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "226")) (ifInst ""  (formula "1")))
                                                                        (rule "selectOfAnonEQ" (formula "229") (term "0,0,0") (ifseqformula "173"))
                                                                         (builtin "One Step Simplification" (formula "229") (ifInst ""  (formula "226")) (ifInst ""  (formula "22")))
                                                                        (rule "elementOfSingleton" (formula "229") (term "0,0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "229") (ifInst ""  (formula "226")) (ifInst ""  (formula "203")))
                                                                        (rule "selectOfAnonEQ" (formula "231") (term "1,0,0,1") (ifseqformula "194"))
                                                                         (builtin "One Step Simplification" (formula "231") (ifInst ""  (formula "226")) (ifInst ""  (formula "1")))
                                                                        (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "173"))
                                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "226")) (ifInst ""  (formula "22")))
                                                                        (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "226")) (ifInst ""  (formula "203")))
                                                                        (rule "selectOfAnonEQ" (formula "1") (term "0") (ifseqformula "173"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "226")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
                                                                        (rule "selectOfAnonEQ" (formula "228") (term "1,0,0") (ifseqformula "172"))
                                                                         (builtin "One Step Simplification" (formula "228") (ifInst ""  (formula "225")) (ifInst ""  (formula "21")))
                                                                        (rule "elementOfSingleton" (formula "228") (term "0,1,0,0"))
                                                                         (builtin "One Step Simplification" (formula "228") (ifInst ""  (formula "225")))
                                                                        (rule "selectOfAnonEQ" (formula "230") (term "1,0,0,1") (ifseqformula "172"))
                                                                         (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "225")) (ifInst ""  (formula "21")))
                                                                        (rule "elementOfSingleton" (formula "230") (term "0,1,0,0,1"))
                                                                         (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "225")))
                                                                        (rule "selectOfAnonEQ" (formula "231") (term "1,0,0") (ifseqformula "193"))
                                                                         (builtin "One Step Simplification" (formula "231") (ifInst ""  (formula "225")))
                                                                        (rule "ifthenelse_split" (formula "231") (term "1,0,0"))
                                                                        (branch "¬ (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE TRUE"
                                                                           (rule "selectOfAnonEQ" (formula "3") (term "1,0,0") (ifseqformula "194"))
                                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "226")) (ifInst ""  (formula "1")))
                                                                           (rule "selectOfAnonEQ" (formula "1") (term "0,0") (ifseqformula "173"))
                                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "226")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                        (branch "¬ (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE FALSE"
                                                                           (rule "selectOfAnonEQ" (formula "230") (term "0,0,0") (ifseqformula "193"))
                                                                            (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "225")) (ifInst ""  (formula "231")))
                                                                           (rule "selectCreatedOfAnonEQ" (formula "231") (term "0,0") (ifseqformula "172"))
                                                                            (builtin "One Step Simplification" (formula "231") (ifInst ""  (formula "21")))
                                                                           (rule "selectOfAnonEQ" (formula "231") (term "1,0,0") (ifseqformula "172"))
                                                                            (builtin "One Step Simplification" (formula "231") (ifInst ""  (formula "225")) (ifInst ""  (formula "21")))
                                                                           (rule "ifthenelse_split" (formula "231") (term "1,0,0"))
                                                                           (branch "(de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction», de.polyas.core3.open.crypto.groups.ECGroup::$group) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)} TRUE"
                                                                              (rule "elementOfSingleton" (formula "1"))
                                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "226")))
                                                                              (rule "closeFalse" (formula "1"))
                                                                           )
                                                                           (branch "(de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction», de.polyas.core3.open.crypto.groups.ECGroup::$group) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)} FALSE"
                                                                              (rule "elementOfSingleton" (formula "231"))
                                                                               (builtin "One Step Simplification" (formula "231") (ifInst ""  (formula "225")))
                                                                              (rule "selectOfAnonEQ" (formula "230") (term "0,0,0") (ifseqformula "172"))
                                                                               (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "225")) (ifInst ""  (formula "21")))
                                                                              (rule "elementOfSingleton" (formula "230") (term "0,0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "225")) (ifInst ""  (formula "202")))
                                                                              (rule "selectOfAnonEQ" (formula "227") (term "0,0,0") (ifseqformula "172"))
                                                                               (builtin "One Step Simplification" (formula "227"))
                                                                              (rule "elementOfSingleton" (formula "227") (term "0,0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "227") (ifInst ""  (formula "225")))
                                                                              (rule "selectOfAnonEQ" (formula "2") (term "1,0,0") (ifseqformula "193"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "225")) (ifInst ""  (formula "227")))
                                                                              (rule "selectOfAnonEQ" (formula "227") (term "0,0") (ifseqformula "172"))
                                                                               (builtin "One Step Simplification" (formula "227") (ifInst ""  (formula "225")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")))
                                                                              (rule "selectOfAnonEQ" (formula "2") (term "1,0,0") (ifseqformula "172"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "225")) (ifInst ""  (formula "21")))
                                                                              (rule "elementOfSingleton" (formula "2") (term "0,1,0,0"))
                                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "225")) (ifInst ""  (formula "229")))
                                                                              (rule "closeFalse" (formula "2"))
                                                                           )
                                                                        )
                                                                     )
                                                                     (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE FALSE"
                                                                        (rule "selectOfAnonEQ" (formula "1") (term "0,0") (ifseqformula "193"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "225")) (ifInst ""  (formula "228")))
                                                                        (rule "selectOfAnonEQ" (formula "228") (term "0") (ifseqformula "172"))
                                                                         (builtin "One Step Simplification" (formula "228") (ifInst ""  (formula "225")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")))
                                                                        (rule "closeTrue" (formula "228"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch " ¬ (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).group@heapAfter_exitIfIdInvalid_0 = null ∧ ¬ ((de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).group@heapAfter_exitIfIdInvalid_0).<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                                      (rule "ifthenelse_split" (formula "227") (term "1,1,0,0"))
                                                      (branch "(null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)} TRUE"
                                                         (rule "elementOfSingleton" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "(null, de.polyas.core3.open.cred.CredentialGenerator::$GROUP) ∊ {(null, de.polyas.core3.open.cred.CredTool::$print)} FALSE"
                                                         (rule "elementOfSingleton" (formula "227"))
                                                          (builtin "One Step Simplification" (formula "227"))
                                                         (rule "selectOfAnonEQ" (formula "225") (term "1,0,0,1") (ifseqformula "191"))
                                                          (builtin "One Step Simplification" (formula "225") (ifInst ""  (formula "223")))
                                                         (rule "ifthenelse_negated" (formula "225") (term "1,0,0,1"))
                                                         (rule "ifthenelse_split" (formula "225") (term "1,0,0,1"))
                                                         (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE TRUE"
                                                            (rule "selectOfAnonEQ" (formula "229") (term "1,0,0") (ifseqformula "192"))
                                                             (builtin "One Step Simplification" (formula "229") (ifInst ""  (formula "224")) (ifInst ""  (formula "1")))
                                                            (rule "selectOfAnonEQ" (formula "226") (term "0,0,0") (ifseqformula "192"))
                                                             (builtin "One Step Simplification" (formula "226") (ifInst ""  (formula "224")) (ifInst ""  (formula "1")))
                                                            (rule "selectOfAnonEQ" (formula "1") (term "0") (ifseqformula "171"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "224")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")))
                                                            (rule "selectOfAnonEQ" (formula "227") (term "0,0,0") (ifseqformula "192"))
                                                             (builtin "One Step Simplification" (formula "227"))
                                                            (rule "ifthenelse_split" (formula "227") (term "0,0,0"))
                                                            (branch " ¬ de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0 = null ∧ ¬ de.polyas.core3.open.cred.CredentialGenerator.GROUP.<created>@heapAfter_printStatus_0 = TRUE TRUE"
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "selectOfAnonEQ" (formula "231") (term "1,0,0") (ifseqformula "173"))
                                                                (builtin "One Step Simplification" (formula "231") (ifInst ""  (formula "226")) (ifInst ""  (formula "22")))
                                                               (rule "elementOfSingleton" (formula "231") (term "0,1,0,0"))
                                                                (builtin "One Step Simplification" (formula "231") (ifInst ""  (formula "226")))
                                                               (rule "selectOfAnonEQ" (formula "2") (term "1,0,0") (ifseqformula "173"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "elementOfSingleton" (formula "2") (term "0,1,0,0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "selectOfAnonEQ" (formula "1") (term "0,0") (ifseqformula "173"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "226")))
                                                               (rule "selectOfAnonEQ" (formula "230") (term "0,0") (ifseqformula "172"))
                                                                (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "202")))
                                                               (rule "elementOfSingleton" (formula "230") (term "0,0,0,0"))
                                                                (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "202")))
                                                               (rule "ifthenelse_negated" (formula "230") (term "0,0"))
                                                               (rule "ifthenelse_split" (formula "230") (term "0,0"))
                                                               (branch " de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                                                  (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "173"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "22")))
                                                                  (rule "closeFalse" (formula "2"))
                                                               )
                                                               (branch " de.polyas.core3.open.cred.CredentialGenerator.GROUP.group.<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                                                  (rule "selectCreatedOfAnonEQ" (formula "1") (term "0,0") (ifseqformula "172"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                            )
                                                            (branch " ¬ de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0 = null ∧ ¬ de.polyas.core3.open.cred.CredentialGenerator.GROUP.<created>@heapAfter_printStatus_0 = TRUE FALSE"
                                                               (rule "selectOfAnonEQ" (formula "230") (term "1,0,0") (ifseqformula "171"))
                                                                (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "224")) (ifInst ""  (formula "20")))
                                                               (rule "elementOfSingleton" (formula "230") (term "0,1,0,0"))
                                                                (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "224")))
                                                               (rule "selectOfAnonEQ" (formula "226") (term "0,0,0") (ifseqformula "171"))
                                                                (builtin "One Step Simplification" (formula "226") (ifInst ""  (formula "224")) (ifInst ""  (formula "20")))
                                                               (rule "elementOfSingleton" (formula "226") (term "0,0,0,0"))
                                                                (builtin "One Step Simplification" (formula "226") (ifInst ""  (formula "224")) (ifInst ""  (formula "201")))
                                                               (rule "selectOfAnonEQ" (formula "228") (term "1,0,0,1") (ifseqformula "192"))
                                                                (builtin "One Step Simplification" (formula "228") (ifInst ""  (formula "224")))
                                                               (rule "ifthenelse_negated" (formula "228") (term "1,0,0,1"))
                                                               (rule "selectOfAnonEQ" (formula "226") (term "1,0,0") (ifseqformula "171"))
                                                                (builtin "One Step Simplification" (formula "226") (ifInst ""  (formula "224")) (ifInst ""  (formula "20")))
                                                               (rule "elementOfSingleton" (formula "226") (term "0,1,0,0"))
                                                                (builtin "One Step Simplification" (formula "226") (ifInst ""  (formula "224")))
                                                               (rule "selectOfAnonEQ" (formula "228") (term "0,0,0") (ifseqformula "171"))
                                                                (builtin "One Step Simplification" (formula "228"))
                                                               (rule "elementOfSingleton" (formula "228") (term "0,0,0,0,0"))
                                                                (builtin "One Step Simplification" (formula "228"))
                                                               (rule "ifthenelse_split" (formula "228") (term "1,0,0,1"))
                                                               (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE TRUE"
                                                                  (rule "selectOfAnonEQ" (formula "229") (term "1,1,0,0,0") (ifseqformula "172"))
                                                                   (builtin "One Step Simplification" (formula "229"))
                                                                  (rule "elementOfSingleton" (formula "229") (term "0,1,1,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "229"))
                                                                  (rule "selectOfAnonEQ" (formula "1") (term "0") (ifseqformula "172"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "225")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")))
                                                                  (rule "selectOfAnonEQ" (formula "228") (term "1,2,0,0,0") (ifseqformula "171"))
                                                                   (builtin "One Step Simplification" (formula "228"))
                                                                  (rule "elementOfSingleton" (formula "228") (term "0,1,2,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "228"))
                                                                  (rule "ifthenelse_split" (formula "228") (term "0,0,0"))
                                                                  (branch " ¬ de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0 = null ∧ ¬ (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0).<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "selectOfAnonEQ" (formula "230") (term "1,0,0,1") (ifseqformula "173"))
                                                                      (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "226")) (ifInst ""  (formula "22")))
                                                                     (rule "elementOfSingleton" (formula "230") (term "0,1,0,0,1"))
                                                                      (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "226")) (ifInst ""  (formula "228")))
                                                                     (rule "selectOfAnonEQ" (formula "1") (term "0,0") (ifseqformula "173"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "226")))
                                                                     (rule "selectOfAnonEQ" (formula "1") (term "1,0,0") (ifseqformula "172"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "elementOfSingleton" (formula "1") (term "0,1,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                                  (branch " ¬ de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0 = null ∧ ¬ (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0).<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                                                     (rule "selectOfAnonEQ" (formula "229") (term "1,0,0,1") (ifseqformula "171"))
                                                                      (builtin "One Step Simplification" (formula "229") (ifInst ""  (formula "201")) (ifInst ""  (formula "224")) (ifInst ""  (formula "20")))
                                                                     (rule "elementOfSingleton" (formula "229") (term "0,1,0,0"))
                                                                      (builtin "One Step Simplification" (formula "229") (ifInst ""  (formula "224")) (ifInst ""  (formula "226")))
                                                                     (rule "selectOfAnonEQ" (formula "228") (term "0,0,0") (ifseqformula "171"))
                                                                      (builtin "One Step Simplification" (formula "228"))
                                                                     (rule "elementOfSingleton" (formula "228") (term "0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "228") (ifInst ""  (formula "224")))
                                                                     (rule "selectOfAnonEQ" (formula "230") (term "0,0") (ifseqformula "171"))
                                                                      (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "201")) (ifInst ""  (formula "226")))
                                                                     (rule "elementOfSingleton" (formula "230") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "201")) (ifInst ""  (formula "200")))
                                                                     (rule "closeTrue" (formula "230"))
                                                                  )
                                                               )
                                                               (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE FALSE"
                                                                  (rule "selectOfAnonEQ" (formula "229") (term "1,1,0,0,0") (ifseqformula "171"))
                                                                   (builtin "One Step Simplification" (formula "229"))
                                                                  (rule "elementOfSingleton" (formula "229") (term "0,1,1,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "229"))
                                                                  (rule "ifthenelse_split" (formula "229") (term "0,0,0"))
                                                                  (branch " ¬ de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0 = null ∧ ¬ (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0).<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "selectOfAnonEQ" (formula "233") (term "0,0") (ifseqformula "173"))
                                                                      (builtin "One Step Simplification" (formula "233") (ifInst ""  (formula "203")) (ifInst ""  (formula "228")))
                                                                     (rule "elementOfSingleton" (formula "233") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "233") (ifInst ""  (formula "203")) (ifInst ""  (formula "202")))
                                                                     (rule "closeTrue" (formula "233"))
                                                                  )
                                                                  (branch " ¬ de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0 = null ∧ ¬ (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0).<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                                                     (rule "selectOfAnonEQ" (formula "232") (term "0,0") (ifseqformula "171"))
                                                                      (builtin "One Step Simplification" (formula "232") (ifInst ""  (formula "201")) (ifInst ""  (formula "226")))
                                                                     (rule "elementOfSingleton" (formula "232") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "232") (ifInst ""  (formula "201")) (ifInst ""  (formula "200")))
                                                                     (rule "closeTrue" (formula "232"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).<created>@heapAfter_printStatus_0 = TRUE FALSE"
                                                            (rule "selectOfAnonEQ" (formula "227") (term "0,0,0") (ifseqformula "191"))
                                                             (builtin "One Step Simplification" (formula "227"))
                                                            (rule "ifthenelse_split" (formula "227") (term "0,0,0"))
                                                            (branch " ¬ de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0 = null ∧ ¬ de.polyas.core3.open.cred.CredentialGenerator.GROUP.<created>@heapAfter_printStatus_0 = TRUE TRUE"
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "selectOfAnonEQ" (formula "229") (term "1,0,0,1") (ifseqformula "193"))
                                                                (builtin "One Step Simplification" (formula "229") (ifInst ""  (formula "225")) (ifInst ""  (formula "227")))
                                                               (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "172"))
                                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                               (rule "ifthenelse_negated" (formula "2") (term "0,0"))
                                                               (rule "ifthenelse_split" (formula "2") (term "0,0"))
                                                               (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0).<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                                                  (rule "selectOfAnonEQ" (formula "1") (term "0,0") (ifseqformula "173"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "226")))
                                                                  (rule "selectOfAnonEQ" (formula "232") (term "0,0") (ifseqformula "173"))
                                                                   (builtin "One Step Simplification" (formula "232"))
                                                                  (rule "elementOfSingleton" (formula "232") (term "0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "232"))
                                                                  (rule "ifthenelse_split" (formula "232") (term "0,0"))
                                                                  (branch " ¬ (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).group@heapAfter_exitIfIdInvalid_0 = null ∧ ¬ ((de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).group@heapAfter_exitIfIdInvalid_0).<created>@heapAtPre_B«anonHeapFunction» = TRUE TRUE"
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "selectOfAnonEQ" (formula "230") (term "0") (ifseqformula "175"))
                                                                      (builtin "One Step Simplification" (formula "230") (ifInst ""  (formula "228")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                                                                     (rule "closeTrue" (formula "230"))
                                                                  )
                                                                  (branch " ¬ (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).group@heapAfter_exitIfIdInvalid_0 = null ∧ ¬ ((de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAtPre_B«anonHeapFunction»).group@heapAfter_exitIfIdInvalid_0).<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                                                     (rule "selectOfAnonEQ" (formula "2") (term "1,0") (ifseqformula "173"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "elementOfSingleton" (formula "2") (term "0,1,0"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "22")))
                                                                     (rule "selectOfAnonEQ" (formula "2") (term "1,0,0") (ifseqformula "172"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "elementOfSingleton" (formula "2") (term "0,1,0,0"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "21")))
                                                                     (rule "closeFalse" (formula "2"))
                                                                  )
                                                               )
                                                               (branch " (de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0).<created>@heapAtPre_B«anonHeapFunction» = TRUE FALSE"
                                                                  (rule "selectOfAnonEQ" (formula "232") (term "0,0") (ifseqformula "172"))
                                                                   (builtin "One Step Simplification" (formula "232"))
                                                                  (rule "elementOfSingleton" (formula "232") (term "0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "232"))
                                                                  (rule "selectOfAnonEQ" (formula "228") (term "0") (ifseqformula "172"))
                                                                   (builtin "One Step Simplification" (formula "228") (ifInst ""  (formula "226")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")))
                                                                  (rule "closeTrue" (formula "228"))
                                                               )
                                                            )
                                                            (branch " ¬ de.polyas.core3.open.cred.CredentialGenerator.GROUP@heapAfter_printStatus_0 = null ∧ ¬ de.polyas.core3.open.cred.CredentialGenerator.GROUP.<created>@heapAfter_printStatus_0 = TRUE FALSE"
                                                               (rule "selectOfAnonEQ" (formula "228") (term "1,0,0,1") (ifseqformula "191"))
                                                                (builtin "One Step Simplification" (formula "228") (ifInst ""  (formula "223")) (ifInst ""  (formula "225")))
                                                               (rule "selectOfAnonEQ" (formula "227") (term "1,0,0,1") (ifseqformula "170"))
                                                                (builtin "One Step Simplification" (formula "227"))
                                                               (rule "elementOfSingleton" (formula "227") (term "0,1,0,0,1"))
                                                                (builtin "One Step Simplification" (formula "227") (ifInst ""  (formula "225")))
                                                               (rule "selectOfAnonEQ" (formula "228") (term "1,0,0,0") (ifseqformula "170"))
                                                                (builtin "One Step Simplification" (formula "228"))
                                                               (rule "elementOfSingleton" (formula "228") (term "0,1,0,0,0"))
                                                                (builtin "One Step Simplification" (formula "228"))
                                                               (rule "selectOfAnonEQ" (formula "227") (term "0,0") (ifseqformula "170"))
                                                                (builtin "One Step Simplification" (formula "227"))
                                                               (rule "elementOfSingleton" (formula "227") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "227") (ifInst ""  (formula "223")))
                                                               (rule "closeTrue" (formula "227"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch
                                                (rule "closeTrue" (formula "225"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch
                                    (rule "closeTrue" (formula "225"))
                                 )
                              )
                           )
                        )
                        (branch
                           (rule "andRight" (formula "225"))
                           (branch
                              (rule "andRight" (formula "225"))
                              (branch
                                 (rule "wellFormedAnonEQ" (formula "225") (ifseqformula "191"))
                                 (rule "wellFormedAnonEQ" (formula "225") (term "0") (ifseqformula "170"))
                                 (rule "eqSymm" (formula "269") (term "0,0"))
                                 (rule "eqSymm" (formula "269") (term "1,0"))
                                 (rule "eqSymm" (formula "269") (term "0,1"))
                                 (rule "eqSymm" (formula "269") (term "1,1"))
                                 (rule "replace_known_left" (formula "225") (term "1") (ifseqformula "190"))
                                  (builtin "One Step Simplification" (formula "225") (ifInst ""  (formula "100")) (ifInst ""  (formula "169")))
                                 (rule "closeTrue" (formula "225"))
                              )
                              (branch
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "225") (ifseqformula "191"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "225") (term "0") (ifseqformula "170"))
                                 (rule "orRight" (formula "225"))
                                 (rule "orRight" (formula "225"))
                                 (rule "eqSymm" (formula "271") (term "0,0"))
                                 (rule "eqSymm" (formula "271") (term "1,1"))
                                 (rule "eqSymm" (formula "271") (term "1,0"))
                                 (rule "eqSymm" (formula "271") (term "0,1"))
                                 (rule "replace_known_right" (formula "179") (term "1") (ifseqformula "225"))
                                  (builtin "One Step Simplification" (formula "179") (ifInst ""  (formula "226")))
                                 (rule "closeFalse" (formula "179"))
                              )
                           )
                           (branch
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "225") (ifseqformula "191"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "225") (term "0") (ifseqformula "170"))
                              (rule "orRight" (formula "225"))
                              (rule "orRight" (formula "225"))
                              (rule "close" (formula "225") (ifseqformula "104"))
                           )
                        )
                     )
                  )
                  (branch "Exceptional Post (exitIfIdInvalid)"
                      (builtin "One Step Simplification" (formula "201"))
                      (builtin "One Step Simplification" (formula "172"))
                     (rule "andLeft" (formula "172"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "173") (term "1,0") (ifseqformula "172"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "173") (term "0,1,0") (ifseqformula "151"))
                     (rule "andLeft" (formula "173"))
                     (rule "andLeft" (formula "173"))
                     (rule "notLeft" (formula "173"))
                     (rule "close" (formula "175") (ifseqformula "174"))
                  )
                  (branch "Pre (exitIfIdInvalid)"
                      (builtin "One Step Simplification" (formula "199") (ifInst ""  (formula "171")) (ifInst ""  (formula "170")) (ifInst ""  (formula "171")))
                     (rule "andRight" (formula "199"))
                     (branch "Case 1"
                        (rule "applyEqReverse" (formula "199") (term "0,0,1,1,0,0") (ifseqformula "164") (userinteraction))
                        (rule "instAll" (formula "164") (term "1,0") (ifseqformula "111") (userinteraction))
                        (rule "doubleImpLeft" (formula "164") (userinteraction))
                        (branch "Case 1"
                           (rule "eqSymm" (formula "244") (term "0,1"))
                           (rule "eqSymm" (formula "244") (term "0,0"))
                           (rule "eqSymm" (formula "244") (term "1,0"))
                           (rule "eqSymm" (formula "244") (term "1,1"))
                           (rule "replace_known_left" (formula "171") (term "0") (ifseqformula "162"))
                            (builtin "One Step Simplification" (formula "171") (ifInst ""  (formula "161")))
                           (rule "closeTrue" (formula "171"))
                        )
                        (branch "Case 2"
                           (rule "close" (formula "171") (ifseqformula "163"))
                        )
                        (branch "Case 3"
                           (rule "exLeft" (formula "164") (inst "sk=j_1") (userinteraction))
                           (rule "instEx" (formula "164") (term "0,1,0") (ifseqformula "200") (userinteraction))
                           (rule "andLeft" (formula "164"))
                           (rule "andLeft" (formula "164"))
                           (rule "eqSymm" (formula "247") (term "0,1"))
                           (rule "eqSymm" (formula "247") (term "0,0"))
                           (rule "eqSymm" (formula "247") (term "1,0"))
                           (rule "eqSymm" (formula "247") (term "1,1"))
                           (rule "replace_known_left" (formula "174") (term "1,0") (ifseqformula "165"))
                            (builtin "One Step Simplification" (formula "174"))
                           (rule "castedGetAny" (formula "203") (term "0,1,0"))
                           (rule "castedGetAny" (formula "174") (term "0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "94") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "111") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "111") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "162"))
                           (rule "polySimp_mulComm0" (formula "162") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "162") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "75"))
                           (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "75") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "111") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "111") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "111") (term "0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "111") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "111") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "117"))
                           (rule "polySimp_mulComm0" (formula "117") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "117") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "126"))
                           (rule "polySimp_mulComm0" (formula "126") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "126") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "91") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "131"))
                           (rule "polySimp_mulComm0" (formula "131") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "131") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "82") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "82") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "82") (term "0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "120"))
                           (rule "polySimp_mulComm0" (formula "120") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "120") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "97"))
                           (rule "polySimp_mulComm0" (formula "97") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "97") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "92") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "155"))
                           (rule "polySimp_mulComm0" (formula "155") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "155") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "82") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_gtToGeq" (formula "141"))
                           (rule "mul_literals" (formula "141") (term "1,0,0"))
                           (rule "add_literals" (formula "141") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "101") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "101") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "158"))
                           (rule "polySimp_mulComm0" (formula "158") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "158") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "104"))
                           (rule "polySimp_mulComm0" (formula "104") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "104") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "108"))
                           (rule "polySimp_mulComm0" (formula "108") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "108") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "140"))
                           (rule "polySimp_mulComm0" (formula "140") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "140") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "68"))
                           (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "171"))
                           (rule "polySimp_mulComm0" (formula "171") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "82") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "203") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "203") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "79"))
                           (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "68") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "165"))
                           (rule "polySimp_mulComm0" (formula "165") (term "1,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "164"))
                           (rule "mul_literals" (formula "164") (term "1,0,0"))
                           (rule "add_literals" (formula "164") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "171") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "203") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "203") (term "1,0,0,1,0"))
                           (rule "inEqSimp_gtToGeq" (formula "174") (term "1"))
                           (rule "polySimp_mulComm0" (formula "174") (term "1,0,0,1"))
                           (rule "polySimp_addComm1" (formula "79") (term "0"))
                           (rule "polySimp_addComm1" (formula "165") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "203") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "174") (term "0"))
                           (rule "replace_known_left" (formula "174") (term "0") (ifseqformula "166"))
                            (builtin "One Step Simplification" (formula "174"))
                           (rule "inEqSimp_geqRight" (formula "174"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "applyEq" (formula "76") (term "1,1,0,0,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "16") (term "1,1,0,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "33") (term "1,0,1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "83") (term "1,1,0,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "31") (term "1,2,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "31") (term "1,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "36") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "128") (term "1,1") (ifseqformula "4"))
                           (rule "applyEq" (formula "138") (term "4") (ifseqformula "137"))
                           (rule "applyEq" (formula "73") (term "1,1,0,0,0,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "22") (term "1,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "68") (term "1,1,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "73") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "130") (term "5") (ifseqformula "124"))
                           (rule "applyEq" (formula "234") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "17") (term "1,0,1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "203") (term "0,0,0,1,0,0,1,0,0") (ifseqformula "168"))
                           (rule "applyEq" (formula "227") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "230") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "13") (term "1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "72") (term "1,1,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "37") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "71") (term "1,1,0,0,0,1,0") (ifseqformula "4"))
                           (rule "applyEqRigid" (formula "247") (term "0,1,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "66") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "4"))
                           (rule "applyEqRigid" (formula "247") (term "0,1,1,1") (ifseqformula "7"))
                           (rule "applyEq" (formula "17") (term "1,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "166") (term "0,0,0,1,0") (ifseqformula "168"))
                           (rule "applyEq" (formula "228") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "212") (term "0") (ifseqformula "65"))
                           (rule "applyEq" (formula "47") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "13") (term "1,1,0,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "29") (term "1,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "27") (term "1,1,0,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "119") (term "1,1") (ifseqformula "4"))
                           (rule "applyEq" (formula "245") (term "0") (ifseqformula "4"))
                           (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "145") (term "1,0,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "33") (term "1,2,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "234") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "70") (term "1,1,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "70") (term "1,1") (ifseqformula "4"))
                           (rule "applyEq" (formula "224") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "82") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "77") (term "1,1,0,0") (ifseqformula "4"))
                           (rule "applyEqRigid" (formula "246") (term "0,1,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "19") (term "1,2,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "165") (term "0,0,1,0") (ifseqformula "168"))
                           (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "28") (term "1,1,0,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "223") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "246") (term "0,1,1,1,1") (ifseqformula "7"))
                           (rule "applyEq" (formula "145") (term "1,0,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "138") (term "3") (ifseqformula "4"))
                           (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "138") (term "0") (ifseqformula "4"))
                           (rule "applyEq" (formula "26") (term "1,0,1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "17") (term "1,2,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "231") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "20") (term "1,1,0,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "69") (term "1,1,0,0,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "15") (term "1,2,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "118") (term "1,1,0,0,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "33") (term "1,0,1,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "81") (term "1,1") (ifseqformula "4"))
                           (rule "applyEq" (formula "24") (term "1,0,1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "34") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "32") (term "1,1,0,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "121") (term "1,1,0,0,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "130") (term "1,1") (ifseqformula "4"))
                           (rule "applyEq" (formula "22") (term "1,2,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "60") (term "0") (ifseqformula "61"))
                           (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "121") (term "1,1") (ifseqformula "4"))
                           (rule "applyEq" (formula "19") (term "1,0,1,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "46") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "26") (term "1,2,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "29") (term "1,2,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "146") (term "4") (ifseqformula "145"))
                           (rule "applyEq" (formula "74") (term "1,1,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "146") (term "3") (ifseqformula "5"))
                           (rule "applyEq" (formula "231") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "26") (term "1,0,1,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "18") (term "1,1,0,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "115") (term "3") (ifseqformula "114"))
                           (rule "applyEq" (formula "144") (term "1,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "209") (term "0") (ifseqformula "5"))
                           (rule "applyEq" (formula "23") (term "1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "14") (term "1,1,0,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "224") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "115") (term "0") (ifseqformula "4"))
                           (rule "applyEq" (formula "25") (term "1,1,0,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "227") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "144") (term "1,0,1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "24") (term "1,2,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "24") (term "1,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "65") (term "1,1,0,0,0,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "121") (term "1,1,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "235") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "19") (term "1,0,1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "31") (term "1,0,1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "41") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "23") (term "1,1,0,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "26") (term "1,0,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "115") (term "2") (ifseqformula "4"))
                           (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "76") (term "1,1") (ifseqformula "4"))
                           (rule "applyEq" (formula "132") (term "1,1") (ifseqformula "4"))
                           (rule "applyEq" (formula "234") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "70") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "27") (term "1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "21") (term "1,1,0,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "229") (term "1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "33") (term "1,0,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "15") (term "1,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "30") (term "1,1,0,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "19") (term "1,0,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "118") (term "1,1,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "62") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "60"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "94") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "111") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "111") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "111") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "111") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "111") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "111") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "162"))
                           (rule "polySimp_mulLiterals" (formula "162") (term "0"))
                           (rule "polySimp_elimOne" (formula "162") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "111") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "111") (term "1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "111") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "111") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "111") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "111") (term "1,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "111") (term "0,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "111") (term "1,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "126"))
                           (rule "polySimp_mulLiterals" (formula "126") (term "0"))
                           (rule "polySimp_elimOne" (formula "126") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "91") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "91") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "91") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "91") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "91") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "99") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "99") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "99") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "99") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "131"))
                           (rule "polySimp_mulLiterals" (formula "131") (term "0"))
                           (rule "polySimp_elimOne" (formula "131") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "82") (term "1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "97"))
                           (rule "polySimp_mulLiterals" (formula "97") (term "0"))
                           (rule "polySimp_elimOne" (formula "97") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "92") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "92") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "92") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "92") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "92") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "155"))
                           (rule "polySimp_mulLiterals" (formula "155") (term "0"))
                           (rule "polySimp_elimOne" (formula "155") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "82") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "82") (term "1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "82") (term "0,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "141"))
                           (rule "mul_literals" (formula "141") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "101") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "101") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "101") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "101") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "101") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "101") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "158"))
                           (rule "polySimp_mulLiterals" (formula "158") (term "0"))
                           (rule "polySimp_elimOne" (formula "158") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "104"))
                           (rule "polySimp_mulLiterals" (formula "104") (term "0"))
                           (rule "polySimp_elimOne" (formula "104") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "108"))
                           (rule "polySimp_mulLiterals" (formula "108") (term "0"))
                           (rule "polySimp_elimOne" (formula "108") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "140"))
                           (rule "polySimp_mulLiterals" (formula "140") (term "0"))
                           (rule "polySimp_elimOne" (formula "140") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "82") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "82") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "171"))
                           (rule "polySimp_mulLiterals" (formula "171") (term "0"))
                           (rule "polySimp_elimOne" (formula "171") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "202") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "202") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "202") (term "1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "202") (term "1,1,1,0"))
                           (rule "mul_literals" (formula "202") (term "0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "202") (term "1,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "79"))
                           (rule "polySimp_mulLiterals" (formula "79") (term "0"))
                           (rule "polySimp_elimOne" (formula "79") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "75"))
                           (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                           (rule "polySimp_elimOne" (formula "75") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "202") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "202") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "202") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "202") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "202") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "202") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "165"))
                           (rule "polySimp_mulLiterals" (formula "165") (term "0"))
                           (rule "polySimp_elimOne" (formula "165") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "164"))
                           (rule "mul_literals" (formula "164") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "68"))
                           (rule "polySimp_mulLiterals" (formula "68") (term "0"))
                           (rule "polySimp_elimOne" (formula "68") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "117"))
                           (rule "polySimp_mulLiterals" (formula "117") (term "0"))
                           (rule "polySimp_elimOne" (formula "117") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "120"))
                           (rule "polySimp_mulLiterals" (formula "120") (term "0"))
                           (rule "polySimp_elimOne" (formula "120") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,0,0"))
                           (rule "pullOutSelect" (formula "245") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_3"))
                           (rule "eqSymm" (formula "246") (term "0,0"))
                           (rule "pullOutSelect" (formula "246") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_3"))
                           (rule "eqSymm" (formula "247") (term "1,0"))
                           (rule "pullOutSelect" (formula "247") (term "1,0,1,1") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
                           (rule "pullOutSelect" (formula "248") (term "1,1,1") (inst "selectSK=java_util_Collection_seq_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "147"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "139"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "117"))
                           (rule "pullOutSelect" (formula "249") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_4"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "148"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "214")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "140"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "118"))
                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "250") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_4"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "149"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "215")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "141"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "119"))
                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "251") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_1"))
                           (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=java_util_Collection_seq_2"))
                           (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "143"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,1,0,0") (ifseqformula "121"))
                           (rule "pullOutSelect" (formula "5") (term "0,0,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
                           (rule "applyEq" (formula "6") (term "1,0,1,0,1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "6") (term "1,0,1,0,0,1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "4") (term "1,0,0,0,1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "6") (term "1,0,0,0,0,1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "4") (term "1,0,1,0,1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "4") (term "0,0,0,0,0") (ifseqformula "5"))
                           (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "152"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "144"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "122"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "elementOfSingleton" (formula "5") (term "0,0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "6") (term "0,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEqReverse" (formula "4") (term "1,2,0") (ifseqformula "5"))
                           (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "5"))
                           (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "5"))
                           (rule "applyEqReverse" (formula "6") (term "1,0,1,0,1,0,0") (ifseqformula "5"))
                           (rule "applyEqReverse" (formula "6") (term "1,0,1,0,0,1,0,0") (ifseqformula "5"))
                           (rule "applyEqReverse" (formula "6") (term "1,1,0") (ifseqformula "5"))
                           (rule "applyEqReverse" (formula "4") (term "1,0,1,0,1,0,0") (ifseqformula "5"))
                           (rule "applyEqReverse" (formula "4") (term "1,0,0,0,1,0,0") (ifseqformula "5"))
                           (rule "applyEqReverse" (formula "6") (term "1,0,0,0,0,1,0,0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "224"))
                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "53")))
                           (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "121"))
                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "224")) (ifInst ""  (formula "53")))
                           (rule "replace_known_left" (formula "5") (term "0,0,0,1,0,0") (ifseqformula "53"))
                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "224")))
                           (rule "applyEqReverse" (formula "253") (term "1,1,1") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "eqSymm" (formula "252") (term "1,1"))
                           (rule "elementOfSingleton" (formula "4") (term "0,0"))
                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "223")))
                           (rule "applyEqReverse" (formula "252") (term "0,1,1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "inEqSimp_exactShadow3" (formula "170") (ifseqformula "7"))
                           (rule "mul_literals" (formula "170") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "170"))
                           (rule "mul_literals" (formula "170") (term "1"))
                           (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_5"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "142"))
                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "217")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "120"))
                           (rule "ifthenelse_negated" (formula "3") (term "0"))
                           (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_5"))
                           (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "143"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "218")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "121"))
                           (rule "ifthenelse_negated" (formula "2") (term "0"))
                           (rule "pullOutSelect" (formula "4") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_6"))
                           (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "122"))
                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "219")))
                           (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "219")))
                           (rule "ifthenelse_negated" (formula "4") (term "0"))
                           (rule "applyEq" (formula "4") (term "0") (ifseqformula "31"))
                           (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_6"))
                           (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "122"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "219")))
                           (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "219")))
                           (rule "ifthenelse_negated" (formula "2") (term "0"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "38"))
                           (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "inEqSimp_and_subsumption3" (formula "99") (term "0,0,0"))
                           (rule "leq_literals" (formula "99") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "99"))
                           (rule "inEqSimp_and_subsumption3" (formula "100") (term "0,0,0"))
                           (rule "leq_literals" (formula "100") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "100"))
                           (rule "inEqSimp_and_subsumption3" (formula "69") (term "0,0,0"))
                           (rule "leq_literals" (formula "69") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "69"))
                           (rule "inEqSimp_and_subsumption3" (formula "70") (term "0,0,0"))
                           (rule "leq_literals" (formula "70") (term "0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "70"))
                           (rule "nnf_imp2or" (formula "102") (term "0"))
                           (rule "nnf_imp2or" (formula "119") (term "0"))
                           (rule "nnf_imp2or" (formula "107") (term "0"))
                           (rule "nnf_ex2all" (formula "211"))
                           (rule "nnf_imp2or" (formula "110") (term "0"))
                           (rule "nnf_imp2or" (formula "91") (term "1,0"))
                           (rule "nnf_imp2or" (formula "81") (term "0"))
                           (rule "nnf_imp2or" (formula "74") (term "0"))
                           (rule "nnf_imp2or" (formula "79") (term "0"))
                           (rule "nnf_imp2or" (formula "100") (term "0"))
                           (rule "nnf_imp2or" (formula "101") (term "0"))
                           (rule "nnf_imp2or" (formula "70") (term "0"))
                           (rule "nnf_imp2or" (formula "71") (term "0"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                           (rule "nnf_imp2or" (formula "91") (term "0"))
                           (rule "nnf_notAnd" (formula "103") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "103") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "103") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "103") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "103") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "103") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "103") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "103") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "103") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "103") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "103") (term "1,0,0"))
                           (rule "times_zero_1" (formula "103") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "103") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "103") (term "1,0,0"))
                           (rule "mul_literals" (formula "103") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "120") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "120") (term "1,0,0"))
                           (rule "times_zero_1" (formula "120") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "120") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "120") (term "1,0,0"))
                           (rule "mul_literals" (formula "120") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "120") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "120") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "120") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "120") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "120") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "120") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "120") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "120") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "120") (term "1,0,0,0"))
                           (rule "nnf_imp2or" (formula "120") (term "1,0"))
                           (rule "nnf_notAnd" (formula "108") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "108") (term "1,0,0"))
                           (rule "mul_literals" (formula "108") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "108") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "108") (term "1,0,0"))
                           (rule "mul_literals" (formula "108") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "108") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "108") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "108") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "108") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "108") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "108") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "108") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "108") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "108") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "110") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "110") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "110") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "110") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "110") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "110") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "110") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "110") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "110") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "110") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "110") (term "1,0,0"))
                           (rule "times_zero_1" (formula "110") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "110") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "110") (term "1,0,0"))
                           (rule "mul_literals" (formula "110") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "81") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "81") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "81") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "81") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "81") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "81") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "81") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "81") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "81") (term "1,0,0"))
                           (rule "mul_literals" (formula "81") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "81") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0"))
                           (rule "mul_literals" (formula "81") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "74") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "74") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "74") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "74") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "74") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "74") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "74") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "74") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "74") (term "1,0,0"))
                           (rule "mul_literals" (formula "74") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "74") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0"))
                           (rule "mul_literals" (formula "74") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "79") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "79") (term "1,0,0"))
                           (rule "times_zero_1" (formula "79") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "79") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0"))
                           (rule "mul_literals" (formula "79") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "79") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "79") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "79") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "79") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "79") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "79") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "79") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "100") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "100") (term "1,0,0"))
                           (rule "mul_literals" (formula "100") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "100") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "100") (term "1,0,0"))
                           (rule "mul_literals" (formula "100") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "101") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "101") (term "1,0,0"))
                           (rule "mul_literals" (formula "101") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "101") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "101") (term "1,0,0"))
                           (rule "mul_literals" (formula "101") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "70") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "70") (term "1,0,0"))
                           (rule "mul_literals" (formula "70") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "70") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "1,0,0"))
                           (rule "mul_literals" (formula "70") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "71") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "71") (term "1,0,0"))
                           (rule "mul_literals" (formula "71") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "71") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "71") (term "1,0,0"))
                           (rule "mul_literals" (formula "71") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "91") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "91") (term "1,0,0"))
                           (rule "mul_literals" (formula "91") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "91") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "91") (term "1,0,0"))
                           (rule "mul_literals" (formula "91") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "91") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "91") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "91") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "91") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "91") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "91") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "91") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "91") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "91") (term "1,0,0,0"))
                           (rule "seqGetAlphaCast" (formula "182") (term "0"))
                           (rule "castedGetAny" (formula "182") (term "0"))
                            (builtin "One Step Simplification" (formula "182"))
                           (rule "true_left" (formula "182"))
                           (rule "seqGetAlphaCast" (formula "172") (term "0"))
                           (rule "castedGetAny" (formula "172") (term "0"))
                            (builtin "One Step Simplification" (formula "172"))
                           (rule "true_left" (formula "172"))
                           (rule "seqGetAlphaCast" (formula "165") (term "0"))
                           (rule "castedGetAny" (formula "165") (term "0"))
                            (builtin "One Step Simplification" (formula "165"))
                           (rule "true_left" (formula "165"))
                           (rule "seqGetAlphaCast" (formula "168") (term "0"))
                           (rule "castedGetAny" (formula "168") (term "0"))
                            (builtin "One Step Simplification" (formula "168"))
                           (rule "true_left" (formula "168"))
                           (rule "seqGetAlphaCast" (formula "177") (term "0"))
                           (rule "castedGetAny" (formula "177") (term "0"))
                            (builtin "One Step Simplification" (formula "177"))
                           (rule "true_left" (formula "177"))
                           (rule "ifthenelse_split" (formula "31") (term "0"))
                           (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE TRUE"
                              (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "32"))
                              (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "32"))
                              (rule "hideAuxiliaryEq" (formula "32"))
                              (rule "replace_known_left" (formula "38") (term "0,0") (ifseqformula "31"))
                               (builtin "One Step Simplification" (formula "38"))
                              (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "38"))
                              (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "38"))
                              (rule "hideAuxiliaryEq" (formula "38"))
                              (rule "replace_known_left" (formula "35") (term "1,0,0") (ifseqformula "31"))
                               (builtin "One Step Simplification" (formula "35"))
                              (rule "applyEqReverse" (formula "215") (term "0") (ifseqformula "35"))
                              (rule "hideAuxiliaryEq" (formula "35"))
                              (rule "replace_known_left" (formula "40") (term "1,0,0") (ifseqformula "31"))
                               (builtin "One Step Simplification" (formula "40"))
                              (rule "applyEqReverse" (formula "215") (term "0") (ifseqformula "40"))
                              (rule "hideAuxiliaryEq" (formula "40"))
                              (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "31"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqReverse" (formula "251") (term "0,1,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "replace_known_left" (formula "32") (term "1,0,0") (ifseqformula "30"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "applyEqReverse" (formula "212") (term "0") (ifseqformula "32"))
                              (rule "hideAuxiliaryEq" (formula "32"))
                              (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "30"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEqReverse" (formula "249") (term "0,0,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "replace_known_left" (formula "26") (term "1,0,0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "applyEqReverse" (formula "209") (term "0") (ifseqformula "26"))
                              (rule "hideAuxiliaryEq" (formula "26"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "28"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "247") (term "0,1,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "27"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "246") (term "0,0,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_left" (formula "22") (term "1,0,0") (ifseqformula "26"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "applyEqReverse" (formula "206") (term "0") (ifseqformula "22"))
                              (rule "hideAuxiliaryEq" (formula "22"))
                              (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "25"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "applyEqReverse" (formula "205") (term "0") (ifseqformula "20"))
                              (rule "hideAuxiliaryEq" (formula "20"))
                              (rule "replace_known_left" (formula "30") (term "1,0,0") (ifseqformula "24"))
                               (builtin "One Step Simplification" (formula "30"))
                              (rule "applyEqReverse" (formula "206") (term "0") (ifseqformula "30"))
                              (rule "hideAuxiliaryEq" (formula "30"))
                              (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "205"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "203"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "204"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "replace_known_left" (formula "141") (term "1") (ifseqformula "24"))
                               (builtin "One Step Simplification" (formula "141"))
                              (rule "true_left" (formula "141"))
                              (rule "nnf_notAnd" (formula "88") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "88") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "88") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "88") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "88") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "88") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "88") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "88") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "88") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "88") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "88") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "88") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "88") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "88") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "89") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "89") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "89") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "89") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "89") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "89") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "89") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "89") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "89") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "89") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "89") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "58") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "58") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "58") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "58") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "58") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "58") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "58") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "58") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "59") (term "0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "59") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "59") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "59") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "59") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "59") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "59") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "59") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "59") (term "1,0,0,0,0"))
                              (rule "lenNonNegative" (formula "64") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "64"))
                              (rule "lenNonNegative" (formula "68") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "68"))
                              (rule "charLiteral_to_int" (formula "6") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "161"))
                              (rule "qeq_literals" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "closeFalse" (formula "6"))
                           )
                           (branch " resultAtPost_103_A.<created>@heapAtPre_A«anonHeapFunction» = TRUE FALSE"
                              (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "31"))
                              (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "31"))
                              (rule "hideAuxiliaryEq" (formula "31"))
                              (rule "replace_known_right" (formula "39") (term "1,0,0") (ifseqformula "183"))
                               (builtin "One Step Simplification" (formula "39"))
                              (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "183"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "183"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "replace_known_right" (formula "26") (term "1,0,0") (ifseqformula "183"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "replace_known_right" (formula "32") (term "1,0,0") (ifseqformula "183"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "replace_known_right" (formula "37") (term "0,0") (ifseqformula "183"))
                               (builtin "One Step Simplification" (formula "37"))
                              (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "37"))
                              (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "37"))
                              (rule "hideAuxiliaryEq" (formula "37"))
                              (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "182"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "replace_known_right" (formula "34") (term "1,0,0") (ifseqformula "182"))
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "replace_known_right" (formula "40") (term "1,0,0") (ifseqformula "182"))
                               (builtin "One Step Simplification" (formula "40"))
                              (rule "replace_known_right" (formula "28") (term "1,0,0") (ifseqformula "182"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "182"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "182"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "applyEqReverse" (formula "26") (term "1,0") (ifseqformula "24"))
                              (rule "hideAuxiliaryEq" (formula "24"))
                              (rule "replace_known_right" (formula "150") (term "1") (ifseqformula "181"))
                               (builtin "One Step Simplification" (formula "150"))
                              (rule "applyEq" (formula "31") (term "0") (ifseqformula "5"))
                              (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "31"))
                              (rule "hideAuxiliaryEq" (formula "31"))
                              (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "36"))
                              (rule "hideAuxiliaryEq" (formula "36"))
                              (rule "nnf_notAnd" (formula "95") (term "0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "95") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "95") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "95") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "95") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "95") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "95") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "95") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "95") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "95") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "95") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "95") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "95") (term "1,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "96") (term "0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "96") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "96") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "96") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "96") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "96") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "96") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "96") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "96") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "96") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "96") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "96") (term "1,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "65") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "65") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "65") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "65") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "65") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "65") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "65") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "65") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "65") (term "1,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "66") (term "0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "66") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "66") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "66") (term "1,1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "66") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "66") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0,0"))
                              (rule "lenNonNegative" (formula "71") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "71"))
                              (rule "lenNonNegative" (formula "75") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "75"))
                              (rule "charLiteral_to_int" (formula "10") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "169"))
                              (rule "qeq_literals" (formula "10") (term "0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "closeFalse" (formula "10"))
                           )
                        )
                     )
                     (branch
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "199") (ifseqformula "151"))
                        (rule "orRight" (formula "199"))
                        (rule "eqSymm" (formula "244") (term "0,1"))
                        (rule "eqSymm" (formula "244") (term "0,0"))
                        (rule "eqSymm" (formula "244") (term "1,0"))
                        (rule "eqSymm" (formula "244") (term "1,1"))
                        (rule "replace_known_right" (formula "160") (term "1") (ifseqformula "199"))
                         (builtin "One Step Simplification" (formula "160") (ifInst ""  (formula "200")))
                        (rule "closeFalse" (formula "160"))
                     )
                  )
               )
               (branch "Exceptional Post (get)"
                   (builtin "One Step Simplification" (formula "155"))
                   (builtin "One Step Simplification" (formula "183"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "155") (term "1,0") (ifseqformula "146"))
                  (rule "andLeft" (formula "155"))
                  (rule "andLeft" (formula "156"))
                  (rule "andLeft" (formula "155"))
                  (rule "andLeft" (formula "157"))
                  (rule "notLeft" (formula "155"))
                  (rule "close" (formula "159") (ifseqformula "158"))
               )
               (branch "Pre (get)"
                   (builtin "One Step Simplification" (formula "182") (ifInst ""  (formula "166")) (ifInst ""  (formula "166")))
                  (rule "andRight" (formula "182"))
                  (branch "Case 1"
                     (rule "andRight" (formula "182"))
                     (branch "Case 1"
                        (rule "instEx" (formula "105") (term "1,0") (ifseqformula "182") (userinteraction))
                        (rule "eqSymm" (formula "227") (term "0,0"))
                        (rule "eqSymm" (formula "227") (term "1,0"))
                        (rule "eqSymm" (formula "227") (term "0,1"))
                        (rule "eqSymm" (formula "227") (term "1,1"))
                        (rule "castedGetAny" (formula "183") (term "0,1,0"))
                        (rule "castedGetAny" (formula "155") (term "0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "89") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "80") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "80") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "80") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "121"))
                        (rule "polySimp_mulComm0" (formula "121") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "121") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "115"))
                        (rule "polySimp_mulComm0" (formula "115") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "115") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "106") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "106") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "88") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "66"))
                        (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "66") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "94"))
                        (rule "polySimp_mulComm0" (formula "94") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "94") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "96") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "150"))
                        (rule "polySimp_mulComm0" (formula "150") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "150") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "100"))
                        (rule "polySimp_mulComm0" (formula "100") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "100") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "104"))
                        (rule "polySimp_mulComm0" (formula "104") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "104") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "106") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "106") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "106") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "183") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "183") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "73"))
                        (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "73") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "106") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "106") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "112"))
                        (rule "polySimp_mulComm0" (formula "112") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "112") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "155") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "155") (term "1,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "155") (term "0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_gtToGeq" (formula "136"))
                        (rule "mul_literals" (formula "136") (term "1,0,0"))
                        (rule "add_literals" (formula "136") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "135"))
                        (rule "polySimp_mulComm0" (formula "135") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "135") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "77"))
                        (rule "polySimp_mulComm0" (formula "77") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "77") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "153"))
                        (rule "polySimp_mulComm0" (formula "153") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "153") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "126"))
                        (rule "polySimp_mulComm0" (formula "126") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "91") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "126") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "183") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "155") (term "0,0"))
                        (rule "replace_known_left" (formula "155") (term "0,0") (ifseqformula "102"))
                         (builtin "One Step Simplification" (formula "155"))
                        (rule "applyEq" (formula "132") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "132") (term "3") (ifseqformula "1"))
                        (rule "applyEq" (formula "63") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "127") (term "1,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "1,2,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "63") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "21") (term "1,0,1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "24") (term "1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "10") (term "1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "26") (term "1,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "215") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "74") (term "1,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "113") (term "1,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "1,1,0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "139") (term "1,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "204") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "19") (term "1,2,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "209") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "30") (term "1,0,1,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "78") (term "1,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "1,0,1,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "141") (term "4") (ifseqformula "140"))
                        (rule "applyEq" (formula "25") (term "1,1,0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "211") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "124") (term "5") (ifseqformula "118"))
                        (rule "applyEq" (formula "23") (term "1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "33") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "14") (term "1,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "113") (term "1,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "45") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "14") (term "1,0,1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "70") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "23") (term "1,2,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "18") (term "1,1,0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "23") (term "1,0,1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "29") (term "1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "206") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "30") (term "1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "68") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "227") (term "0,1,1,0") (ifseqformula "4"))
                        (rule "applyEq" (formula "10") (term "1,1,0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "110") (term "3") (ifseqformula "109"))
                        (rule "applyEq" (formula "11") (term "1,1,0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "110") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "132") (term "4") (ifseqformula "131"))
                        (rule "applyEq" (formula "112") (term "1,1,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "227") (term "0,1,0,0") (ifseqformula "4"))
                        (rule "applyEq" (formula "21") (term "1,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "213") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "27") (term "1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "27") (term "1,1,0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "116") (term "1,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "73") (term "1,1,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "124") (term "1,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "192") (term "0") (ifseqformula "62"))
                        (rule "applyEq" (formula "36") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "24") (term "1,1,0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "19") (term "1,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "66") (term "1,1,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "209") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "21") (term "1,2,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "67") (term "1,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "28") (term "1,0,1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "14") (term "1,2,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "139") (term "1,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "225") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "13") (term "1,1,0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "22") (term "1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "115") (term "1,1,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "17") (term "1,1,0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "29") (term "1,1,0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "20") (term "1,1,0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "26") (term "1,2,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "67") (term "1,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "213") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "69") (term "1,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "110") (term "2") (ifseqformula "1"))
                        (rule "applyEq" (formula "30") (term "1,0,1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "22") (term "1,1,0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "116") (term "1,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "139") (term "1,0,1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "16") (term "1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "68") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "13") (term "1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "30") (term "1,2,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "70") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "207") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "28") (term "1,0,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "37") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "65") (term "1,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "28") (term "1,2,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "12") (term "1,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "206") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "122") (term "1,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "216") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "72") (term "1,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "141") (term "3") (ifseqformula "2"))
                        (rule "applyEq" (formula "57") (term "0") (ifseqformula "58"))
                        (rule "applyEq" (formula "16") (term "1,0,1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "138") (term "1,0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "214") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "78") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "203") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "34") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "73") (term "1,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "23") (term "1,0,1,0,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "79") (term "1,1,0,1,0") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "225") (term "0,1,1,1") (ifseqformula "4"))
                        (rule "applyEq" (formula "189") (term "0") (ifseqformula "2"))
                        (rule "applyEqRigid" (formula "225") (term "0,1,1,1,1") (ifseqformula "4"))
                        (rule "applyEq" (formula "210") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "59") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "57"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "88") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "88") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "79") (term "1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "120"))
                        (rule "polySimp_mulLiterals" (formula "120") (term "0"))
                        (rule "polySimp_elimOne" (formula "120") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "105") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "105") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "87") (term "1,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "87") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "87") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "79") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "93"))
                        (rule "polySimp_mulLiterals" (formula "93") (term "0"))
                        (rule "polySimp_elimOne" (formula "93") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "95") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "149"))
                        (rule "polySimp_mulLiterals" (formula "149") (term "0"))
                        (rule "polySimp_elimOne" (formula "149") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "99"))
                        (rule "polySimp_mulLiterals" (formula "99") (term "0"))
                        (rule "polySimp_elimOne" (formula "99") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "103"))
                        (rule "polySimp_mulLiterals" (formula "103") (term "0"))
                        (rule "polySimp_elimOne" (formula "103") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "105") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "105") (term "1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "182") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "182") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "182") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "182") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "182") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "182") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "105") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "105") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "105") (term "1,1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "105") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "105") (term "1,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "79") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "79") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "135"))
                        (rule "mul_literals" (formula "135") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "134"))
                        (rule "polySimp_mulLiterals" (formula "134") (term "0"))
                        (rule "polySimp_elimOne" (formula "134") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "76"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                        (rule "polySimp_elimOne" (formula "76") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "152"))
                        (rule "polySimp_mulLiterals" (formula "152") (term "0"))
                        (rule "polySimp_elimOne" (formula "152") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "96") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "96") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "96") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "90") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "90") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "90") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "90") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "125"))
                        (rule "polySimp_mulLiterals" (formula "125") (term "0"))
                        (rule "polySimp_elimOne" (formula "125") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "154") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "154") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "154") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "111"))
                        (rule "polySimp_mulLiterals" (formula "111") (term "0"))
                        (rule "polySimp_elimOne" (formula "111") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                        (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                        (rule "polySimp_elimOne" (formula "72") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "65"))
                        (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                        (rule "polySimp_elimOne" (formula "65") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "114"))
                        (rule "polySimp_mulLiterals" (formula "114") (term "0"))
                        (rule "polySimp_elimOne" (formula "114") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,0,0"))
                        (rule "pullOutSelect" (formula "225") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_3"))
                        (rule "eqSymm" (formula "226") (term "0,0"))
                        (rule "pullOutSelect" (formula "226") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_3"))
                        (rule "eqSymm" (formula "227") (term "1,0"))
                        (rule "pullOutSelect" (formula "227") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_0"))
                        (rule "eqSymm" (formula "228") (term "1,1"))
                        (rule "pullOutSelect" (formula "185") (term "0,0,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                        (rule "applyEq" (formula "186") (term "0,1,1,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "158") (term "0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "158") (term "0,0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "149"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "188")) (ifInst ""  (formula "87")))
                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "188")))
                        (rule "applyEqReverse" (formula "186") (term "0,0,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "158") (term "0,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "158") (term "0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "186") (term "0,1,1,1,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_left" (formula "157") (term "1") (ifseqformula "107"))
                         (builtin "One Step Simplification" (formula "157") (ifInst ""  (formula "106")))
                        (rule "closeTrue" (formula "157"))
                     )
                     (branch "Case 2"
                        (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "182") (inst "i=i") (inst "i_0=i_0") (userinteraction))
                        (rule "andRight" (formula "182"))
                        (branch "Case 1"
                           (rule "andRight" (formula "182"))
                           (branch
                              (rule "eqSymm" (formula "226") (term "0,0"))
                              (rule "eqSymm" (formula "226") (term "1,1"))
                              (rule "eqSymm" (formula "226") (term "1,0"))
                              (rule "eqSymm" (formula "182"))
                              (rule "eqSymm" (formula "226") (term "0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "153"))
                              (rule "polySimp_mulComm0" (formula "153") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "153") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "80") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "89") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "80") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "80") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "80") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "100"))
                              (rule "polySimp_mulComm0" (formula "100") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "100") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "88") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "121"))
                              (rule "polySimp_mulComm0" (formula "121") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "121") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "115"))
                              (rule "polySimp_mulComm0" (formula "115") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "115") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "106") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "106") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "135"))
                              (rule "polySimp_mulComm0" (formula "135") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "135") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "106") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "106") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "91") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "112"))
                              (rule "polySimp_mulComm0" (formula "112") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "112") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "73"))
                              (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "73") (term "0"))
                              (rule "inEqSimp_gtToGeq" (formula "136"))
                              (rule "mul_literals" (formula "136") (term "1,0,0"))
                              (rule "add_literals" (formula "136") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "150"))
                              (rule "polySimp_mulComm0" (formula "150") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "150") (term "0"))
                              (rule "inEqSimp_gtToGeq" (formula "106") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "106") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "106") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "126"))
                              (rule "polySimp_mulComm0" (formula "126") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "126") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "94"))
                              (rule "polySimp_mulComm0" (formula "94") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "94") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "66"))
                              (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "66") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "77"))
                              (rule "polySimp_mulComm0" (formula "77") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "77") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "104"))
                              (rule "polySimp_mulComm0" (formula "104") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "104") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "96") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,0"))
                              (rule "applyEq" (formula "23") (term "1,0,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "110") (term "2") (ifseqformula "1"))
                              (rule "applyEq" (formula "110") (term "3") (ifseqformula "109"))
                              (rule "applyEq" (formula "14") (term "1,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "10") (term "1,1,0,1") (ifseqformula "2"))
                              (rule "applyEq" (formula "139") (term "1,0,1") (ifseqformula "2"))
                              (rule "applyEq" (formula "34") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "19") (term "1,2,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "65") (term "1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "68") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "63") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "30") (term "1,0,1,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "37") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "14") (term "1,2,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "2"))
                              (rule "applyEqRigid" (formula "226") (term "0,1,1,1,1") (ifseqformula "4"))
                              (rule "applyEqRigid" (formula "226") (term "0,1,0,0") (ifseqformula "4"))
                              (rule "applyEq" (formula "132") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "21") (term "1,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "16") (term "1,0,1,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "113") (term "1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "213") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "141") (term "4") (ifseqformula "140"))
                              (rule "applyEq" (formula "122") (term "1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "214") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "68") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "191") (term "0") (ifseqformula "62"))
                              (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "2"))
                              (rule "applyEqRigid" (formula "225") (term "0,1,1,1") (ifseqformula "4"))
                              (rule "applyEq" (formula "139") (term "1,0,1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "2"))
                              (rule "applyEqRigid" (formula "225") (term "0,1,1,0") (ifseqformula "4"))
                              (rule "applyEq" (formula "80") (term "1,1,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "79") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "29") (term "1,1,0,1") (ifseqformula "2"))
                              (rule "applyEq" (formula "22") (term "1,1,0,1") (ifseqformula "2"))
                              (rule "applyEq" (formula "70") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "207") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "30") (term "1,0,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "209") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "18") (term "1,1,0,1") (ifseqformula "2"))
                              (rule "applyEq" (formula "73") (term "1,1,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "112") (term "1,1,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "16") (term "1,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "132") (term "4") (ifseqformula "131"))
                              (rule "applyEq" (formula "210") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "63") (term "1,1,0,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "15") (term "1,1,0,1") (ifseqformula "2"))
                              (rule "applyEq" (formula "72") (term "1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "202") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "33") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "17") (term "1,1,0,1") (ifseqformula "2"))
                              (rule "applyEq" (formula "224") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "69") (term "1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "36") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "115") (term "1,1,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "26") (term "1,2,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "57") (term "0") (ifseqformula "58"))
                              (rule "applyEq" (formula "24") (term "1,1,0,1") (ifseqformula "2"))
                              (rule "applyEq" (formula "66") (term "1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "23") (term "1,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "210") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "65") (term "1,1,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "24") (term "1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "140") (term "3") (ifseqformula "2"))
                              (rule "applyEq" (formula "73") (term "1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "19") (term "1,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "11") (term "1,1,0,1") (ifseqformula "2"))
                              (rule "applyEq" (formula "30") (term "1,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "188") (term "0") (ifseqformula "2"))
                              (rule "applyEq" (formula "30") (term "1,2,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "23") (term "1,2,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "21") (term "1,2,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "23") (term "1,0,1,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "25") (term "1,1,0,1") (ifseqformula "2"))
                              (rule "applyEq" (formula "14") (term "1,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "45") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "20") (term "1,1,0,1") (ifseqformula "2"))
                              (rule "applyEq" (formula "69") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "16") (term "1,0,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "28") (term "1,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "27") (term "1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "66") (term "1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "16") (term "1,2,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "205") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "77") (term "1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "123") (term "5") (ifseqformula "117"))
                              (rule "applyEq" (formula "27") (term "1,1,0,1") (ifseqformula "2"))
                              (rule "applyEq" (formula "13") (term "1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "123") (term "1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "28") (term "1,2,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "204") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "214") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "10") (term "1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "115") (term "1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "112") (term "1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "22") (term "1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "115") (term "1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "13") (term "1,1,0,1") (ifseqformula "2"))
                              (rule "applyEq" (formula "26") (term "1,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "138") (term "1,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "138") (term "1,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "213") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "131") (term "3") (ifseqformula "1"))
                              (rule "applyEq" (formula "126") (term "1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "73") (term "1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "28") (term "1,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "29") (term "1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "12") (term "1,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "202") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "109") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "207") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "21") (term "1,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "203") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "59") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "57"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "152"))
                              (rule "polySimp_mulLiterals" (formula "152") (term "0"))
                              (rule "polySimp_elimOne" (formula "152") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "79") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "79") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "88") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "88") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "79") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "99"))
                              (rule "polySimp_mulLiterals" (formula "99") (term "0"))
                              (rule "polySimp_elimOne" (formula "99") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "87") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "87") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "87") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "120"))
                              (rule "polySimp_mulLiterals" (formula "120") (term "0"))
                              (rule "polySimp_elimOne" (formula "120") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "105") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "105") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "105") (term "1,1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "105") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "105") (term "1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "134"))
                              (rule "polySimp_mulLiterals" (formula "134") (term "0"))
                              (rule "polySimp_elimOne" (formula "134") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "79") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "79") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "96") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "96") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "96") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "105") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "105") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "90") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "90") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "90") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "90") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "90") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "135"))
                              (rule "mul_literals" (formula "135") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "149"))
                              (rule "polySimp_mulLiterals" (formula "149") (term "0"))
                              (rule "polySimp_elimOne" (formula "149") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "105") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "105") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "125"))
                              (rule "polySimp_mulLiterals" (formula "125") (term "0"))
                              (rule "polySimp_elimOne" (formula "125") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "93"))
                              (rule "polySimp_mulLiterals" (formula "93") (term "0"))
                              (rule "polySimp_elimOne" (formula "93") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "76"))
                              (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                              (rule "polySimp_elimOne" (formula "76") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "103"))
                              (rule "polySimp_mulLiterals" (formula "103") (term "0"))
                              (rule "polySimp_elimOne" (formula "103") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "95") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                              (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                              (rule "polySimp_elimOne" (formula "72") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "111"))
                              (rule "polySimp_mulLiterals" (formula "111") (term "0"))
                              (rule "polySimp_elimOne" (formula "111") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "114"))
                              (rule "polySimp_mulLiterals" (formula "114") (term "0"))
                              (rule "polySimp_elimOne" (formula "114") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "65"))
                              (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                              (rule "polySimp_elimOne" (formula "65") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,0,0"))
                              (rule "pullOutSelect" (formula "224") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_3"))
                              (rule "eqSymm" (formula "225") (term "0,0"))
                              (rule "pullOutSelect" (formula "225") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_0"))
                              (rule "eqSymm" (formula "226") (term "1,1"))
                              (rule "pullOutSelect" (formula "226") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_3"))
                              (rule "eqSymm" (formula "227") (term "1,0"))
                              (rule "pullOutSelect" (formula "184") (term "0,1") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "149"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "187")) (ifInst ""  (formula "87")))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "187")))
                              (rule "applyEqReverse" (formula "185") (term "0,1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "184") (term "0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "149"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "187")) (ifInst ""  (formula "87")))
                              (rule "eqSymm" (formula "185"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "187")))
                              (rule "applyEqReverse" (formula "185") (term "0,1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "eqSymm" (formula "184"))
                              (rule "close" (formula "184") (ifseqformula "89"))
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "182") (inst "sk=i_0_0") (userinteraction))
                              (rule "instAll" (formula "182") (term "1,0,0,0") (ifseqformula "89") (userinteraction))
                              (rule "instAll" (formula "183") (term "1,0,0,0") (ifseqformula "89") (userinteraction))
                              (rule "expand_inInt" (formula "184") (term "1,0"))
                              (rule "replace_int_MAX" (formula "184") (term "1,0,1,0"))
                              (rule "replace_int_MIN" (formula "184") (term "0,1,1,0"))
                              (rule "impRight" (formula "184"))
                              (rule "notRight" (formula "185"))
                              (rule "andLeft" (formula "2"))
                              (rule "andLeft" (formula "3"))
                              (rule "andLeft" (formula "2"))
                              (rule "eqSymm" (formula "232") (term "1,0"))
                              (rule "eqSymm" (formula "232") (term "1,1"))
                              (rule "eqSymm" (formula "232") (term "0,0"))
                              (rule "eqSymm" (formula "232") (term "0,1"))
                              (rule "replace_known_left" (formula "7") (term "1,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "replace_known_left" (formula "6") (term "1,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                              (rule "inEqSimp_gtToGeq" (formula "143"))
                              (rule "mul_literals" (formula "143") (term "1,0,0"))
                              (rule "add_literals" (formula "143") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "122"))
                              (rule "polySimp_mulComm0" (formula "122") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "122") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "104") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "95") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "111"))
                              (rule "polySimp_mulComm0" (formula "111") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "111") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "157"))
                              (rule "polySimp_mulComm0" (formula "157") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "157") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "101"))
                              (rule "polySimp_mulComm0" (formula "101") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "101") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "70") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "96") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "113") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "113") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "113") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "113") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "113") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_gtToGeq" (formula "87") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "87") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "87") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "103") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "103") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "128"))
                              (rule "polySimp_mulComm0" (formula "128") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "128") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "75") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "80"))
                              (rule "polySimp_mulComm0" (formula "80") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "80") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "87") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "87") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "98") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "160"))
                              (rule "polySimp_mulComm0" (formula "160") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "160") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "84"))
                              (rule "polySimp_mulComm0" (formula "84") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "84") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "77") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "113") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "113") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "119"))
                              (rule "polySimp_mulComm0" (formula "119") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "107"))
                              (rule "polySimp_mulComm0" (formula "107") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "73"))
                              (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "142"))
                              (rule "polySimp_mulComm0" (formula "142") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "119") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "133"))
                              (rule "polySimp_mulComm0" (formula "133") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "107") (term "0"))
                              (rule "polySimp_addComm1" (formula "73") (term "0"))
                              (rule "polySimp_addComm1" (formula "142") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "133") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "5"))
                              (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "inEqSimp_commuteLeq" (formula "2"))
                              (rule "replace_known_left" (formula "7") (term "1,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "replace_known_left" (formula "6") (term "1,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "applyEq" (formula "212") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "23") (term "1,0,1,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "213") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "21") (term "1,0,1,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "119") (term "1,1,0,0,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "197") (term "0") (ifseqformula "69"))
                              (rule "applyEq" (formula "220") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "21") (term "1,0,0,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "28") (term "1,0,1,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "117") (term "0") (ifseqformula "8"))
                              (rule "applyEq" (formula "70") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "139") (term "3") (ifseqformula "8"))
                              (rule "applyEq" (formula "36") (term "1,1,0,1") (ifseqformula "9"))
                              (rule "applyEq" (formula "24") (term "1,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "70") (term "1,1,0,0,0,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "139") (term "4") (ifseqformula "138"))
                              (rule "applyEq" (formula "72") (term "1,1,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "30") (term "1,0,0,0,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "34") (term "1,1,0,1") (ifseqformula "9"))
                              (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "219") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "27") (term "1,1,0,1") (ifseqformula "9"))
                              (rule "applyEq" (formula "27") (term "1,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "120") (term "1,1") (ifseqformula "8"))
                              (rule "applyEq" (formula "148") (term "4") (ifseqformula "147"))
                              (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "19") (term "1,0,0,0") (ifseqformula "9"))
                              (rule "applyEqRigid" (formula "231") (term "0,1,1,1") (ifseqformula "11"))
                              (rule "applyEq" (formula "139") (term "0") (ifseqformula "8"))
                              (rule "applyEq" (formula "35") (term "1,0,0,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "52") (term "1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "35") (term "1,0,1,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "74") (term "1,1,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "74") (term "1,1") (ifseqformula "8"))
                              (rule "applyEq" (formula "146") (term "1,0,1") (ifseqformula "9"))
                              (rule "applyEq" (formula "208") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "31") (term "1,1,0,1") (ifseqformula "9"))
                              (rule "applyEq" (formula "210") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "22") (term "1,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "34") (term "1,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "23") (term "1,0,1,0,0,0") (ifseqformula "9"))
                              (rule "applyEqRigid" (formula "231") (term "0,1,1,1,1") (ifseqformula "11"))
                              (rule "applyEq" (formula "146") (term "1,0,1,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "122") (term "1,1,0,0,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "21") (term "1,2,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "23") (term "1,2,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "64") (term "0") (ifseqformula "65"))
                              (rule "applyEq" (formula "217") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "19") (term "1,2,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "133") (term "1,1") (ifseqformula "8"))
                              (rule "applyEq" (formula "116") (term "2") (ifseqformula "8"))
                              (rule "applyEq" (formula "76") (term "1,1,0,0,0,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "75") (term "1,1,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "33") (term "1,1,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "17") (term "1,1,0,1") (ifseqformula "9"))
                              (rule "applyEq" (formula "50") (term "1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "33") (term "1,0,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "208") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "79") (term "1,1,0,0,1,0") (ifseqformula "8"))
                              (rule "applyEqRigid" (formula "230") (term "0,1,1,0") (ifseqformula "11"))
                              (rule "applyEq" (formula "30") (term "1,0,1,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "76") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "229") (term "0") (ifseqformula "8"))
                              (rule "applyEq" (formula "85") (term "1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "80") (term "1,1,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "25") (term "1,1,0,1") (ifseqformula "9"))
                              (rule "applyEq" (formula "33") (term "1,2,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "80") (term "1,1") (ifseqformula "8"))
                              (rule "applyEq" (formula "86") (term "1,1,0,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "220") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "37") (term "1,0,0,0,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "28") (term "1,0,0,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "26") (term "1,2,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "45") (term "1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "37") (term "1,2,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "145") (term "1,0,1,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "122") (term "1,1") (ifseqformula "8"))
                              (rule "applyEq" (formula "29") (term "1,1,0,1") (ifseqformula "9"))
                              (rule "applyEq" (formula "147") (term "3") (ifseqformula "9"))
                              (rule "applyEq" (formula "130") (term "5") (ifseqformula "124"))
                              (rule "applyEq" (formula "119") (term "1,1,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "74") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "23") (term "1,0,0,0,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "24") (term "1,1,0,1") (ifseqformula "9"))
                              (rule "applyEq" (formula "41") (term "1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "46") (term "1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "26") (term "1,0,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "215") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "212") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "37") (term "1,0,1,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "216") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "214") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "30") (term "1,2,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "20") (term "1,1,0,1") (ifseqformula "9"))
                              (rule "applyEq" (formula "18") (term "1,1,0,1") (ifseqformula "9"))
                              (rule "applyEq" (formula "130") (term "1,1") (ifseqformula "8"))
                              (rule "applyEq" (formula "32") (term "1,1,0,1") (ifseqformula "9"))
                              (rule "applyEq" (formula "36") (term "1,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "29") (term "1,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "194") (term "0") (ifseqformula "9"))
                              (rule "applyEq" (formula "116") (term "3") (ifseqformula "115"))
                              (rule "applyEq" (formula "72") (term "1,1,0,0,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "37") (term "1,0,1,0,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "230") (term "0,1,0,0") (ifseqformula "11"))
                              (rule "applyEq" (formula "84") (term "1,1") (ifseqformula "8"))
                              (rule "applyEq" (formula "30") (term "1,0,1,0,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "59") (term "0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "22") (term "1,1,0,1") (ifseqformula "9"))
                              (rule "applyEq" (formula "35") (term "1,2,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "145") (term "1,0,0,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "51") (term "1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "74") (term "1,1,0,0,0,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "122") (term "1,1,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "28") (term "1,2,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "47") (term "1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "128") (term "1,1") (ifseqformula "8"))
                              (rule "applyEq" (formula "213") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "78") (term "1,1,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "66") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "64"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "142"))
                              (rule "mul_literals" (formula "142") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "103") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "103") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "103") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "103") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "103") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "103") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "110"))
                              (rule "polySimp_mulLiterals" (formula "110") (term "0"))
                              (rule "polySimp_elimOne" (formula "110") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "156"))
                              (rule "polySimp_mulLiterals" (formula "156") (term "0"))
                              (rule "polySimp_elimOne" (formula "156") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "100"))
                              (rule "polySimp_mulLiterals" (formula "100") (term "0"))
                              (rule "polySimp_elimOne" (formula "100") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "95") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "112") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "112") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "112") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "112") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "112") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "112") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "112") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "86") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "102") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "102") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "102") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "102") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "102") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "102") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "127"))
                              (rule "polySimp_mulLiterals" (formula "127") (term "0"))
                              (rule "polySimp_elimOne" (formula "127") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "86") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "86") (term "1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "86") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "86") (term "1,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "86") (term "1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "86") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "86") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "97") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "97") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "97") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "97") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "159"))
                              (rule "polySimp_mulLiterals" (formula "159") (term "0"))
                              (rule "polySimp_elimOne" (formula "159") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "83"))
                              (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                              (rule "polySimp_elimOne" (formula "83") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "112") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "112") (term "1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "112") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "112") (term "1,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "112") (term "1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "106"))
                              (rule "polySimp_mulLiterals" (formula "106") (term "0"))
                              (rule "polySimp_elimOne" (formula "106") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "141"))
                              (rule "polySimp_mulLiterals" (formula "141") (term "0"))
                              (rule "polySimp_elimOne" (formula "141") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "132"))
                              (rule "polySimp_mulLiterals" (formula "132") (term "0"))
                              (rule "polySimp_elimOne" (formula "132") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "7") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "6") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "118"))
                              (rule "polySimp_mulLiterals" (formula "118") (term "0"))
                              (rule "polySimp_elimOne" (formula "118") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "121"))
                              (rule "polySimp_mulLiterals" (formula "121") (term "0"))
                              (rule "polySimp_elimOne" (formula "121") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "79"))
                              (rule "polySimp_mulLiterals" (formula "79") (term "0"))
                              (rule "polySimp_elimOne" (formula "79") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "76") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "76") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "74") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                              (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                              (rule "polySimp_elimOne" (formula "72") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                              (rule "leq_literals" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "pullOutSelect" (formula "229") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_3"))
                              (rule "eqSymm" (formula "230") (term "1,0"))
                              (rule "pullOutSelect" (formula "230") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_0"))
                              (rule "eqSymm" (formula "231") (term "1,1"))
                              (rule "pullOutSelect" (formula "231") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_3"))
                              (rule "eqSymm" (formula "232") (term "0,0"))
                              (rule "pullOutSelect" (formula "4") (term "0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_1"))
                              (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "4"))
                              (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "155"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "192")) (ifInst ""  (formula "93")))
                              (rule "elementOfSingleton" (formula "4") (term "0,0"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "192")))
                              (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "4"))
                              (rule "applyEqReverse" (formula "7") (term "0,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "6"))
                               (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "4")))
                              (rule "closeFalse" (formula "8"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "182") (inst "sk=i_8") (userinteraction))
                           (rule "instAll" (formula "182") (term "1,0,0,0") (ifseqformula "89") (userinteraction))
                           (rule "expand_inInt" (formula "183") (term "1,0"))
                           (rule "replace_int_MIN" (formula "183") (term "0,1,1,0"))
                           (rule "replace_int_MAX" (formula "183") (term "1,0,1,0"))
                           (rule "impRight" (formula "183"))
                           (rule "notRight" (formula "184"))
                           (rule "andLeft" (formula "2"))
                           (rule "andLeft" (formula "3"))
                           (rule "andLeft" (formula "2"))
                           (rule "eqSymm" (formula "231") (term "0,1"))
                           (rule "eqSymm" (formula "231") (term "1,0"))
                           (rule "eqSymm" (formula "231") (term "1,1"))
                           (rule "eqSymm" (formula "231") (term "0,0"))
                           (rule "replace_known_left" (formula "6") (term "1,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "castedGetAny" (formula "1") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "141"))
                           (rule "polySimp_mulComm0" (formula "141") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "141") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "121"))
                           (rule "polySimp_mulComm0" (formula "121") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "121") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "159"))
                           (rule "polySimp_mulComm0" (formula "159") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "159") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "79"))
                           (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "79") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "76") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "110"))
                           (rule "polySimp_mulComm0" (formula "110") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "110") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "94") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "112") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "112") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "118"))
                           (rule "polySimp_mulComm0" (formula "118") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "118") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "103") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "103") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "142"))
                           (rule "mul_literals" (formula "142") (term "1,0,0"))
                           (rule "add_literals" (formula "142") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "106"))
                           (rule "polySimp_mulComm0" (formula "106") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "106") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "100"))
                           (rule "polySimp_mulComm0" (formula "100") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "100") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "112") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "112") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "112") (term "0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "86") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "86") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "95") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "83"))
                           (rule "polySimp_mulComm0" (formula "83") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "83") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "127"))
                           (rule "polySimp_mulComm0" (formula "127") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "127") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "102") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "102") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "156"))
                           (rule "polySimp_mulComm0" (formula "156") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "156") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "132"))
                           (rule "polySimp_mulComm0" (formula "132") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "112") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "112") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "72"))
                           (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "132") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "86") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "86") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "86") (term "0,0,0,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "72") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "5"))
                           (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "inEqSimp_commuteLeq" (formula "2"))
                           (rule "replace_known_left" (formula "6") (term "1,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "applyEq" (formula "76") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "26") (term "1,1,0,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "24") (term "1,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "118") (term "1,1,0,0,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "79") (term "1,1,0,0,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "218") (term "1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "49") (term "1,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "116") (term "2") (ifseqformula "7"))
                           (rule "applyEq" (formula "41") (term "1,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "25") (term "1,2,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "196") (term "0") (ifseqformula "68"))
                           (rule "applyEq" (formula "63") (term "0") (ifseqformula "64"))
                           (rule "applyEq" (formula "22") (term "1,0,1,0,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "16") (term "1,1,0,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "71") (term "1,1,0,0,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "68") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "34") (term "1,0,1,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "27") (term "1,0,0,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "36") (term "1,2,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "29") (term "1,2,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "144") (term "1,0,1,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "115") (term "0") (ifseqformula "7"))
                           (rule "applyEq" (formula "25") (term "1,0,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "28") (term "1,1,0,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "72") (term "1,1,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "137") (term "0") (ifseqformula "7"))
                           (rule "applyEq" (formula "137") (term "3") (ifseqformula "7"))
                           (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "21") (term "1,1,0,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "127") (term "1,1") (ifseqformula "7"))
                           (rule "applyEq" (formula "217") (term "1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "193") (term "0") (ifseqformula "8"))
                           (rule "applyEq" (formula "118") (term "1,1") (ifseqformula "7"))
                           (rule "applyEq" (formula "118") (term "1,1,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "144") (term "1,0,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "73") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "132") (term "1,1") (ifseqformula "7"))
                           (rule "applyEq" (formula "17") (term "1,1,0,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "58") (term "0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "29") (term "1,0,0,0,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "20") (term "1,0,0,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "35") (term "1,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "79") (term "1,1") (ifseqformula "7"))
                           (rule "applyEq" (formula "32") (term "1,2,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "79") (term "1,1,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "219") (term "1,0") (ifseqformula "7"))
                           (rule "applyEqRigid" (formula "229") (term "0,1,1,1,1") (ifseqformula "10"))
                           (rule "applyEq" (formula "209") (term "1,0") (ifseqformula "7"))
                           (rule "applyEqRigid" (formula "229") (term "0,1,1,1") (ifseqformula "10"))
                           (rule "applyEq" (formula "22") (term "1,0,0,0,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "229") (term "0,1,0,0") (ifseqformula "10"))
                           (rule "applyEq" (formula "35") (term "1,1,0,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "229") (term "0,1,1,0") (ifseqformula "10"))
                           (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "19") (term "1,1,0,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "33") (term "1,1,0,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "206") (term "1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "29") (term "1,0,1,0,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "23") (term "1,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "68") (term "1,1,0,0,0,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "32") (term "1,0,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "207") (term "1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "215") (term "1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "22") (term "1,0,1,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "50") (term "1,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "84") (term "1,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "31") (term "1,1,0,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "137") (term "4") (ifseqformula "136"))
                           (rule "applyEq" (formula "74") (term "1,1,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "214") (term "1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "36") (term "1,0,1,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "24") (term "1,1,0,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "213") (term "1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "210") (term "1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "121") (term "1,1,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "73") (term "1,1,0,0,0,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "34") (term "1,2,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "27") (term "1,2,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "218") (term "1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "129") (term "5") (ifseqformula "123"))
                           (rule "applyEq" (formula "208") (term "1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "36") (term "1,0,0,0,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "77") (term "1,1,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "144") (term "1,0,1,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "70") (term "1,1,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "36") (term "1,0,1,0,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "72") (term "1,1") (ifseqformula "7"))
                           (rule "applyEq" (formula "34") (term "1,0,0,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "115") (term "3") (ifseqformula "114"))
                           (rule "applyEq" (formula "146") (term "4") (ifseqformula "145"))
                           (rule "applyEq" (formula "22") (term "1,2,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "18") (term "1,2,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "23") (term "1,1,0,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "51") (term "1,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "20") (term "1,0,1,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "121") (term "1,1") (ifseqformula "7"))
                           (rule "applyEq" (formula "30") (term "1,1,0,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "129") (term "1,1") (ifseqformula "7"))
                           (rule "applyEq" (formula "85") (term "1,1,0,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "46") (term "1,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "29") (term "1,0,1,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "146") (term "3") (ifseqformula "8"))
                           (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "83") (term "1,1") (ifseqformula "7"))
                           (rule "applyEq" (formula "212") (term "1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "18") (term "1,0,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "211") (term "1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "20") (term "1,2,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "45") (term "1,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "37") (term "1,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "144") (term "1,0,0,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "120") (term "1,1,0,0,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "228") (term "0") (ifseqformula "7"))
                           (rule "applyEq" (formula "75") (term "1,1,0,0,0,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "27") (term "1,0,1,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "65") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "63"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "140"))
                           (rule "polySimp_mulLiterals" (formula "140") (term "0"))
                           (rule "polySimp_elimOne" (formula "140") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "158"))
                           (rule "polySimp_mulLiterals" (formula "158") (term "0"))
                           (rule "polySimp_elimOne" (formula "158") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "96") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "96") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "96") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "109"))
                           (rule "polySimp_mulLiterals" (formula "109") (term "0"))
                           (rule "polySimp_elimOne" (formula "109") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "93") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "93") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "93") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "111") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "111") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "111") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "111") (term "1,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "111") (term "0,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "111") (term "1,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "102") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "102") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "102") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "102") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "102") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "102") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "141"))
                           (rule "mul_literals" (formula "141") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "105"))
                           (rule "polySimp_mulLiterals" (formula "105") (term "0"))
                           (rule "polySimp_elimOne" (formula "105") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "99"))
                           (rule "polySimp_mulLiterals" (formula "99") (term "0"))
                           (rule "polySimp_elimOne" (formula "99") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "111") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "111") (term "1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "85") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "85") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "85") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "85") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "85") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "85") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "85") (term "1,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "85") (term "0,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "85") (term "1,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "82"))
                           (rule "polySimp_mulLiterals" (formula "82") (term "0"))
                           (rule "polySimp_elimOne" (formula "82") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "126"))
                           (rule "polySimp_mulLiterals" (formula "126") (term "0"))
                           (rule "polySimp_elimOne" (formula "126") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "101") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "101") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "101") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "101") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "101") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "101") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "155"))
                           (rule "polySimp_mulLiterals" (formula "155") (term "0"))
                           (rule "polySimp_elimOne" (formula "155") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "111") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "111") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "111") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "111") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "111") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "111") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "131"))
                           (rule "polySimp_mulLiterals" (formula "131") (term "0"))
                           (rule "polySimp_elimOne" (formula "131") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "85") (term "1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "6") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "75") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "117"))
                           (rule "polySimp_mulLiterals" (formula "117") (term "0"))
                           (rule "polySimp_elimOne" (formula "117") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "78"))
                           (rule "polySimp_mulLiterals" (formula "78") (term "0"))
                           (rule "polySimp_elimOne" (formula "78") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                           (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                           (rule "polySimp_elimOne" (formula "71") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "73") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "120"))
                           (rule "polySimp_mulLiterals" (formula "120") (term "0"))
                           (rule "polySimp_elimOne" (formula "120") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                           (rule "leq_literals" (formula "5") (term "0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "pullOutSelect" (formula "228") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_3"))
                           (rule "eqSymm" (formula "229") (term "1,0"))
                           (rule "pullOutSelect" (formula "229") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_0"))
                           (rule "eqSymm" (formula "230") (term "1,1"))
                           (rule "pullOutSelect" (formula "230") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_3"))
                           (rule "eqSymm" (formula "231") (term "0,0"))
                           (rule "pullOutSelect" (formula "4") (term "0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_1"))
                           (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "4"))
                           (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "154"))
                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "191")) (ifInst ""  (formula "92")))
                           (rule "elementOfSingleton" (formula "4") (term "0,0"))
                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "191")))
                           (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "7") (term "0,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "8") (term "0,1") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "notLeft" (formula "8"))
                           (rule "inEqSimp_geqRight" (formula "161"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "94"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_literals" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch
                     (rule "andRight" (formula "182"))
                     (branch
                        (rule "wellFormedAnonEQ" (formula "182") (ifseqformula "146"))
                        (rule "eqSymm" (formula "226") (term "1,0"))
                        (rule "eqSymm" (formula "226") (term "1,1"))
                        (rule "eqSymm" (formula "226") (term "0,0"))
                        (rule "eqSymm" (formula "226") (term "0,1"))
                        (rule "replace_known_left" (formula "182") (term "0") (ifseqformula "81"))
                         (builtin "One Step Simplification" (formula "182") (ifInst ""  (formula "145")))
                        (rule "closeTrue" (formula "182"))
                     )
                     (branch
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "182") (ifseqformula "146"))
                        (rule "orRight" (formula "182"))
                        (rule "referencedObjectIsCreatedRight" (formula "182") (ifseqformula "166"))
                        (rule "close" (formula "182") (ifseqformula "81"))
                     )
                  )
               )
               (branch "Null reference (var_2 = null)"
                   (builtin "One Step Simplification" (formula "182") (ifInst ""  (formula "184")))
                  (rule "closeTrue" (formula "182"))
               )
            )
            (branch "Exceptional Post (printStatus)"
                (builtin "One Step Simplification" (formula "144"))
                (builtin "One Step Simplification" (formula "171"))
               (rule "andLeft" (formula "144"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "145") (term "1,0") (ifseqformula "144"))
               (rule "andLeft" (formula "145"))
               (rule "andLeft" (formula "145"))
               (rule "andLeft" (formula "147"))
               (rule "notLeft" (formula "145"))
               (rule "close" (formula "148") (ifseqformula "147"))
            )
            (branch "Pre (printStatus)"
                (builtin "One Step Simplification" (formula "169") (ifInst ""  (formula "81")))
               (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "169") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (userinteraction))
                (builtin "One Step Simplification" (formula "169") (ifInst ""  (formula "147")) (ifInst ""  (formula "146")) (ifInst ""  (formula "148")) (ifInst ""  (formula "150")) (ifInst ""  (formula "151")) (ifInst ""  (formula "152")) (ifInst ""  (formula "153")) (ifInst ""  (formula "154")) (ifInst ""  (formula "155")) (ifInst ""  (formula "156")) (ifInst ""  (formula "157")) (ifInst ""  (formula "158")) (ifInst ""  (formula "159")) (ifInst ""  (formula "160")) (ifInst ""  (formula "161")) (ifInst ""  (formula "162")) (ifInst ""  (formula "163")) (ifInst ""  (formula "90")) (ifInst ""  (formula "90")))
               (rule "andRight" (formula "169"))
               (branch "Case 1"
                  (rule "andRight" (formula "169"))
                  (branch "Case 1"
                     (rule "andRight" (formula "169"))
                     (branch "Case 1"
                        (rule "andRight" (formula "169"))
                        (branch "Case 1"
                           (rule "andRight" (formula "169"))
                           (branch
                              (rule "andRight" (formula "169"))
                              (branch
                                 (rule "andRight" (formula "169"))
                                 (branch
                                    (rule "andRight" (formula "169"))
                                    (branch
                                       (rule "insert_constant_string_value" (formula "169") (term "0,0") (ifseqformula "115"))
                                        (builtin "One Step Simplification" (formula "169"))
                                       (rule "castDel" (formula "169") (term "0,0,0"))
                                       (rule "notRight" (formula "169"))
                                       (rule "close" (formula "186") (ifseqformula "1"))
                                    )
                                    (branch
                                       (rule "insert_constant_string_value" (formula "169") (term "0,0") (ifseqformula "115"))
                                        (builtin "One Step Simplification" (formula "169"))
                                       (rule "castDel" (formula "169") (term "0,0,0"))
                                       (rule "notRight" (formula "169"))
                                       (rule "close" (formula "187") (ifseqformula "1"))
                                    )
                                 )
                                 (branch
                                    (rule "insert_constant_string_value" (formula "169") (term "0,0") (ifseqformula "115"))
                                     (builtin "One Step Simplification" (formula "169"))
                                    (rule "castDel" (formula "169") (term "0,0,0"))
                                    (rule "notRight" (formula "169"))
                                    (rule "close" (formula "188") (ifseqformula "1"))
                                 )
                              )
                              (branch
                                 (rule "notRight" (formula "169"))
                                 (rule "eqSymm" (formula "213") (term "0,1"))
                                 (rule "eqSymm" (formula "213") (term "1,0"))
                                 (rule "eqSymm" (formula "213") (term "0,0"))
                                 (rule "eqSymm" (formula "213") (term "1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "120"))
                                 (rule "polySimp_mulComm0" (formula "120") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "120") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "90") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "135"))
                                 (rule "mul_literals" (formula "135") (term "1,0,0"))
                                 (rule "add_literals" (formula "135") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "74"))
                                 (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "74") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "105") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "114"))
                                 (rule "polySimp_mulComm0" (formula "114") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "114") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "96") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "125"))
                                 (rule "polySimp_mulComm0" (formula "125") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "125") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "94"))
                                 (rule "polySimp_mulComm0" (formula "94") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "94") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "105") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "105") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "105") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "99"))
                                 (rule "polySimp_mulComm0" (formula "99") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "99") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "67"))
                                 (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "67") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "103"))
                                 (rule "polySimp_mulComm0" (formula "103") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "103") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "78"))
                                 (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "78") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "89") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "105") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "134"))
                                 (rule "polySimp_mulComm0" (formula "134") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "134") (term "0"))
                                 (rule "inEqSimp_gtToGeq" (formula "81") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "81") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "81") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "111"))
                                 (rule "polySimp_mulComm0" (formula "111") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "111") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "81") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "92") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,0,0,0"))
                                 (rule "applyEq" (formula "123") (term "5") (ifseqformula "117"))
                                 (rule "applyEq" (formula "20") (term "1,2,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "70") (term "1,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "114") (term "1,1,0,0,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "17") (term "1,0,1,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "191") (term "1,0") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "213") (term "0,1,0,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "91"))
                                 (rule "close" (formula "150") (ifseqformula "1"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "169") (inst "sk=i_3_0") (userinteraction))
                              (rule "instAll" (formula "169") (term "1,0,0") (ifseqformula "91") (userinteraction))
                              (rule "impRight" (formula "170"))
                              (rule "notRight" (formula "171"))
                              (rule "andLeft" (formula "2"))
                              (rule "eqSymm" (formula "216") (term "0,1"))
                              (rule "eqSymm" (formula "216") (term "0,0"))
                              (rule "eqSymm" (formula "216") (term "1,0"))
                              (rule "eqSymm" (formula "216") (term "1,1"))
                              (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                              (rule "replace_known_left" (formula "4") (term "0,1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "notLeft" (formula "4"))
                              (rule "inEqSimp_ltToLeq" (formula "92") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "96"))
                              (rule "polySimp_mulComm0" (formula "96") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "96") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "105"))
                              (rule "polySimp_mulComm0" (formula "105") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "105") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "98") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "101"))
                              (rule "polySimp_mulComm0" (formula "101") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "101") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "107") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "107") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "122"))
                              (rule "polySimp_mulComm0" (formula "122") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "122") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "76"))
                              (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "76") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "83") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "113"))
                              (rule "polySimp_mulComm0" (formula "113") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "113") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "69"))
                              (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "69") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "80"))
                              (rule "polySimp_mulComm0" (formula "80") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "80") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "136"))
                              (rule "polySimp_mulComm0" (formula "136") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "136") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "83") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "107") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "107") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "91") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "127"))
                              (rule "polySimp_mulComm0" (formula "127") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "127") (term "0"))
                              (rule "inEqSimp_gtToGeq" (formula "83") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "83") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "83") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "107") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "107") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "107") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "116"))
                              (rule "polySimp_mulComm0" (formula "116") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "116") (term "0"))
                              (rule "inEqSimp_gtToGeq" (formula "137"))
                              (rule "mul_literals" (formula "137") (term "1,0,0"))
                              (rule "add_literals" (formula "137") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "94") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_geqRight" (formula "146"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "3"))
                              (rule "applyEq" (formula "77") (term "1,1,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "216") (term "0,1,1,1") (ifseqformula "8"))
                              (rule "applyEq" (formula "74") (term "1,1,0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "74") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "67") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "70") (term "1,1,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "83") (term "1,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "82") (term "1,1") (ifseqformula "5"))
                              (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "29") (term "1,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "18") (term "1,2,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "84") (term "1,1,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "32") (term "1,0,0,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "198") (term "1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "134") (term "3") (ifseqformula "5"))
                              (rule "applyEq" (formula "206") (term "1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "18") (term "1,0,0,0,0") (ifseqformula "6"))
                              (rule "applyEqRigid" (formula "216") (term "0,1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "115") (term "1,1") (ifseqformula "5"))
                              (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "19") (term "1,1,0,1") (ifseqformula "6"))
                              (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "67") (term "1,1,0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "201") (term "1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "114") (term "1,1,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "23") (term "1,2,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "205") (term "1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "21") (term "1,1,0,1") (ifseqformula "6"))
                              (rule "applyEq" (formula "34") (term "1,0,1,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "6"))
                              (rule "applyEqRigid" (formula "216") (term "0,1,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "202") (term "1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "24") (term "1,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "27") (term "1,2,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "216") (term "0,1,1,1,1") (ifseqformula "8"))
                              (rule "applyEq" (formula "117") (term "1,1,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "22") (term "1,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "14") (term "1,1,0,1") (ifseqformula "6"))
                              (rule "applyEq" (formula "20") (term "1,2,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "15") (term "1,1,0,1") (ifseqformula "6"))
                              (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "134") (term "0") (ifseqformula "5"))
                              (rule "applyEq" (formula "26") (term "1,1,0,1") (ifseqformula "6"))
                              (rule "applyEq" (formula "126") (term "5") (ifseqformula "120"))
                              (rule "applyEq" (formula "195") (term "1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "32") (term "1,2,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "33") (term "1,1,0,1") (ifseqformula "6"))
                              (rule "applyEq" (formula "134") (term "4") (ifseqformula "133"))
                              (rule "applyEq" (formula "78") (term "1,1") (ifseqformula "5"))
                              (rule "applyEq" (formula "47") (term "1,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "25") (term "1,0,0,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "23") (term "1,0,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "112") (term "3") (ifseqformula "111"))
                              (rule "applyEq" (formula "69") (term "1,1,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "61") (term "0") (ifseqformula "62"))
                              (rule "applyEq" (formula "27") (term "1,0,0,0,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "20") (term "1,0,0,0,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "31") (term "1,1,0,1") (ifseqformula "6"))
                              (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "56") (term "0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "28") (term "1,1,0,1") (ifseqformula "6"))
                              (rule "applyEq" (formula "27") (term "1,0,1,0,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "140") (term "1,0,1,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "117") (term "1,1") (ifseqformula "5"))
                              (rule "applyEq" (formula "34") (term "1,0,1,0,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "34") (term "1,0,0,0,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "20") (term "1,0,1,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "195") (term "1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "27") (term "1,0,1,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "34") (term "1,2,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "30") (term "1,0,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "75") (term "1,1,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "36") (term "1,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "140") (term "1,0,1") (ifseqformula "6"))
                              (rule "applyEq" (formula "49") (term "1,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "24") (term "1,1,0,1") (ifseqformula "6"))
                              (rule "applyEq" (formula "17") (term "1,1,0,1") (ifseqformula "6"))
                              (rule "applyEq" (formula "25") (term "1,0,1,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "77") (term "1,1,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "111") (term "0") (ifseqformula "5"))
                              (rule "applyEq" (formula "193") (term "1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "111") (term "2") (ifseqformula "5"))
                              (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "16") (term "1,0,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "198") (term "1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "196") (term "1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "32") (term "1,0,1,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "18") (term "1,0,1,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "29") (term "1,1,0,1") (ifseqformula "6"))
                              (rule "applyEqRigid" (formula "180") (term "0") (ifseqformula "65"))
                              (rule "applyEq" (formula "25") (term "1,2,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "123") (term "1,1") (ifseqformula "5"))
                              (rule "applyEq" (formula "213") (term "0") (ifseqformula "5"))
                              (rule "applyEq" (formula "72") (term "1,1,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "37") (term "1,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "125") (term "1,1") (ifseqformula "5"))
                              (rule "applyEq" (formula "178") (term "0") (ifseqformula "6"))
                              (rule "applyEq" (formula "201") (term "1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "140") (term "1,0,0,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "128") (term "1,1") (ifseqformula "5"))
                              (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "71") (term "1,1,0,0,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "70") (term "1,1,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "142") (term "3") (ifseqformula "6"))
                              (rule "applyEq" (formula "30") (term "1,2,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "202") (term "1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "117") (term "1,1,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "142") (term "4") (ifseqformula "141"))
                              (rule "applyEq" (formula "114") (term "1,1,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "41") (term "1,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "191") (term "1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "198") (term "1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "71") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "20") (term "1,0,1,0,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "70") (term "1,1") (ifseqformula "5"))
                              (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "140") (term "1,0,1,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "16") (term "1,2,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "22") (term "1,1,0,1") (ifseqformula "6"))
                              (rule "applyEq" (formula "63") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "61"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "92") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "92") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "92") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "92") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "92") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "96"))
                              (rule "polySimp_mulLiterals" (formula "96") (term "0"))
                              (rule "polySimp_elimOne" (formula "96") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "105"))
                              (rule "polySimp_mulLiterals" (formula "105") (term "0"))
                              (rule "polySimp_elimOne" (formula "105") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "98") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "98") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "101"))
                              (rule "polySimp_mulLiterals" (formula "101") (term "0"))
                              (rule "polySimp_elimOne" (formula "101") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "107") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "107") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "107") (term "1,1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "107") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "107") (term "1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "122"))
                              (rule "polySimp_mulLiterals" (formula "122") (term "0"))
                              (rule "polySimp_elimOne" (formula "122") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "83") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "83") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "83") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "83") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "99") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "99") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "99") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "99") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "80"))
                              (rule "polySimp_mulLiterals" (formula "80") (term "0"))
                              (rule "polySimp_elimOne" (formula "80") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "136"))
                              (rule "polySimp_mulLiterals" (formula "136") (term "0"))
                              (rule "polySimp_elimOne" (formula "136") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "83") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "83") (term "1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "83") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "83") (term "1,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "83") (term "1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "107") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "107") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "107") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "107") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "107") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "91") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "91") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "91") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "91") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "91") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "127"))
                              (rule "polySimp_mulLiterals" (formula "127") (term "0"))
                              (rule "polySimp_elimOne" (formula "127") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "83") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "83") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "107") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "107") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "137"))
                              (rule "mul_literals" (formula "137") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "94") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "76"))
                              (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                              (rule "polySimp_elimOne" (formula "76") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "73") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                              (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                              (rule "polySimp_elimOne" (formula "69") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "113"))
                              (rule "polySimp_mulLiterals" (formula "113") (term "0"))
                              (rule "polySimp_elimOne" (formula "113") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "116"))
                              (rule "polySimp_mulLiterals" (formula "116") (term "0"))
                              (rule "polySimp_elimOne" (formula "116") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "71") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Case 2"
                           (rule "instEx" (formula "94") (term "1,0") (ifseqformula "169") (userinteraction))
                           (rule "eqSymm" (formula "214") (term "0,0"))
                           (rule "eqSymm" (formula "214") (term "1,1"))
                           (rule "eqSymm" (formula "214") (term "1,0"))
                           (rule "eqSymm" (formula "214") (term "0,1"))
                           (rule "replace_known_left" (formula "143") (term "1,0") (ifseqformula "93"))
                            (builtin "One Step Simplification" (formula "143"))
                           (rule "castedGetAny" (formula "170") (term "0,1,0"))
                           (rule "castedGetAny" (formula "143") (term "0,1"))
                           (rule "replace_known_left" (formula "143") (term "1") (ifseqformula "94"))
                            (builtin "One Step Simplification" (formula "143"))
                           (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "119"))
                           (rule "polySimp_mulComm0" (formula "119") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "119") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "170") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "170") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "98"))
                           (rule "polySimp_mulComm0" (formula "98") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "98") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "102"))
                           (rule "polySimp_mulComm0" (formula "102") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "102") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "104") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "104") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "104") (term "0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "77"))
                           (rule "polySimp_mulComm0" (formula "77") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "77") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "143"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "114"))
                           (rule "polySimp_mulComm0" (formula "114") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "114") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "67"))
                           (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "67") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "111"))
                           (rule "polySimp_mulComm0" (formula "111") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "111") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "96") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "134"))
                           (rule "polySimp_mulComm0" (formula "134") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "134") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "94"))
                           (rule "polySimp_mulComm0" (formula "94") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "94") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "89") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "105") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "105") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_gtToGeq" (formula "81") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "81") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "81") (term "0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "74"))
                           (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "74") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "135"))
                           (rule "mul_literals" (formula "135") (term "1,0,0"))
                           (rule "add_literals" (formula "135") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "90") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "125"))
                           (rule "polySimp_mulComm0" (formula "125") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "125") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "81") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "92") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "170") (term "0,0,0"))
                           (rule "applyEq" (formula "204") (term "1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "15") (term "1,0,1,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "177") (term "0") (ifseqformula "3"))
                           (rule "applyEq" (formula "22") (term "1,2,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "15") (term "1,2,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "123") (term "5") (ifseqformula "117"))
                           (rule "applyEq" (formula "109") (term "2") (ifseqformula "2"))
                           (rule "applyEq" (formula "214") (term "0,1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "73") (term "1,1,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "20") (term "1,0,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "198") (term "1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "214") (term "0,1,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "33") (term "1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "111") (term "1,1,0,0,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "21") (term "1,1,0,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "131") (term "4") (ifseqformula "130"))
                           (rule "applyEq" (formula "13") (term "1,0,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "31") (term "1,0,0,0,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "26") (term "1,1,0,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "69") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "192") (term "1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "75") (term "1,1") (ifseqformula "2"))
                           (rule "applyEq" (formula "29") (term "1,0,0,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "71") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "214") (term "0,1,1,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "71") (term "1,1,0,0,0,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "109") (term "0") (ifseqformula "2"))
                           (rule "applyEq" (formula "193") (term "1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "31") (term "1,0,1,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "14") (term "1,1,0,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "68") (term "1,1") (ifseqformula "2"))
                           (rule "applyEq" (formula "23") (term "1,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "79") (term "1,1") (ifseqformula "2"))
                           (rule "applyEq" (formula "138") (term "1,0,1,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "31") (term "1,2,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "18") (term "1,1,0,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "202") (term "1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "27") (term "1,0,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "214") (term "0,1,1,1,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "121") (term "1,1") (ifseqformula "2"))
                           (rule "applyEq" (formula "115") (term "1,1") (ifseqformula "2"))
                           (rule "applyEq" (formula "17") (term "1,0,1,0,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "46") (term "1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "140") (term "3") (ifseqformula "3"))
                           (rule "applyEq" (formula "66") (term "1,1,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "17") (term "1,2,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "197") (term "1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "24") (term "1,2,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "138") (term "1,0,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "213") (term "0") (ifseqformula "2"))
                           (rule "applyEq" (formula "19") (term "1,1,0,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "23") (term "1,1,0,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "123") (term "1,1") (ifseqformula "2"))
                           (rule "applyEq" (formula "196") (term "1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "29") (term "1,0,1,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "138") (term "1,0,1,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "114") (term "1,1,0,0,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "203") (term "1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "29") (term "1,2,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "34") (term "1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "28") (term "1,1,0,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "36") (term "1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "37") (term "1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "80") (term "1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "20") (term "1,2,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "194") (term "1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "191") (term "1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "22") (term "1,0,1,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "12") (term "1,1,0,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "64") (term "1,1,0,0,0,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "41") (term "1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "70") (term "1,1,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "201") (term "1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "81") (term "1,1,0,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "69") (term "1,1,0,0,0,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "199") (term "1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "75") (term "1,1,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "138") (term "1,0,0,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "25") (term "1,1,0,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "131") (term "3") (ifseqformula "2"))
                           (rule "applyEq" (formula "126") (term "1,1") (ifseqformula "2"))
                           (rule "applyEq" (formula "74") (term "1,1,0,0,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "15") (term "1,0,0,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "22") (term "1,0,0,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "17") (term "1,0,1,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "131") (term "0") (ifseqformula "2"))
                           (rule "applyEq" (formula "45") (term "1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "12") (term "1,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "109") (term "3") (ifseqformula "108"))
                           (rule "applyEq" (formula "195") (term "1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "11") (term "1,1,0,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "64") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "115") (term "1,1,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "31") (term "1,0,1,0,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "24") (term "1,0,0,0,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "179") (term "0") (ifseqformula "63"))
                           (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "112") (term "1,1,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "16") (term "1,1,0,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "27") (term "1,2,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "67") (term "1,1,0,0,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "30") (term "1,1,0,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "199") (term "1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "24") (term "1,0,1,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "58") (term "0") (ifseqformula "59"))
                           (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "24") (term "1,0,1,0,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "67") (term "1,1,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "111") (term "1,1") (ifseqformula "2"))
                           (rule "applyEq" (formula "139") (term "4") (ifseqformula "138"))
                           (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "60") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "58"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "119"))
                           (rule "polySimp_mulLiterals" (formula "119") (term "0"))
                           (rule "polySimp_elimOne" (formula "119") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "169") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "169") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "169") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "169") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "169") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "169") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "98"))
                           (rule "polySimp_mulLiterals" (formula "98") (term "0"))
                           (rule "polySimp_elimOne" (formula "98") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "102"))
                           (rule "polySimp_mulLiterals" (formula "102") (term "0"))
                           (rule "polySimp_elimOne" (formula "102") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "104") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "104") (term "1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                           (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                           (rule "polySimp_elimOne" (formula "77") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "95") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "133"))
                           (rule "polySimp_mulLiterals" (formula "133") (term "0"))
                           (rule "polySimp_elimOne" (formula "133") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "93"))
                           (rule "polySimp_mulLiterals" (formula "93") (term "0"))
                           (rule "polySimp_elimOne" (formula "93") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "88") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "88") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "104") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "104") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "104") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "104") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "104") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "104") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "104") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "104") (term "1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "104") (term "0,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "104") (term "1,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "104") (term "1,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "80") (term "1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "96") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "96") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "96") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "134"))
                           (rule "mul_literals" (formula "134") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "124"))
                           (rule "polySimp_mulLiterals" (formula "124") (term "0"))
                           (rule "polySimp_elimOne" (formula "124") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "80") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "80") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "80") (term "0,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "80") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "80") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "91") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "91") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "91") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "91") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "91") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "110"))
                           (rule "polySimp_mulLiterals" (formula "110") (term "0"))
                           (rule "polySimp_elimOne" (formula "110") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "113"))
                           (rule "polySimp_mulLiterals" (formula "113") (term "0"))
                           (rule "polySimp_elimOne" (formula "113") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "73"))
                           (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                           (rule "polySimp_elimOne" (formula "73") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "66"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                           (rule "polySimp_elimOne" (formula "66") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "92"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "169") (inst "sk=i_1_0") (userinteraction))
                        (rule "instAll" (formula "169") (term "1,0,0") (ifseqformula "95") (userinteraction))
                        (rule "impRight" (formula "170"))
                        (rule "notRight" (formula "171"))
                        (rule "andLeft" (formula "2"))
                        (rule "eqSymm" (formula "216") (term "0,1"))
                        (rule "eqSymm" (formula "216") (term "0,0"))
                        (rule "eqSymm" (formula "216") (term "1,0"))
                        (rule "eqSymm" (formula "216") (term "1,1"))
                        (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "castedGetAny" (formula "1") (term "0"))
                        (rule "replace_known_left" (formula "4") (term "0,1") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "notLeft" (formula "4"))
                        (rule "inEqSimp_ltToLeq" (formula "92") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "96"))
                        (rule "polySimp_mulComm0" (formula "96") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "96") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "105"))
                        (rule "polySimp_mulComm0" (formula "105") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "105") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "98") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "101"))
                        (rule "polySimp_mulComm0" (formula "101") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "101") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "107") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "107") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "122"))
                        (rule "polySimp_mulComm0" (formula "122") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "122") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "76"))
                        (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "76") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "83") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "113"))
                        (rule "polySimp_mulComm0" (formula "113") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "113") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "69"))
                        (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "69") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "80"))
                        (rule "polySimp_mulComm0" (formula "80") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "80") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "136"))
                        (rule "polySimp_mulComm0" (formula "136") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "136") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "83") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "107") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "107") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "91") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "127"))
                        (rule "polySimp_mulComm0" (formula "127") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "127") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "83") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "83") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "83") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "107") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "107") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "107") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "116"))
                        (rule "polySimp_mulComm0" (formula "116") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "116") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "137"))
                        (rule "mul_literals" (formula "137") (term "1,0,0"))
                        (rule "add_literals" (formula "137") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "94") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_geqRight" (formula "146"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "3"))
                        (rule "applyEq" (formula "77") (term "1,1,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "216") (term "0,1,1,1") (ifseqformula "8"))
                        (rule "applyEq" (formula "74") (term "1,1,0,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "74") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "67") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "70") (term "1,1,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "83") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "82") (term "1,1") (ifseqformula "5"))
                        (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "29") (term "1,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "18") (term "1,2,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "84") (term "1,1,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "32") (term "1,0,0,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "198") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "134") (term "3") (ifseqformula "5"))
                        (rule "applyEq" (formula "206") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "18") (term "1,0,0,0,0") (ifseqformula "6"))
                        (rule "applyEqRigid" (formula "216") (term "0,1,1,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "115") (term "1,1") (ifseqformula "5"))
                        (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "19") (term "1,1,0,1") (ifseqformula "6"))
                        (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "67") (term "1,1,0,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "201") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "114") (term "1,1,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "23") (term "1,2,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "205") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "21") (term "1,1,0,1") (ifseqformula "6"))
                        (rule "applyEq" (formula "34") (term "1,0,1,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "6"))
                        (rule "applyEqRigid" (formula "216") (term "0,1,0,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "202") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "24") (term "1,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "27") (term "1,2,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "216") (term "0,1,1,1,1") (ifseqformula "8"))
                        (rule "applyEq" (formula "117") (term "1,1,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "22") (term "1,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "14") (term "1,1,0,1") (ifseqformula "6"))
                        (rule "applyEq" (formula "20") (term "1,2,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "15") (term "1,1,0,1") (ifseqformula "6"))
                        (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "134") (term "0") (ifseqformula "5"))
                        (rule "applyEq" (formula "26") (term "1,1,0,1") (ifseqformula "6"))
                        (rule "applyEq" (formula "126") (term "5") (ifseqformula "120"))
                        (rule "applyEq" (formula "195") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "32") (term "1,2,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "33") (term "1,1,0,1") (ifseqformula "6"))
                        (rule "applyEq" (formula "134") (term "4") (ifseqformula "133"))
                        (rule "applyEq" (formula "78") (term "1,1") (ifseqformula "5"))
                        (rule "applyEq" (formula "47") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "25") (term "1,0,0,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "23") (term "1,0,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "112") (term "3") (ifseqformula "111"))
                        (rule "applyEq" (formula "69") (term "1,1,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "61") (term "0") (ifseqformula "62"))
                        (rule "applyEq" (formula "27") (term "1,0,0,0,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "20") (term "1,0,0,0,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "31") (term "1,1,0,1") (ifseqformula "6"))
                        (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "56") (term "0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "28") (term "1,1,0,1") (ifseqformula "6"))
                        (rule "applyEq" (formula "27") (term "1,0,1,0,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "140") (term "1,0,1,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "117") (term "1,1") (ifseqformula "5"))
                        (rule "applyEq" (formula "34") (term "1,0,1,0,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "34") (term "1,0,0,0,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "20") (term "1,0,1,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "195") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "27") (term "1,0,1,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "34") (term "1,2,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "30") (term "1,0,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "75") (term "1,1,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "36") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "140") (term "1,0,1") (ifseqformula "6"))
                        (rule "applyEq" (formula "49") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "24") (term "1,1,0,1") (ifseqformula "6"))
                        (rule "applyEq" (formula "17") (term "1,1,0,1") (ifseqformula "6"))
                        (rule "applyEq" (formula "25") (term "1,0,1,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "77") (term "1,1,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "111") (term "0") (ifseqformula "5"))
                        (rule "applyEq" (formula "193") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "111") (term "2") (ifseqformula "5"))
                        (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "16") (term "1,0,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "198") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "196") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "32") (term "1,0,1,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "18") (term "1,0,1,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "29") (term "1,1,0,1") (ifseqformula "6"))
                        (rule "applyEqRigid" (formula "180") (term "0") (ifseqformula "65"))
                        (rule "applyEq" (formula "25") (term "1,2,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "123") (term "1,1") (ifseqformula "5"))
                        (rule "applyEq" (formula "213") (term "0") (ifseqformula "5"))
                        (rule "applyEq" (formula "72") (term "1,1,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "37") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "125") (term "1,1") (ifseqformula "5"))
                        (rule "applyEq" (formula "178") (term "0") (ifseqformula "6"))
                        (rule "applyEq" (formula "201") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "140") (term "1,0,0,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "128") (term "1,1") (ifseqformula "5"))
                        (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "71") (term "1,1,0,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "70") (term "1,1,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "142") (term "3") (ifseqformula "6"))
                        (rule "applyEq" (formula "30") (term "1,2,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "202") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "117") (term "1,1,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "142") (term "4") (ifseqformula "141"))
                        (rule "applyEq" (formula "114") (term "1,1,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "41") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "191") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "198") (term "1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "71") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "20") (term "1,0,1,0,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "70") (term "1,1") (ifseqformula "5"))
                        (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "140") (term "1,0,1,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "16") (term "1,2,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "22") (term "1,1,0,1") (ifseqformula "6"))
                        (rule "applyEq" (formula "63") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "61"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "92") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "92") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "92") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "92") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "92") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "96"))
                        (rule "polySimp_mulLiterals" (formula "96") (term "0"))
                        (rule "polySimp_elimOne" (formula "96") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "105"))
                        (rule "polySimp_mulLiterals" (formula "105") (term "0"))
                        (rule "polySimp_elimOne" (formula "105") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "98") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "98") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "101"))
                        (rule "polySimp_mulLiterals" (formula "101") (term "0"))
                        (rule "polySimp_elimOne" (formula "101") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "107") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "107") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "107") (term "1,1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "107") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "107") (term "1,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "122"))
                        (rule "polySimp_mulLiterals" (formula "122") (term "0"))
                        (rule "polySimp_elimOne" (formula "122") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "83") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "83") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "83") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "83") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "99") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "99") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "99") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "99") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "80"))
                        (rule "polySimp_mulLiterals" (formula "80") (term "0"))
                        (rule "polySimp_elimOne" (formula "80") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "136"))
                        (rule "polySimp_mulLiterals" (formula "136") (term "0"))
                        (rule "polySimp_elimOne" (formula "136") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "83") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "83") (term "1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "83") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "83") (term "1,1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "83") (term "1,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "107") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "107") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "107") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "107") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "107") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "91") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "91") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "91") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "91") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "91") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "127"))
                        (rule "polySimp_mulLiterals" (formula "127") (term "0"))
                        (rule "polySimp_elimOne" (formula "127") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "83") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "83") (term "1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "107") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "107") (term "1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "137"))
                        (rule "mul_literals" (formula "137") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "94") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "76"))
                        (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                        (rule "polySimp_elimOne" (formula "76") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "73") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                        (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                        (rule "polySimp_elimOne" (formula "69") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "113"))
                        (rule "polySimp_mulLiterals" (formula "113") (term "0"))
                        (rule "polySimp_elimOne" (formula "113") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "116"))
                        (rule "polySimp_mulLiterals" (formula "116") (term "0"))
                        (rule "polySimp_elimOne" (formula "116") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "71") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "169") (inst "sk=i_0_0") (userinteraction))
                     (rule "instAll" (formula "169") (term "1,0,0") (ifseqformula "96") (userinteraction))
                     (rule "impRight" (formula "170"))
                     (rule "notRight" (formula "171"))
                     (rule "andLeft" (formula "2"))
                     (rule "eqSymm" (formula "216") (term "0,1"))
                     (rule "eqSymm" (formula "216") (term "0,0"))
                     (rule "eqSymm" (formula "216") (term "1,0"))
                     (rule "eqSymm" (formula "216") (term "1,1"))
                     (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "castedGetAny" (formula "1") (term "0"))
                     (rule "replace_known_left" (formula "4") (term "0,1") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "notLeft" (formula "4"))
                     (rule "inEqSimp_ltToLeq" (formula "92") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "96"))
                     (rule "polySimp_mulComm0" (formula "96") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "96") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "105"))
                     (rule "polySimp_mulComm0" (formula "105") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "105") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "98") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "101"))
                     (rule "polySimp_mulComm0" (formula "101") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "101") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "107") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "107") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "122"))
                     (rule "polySimp_mulComm0" (formula "122") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "122") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "76"))
                     (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "76") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "83") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "113"))
                     (rule "polySimp_mulComm0" (formula "113") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "113") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "69"))
                     (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "69") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "99") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "80"))
                     (rule "polySimp_mulComm0" (formula "80") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "80") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "136"))
                     (rule "polySimp_mulComm0" (formula "136") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "136") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "83") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "107") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "107") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "91") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "127"))
                     (rule "polySimp_mulComm0" (formula "127") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "127") (term "0"))
                     (rule "inEqSimp_gtToGeq" (formula "83") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "83") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "83") (term "0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "107") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "107") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "107") (term "0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "116"))
                     (rule "polySimp_mulComm0" (formula "116") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "116") (term "0"))
                     (rule "inEqSimp_gtToGeq" (formula "137"))
                     (rule "mul_literals" (formula "137") (term "1,0,0"))
                     (rule "add_literals" (formula "137") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "94") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_geqRight" (formula "146"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "3"))
                     (rule "applyEq" (formula "117") (term "1,1,0,0,1,0") (ifseqformula "5"))
                     (rule "applyEqRigid" (formula "216") (term "0,1,1,1,1") (ifseqformula "8"))
                     (rule "applyEq" (formula "22") (term "1,0,0") (ifseqformula "6"))
                     (rule "applyEqRigid" (formula "216") (term "0,1,1,1") (ifseqformula "8"))
                     (rule "applyEq" (formula "28") (term "1,1,0,1") (ifseqformula "6"))
                     (rule "applyEq" (formula "15") (term "1,1,0,1") (ifseqformula "6"))
                     (rule "applyEq" (formula "196") (term "1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "203") (term "1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "25") (term "1,2,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "14") (term "1,1,0,1") (ifseqformula "6"))
                     (rule "applyEq" (formula "129") (term "1,1") (ifseqformula "5"))
                     (rule "applyEq" (formula "30") (term "1,0,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "72") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "24") (term "1,1,0,1") (ifseqformula "6"))
                     (rule "applyEq" (formula "115") (term "1,1,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "26") (term "1,1,0,1") (ifseqformula "6"))
                     (rule "applyEq" (formula "69") (term "1,1,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "124") (term "1,1") (ifseqformula "5"))
                     (rule "applyEq" (formula "47") (term "1,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "141") (term "1,0,1,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "83") (term "1,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "36") (term "1,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "29") (term "1,1,0,1") (ifseqformula "6"))
                     (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "23") (term "1,2,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "18") (term "1,0,1,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "118") (term "1,1") (ifseqformula "5"))
                     (rule "applyEq" (formula "197") (term "1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "41") (term "1,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "205") (term "1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "20") (term "1,0,0,0,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "34") (term "1,0,1,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "27") (term "1,0,1,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "67") (term "1,1,0,0,0,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "23") (term "1,0,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "112") (term "2") (ifseqformula "5"))
                     (rule "applyEq" (formula "206") (term "1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "25") (term "1,0,1,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "33") (term "1,1,0,1") (ifseqformula "6"))
                     (rule "applyEqRigid" (formula "216") (term "0,1,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "49") (term "1,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "29") (term "1,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "20") (term "1,0,1,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "141") (term "1,0,0,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "72") (term "1,1,0,0,0,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "71") (term "1,1") (ifseqformula "5"))
                     (rule "applyEq" (formula "204") (term "1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "27") (term "1,2,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "179") (term "0") (ifseqformula "6"))
                     (rule "applyEq" (formula "20") (term "1,0,1,0,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "18") (term "1,0,0,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "202") (term "1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "77") (term "1,1,0,0,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "115") (term "1,1") (ifseqformula "5"))
                     (rule "applyEq" (formula "143") (term "4") (ifseqformula "142"))
                     (rule "applyEq" (formula "112") (term "3") (ifseqformula "111"))
                     (rule "applyEq" (formula "37") (term "1,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "22") (term "1,1,0,1") (ifseqformula "6"))
                     (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "141") (term "1,0,1") (ifseqformula "6"))
                     (rule "applyEq" (formula "73") (term "1,1,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "76") (term "1,1,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "67") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "126") (term "5") (ifseqformula "120"))
                     (rule "applyEq" (formula "74") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "70") (term "1,1,0,0,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "181") (term "0") (ifseqformula "66"))
                     (rule "applyEq" (formula "82") (term "1,1") (ifseqformula "5"))
                     (rule "applyEq" (formula "30") (term "1,2,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "34") (term "1,0,1,0,0,0") (ifseqformula "6"))
                     (rule "applyEqRigid" (formula "215") (term "0,1,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "78") (term "1,1") (ifseqformula "5"))
                     (rule "applyEq" (formula "27") (term "1,0,0,0,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "16") (term "1,2,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "141") (term "1,0,1,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "134") (term "3") (ifseqformula "5"))
                     (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "194") (term "1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "114") (term "1,1,0,0,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "214") (term "0") (ifseqformula "5"))
                     (rule "applyEq" (formula "17") (term "1,1,0,1") (ifseqformula "6"))
                     (rule "applyEq" (formula "18") (term "1,2,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "32") (term "1,0,1,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "32") (term "1,2,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "20") (term "1,2,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "192") (term "1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "197") (term "1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "118") (term "1,1,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "56") (term "0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "193") (term "1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "24") (term "1,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "200") (term "1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "25") (term "1,0,0,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "27") (term "1,0,1,0,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "34") (term "1,0,0,0,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "134") (term "4") (ifseqformula "133"))
                     (rule "applyEq" (formula "84") (term "1,1,0,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "112") (term "0") (ifseqformula "5"))
                     (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "198") (term "1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "16") (term "1,0,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "143") (term "3") (ifseqformula "6"))
                     (rule "applyEq" (formula "126") (term "1,1") (ifseqformula "5"))
                     (rule "applyEq" (formula "34") (term "1,2,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "32") (term "1,0,0,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "134") (term "0") (ifseqformula "5"))
                     (rule "applyEq" (formula "78") (term "1,1,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "71") (term "1,1,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "21") (term "1,1,0,1") (ifseqformula "6"))
                     (rule "applyEq" (formula "43") (term "1,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "61") (term "0") (ifseqformula "62"))
                     (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "19") (term "1,1,0,1") (ifseqformula "6"))
                     (rule "applyEq" (formula "31") (term "1,1,0,1") (ifseqformula "6"))
                     (rule "applyEq" (formula "73") (term "1,1,0,0,0,1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "198") (term "1,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "63") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "61"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "92") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "92") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "92") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "92") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "92") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "96"))
                     (rule "polySimp_mulLiterals" (formula "96") (term "0"))
                     (rule "polySimp_elimOne" (formula "96") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "105"))
                     (rule "polySimp_mulLiterals" (formula "105") (term "0"))
                     (rule "polySimp_elimOne" (formula "105") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "98") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "98") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "101"))
                     (rule "polySimp_mulLiterals" (formula "101") (term "0"))
                     (rule "polySimp_elimOne" (formula "101") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "107") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "107") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "107") (term "1,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "107") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "107") (term "1,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "122"))
                     (rule "polySimp_mulLiterals" (formula "122") (term "0"))
                     (rule "polySimp_elimOne" (formula "122") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "83") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "83") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "83") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "83") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "62") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "99") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "99") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "99") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "99") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "80"))
                     (rule "polySimp_mulLiterals" (formula "80") (term "0"))
                     (rule "polySimp_elimOne" (formula "80") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "136"))
                     (rule "polySimp_mulLiterals" (formula "136") (term "0"))
                     (rule "polySimp_elimOne" (formula "136") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "83") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "83") (term "1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "83") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "83") (term "1,1,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "83") (term "1,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "107") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "107") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "107") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "107") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "107") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "91") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "91") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "91") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "91") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "91") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "127"))
                     (rule "polySimp_mulLiterals" (formula "127") (term "0"))
                     (rule "polySimp_elimOne" (formula "127") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "83") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "83") (term "1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "107") (term "0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "107") (term "1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "137"))
                     (rule "mul_literals" (formula "137") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "94") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "116"))
                     (rule "polySimp_mulLiterals" (formula "116") (term "0"))
                     (rule "polySimp_elimOne" (formula "116") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "71") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "71") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "71") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "71") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "76"))
                     (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                     (rule "polySimp_elimOne" (formula "76") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "73") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "69"))
                     (rule "polySimp_mulLiterals" (formula "69") (term "0"))
                     (rule "polySimp_elimOne" (formula "69") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "113"))
                     (rule "polySimp_mulLiterals" (formula "113") (term "0"))
                     (rule "polySimp_elimOne" (formula "113") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Case 2"
                  (rule "instEx" (formula "99") (term "1,0") (ifseqformula "169") (userinteraction))
                  (rule "eqSymm" (formula "214") (term "0,0"))
                  (rule "eqSymm" (formula "214") (term "1,1"))
                  (rule "eqSymm" (formula "214") (term "1,0"))
                  (rule "eqSymm" (formula "214") (term "0,1"))
                  (rule "replace_known_left" (formula "143") (term "1,0") (ifseqformula "98"))
                   (builtin "One Step Simplification" (formula "143"))
                  (rule "castedGetAny" (formula "170") (term "0,1,0"))
                  (rule "castedGetAny" (formula "143") (term "0,1"))
                  (rule "replace_known_left" (formula "143") (term "1") (ifseqformula "99"))
                   (builtin "One Step Simplification" (formula "143"))
                  (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "119"))
                  (rule "polySimp_mulComm0" (formula "119") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "119") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "170") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "170") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "98"))
                  (rule "polySimp_mulComm0" (formula "98") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "98") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "102"))
                  (rule "polySimp_mulComm0" (formula "102") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "102") (term "0"))
                  (rule "inEqSimp_gtToGeq" (formula "104") (term "0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "104") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "104") (term "0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "77"))
                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "77") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "143"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "114"))
                  (rule "polySimp_mulComm0" (formula "114") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "114") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "67"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "67") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "111"))
                  (rule "polySimp_mulComm0" (formula "111") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "111") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "96") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "134"))
                  (rule "polySimp_mulComm0" (formula "134") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "134") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "94"))
                  (rule "polySimp_mulComm0" (formula "94") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "94") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "89") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "105") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "105") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_gtToGeq" (formula "81") (term "0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "81") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "81") (term "0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "74"))
                  (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "74") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "135"))
                  (rule "mul_literals" (formula "135") (term "1,0,0"))
                  (rule "add_literals" (formula "135") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "90") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "71") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "125"))
                  (rule "polySimp_mulComm0" (formula "125") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "125") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "81") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "92") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "170") (term "0,0,0"))
                  (rule "applyEq" (formula "204") (term "1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "15") (term "1,0,1,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "177") (term "0") (ifseqformula "3"))
                  (rule "applyEq" (formula "22") (term "1,2,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "15") (term "1,2,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "123") (term "5") (ifseqformula "117"))
                  (rule "applyEq" (formula "109") (term "2") (ifseqformula "2"))
                  (rule "applyEq" (formula "214") (term "0,1,0,0") (ifseqformula "5"))
                  (rule "applyEq" (formula "73") (term "1,1,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "20") (term "1,0,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "198") (term "1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "214") (term "0,1,1,0") (ifseqformula "5"))
                  (rule "applyEq" (formula "33") (term "1,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "111") (term "1,1,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "21") (term "1,1,0,1") (ifseqformula "3"))
                  (rule "applyEq" (formula "131") (term "4") (ifseqformula "130"))
                  (rule "applyEq" (formula "13") (term "1,0,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "31") (term "1,0,0,0,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "26") (term "1,1,0,1") (ifseqformula "3"))
                  (rule "applyEq" (formula "69") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "192") (term "1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "75") (term "1,1") (ifseqformula "2"))
                  (rule "applyEq" (formula "29") (term "1,0,0,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "71") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "214") (term "0,1,1,1") (ifseqformula "5"))
                  (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "71") (term "1,1,0,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "109") (term "0") (ifseqformula "2"))
                  (rule "applyEq" (formula "193") (term "1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "31") (term "1,0,1,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "14") (term "1,1,0,1") (ifseqformula "3"))
                  (rule "applyEq" (formula "68") (term "1,1") (ifseqformula "2"))
                  (rule "applyEq" (formula "23") (term "1,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "79") (term "1,1") (ifseqformula "2"))
                  (rule "applyEq" (formula "138") (term "1,0,1,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "31") (term "1,2,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "18") (term "1,1,0,1") (ifseqformula "3"))
                  (rule "applyEq" (formula "202") (term "1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "27") (term "1,0,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "214") (term "0,1,1,1,1") (ifseqformula "5"))
                  (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "121") (term "1,1") (ifseqformula "2"))
                  (rule "applyEq" (formula "115") (term "1,1") (ifseqformula "2"))
                  (rule "applyEq" (formula "17") (term "1,0,1,0,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "46") (term "1,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "140") (term "3") (ifseqformula "3"))
                  (rule "applyEq" (formula "66") (term "1,1,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "17") (term "1,2,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "197") (term "1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "24") (term "1,2,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "138") (term "1,0,1") (ifseqformula "3"))
                  (rule "applyEq" (formula "213") (term "0") (ifseqformula "2"))
                  (rule "applyEq" (formula "19") (term "1,1,0,1") (ifseqformula "3"))
                  (rule "applyEq" (formula "23") (term "1,1,0,1") (ifseqformula "3"))
                  (rule "applyEq" (formula "123") (term "1,1") (ifseqformula "2"))
                  (rule "applyEq" (formula "196") (term "1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "29") (term "1,0,1,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "138") (term "1,0,1,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "114") (term "1,1,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "203") (term "1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "29") (term "1,2,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "34") (term "1,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "28") (term "1,1,0,1") (ifseqformula "3"))
                  (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "36") (term "1,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "37") (term "1,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "80") (term "1,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "20") (term "1,2,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "194") (term "1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "191") (term "1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "22") (term "1,0,1,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "12") (term "1,1,0,1") (ifseqformula "3"))
                  (rule "applyEq" (formula "64") (term "1,1,0,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "41") (term "1,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "70") (term "1,1,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "201") (term "1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "81") (term "1,1,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "69") (term "1,1,0,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "199") (term "1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "75") (term "1,1,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "138") (term "1,0,0,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "25") (term "1,1,0,1") (ifseqformula "3"))
                  (rule "applyEq" (formula "131") (term "3") (ifseqformula "2"))
                  (rule "applyEq" (formula "126") (term "1,1") (ifseqformula "2"))
                  (rule "applyEq" (formula "74") (term "1,1,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "15") (term "1,0,0,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "22") (term "1,0,0,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "17") (term "1,0,1,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "131") (term "0") (ifseqformula "2"))
                  (rule "applyEq" (formula "45") (term "1,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "12") (term "1,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "109") (term "3") (ifseqformula "108"))
                  (rule "applyEq" (formula "195") (term "1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "11") (term "1,1,0,1") (ifseqformula "3"))
                  (rule "applyEq" (formula "64") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "115") (term "1,1,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "31") (term "1,0,1,0,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "24") (term "1,0,0,0,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "179") (term "0") (ifseqformula "63"))
                  (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "112") (term "1,1,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "16") (term "1,1,0,1") (ifseqformula "3"))
                  (rule "applyEq" (formula "27") (term "1,2,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "67") (term "1,1,0,0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "30") (term "1,1,0,1") (ifseqformula "3"))
                  (rule "applyEq" (formula "199") (term "1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "24") (term "1,0,1,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "58") (term "0") (ifseqformula "59"))
                  (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "24") (term "1,0,1,0,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "67") (term "1,1,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "111") (term "1,1") (ifseqformula "2"))
                  (rule "applyEq" (formula "139") (term "4") (ifseqformula "138"))
                  (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "60") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "58"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "119"))
                  (rule "polySimp_mulLiterals" (formula "119") (term "0"))
                  (rule "polySimp_elimOne" (formula "119") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "169") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "169") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "169") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "169") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "169") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "169") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "98"))
                  (rule "polySimp_mulLiterals" (formula "98") (term "0"))
                  (rule "polySimp_elimOne" (formula "98") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "102"))
                  (rule "polySimp_mulLiterals" (formula "102") (term "0"))
                  (rule "polySimp_elimOne" (formula "102") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "104") (term "0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "104") (term "1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "77"))
                  (rule "polySimp_mulLiterals" (formula "77") (term "0"))
                  (rule "polySimp_elimOne" (formula "77") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "95") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "133"))
                  (rule "polySimp_mulLiterals" (formula "133") (term "0"))
                  (rule "polySimp_elimOne" (formula "133") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "93"))
                  (rule "polySimp_mulLiterals" (formula "93") (term "0"))
                  (rule "polySimp_elimOne" (formula "93") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "88") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "88") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "88") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "88") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "104") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "104") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "104") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "104") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "104") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "104") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "104") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "104") (term "1,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "104") (term "0,1,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "104") (term "1,1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "104") (term "1,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "80") (term "1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "96") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "96") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "96") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "96") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "134"))
                  (rule "mul_literals" (formula "134") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "89") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "124"))
                  (rule "polySimp_mulLiterals" (formula "124") (term "0"))
                  (rule "polySimp_elimOne" (formula "124") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "80") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "80") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "80") (term "0,1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "80") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "80") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "91") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "91") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "91") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "91") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "91") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "110"))
                  (rule "polySimp_mulLiterals" (formula "110") (term "0"))
                  (rule "polySimp_elimOne" (formula "110") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "68") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "70") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "70") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "113"))
                  (rule "polySimp_mulLiterals" (formula "113") (term "0"))
                  (rule "polySimp_elimOne" (formula "113") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "73"))
                  (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                  (rule "polySimp_elimOne" (formula "73") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "66"))
                  (rule "polySimp_mulLiterals" (formula "66") (term "0"))
                  (rule "polySimp_elimOne" (formula "66") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "97"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Exceptional Post (generateDataForVoter)"
             (builtin "One Step Simplification" (formula "82"))
             (builtin "One Step Simplification" (formula "116"))
            (rule "andLeft" (formula "82"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "1,0") (ifseqformula "82"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "0,1,0") (ifseqformula "75"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "0,0,1,0") (ifseqformula "53"))
            (rule "andLeft" (formula "83"))
            (rule "andLeft" (formula "84"))
            (rule "andLeft" (formula "83"))
            (rule "andLeft" (formula "85"))
            (rule "notLeft" (formula "83"))
            (rule "close" (formula "87") (ifseqformula "86"))
         )
         (branch "Pre (generateDataForVoter)"
             (builtin "One Step Simplification" (formula "114") (ifInst ""  (formula "81")) (ifInst ""  (formula "115")) (ifInst ""  (formula "81")) (ifInst ""  (formula "115")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (term "1,1") (ifseqformula "75"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (term "1,0,1") (ifseqformula "75"))
            (rule "wellFormedAnonEQ" (formula "114") (term "0,0,1") (ifseqformula "75"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (term "0,1,1") (ifseqformula "53"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "114") (term "0,1,0,1") (ifseqformula "53"))
            (rule "wellFormedAnonEQ" (formula "114") (term "0,0,0,1") (ifseqformula "53"))
            (rule "replace_known_left" (formula "114") (term "0,0,0,0,1") (ifseqformula "20"))
             (builtin "One Step Simplification" (formula "114") (ifInst ""  (formula "52")) (ifInst ""  (formula "74")) (ifInst ""  (formula "24")))
            (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "114") (term "0,1,0"))
            (rule "pullOutSelect" (formula "114") (term "0,1,0,1,0") (inst "selectSK=java_math_BigInteger_value_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "54"))
            (rule "pullOutSelect" (formula "115") (term "0,0,0,0,1,0") (inst "selectSK=java_math_BigInteger_ZERO_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "77"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replaceKnownSelect_taclet2000_12" (formula "2") (term "1,1,0"))
            (rule "replaceKnownSelect_taclet2000_12" (formula "2") (term "1,2,0"))
            (rule "replaceKnownSelect_taclet2000_12" (formula "2") (term "0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet2000_12" (formula "2") (term "1,0,1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet2000_12" (formula "2") (term "1,0,0,0,1,0,0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_14" (formula "1") (term "1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_14" (formula "1") (term "1,2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_14" (formula "1") (term "0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_14" (formula "115") (term "0,0,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_14" (formula "1") (term "1,0,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_14" (formula "1") (term "1,0,1,0,1,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "114"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "114")) (ifInst ""  (formula "26")))
            (rule "replace_known_right" (formula "115") (term "0,0,0,1,0") (ifseqformula "114"))
             (builtin "One Step Simplification" (formula "115"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "114")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_16" (formula "114") (term "0,0,1,0"))
            (rule "replace_known_left" (formula "114") (term "0,1,0") (ifseqformula "26"))
             (builtin "One Step Simplification" (formula "114"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "114") (term "0,0"))
            (rule "insert_constant_string_value" (formula "114") (term "0,0,0,0,0,0") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "114"))
            (rule "castDel" (formula "114") (term "0,0,0,0,0,0,0"))
            (rule "replace_known_right" (formula "114") (term "0,0,0,0,0") (ifseqformula "109"))
             (builtin "One Step Simplification" (formula "114"))
            (rule "pullOutSelect" (formula "114") (term "0,0,1,0,0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SHA_256_DIGEST_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_19" (formula "114") (term "0,0,1,0,0"))
            (rule "replace_known_right" (formula "114") (term "0,1,0,0") (ifseqformula "110"))
             (builtin "One Step Simplification" (formula "114"))
            (rule "pullOutSelect" (formula "114") (term "0,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_Crypto_SECURE_RANDOM_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_22" (formula "114") (term "0,0,0,0"))
            (rule "replace_known_right" (formula "114") (term "0,0,0") (ifseqformula "108"))
             (builtin "One Step Simplification" (formula "114"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "114") (term "0"))
            (rule "pullOutSelect" (formula "114") (term "1,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_RANDOM_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replaceKnownSelect_taclet2000_23" (formula "115") (term "0,0,1,0,0,0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_25" (formula "114") (term "1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_25" (formula "114") (term "0,0,1,0,0,0"))
            (rule "replace_known_right" (formula "114") (term "0,1,0,0,0") (ifseqformula "111"))
             (builtin "One Step Simplification" (formula "114"))
            (rule "pullOutSelect" (formula "114") (term "0,0,0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GROUP_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replaceKnownSelect_taclet2000_26" (formula "115") (term "1,1,0,0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_28" (formula "114") (term "1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_28" (formula "114") (term "0,0,0,0,0"))
            (rule "replace_known_right" (formula "114") (term "0,0,0,0") (ifseqformula "112"))
             (builtin "One Step Simplification" (formula "114"))
            (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "114") (term "1,0"))
             (builtin "One Step Simplification" (formula "114"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "114") (term "0"))
            (rule "pullOutSelect" (formula "114") (term "1,1,1,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_group_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "113")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "54"))
            (rule "replaceKnownSelect_taclet2000_29" (formula "115") (term "0,0,1,0,0"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "17"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "113")) (ifInst ""  (formula "17")))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "113")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_31" (formula "114") (term "1,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_31" (formula "114") (term "0,0,1,0,0"))
            (rule "replace_known_right" (formula "114") (term "0,1,0,0") (ifseqformula "85"))
             (builtin "One Step Simplification" (formula "114"))
            (rule "pullOutSelect" (formula "114") (term "1,0,1,0") (inst "selectSK=de_polyas_core3_open_crypto_groups_ECGroup_curve_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "113")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "54"))
            (rule "replaceKnownSelect_taclet2000_32" (formula "115") (term "0,0,0,0"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "17"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "113")) (ifInst ""  (formula "17")))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "113")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_34" (formula "114") (term "1,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_34" (formula "114") (term "0,0,0,0"))
            (rule "replace_known_right" (formula "114") (term "0,0,0") (ifseqformula "86"))
             (builtin "One Step Simplification" (formula "114"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "114") (term "0,0"))
             (builtin "One Step Simplification" (formula "114"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "114") (term "0"))
            (rule "pullOutSelect" (formula "114") (term "0,0,0,0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "76"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "86")))
            (rule "replaceKnownSelect_taclet2000_35" (formula "115") (term "1,1,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "54"))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=org_bouncycastle_jce_spec_ECParameterSpec_generator_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "116") (term "1,0"))
             (builtin "One Step Simplification" (formula "116"))
            (rule "commute_or_2" (formula "116") (term "1"))
            (rule "commute_or" (formula "2") (term "0,0"))
            (rule "seqGetAlphaCast" (formula "74") (term "0"))
            (rule "castedGetAny" (formula "74") (term "0"))
             (builtin "One Step Simplification" (formula "74"))
            (rule "true_left" (formula "74"))
            (rule "seqGetAlphaCast" (formula "69") (term "0"))
            (rule "castedGetAny" (formula "69") (term "0"))
             (builtin "One Step Simplification" (formula "69"))
            (rule "true_left" (formula "69"))
            (rule "commute_or" (formula "116") (term "0,1"))
            (rule "commute_or_2" (formula "116") (term "1"))
            (rule "seqGetAlphaCast" (formula "70") (term "0"))
            (rule "castedGetAny" (formula "70") (term "0"))
             (builtin "One Step Simplification" (formula "70"))
            (rule "true_left" (formula "70"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "89") (term "0") (ifseqformula "22"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "90"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "87") (term "1,0") (ifseqformula "23"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "89"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_37" (formula "3") (term "1,0"))
            (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "replaceKnownAuxiliaryConstant_taclet2000_38" (formula "116") (term "0,0,0"))
            (rule "replace_known_right" (formula "116") (term "0,0") (ifseqformula "86"))
             (builtin "One Step Simplification" (formula "116"))
            (rule "orRight" (formula "116"))
            (rule "orRight" (formula "116"))
            (rule "replace_known_right" (formula "66") (term "0") (ifseqformula "117"))
             (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "118")))
            (rule "closeFalse" (formula "66"))
         )
      )
      (branch "Exceptional Post (exitIfIdInvalid)"
          (builtin "One Step Simplification" (formula "88"))
          (builtin "One Step Simplification" (formula "54"))
         (rule "andLeft" (formula "54"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "1,0") (ifseqformula "54"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,1,0") (ifseqformula "31"))
         (rule "andLeft" (formula "55"))
         (rule "andLeft" (formula "55"))
         (rule "notLeft" (formula "55"))
         (rule "close" (formula "57") (ifseqformula "56"))
      )
      (branch "Pre (exitIfIdInvalid)"
          (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "53")) (ifInst ""  (formula "51")) (ifInst ""  (formula "53")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "1") (ifseqformula "31"))
         (rule "castedGetAny" (formula "86") (term "0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "86") (term "0,0,0,0"))
         (rule "commute_or" (formula "86") (term "1"))
         (rule "replace_known_left" (formula "86") (term "1") (ifseqformula "42"))
          (builtin "One Step Simplification" (formula "86"))
         (rule "charLiteral_to_int" (formula "86") (term "1,1,0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "1") (ifseqformula "1"))
         (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "70"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "27"))
          (builtin "One Step Simplification" (formula "53"))
         (rule "true_left" (formula "53"))
         (rule "seqGetAlphaCast" (formula "40") (term "0"))
         (rule "castedGetAny" (formula "40") (term "0"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "true_left" (formula "40"))
         (rule "seqGetAlphaCast" (formula "37") (term "0"))
         (rule "castedGetAny" (formula "37") (term "0"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "true_left" (formula "37"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "85") (term "0") (ifseqformula "1"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "86"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "81") (term "0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "82"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "84") (term "0") (ifseqformula "3"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "85"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "87") (term "0") (ifseqformula "4"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "88"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "87") (term "0") (ifseqformula "5"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "88"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "82") (term "0") (ifseqformula "6"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "83"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "1") (ifseqformula "7"))
         (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "72"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "86") (term "0") (ifseqformula "7"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "87"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0") (ifseqformula "8"))
         (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "63"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "applyEqRigid" (formula "19") (term "1,0") (ifseqformula "20"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "86") (term "0") (ifseqformula "8"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "87"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "69") (term "0") (ifseqformula "9"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "70"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "81") (term "0") (ifseqformula "10"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "82"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "83") (term "0") (ifseqformula "11"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "84"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "78") (term "0") (ifseqformula "12"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "79"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "87") (term "0") (ifseqformula "13"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "88"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "90") (term "0") (ifseqformula "14"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "91"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "83") (term "0") (ifseqformula "15"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "84"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "83") (term "0") (ifseqformula "16"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "84"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "78") (term "0") (ifseqformula "17"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "79"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "88") (term "0") (ifseqformula "18"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "89"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "94") (term "0") (ifseqformula "19"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "95"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "93") (term "0") (ifseqformula "20"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "94"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "seqGetAlphaCast" (formula "72") (term "0"))
         (rule "castedGetAny" (formula "72") (term "0"))
          (builtin "One Step Simplification" (formula "72"))
         (rule "true_left" (formula "72"))
         (rule "seqGetAlphaCast" (formula "67") (term "0"))
         (rule "castedGetAny" (formula "67") (term "0"))
          (builtin "One Step Simplification" (formula "67"))
         (rule "true_left" (formula "67"))
         (rule "seqGetAlphaCast" (formula "68") (term "0"))
         (rule "castedGetAny" (formula "68") (term "0"))
          (builtin "One Step Simplification" (formula "68"))
         (rule "true_left" (formula "68"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "0") (ifseqformula "21"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "81"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "0") (ifseqformula "22"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "81"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "79") (term "1,0") (ifseqformula "23"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "81"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "80") (term "0") (ifseqformula "24"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "81"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "lenNonNegative" (formula "111") (term "1,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "81") (term "0") (ifseqformula "57"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "82"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "Use_information_flow_contract_for_get_1066055272" (formula "75") (inst "i#33=i#33") (ifseqformula "75"))
          (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "97")) (ifInst ""  (formula "97")))
         (rule "true_left" (formula "75"))
         (rule "Use_information_flow_contract_for_printStatus_1406103914" (formula "61") (ifseqformula "61"))
          (builtin "One Step Simplification" (formula "61"))
         (rule "true_left" (formula "61"))
         (rule "applyEqReverse" (formula "113") (term "0,0,1,1,0,0") (ifseqformula "74") (userinteraction))
         (rule "instAll" (formula "113") (term "1,0,0,1,1,0,0") (ifseqformula "56") (userinteraction))
         (rule "doubleImpLeft" (formula "1") (userinteraction))
         (branch "Case 1"
            (rule "andLeft" (formula "57"))
            (rule "andLeft" (formula "57"))
            (rule "andLeft" (formula "58"))
            (rule "andLeft" (formula "57"))
            (rule "andLeft" (formula "60"))
            (rule "andLeft" (formula "58"))
            (rule "andLeft" (formula "57"))
            (rule "andLeft" (formula "63"))
            (rule "andLeft" (formula "57"))
            (rule "andLeft" (formula "65"))
            (rule "andLeft" (formula "57"))
            (rule "andLeft" (formula "67"))
            (rule "notLeft" (formula "58"))
            (rule "andLeft" (formula "67"))
            (rule "andLeft" (formula "68"))
            (rule "andLeft" (formula "69"))
            (rule "notLeft" (formula "69"))
            (rule "notLeft" (formula "69"))
            (rule "exLeft" (formula "67") (inst "sk=i_5"))
            (rule "andLeft" (formula "67"))
            (rule "andLeft" (formula "67"))
            (rule "eqSymm" (formula "135") (term "0,1"))
            (rule "eqSymm" (formula "135") (term "1,0"))
            (rule "eqSymm" (formula "135") (term "1,1"))
            (rule "eqSymm" (formula "135") (term "0,0"))
            (rule "eqSymm" (formula "71") (term "1,0,0,0,1"))
            (rule "eqSymm" (formula "71") (term "0,0,0,0,1"))
            (rule "eqSymm" (formula "71") (term "1,0,0,1"))
            (rule "replace_known_left" (formula "97") (term "1") (ifseqformula "85"))
             (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "86")))
            (rule "closeTrue" (formula "97"))
         )
         (branch "Case 2"
            (rule "close" (formula "80") (ifseqformula "73"))
         )
         (branch "Case 3"
            (rule "exLeft" (formula "1") (inst "sk=j_0") (userinteraction))
            (rule "instEx" (formula "1") (term "1,0,0,0") (ifseqformula "114") (userinteraction))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "59"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "60"))
            (rule "andLeft" (formula "61"))
            (rule "andLeft" (formula "60"))
            (rule "andLeft" (formula "63"))
            (rule "andLeft" (formula "61"))
            (rule "andLeft" (formula "60"))
            (rule "andLeft" (formula "66"))
            (rule "andLeft" (formula "60"))
            (rule "andLeft" (formula "68"))
            (rule "andLeft" (formula "60"))
            (rule "andLeft" (formula "70"))
            (rule "notLeft" (formula "61"))
            (rule "andLeft" (formula "70"))
            (rule "andLeft" (formula "71"))
            (rule "andLeft" (formula "72"))
            (rule "notLeft" (formula "72"))
            (rule "notLeft" (formula "72"))
            (rule "exLeft" (formula "70") (inst "sk=i_5"))
            (rule "andLeft" (formula "70"))
            (rule "andLeft" (formula "70"))
            (rule "eqSymm" (formula "138") (term "0,0"))
            (rule "eqSymm" (formula "138") (term "0,1"))
            (rule "eqSymm" (formula "138") (term "1,0"))
            (rule "eqSymm" (formula "138") (term "1,1"))
            (rule "eqSymm" (formula "74") (term "0,0,0,0,1"))
            (rule "eqSymm" (formula "74") (term "1,0,0,1"))
            (rule "eqSymm" (formula "74") (term "1,0,0,0,1"))
            (rule "replace_known_right" (formula "64") (term "0") (ifseqformula "97"))
             (builtin "One Step Simplification" (formula "64"))
            (rule "replace_known_right" (formula "63") (term "0") (ifseqformula "98"))
             (builtin "One Step Simplification" (formula "63"))
            (rule "replace_known_left" (formula "100") (term "1,0") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "100") (ifInst ""  (formula "3")))
            (rule "castedGetAny" (formula "73") (term "0,0,0,0,1,0,1,1,0"))
            (rule "castedGetAny" (formula "73") (term "0,0,1,0"))
            (rule "castedGetAny" (formula "73") (term "0,0,1,1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "134") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "134") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "94"))
            (rule "polySimp_mulComm0" (formula "94") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "94") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "45"))
            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "45") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "89"))
            (rule "polySimp_mulComm0" (formula "89") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "89") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "56"))
            (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "56") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "52"))
            (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "52") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "80"))
            (rule "polySimp_mulComm0" (formula "80") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "80") (term "0"))
            (rule "inEqSimp_gtToGeq" (formula "134") (term "1,0"))
            (rule "mul_literals" (formula "134") (term "1,0,0,1,0"))
            (rule "add_literals" (formula "134") (term "0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "83"))
            (rule "polySimp_mulComm0" (formula "83") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "83") (term "0"))
            (rule "inEqSimp_gtToGeq" (formula "59") (term "0,0,0,1,1,0"))
            (rule "mul_literals" (formula "59") (term "1,0,0,0,0,0,1,1,0"))
            (rule "add_literals" (formula "59") (term "0,0,0,0,0,1,1,0"))
            (rule "castedGetAny" (formula "72") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0"))
            (rule "castedGetAny" (formula "73") (term "0,1,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "73") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "71"))
            (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "71") (term "0"))
            (rule "inEqSimp_gtRight" (formula "100"))
            (rule "mul_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "74") (term "0,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "74") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "71"))
            (rule "inEqSimp_gtToGeq" (formula "74") (term "1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,1,1,0"))
            (rule "assignment" (formula "75") (term "1"))
             (builtin "One Step Simplification" (formula "75"))
            (rule "applyEq" (formula "2") (term "0,0,1,0") (ifseqformula "92"))
            (rule "applyEq" (formula "3") (term "0,0,0,1,0") (ifseqformula "92"))
            (rule "applyEq" (formula "93") (term "5") (ifseqformula "87"))
            (rule "applyEq" (formula "102") (term "0") (ifseqformula "42"))
            (rule "applyEq" (formula "37") (term "0") (ifseqformula "38"))
            (rule "applyEq" (formula "78") (term "3") (ifseqformula "77"))
            (rule "applyEq" (formula "132") (term "0,0,0,1,0,0,1,0,0") (ifseqformula "91"))
            (rule "applyEq" (formula "39") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "37"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
            (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
            (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "94"))
            (rule "polySimp_mulLiterals" (formula "94") (term "0"))
            (rule "polySimp_elimOne" (formula "94") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "45"))
            (rule "polySimp_mulLiterals" (formula "45") (term "0"))
            (rule "polySimp_elimOne" (formula "45") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "89"))
            (rule "polySimp_mulLiterals" (formula "89") (term "0"))
            (rule "polySimp_elimOne" (formula "89") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
            (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "56"))
            (rule "polySimp_mulLiterals" (formula "56") (term "0"))
            (rule "polySimp_elimOne" (formula "56") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "59") (term "0,1,1,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
            (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "52"))
            (rule "polySimp_mulLiterals" (formula "52") (term "0"))
            (rule "polySimp_elimOne" (formula "52") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "80"))
            (rule "polySimp_mulLiterals" (formula "80") (term "0"))
            (rule "polySimp_elimOne" (formula "80") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "132") (term "1,0"))
            (rule "mul_literals" (formula "132") (term "1,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "83"))
            (rule "polySimp_mulLiterals" (formula "83") (term "0"))
            (rule "polySimp_elimOne" (formula "83") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0,0,1,1,0"))
            (rule "mul_literals" (formula "59") (term "1,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "73") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "73") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "71"))
            (rule "polySimp_mulLiterals" (formula "71") (term "0"))
            (rule "polySimp_elimOne" (formula "71") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "73") (term "1,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "73") (term "0,1,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "73") (term "1,1,0,1,1,0"))
            (rule "mul_literals" (formula "73") (term "0,1,1,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "132") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "132") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "132") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "132") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "132") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "132") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
            (rule "qeq_literals" (formula "1") (term "0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Exceptional Post (get)"
       (builtin "One Step Simplification" (formula "71"))
       (builtin "One Step Simplification" (formula "38"))
      (rule "insert_constant_string_value" (formula "49") (term "0") (ifseqformula "37"))
       (builtin "One Step Simplification" (formula "49"))
      (rule "insert_constant_string_value" (formula "66") (term "0") (ifseqformula "37"))
       (builtin "One Step Simplification" (formula "66"))
      (rule "insert_constant_string_value" (formula "48") (term "0") (ifseqformula "37"))
       (builtin "One Step Simplification" (formula "48"))
      (rule "insert_constant_string_value" (formula "47") (term "0") (ifseqformula "37"))
       (builtin "One Step Simplification" (formula "47"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "1,0") (ifseqformula "28"))
      (rule "castDel" (formula "49") (term "0,0"))
      (rule "castDel" (formula "66") (term "0,0"))
      (rule "castDel" (formula "48") (term "0,0"))
      (rule "castDel" (formula "47") (term "0,0"))
      (rule "andLeft" (formula "38"))
      (rule "andLeft" (formula "38"))
      (rule "andLeft" (formula "40"))
      (rule "notLeft" (formula "38"))
      (rule "close" (formula "41") (ifseqformula "40"))
   )
   (branch "Pre (get)"
       (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "52")) (ifInst ""  (formula "52")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "1,1") (ifseqformula "28"))
      (rule "wellFormedAnonEQ" (formula "69") (term "0,1") (ifseqformula "28"))
      (rule "replace_known_left" (formula "69") (term "0,0,1") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "27")))
      (rule "castedGetAny" (formula "69") (term "0,1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0,0,0,0"))
      (rule "pullOutSelect" (formula "69") (term "0,1,1,0,0,0,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_key_seq_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "5")))
      (rule "replaceKnownSelect_taclet20_5" (formula "70") (term "0,0,1,0,0,0"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_6" (formula "69") (term "0,0,1,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_6" (formula "69") (term "0,1,1,0,0,0,0"))
      (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "69") (term "1,0") (inst "i=i") (inst "i_0=i_0"))
      (rule "replaceKnownSelect_taclet20_5" (formula "69") (term "0,0,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_6" (formula "69") (term "0,0,0,0,1,0"))
      (rule "replaceKnownSelect_taclet20_5" (formula "69") (term "0,1,1,0,0,0,1,0,1,0"))
      (rule "replaceKnownSelect_taclet20_5" (formula "69") (term "0,0,0,0,1,0,1,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_6" (formula "69") (term "0,1,1,0,0,0,1,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_6" (formula "69") (term "0,0,0,0,1,0,1,0,1,0"))
      (rule "expand_inInt" (formula "69") (term "1,0,0,1,1,0"))
      (rule "expand_inInt" (formula "69") (term "1,0,0,1,0,1,0"))
      (rule "replace_int_MIN" (formula "69") (term "0,1,1,0,0,1,1,0"))
      (rule "replace_int_MAX" (formula "69") (term "1,0,1,0,0,1,1,0"))
      (rule "replace_int_MIN" (formula "69") (term "0,1,1,0,0,1,0,1,0"))
      (rule "replace_int_MAX" (formula "69") (term "1,0,1,0,0,1,0,1,0"))
      (rule "eqSymm" (formula "69") (term "0,0,1,0"))
      (rule "castedGetAny" (formula "69") (term "0,0,1,0,1,1,0"))
      (rule "castedGetAny" (formula "69") (term "0,0,1,0,1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0,0,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0,0,0,1,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "69") (term "1,1,0,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "69") (term "1,1,0,0,1,0,1,0"))
      (rule "pullOutSelect" (formula "69") (term "0,1,1,0,0,0,1,1,0") (inst "selectSK=org_apache_commons_csv_CSVRecord_value_seq_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "5")))
      (rule "replaceKnownSelect_taclet20_7" (formula "70") (term "0,0,0,0,1,0"))
      (rule "replaceKnownSelect_taclet20_7" (formula "70") (term "0,0,0,1,0,1,1,0"))
      (rule "eqSymm" (formula "70") (term "0,0,1,0"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_8" (formula "69") (term "0,1,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_8" (formula "69") (term "0,0,0,1,0,1,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_8" (formula "69") (term "0,1,1,0,0,0,1,1,0"))
      (rule "eqSymm" (formula "69") (term "0,0,1,0"))
      (rule "replace_known_left" (formula "69") (term "0,0,1,0") (ifseqformula "8"))
       (builtin "One Step Simplification" (formula "69"))
      (rule "commute_or" (formula "69") (term "1"))
      (rule "lenNonNegative" (formula "19") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "19"))
      (rule "lenNonNegative" (formula "14") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "14"))
      (rule "seqGetAlphaCast" (formula "22") (term "0"))
      (rule "castedGetAny" (formula "22") (term "0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "true_left" (formula "22"))
      (rule "seqGetAlphaCast" (formula "16") (term "0"))
      (rule "castedGetAny" (formula "16") (term "0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "lenNonNegative" (formula "18") (term "1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "18"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "1,0,1,0") (ifseqformula "1"))
      (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "56"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "replace_known_left" (formula "73") (term "1,1") (ifseqformula "28"))
       (builtin "One Step Simplification" (formula "73"))
      (rule "seqGetAlphaCast" (formula "40") (term "0"))
      (rule "castedGetAny" (formula "40") (term "0"))
       (builtin "One Step Simplification" (formula "40"))
      (rule "true_left" (formula "40"))
      (rule "seqGetAlphaCast" (formula "37") (term "0"))
      (rule "castedGetAny" (formula "37") (term "0"))
       (builtin "One Step Simplification" (formula "37"))
      (rule "true_left" (formula "37"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "72") (term "0") (ifseqformula "1"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "73"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "70") (term "0") (ifseqformula "2"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "71"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "73") (term "0") (ifseqformula "3"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "74"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "70") (term "0") (ifseqformula "4"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "71"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "74") (term "0") (ifseqformula "5"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "75"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "69") (term "0") (ifseqformula "6"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "70"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "72") (term "0") (ifseqformula "7"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "73"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "0") (ifseqformula "8"))
      (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "49"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "applyEqRigid" (formula "18") (term "1,0") (ifseqformula "19"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "1") (ifseqformula "8"))
      (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "61"))
       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "18")))
      (rule "true_left" (formula "19"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "73") (term "0") (ifseqformula "8"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "74"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "9"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "10"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "11"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "12"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "70") (term "0") (ifseqformula "13"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "71"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "74") (term "0") (ifseqformula "14"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "75"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "69") (term "0") (ifseqformula "15"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "70"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "74") (term "0") (ifseqformula "16"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "75"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "78") (term "0") (ifseqformula "17"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "79"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "77") (term "0") (ifseqformula "18"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "78"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "82") (term "0") (ifseqformula "19"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "83"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "82") (term "0") (ifseqformula "20"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "83"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "21"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "1,0") (ifseqformula "22"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "23"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "69") (term "0") (ifseqformula "24"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "70"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "56"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "Use_information_flow_contract_for_printStatus_1406103914" (formula "60") (ifseqformula "60"))
       (builtin "One Step Simplification" (formula "60"))
      (rule "true_left" (formula "60"))
      (rule "applyEq" (formula "99") (term "1,1,0,0,0,1,1") (ifseqformula "33"))
      (rule "andRight" (formula "99") (userinteraction))
      (branch "Case 1"
         (rule "instEx" (formula "53") (term "1,0") (ifseqformula "99") (userinteraction))
         (rule "andLeft" (formula "56"))
         (rule "andLeft" (formula "56"))
         (rule "andLeft" (formula "56"))
         (rule "andLeft" (formula "58"))
         (rule "andLeft" (formula "57"))
         (rule "andLeft" (formula "56"))
         (rule "andLeft" (formula "61"))
         (rule "andLeft" (formula "56"))
         (rule "andLeft" (formula "63"))
         (rule "andLeft" (formula "56"))
         (rule "andLeft" (formula "65"))
         (rule "notLeft" (formula "57"))
         (rule "andLeft" (formula "65"))
         (rule "andLeft" (formula "66"))
         (rule "andLeft" (formula "67"))
         (rule "andLeft" (formula "68"))
         (rule "notLeft" (formula "68"))
         (rule "notLeft" (formula "68"))
         (rule "exLeft" (formula "66") (inst "sk=i_3"))
         (rule "andLeft" (formula "66"))
         (rule "andLeft" (formula "66"))
         (rule "eqSymm" (formula "121") (term "1,0"))
         (rule "eqSymm" (formula "121") (term "1,1"))
         (rule "eqSymm" (formula "121") (term "0,0"))
         (rule "eqSymm" (formula "121") (term "0,1"))
         (rule "eqSymm" (formula "70") (term "1,0,0,1"))
         (rule "eqSymm" (formula "70") (term "0,0,0,0,1"))
         (rule "eqSymm" (formula "70") (term "1,0,0,0,1"))
         (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "81"))
          (builtin "One Step Simplification" (formula "60"))
         (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "82"))
          (builtin "One Step Simplification" (formula "59"))
         (rule "replace_known_left" (formula "84") (term "1,0") (ifseqformula "52"))
          (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "50")) (ifInst ""  (formula "53")))
         (rule "closeTrue" (formula "84"))
      )
      (branch "Case 2"
         (rule "andRight" (formula "99") (userinteraction))
         (branch "Case 1"
            (rule "allRight" (formula "99") (inst "sk=i_0_0") (userinteraction))
            (rule "instAll" (formula "99") (term "0,0,0,0") (ifseqformula "34") (userinteraction))
            (rule "impRight" (formula "100"))
            (rule "andLeft" (formula "58"))
            (rule "andLeft" (formula "1"))
            (rule "notRight" (formula "103"))
            (rule "andLeft" (formula "60"))
            (rule "andLeft" (formula "3"))
            (rule "andLeft" (formula "2"))
            (rule "andLeft" (formula "62"))
            (rule "andLeft" (formula "64"))
            (rule "andLeft" (formula "62"))
            (rule "andLeft" (formula "64"))
            (rule "andLeft" (formula "67"))
            (rule "andLeft" (formula "62"))
            (rule "andLeft" (formula "69"))
            (rule "andLeft" (formula "62"))
            (rule "andLeft" (formula "71"))
            (rule "notLeft" (formula "63"))
            (rule "andLeft" (formula "71"))
            (rule "andLeft" (formula "72"))
            (rule "andLeft" (formula "73"))
            (rule "andLeft" (formula "74"))
            (rule "notLeft" (formula "75"))
            (rule "notLeft" (formula "74"))
            (rule "exLeft" (formula "72") (inst "sk=i_3"))
            (rule "andLeft" (formula "72"))
            (rule "andLeft" (formula "72"))
            (rule "eqSymm" (formula "125") (term "1,0"))
            (rule "eqSymm" (formula "125") (term "1,1"))
            (rule "eqSymm" (formula "125") (term "0,0"))
            (rule "eqSymm" (formula "125") (term "0,1"))
            (rule "eqSymm" (formula "76") (term "1,0,0,1"))
            (rule "eqSymm" (formula "76") (term "0,0,0,0,1"))
            (rule "eqSymm" (formula "76") (term "1,0,0,0,1"))
            (rule "replace_known_right" (formula "66") (term "0") (ifseqformula "88"))
             (builtin "One Step Simplification" (formula "66"))
            (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "87"))
             (builtin "One Step Simplification" (formula "65"))
            (rule "replace_known_left" (formula "6") (term "1,0") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "3")) (ifInst ""  (formula "5")) (ifInst ""  (formula "2")) (ifInst ""  (formula "1")))
            (rule "closeFalse" (formula "6"))
         )
         (branch "Case 2"
            (rule "allRight" (formula "99") (inst "sk=i_3") (userinteraction))
            (rule "instAll" (formula "99") (term "0,0,0,0") (ifseqformula "34") (userinteraction))
            (rule "impRight" (formula "100"))
            (rule "andLeft" (formula "58"))
            (rule "andLeft" (formula "1"))
            (rule "notRight" (formula "103"))
            (rule "andLeft" (formula "60"))
            (rule "andLeft" (formula "3"))
            (rule "andLeft" (formula "2"))
            (rule "andLeft" (formula "62"))
            (rule "andLeft" (formula "64"))
            (rule "andLeft" (formula "62"))
            (rule "andLeft" (formula "64"))
            (rule "andLeft" (formula "67"))
            (rule "andLeft" (formula "62"))
            (rule "andLeft" (formula "69"))
            (rule "andLeft" (formula "62"))
            (rule "andLeft" (formula "71"))
            (rule "notLeft" (formula "63"))
            (rule "andLeft" (formula "71"))
            (rule "andLeft" (formula "72"))
            (rule "andLeft" (formula "73"))
            (rule "andLeft" (formula "74"))
            (rule "notLeft" (formula "75"))
            (rule "notLeft" (formula "74"))
            (rule "exLeft" (formula "72") (inst "sk=i_4"))
            (rule "andLeft" (formula "72"))
            (rule "andLeft" (formula "72"))
            (rule "eqSymm" (formula "125") (term "1,0"))
            (rule "eqSymm" (formula "125") (term "1,1"))
            (rule "eqSymm" (formula "125") (term "0,0"))
            (rule "eqSymm" (formula "125") (term "0,1"))
            (rule "eqSymm" (formula "76") (term "1,0,0,1"))
            (rule "eqSymm" (formula "76") (term "0,0,0,0,1"))
            (rule "eqSymm" (formula "76") (term "1,0,0,0,1"))
            (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "87"))
             (builtin "One Step Simplification" (formula "65"))
            (rule "replace_known_right" (formula "66") (term "0") (ifseqformula "88"))
             (builtin "One Step Simplification" (formula "66"))
            (rule "replace_known_left" (formula "6") (term "1,0,0,0") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "3")) (ifInst ""  (formula "2")) (ifInst ""  (formula "4")))
            (rule "notLeft" (formula "6"))
            (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "81"))
            (rule "polySimp_mulComm0" (formula "81") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "81") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "53"))
            (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "53") (term "0"))
            (rule "castedGetAny" (formula "74") (term "0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
            (rule "castedGetAny" (formula "74") (term "0,0,1,1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "46"))
            (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "46") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "57"))
            (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "57") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "84"))
            (rule "polySimp_mulComm0" (formula "84") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "84") (term "0"))
            (rule "castedGetAny" (formula "74") (term "0,0,0,0,1,0,1,1,0"))
            (rule "inEqSimp_gtToGeq" (formula "60") (term "0,0,0,1,1,0"))
            (rule "mul_literals" (formula "60") (term "1,0,0,0,0,0,1,1,0"))
            (rule "add_literals" (formula "60") (term "0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0,0"))
            (rule "castedGetAny" (formula "73") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "72"))
            (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "72") (term "0"))
            (rule "castedGetAny" (formula "74") (term "0,1,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "74") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "74") (term "0,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "71"))
            (rule "inEqSimp_gtToGeq" (formula "74") (term "1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,1,1,0"))
            (rule "assignment" (formula "75") (term "1"))
             (builtin "One Step Simplification" (formula "75"))
            (rule "applyEq" (formula "90") (term "0") (ifseqformula "42"))
            (rule "applyEq" (formula "37") (term "0") (ifseqformula "38"))
            (rule "applyEq" (formula "78") (term "3") (ifseqformula "77"))
            (rule "applyEq" (formula "39") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "37"))
            (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "59") (term "0,1,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
            (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "80"))
            (rule "polySimp_mulLiterals" (formula "80") (term "0"))
            (rule "polySimp_elimOne" (formula "80") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "52"))
            (rule "polySimp_mulLiterals" (formula "52") (term "0"))
            (rule "polySimp_elimOne" (formula "52") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
            (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "45"))
            (rule "polySimp_mulLiterals" (formula "45") (term "0"))
            (rule "polySimp_elimOne" (formula "45") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "56"))
            (rule "polySimp_mulLiterals" (formula "56") (term "0"))
            (rule "polySimp_elimOne" (formula "56") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
            (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "83"))
            (rule "polySimp_mulLiterals" (formula "83") (term "0"))
            (rule "polySimp_elimOne" (formula "83") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0,0,1,1,0"))
            (rule "mul_literals" (formula "59") (term "1,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
            (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "73") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "73") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "71"))
            (rule "polySimp_mulLiterals" (formula "71") (term "0"))
            (rule "polySimp_elimOne" (formula "71") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "73") (term "1,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "73") (term "0,1,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "73") (term "1,1,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,1,1,0"))
            (rule "mul_literals" (formula "73") (term "0,1,1,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
            (rule "leq_literals" (formula "5") (term "0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "pullOutSelect" (formula "122") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_0"))
            (rule "eqSymm" (formula "123") (term "1,0"))
            (rule "pullOutSelect" (formula "123") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_0"))
            (rule "eqSymm" (formula "124") (term "1,1"))
            (rule "pullOutSelect" (formula "124") (term "1,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_0"))
            (rule "pullOutSelect" (formula "125") (term "0,0,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_hashedPassword_1"))
            (rule "pullOutSelect" (formula "126") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredentialGenerator_GeneratedDataForVoter_publicSigningKey_1"))
            (rule "pullOutSelect" (formula "4") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_0"))
            (rule "pullOutSelect" (formula "128") (term "0,1,1") (inst "selectSK=java_util_Collection_seq_1"))
            (rule "pullOutSelect" (formula "6") (term "0") (inst "selectSK=java_util_Collection_seq_2"))
            (rule "applyEqReverse" (formula "130") (term "1,1,1") (ifseqformula "7"))
            (rule "hideAuxiliaryEq" (formula "7"))
            (rule "eqSymm" (formula "129") (term "1,1"))
            (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_polyasVals_1"))
            (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=java_util_Collection_seq_3"))
            (rule "applyEqReverse" (formula "131") (term "1,1,1") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "eqSymm" (formula "130") (term "1,1"))
            (rule "inEqSimp_and_subsumption3" (formula "45") (term "0,0,0"))
            (rule "leq_literals" (formula "45") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "45"))
            (rule "inEqSimp_and_subsumption3" (formula "46") (term "0,0,0"))
            (rule "leq_literals" (formula "46") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "46"))
            (rule "boxToDiamond" (formula "81") (term "1"))
             (builtin "One Step Simplification" (formula "81"))
            (rule "notLeft" (formula "81"))
            (rule "nnf_imp2or" (formula "56") (term "0"))
            (rule "nnf_imp2or" (formula "49") (term "0"))
            (rule "nnf_imp2or" (formula "66") (term "0"))
            (rule "nnf_imp2or" (formula "54") (term "0"))
            (rule "nnf_imp2or" (formula "80") (term "0"))
            (rule "nnf_imp2or" (formula "45") (term "0"))
            (rule "nnf_imp2or" (formula "46") (term "0"))
            (rule "nnf_notAnd" (formula "56") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "56") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "56") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "56") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "56") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "56") (term "1,0,0"))
            (rule "mul_literals" (formula "56") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "56") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0"))
            (rule "mul_literals" (formula "56") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "49") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "49") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "49") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "49") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "49") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "49") (term "1,0,0"))
            (rule "mul_literals" (formula "49") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "49") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
            (rule "mul_literals" (formula "49") (term "1,1,0,0"))
            (rule "nnf_imp2or" (formula "66") (term "1,0"))
            (rule "nnf_notAnd" (formula "66") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "66") (term "1,0,0"))
            (rule "times_zero_1" (formula "66") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "66") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0"))
            (rule "mul_literals" (formula "66") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "66") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "66") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "66") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "66") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "54") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "54") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "54") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "54") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "54") (term "1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "54") (term "1,0,0"))
            (rule "times_zero_1" (formula "54") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "54") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0"))
            (rule "mul_literals" (formula "54") (term "1,1,0,0"))
            (rule "nnf_imp2or" (formula "80") (term "1,0"))
            (rule "nnf_notAnd" (formula "80") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "80") (term "0,0,0"))
            (rule "mul_literals" (formula "80") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "80") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "0,0,0"))
            (rule "mul_literals" (formula "80") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "80") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "80") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "80") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "80") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "80") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "80") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "80") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "80") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "45") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0"))
            (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0"))
            (rule "mul_literals" (formula "45") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "46") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0"))
            (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0"))
            (rule "mul_literals" (formula "46") (term "1,1,0,0"))
            (rule "Static_class_invariant_axiom_for_java_math_BigInteger" (formula "72"))
            (rule "andLeft" (formula "72"))
            (rule "notLeft" (formula "72"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_CredentialGenerator" (formula "73"))
            (rule "andLeft" (formula "73"))
            (rule "andLeft" (formula "73"))
            (rule "andLeft" (formula "73"))
            (rule "notLeft" (formula "74"))
            (rule "notLeft" (formula "73"))
            (rule "Static_class_invariant_axiom_for_de_polyas_core3_open_cred_Crypto" (formula "75"))
            (rule "andLeft" (formula "75"))
            (rule "andLeft" (formula "75"))
            (rule "notLeft" (formula "77"))
            (rule "notLeft" (formula "76"))
            (rule "notLeft" (formula "75"))
            (rule "Class_invariant_axiom_for_org_apache_commons_csv_CSVRecord" (formula "75") (inst "i=i") (inst "i_0=i_0"))
            (rule "expand_inInt" (formula "75") (term "1,0,0,1"))
            (rule "expand_inInt" (formula "75") (term "1,0,0,1,0"))
            (rule "replace_int_MIN" (formula "75") (term "0,1,1,0,0,1"))
            (rule "replace_int_MAX" (formula "75") (term "1,0,1,0,0,1"))
            (rule "replace_int_MIN" (formula "75") (term "0,1,1,0,0,1,0"))
            (rule "replace_int_MAX" (formula "75") (term "1,0,1,0,0,1,0"))
            (rule "andLeft" (formula "75"))
            (rule "andLeft" (formula "75"))
            (rule "eqSymm" (formula "75"))
            (rule "castedGetAny" (formula "77") (term "0,0,1,0"))
            (rule "castedGetAny" (formula "76") (term "0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "76") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "77") (term "1,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "76") (term "0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "76") (term "1,1,0,0"))
            (rule "applyEq" (formula "77") (term "0,1,0,0,1,0,0,0") (ifseqformula "75"))
            (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "76") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "76") (term "1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "76") (term "1,1,1,0,0,0"))
            (rule "mul_literals" (formula "76") (term "0,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "76") (term "1,1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,0"))
            (rule "mul_literals" (formula "77") (term "0,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,0"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "78") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
             (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "110")) (ifInst ""  (formula "111")) (ifInst ""  (formula "112")))
            (rule "andLeft" (formula "78"))
            (rule "andLeft" (formula "78"))
            (rule "andLeft" (formula "78"))
            (rule "andLeft" (formula "78"))
            (rule "andLeft" (formula "78"))
            (rule "andLeft" (formula "78"))
            (rule "andLeft" (formula "78"))
            (rule "notLeft" (formula "79"))
            (rule "andLeft" (formula "78"))
            (rule "andLeft" (formula "78"))
            (rule "notLeft" (formula "80"))
            (rule "notLeft" (formula "79"))
            (rule "andLeft" (formula "78"))
            (rule "andLeft" (formula "78"))
            (rule "notLeft" (formula "80"))
            (rule "andLeft" (formula "78"))
            (rule "notLeft" (formula "80"))
            (rule "andLeft" (formula "78"))
            (rule "notLeft" (formula "80"))
            (rule "notLeft" (formula "79"))
            (rule "andLeft" (formula "78"))
            (rule "andLeft" (formula "78"))
            (rule "notLeft" (formula "80"))
            (rule "notLeft" (formula "79"))
            (rule "andLeft" (formula "78"))
            (rule "notLeft" (formula "79"))
            (rule "andLeft" (formula "78"))
            (rule "notLeft" (formula "79"))
            (rule "andLeft" (formula "78"))
            (rule "notLeft" (formula "79"))
            (rule "andLeft" (formula "78"))
            (rule "andLeft" (formula "78"))
            (rule "notLeft" (formula "80"))
            (rule "andLeft" (formula "78"))
            (rule "notLeft" (formula "80"))
            (rule "notLeft" (formula "79"))
            (rule "andLeft" (formula "78"))
            (rule "andLeft" (formula "78"))
            (rule "notLeft" (formula "80"))
            (rule "notLeft" (formula "78"))
            (rule "notLeft" (formula "78"))
            (rule "exLeft" (formula "83") (inst "sk=i_5"))
            (rule "andLeft" (formula "83"))
            (rule "andLeft" (formula "83"))
            (rule "exLeft" (formula "80") (inst "sk=i_2_2"))
            (rule "andLeft" (formula "80"))
            (rule "andLeft" (formula "80"))
            (rule "castedGetAny" (formula "84") (term "0,0,1,0"))
            (rule "castedGetAny" (formula "83") (term "0,0,1,0"))
            (rule "castedGetAny" (formula "79") (term "0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "84") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "83") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "79") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0"))
            (rule "castedGetAny" (formula "87") (term "0"))
            (rule "castedGetAny" (formula "82") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "83") (term "0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "86"))
            (rule "polySimp_mulComm0" (formula "86") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "86") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "79") (term "0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "81"))
            (rule "polySimp_mulComm0" (formula "81") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "81") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "85"))
            (rule "inEqSimp_commuteLeq" (formula "80"))
            (rule "applyEq" (formula "105") (term "0") (ifseqformula "78"))
            (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "84") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "84") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "84") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "84") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "84") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "83") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "83") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "83") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "83") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "83") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "79") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "79") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "86"))
            (rule "polySimp_mulLiterals" (formula "86") (term "0"))
            (rule "polySimp_elimOne" (formula "86") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "81"))
            (rule "polySimp_mulLiterals" (formula "81") (term "0"))
            (rule "polySimp_elimOne" (formula "81") (term "0"))
            (rule "nnf_notAnd" (formula "45") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "45") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "45") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0,0"))
            (rule "mul_literals" (formula "45") (term "1,0,0,1,0,0,0"))
            (rule "add_literals" (formula "45") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0"))
            (rule "mul_literals" (formula "45") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "46") (term "0,0,0"))
            (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0,0"))
            (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0,0"))
            (rule "add_literals" (formula "46") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0"))
            (rule "mul_literals" (formula "46") (term "1,1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0,0"))
            (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "46") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "46") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0,0"))
            (rule "nnf_imp2or" (formula "76") (term "0"))
            (rule "nnf_imp2or" (formula "77") (term "0"))
            (rule "nnf_imp2or" (formula "84") (term "0"))
            (rule "nnf_imp2or" (formula "83") (term "0"))
            (rule "nnf_imp2or" (formula "79") (term "0"))
            (rule "nnf_notAnd" (formula "76") (term "0,0"))
            (rule "nnf_notAnd" (formula "77") (term "0,0"))
            (rule "commute_or_2" (formula "56") (term "0"))
            (rule "nnf_notAnd" (formula "84") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "84") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "84") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "84") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "84") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "84") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "84") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "84") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "84") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "84") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "84") (term "0,0,0"))
            (rule "mul_literals" (formula "84") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "84") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "0,0,0"))
            (rule "mul_literals" (formula "84") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "83") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "83") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "83") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "83") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "83") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "83") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "83") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "83") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "83") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "83") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "83") (term "0,0,0"))
            (rule "mul_literals" (formula "83") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "83") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "0,0,0"))
            (rule "mul_literals" (formula "83") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "79") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "79") (term "0,0,0"))
            (rule "mul_literals" (formula "79") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "79") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0"))
            (rule "mul_literals" (formula "79") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "79") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "79") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "79") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "79") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "79") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "79") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "76") (term "1,0,0"))
            (rule "inEqSimp_notLeq" (formula "76") (term "0,1,0,0"))
            (rule "mul_literals" (formula "76") (term "1,0,0,0,1,0,0"))
            (rule "add_literals" (formula "76") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "76") (term "0,1,0,0"))
            (rule "mul_literals" (formula "76") (term "1,0,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "76") (term "1,1,0,0"))
            (rule "mul_literals" (formula "76") (term "1,0,0,1,1,0,0"))
            (rule "add_literals" (formula "76") (term "0,0,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "1,1,0,0"))
            (rule "mul_literals" (formula "76") (term "1,1,1,0,0"))
            (rule "nnf_notAnd" (formula "76") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "76") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "76") (term "1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "76") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "76") (term "0,0,1,0,0,0"))
            (rule "add_literals" (formula "76") (term "0,0,0,1,0,0,0"))
            (rule "add_zero_left" (formula "76") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "76") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "76") (term "1,1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "76") (term "0,0,0,0"))
            (rule "mul_literals" (formula "76") (term "1,0,0,0,0,0,0"))
            (rule "add_literals" (formula "76") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "0,0,0,0"))
            (rule "mul_literals" (formula "76") (term "1,0,0,0,0"))
            (rule "nnf_notAnd" (formula "77") (term "1,0,0"))
            (rule "inEqSimp_notGeq" (formula "77") (term "1,1,0,0"))
            (rule "mul_literals" (formula "77") (term "1,0,0,1,1,0,0"))
            (rule "add_literals" (formula "77") (term "0,0,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,1,0,0"))
            (rule "mul_literals" (formula "77") (term "1,1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "77") (term "0,1,0,0"))
            (rule "mul_literals" (formula "77") (term "1,0,0,0,1,0,0"))
            (rule "add_literals" (formula "77") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "77") (term "0,1,0,0"))
            (rule "mul_literals" (formula "77") (term "1,0,1,0,0"))
            (rule "nnf_notAnd" (formula "77") (term "0,0,0"))
            (rule "inEqSimp_notGeq" (formula "77") (term "0,0,0,0"))
            (rule "times_zero_1" (formula "77") (term "1,0,0,0,0,0,0"))
            (rule "add_literals" (formula "77") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0,0"))
            (rule "mul_literals" (formula "77") (term "1,0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "77") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "77") (term "1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "77") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "77") (term "0,0,1,0,0,0"))
            (rule "add_literals" (formula "77") (term "0,0,0,1,0,0,0"))
            (rule "add_zero_left" (formula "77") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "77") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0,0"))
            (rule "commute_or_2" (formula "49") (term "0"))
            (rule "commute_or_2" (formula "54") (term "0"))
            (rule "commute_or" (formula "66") (term "0,0"))
            (rule "Class_invariant_axiom_for_java_security_SecureRandom" (formula "74"))
            (rule "true_left" (formula "74"))
            (rule "Class_invariant_axiom_for_de_polyas_core3_open_crypto_groups_ECGroup" (formula "73"))
            (rule "andLeft" (formula "73"))
            (rule "andLeft" (formula "73"))
            (rule "andLeft" (formula "75"))
            (rule "notLeft" (formula "74"))
            (rule "notLeft" (formula "73"))
            (rule "seqGetAlphaCast" (formula "9") (term "0"))
            (rule "castedGetAny" (formula "9") (term "0"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "true_left" (formula "9"))
            (rule "methodBodyExpand" (formula "127") (term "1") (newnames "heapBefore_generateDataForVoter_0,savedHeapBefore_generateDataForVoter_0"))
             (builtin "One Step Simplification" (formula "127"))
            (rule "commute_and_2" (formula "66") (term "0,1,1,0"))
            (rule "seqGetAlphaCast" (formula "128") (term "0"))
            (rule "castedGetAny" (formula "1") (term "0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "seqGetAlphaCast" (formula "90") (term "0"))
            (rule "castedGetAny" (formula "90") (term "0"))
             (builtin "One Step Simplification" (formula "90"))
            (rule "true_left" (formula "90"))
            (rule "charLiteral_to_int" (formula "91") (term "1,1,1,0,1,1,0"))
            (rule "add_literals" (formula "91") (term "1,1,0,1,1,0"))
            (rule "commute_or_2" (formula "45") (term "0"))
            (rule "commute_or_2" (formula "46") (term "0"))
            (rule "lenNonNegative" (formula "89") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "89"))
            (rule "commute_or_2" (formula "84") (term "0"))
            (rule "commute_or" (formula "56") (term "0,0"))
            (rule "commute_or_2" (formula "83") (term "0"))
            (rule "equalityToSeqGetAndSeqLenLeft" (formula "7") (inst "iv=iv"))
            (rule "andLeft" (formula "7"))
            (rule "applyEq" (formula "8") (term "0,1,1,0,0") (ifseqformula "9"))
            (rule "applyEq" (formula "8") (term "0,0,1,0") (ifseqformula "9"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "true_left" (formula "8"))
            (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "equalityToSeqGetAndSeqLenLeft" (formula "2") (inst "iv=iv"))
            (rule "andLeft" (formula "2"))
            (rule "applyEq" (formula "3") (term "0,1,1,0,0") (ifseqformula "4"))
            (rule "applyEq" (formula "3") (term "0,0,1,0") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "commute_or_2" (formula "79") (term "0"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_jce_spec_ECNamedCurveParameterSpec" (formula "74"))
            (rule "andLeft" (formula "74"))
            (rule "notLeft" (formula "74"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_custom_sec_SecP256K1Curve" (formula "73"))
            (rule "true_left" (formula "73"))
            (rule "commute_or_2" (formula "75") (term "0,0"))
            (rule "commute_or_2" (formula "76") (term "0,0"))
            (rule "commute_or" (formula "49") (term "0,0"))
            (rule "commute_or" (formula "54") (term "0,0"))
            (rule "commute_or_2" (formula "56") (term "0"))
            (rule "Class_invariant_axiom_for_org_bouncycastle_math_ec_ECPoint" (formula "73"))
            (rule "true_left" (formula "73"))
            (rule "commute_or_2" (formula "45") (term "0,0"))
            (rule "commute_or_2" (formula "46") (term "0,0"))
            (rule "commute_or" (formula "82") (term "0,0"))
            (rule "commute_or" (formula "81") (term "0,0"))
            (rule "commute_or_2" (formula "49") (term "0"))
            (rule "commute_or_2" (formula "54") (term "0"))
            (rule "commute_or" (formula "77") (term "0,0"))
            (rule "lenNonNegative" (formula "73") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "73"))
            (rule "applyEq" (formula "73") (term "0") (ifseqformula "74"))
            (rule "commute_or" (formula "45") (term "0,0,0"))
            (rule "commute_or_2" (formula "45") (term "0,0"))
            (rule "commute_or_2" (formula "45") (term "0"))
            (rule "commute_or" (formula "46") (term "0,0,0"))
            (rule "commute_or_2" (formula "46") (term "0,0"))
            (rule "commute_or_2" (formula "46") (term "0"))
            (rule "commute_or" (formula "74") (term "1,0,0,0"))
            (rule "commute_or" (formula "75") (term "1,0,0,0"))
            (rule "commute_and" (formula "66") (term "0,0,1,1,0"))
            (rule "shift_paren_or" (formula "74") (term "0,0,0"))
            (rule "commute_or_2" (formula "74") (term "0"))
            (rule "commute_or_2" (formula "74") (term "0,0"))
            (rule "commute_or_2" (formula "74") (term "0,0,0"))
            (rule "shift_paren_or" (formula "75") (term "0,0,0"))
            (rule "commute_or_2" (formula "75") (term "0"))
            (rule "commute_or_2" (formula "75") (term "0,0"))
            (rule "commute_or_2" (formula "75") (term "0,0,0"))
            (rule "commute_or" (formula "74") (term "0,0,0,0"))
            (rule "commute_or_2" (formula "74") (term "0,0,0"))
            (rule "inEqSimp_or_subsumption1" (formula "74") (term "0,0,0"))
            (rule "qeq_literals" (formula "74") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "74"))
            (rule "commute_or" (formula "75") (term "0,0,0,0"))
            (rule "commute_or_2" (formula "75") (term "0,0,0"))
            (rule "inEqSimp_or_subsumption1" (formula "75") (term "0,0,0"))
            (rule "qeq_literals" (formula "75") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "75"))
            (rule "seqGetAlphaCast" (formula "85") (term "0"))
            (rule "castedGetAny" (formula "85") (term "0"))
             (builtin "One Step Simplification" (formula "85"))
            (rule "true_left" (formula "85"))
            (rule "seqGetAlphaCast" (formula "80") (term "0"))
            (rule "castedGetAny" (formula "80") (term "0"))
             (builtin "One Step Simplification" (formula "80"))
            (rule "true_left" (formula "80"))
            (rule "commute_and_2" (formula "66") (term "0,1,1,0"))
            (rule "lenNonNegative" (formula "84") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "84"))
            (rule "lenNonNegative" (formula "79") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "79"))
            (rule "ex_pull_out3" (formula "92") (term "1,0"))
            (rule "cnf_rightDist" (formula "92") (term "0,1,0"))
            (rule "commute_or" (formula "92") (term "1,0,1,0"))
             (builtin "Use Operation Contract" (formula "129") (newnames "heapBefore_printStatus_0,exc_136,heapAfter_printStatus_0,anon_heap_printStatus_0") (contract "de.polyas.core3.open.cred.CredTool[de.polyas.core3.open.cred.CredTool::printStatus()].JML normal_behavior operation contract.0"))
            (branch "Post (printStatus)"
                (builtin "One Step Simplification" (formula "133"))
                (builtin "One Step Simplification" (formula "104"))
                (builtin "One Step Simplification" (formula "106") (ifInst ""  (formula "67")))
                (builtin "One Step Simplification" (formula "105"))
               (rule "andLeft" (formula "104"))
               (rule "andLeft" (formula "105"))
               (rule "andLeft" (formula "106"))
               (rule "notLeft" (formula "106"))
               (rule "variableDeclarationFinalAssign" (formula "135") (term "1"))
               (rule "variableDeclarationFinal" (formula "135") (term "1") (newnames "voterId_10"))
               (rule "applyEq" (formula "106") (term "3") (ifseqformula "105"))
               (rule "pullOutSelect" (formula "108") (term "0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_print_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "105"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "109") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "107") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
                (builtin "One Step Simplification" (formula "107") (ifInst ""  (formula "113")) (ifInst ""  (formula "112")) (ifInst ""  (formula "114")) (ifInst ""  (formula "147")) (ifInst ""  (formula "148")) (ifInst ""  (formula "149")) (ifInst ""  (formula "116")) (ifInst ""  (formula "117")) (ifInst ""  (formula "118")) (ifInst ""  (formula "119")) (ifInst ""  (formula "120")) (ifInst ""  (formula "121")) (ifInst ""  (formula "122")) (ifInst ""  (formula "123")) (ifInst ""  (formula "124")) (ifInst ""  (formula "125")) (ifInst ""  (formula "126")) (ifInst ""  (formula "127")) (ifInst ""  (formula "128")) (ifInst ""  (formula "129")) (ifInst ""  (formula "76")) (ifInst ""  (formula "76")))
               (rule "andLeft" (formula "107"))
               (rule "andLeft" (formula "107"))
               (rule "andLeft" (formula "107"))
               (rule "andLeft" (formula "107"))
               (rule "andLeft" (formula "107"))
               (rule "notLeft" (formula "107"))
               (rule "exLeft" (formula "111") (inst "sk=i_6"))
               (rule "andLeft" (formula "111"))
               (rule "andLeft" (formula "111"))
               (rule "exLeft" (formula "108") (inst "sk=i_2_3"))
               (rule "andLeft" (formula "108"))
               (rule "andLeft" (formula "108"))
               (rule "castedGetAny" (formula "112") (term "0,0,1,0"))
               (rule "castedGetAny" (formula "111") (term "0,0,1,0"))
               (rule "castedGetAny" (formula "107") (term "0,0,1,0"))
               (rule "castedGetAny" (formula "115") (term "0"))
               (rule "castedGetAny" (formula "110") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "112") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "112") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "111") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "111") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "107") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "107") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "114"))
               (rule "polySimp_mulComm0" (formula "114") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "114") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "109"))
               (rule "polySimp_mulComm0" (formula "109") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "109") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "112") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "111") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "107") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "113"))
               (rule "inEqSimp_commuteLeq" (formula "108"))
               (rule "applyEq" (formula "116") (term "0") (ifseqformula "76"))
               (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "112") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "112") (term "1,1,0,0"))
               (rule "mul_literals" (formula "112") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "112") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "112") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "111") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "111") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "111") (term "1,1,0,0"))
               (rule "mul_literals" (formula "111") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "111") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "111") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "107") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "107") (term "1,1,0,0"))
               (rule "mul_literals" (formula "107") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "107") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "107") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "114"))
               (rule "polySimp_mulLiterals" (formula "114") (term "0"))
               (rule "polySimp_elimOne" (formula "114") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "109"))
               (rule "polySimp_mulLiterals" (formula "109") (term "0"))
               (rule "polySimp_elimOne" (formula "109") (term "0"))
               (rule "nnf_imp2or" (formula "112") (term "0"))
               (rule "nnf_imp2or" (formula "111") (term "0"))
               (rule "nnf_imp2or" (formula "107") (term "0"))
               (rule "nnf_notAnd" (formula "112") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "112") (term "0,0,0"))
               (rule "times_zero_1" (formula "112") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "112") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "0,0,0"))
               (rule "mul_literals" (formula "112") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "112") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "112") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "112") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "112") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "112") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "112") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "112") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "112") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "112") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "111") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "111") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "111") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "111") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "111") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "111") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "111") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "111") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "111") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "111") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "111") (term "0,0,0"))
               (rule "times_zero_1" (formula "111") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "111") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "111") (term "0,0,0"))
               (rule "mul_literals" (formula "111") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "107") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "107") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "107") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "107") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "107") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "107") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "107") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "107") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "107") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "107") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "107") (term "0,0,0"))
               (rule "times_zero_1" (formula "107") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "107") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "0,0,0"))
               (rule "mul_literals" (formula "107") (term "1,0,0,0"))
               (rule "commute_or_2" (formula "112") (term "0"))
               (rule "cnf_rightDist" (formula "92") (term "0,0,1,0"))
               (rule "commute_or_2" (formula "111") (term "0"))
               (rule "commute_or_2" (formula "107") (term "0"))
               (rule "commute_or" (formula "112") (term "0,0"))
               (rule "commute_or" (formula "111") (term "0,0"))
               (rule "commute_or" (formula "107") (term "0,0"))
               (rule "ex_pull_out3" (formula "66") (term "1,0"))
               (rule "commute_or" (formula "92") (term "1,0,0,1,0"))
               (rule "cnf_rightDist" (formula "66") (term "0,1,0"))
               (rule "commute_or" (formula "66") (term "1,0,1,0"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "179") (term "1,0,0,1") (ifseqformula "67"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "118"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "92") (term "1") (ifseqformula "68"))
               (rule "replace_known_right" (formula "92") (term "0") (ifseqformula "126"))
                (builtin "One Step Simplification" (formula "92"))
               (rule "methodCallWithAssignmentUnfoldArguments" (formula "142") (term "1"))
               (rule "variableDeclarationAssign" (formula "142") (term "1"))
               (rule "variableDeclaration" (formula "142") (term "1") (newnames "var_2"))
               (rule "assignment" (formula "142") (term "1"))
                (builtin "One Step Simplification" (formula "142"))
               (rule "variableDeclarationAssign" (formula "142") (term "1"))
               (rule "variableDeclaration" (formula "142") (term "1") (newnames "var_3"))
               (rule "assignment_read_attribute_this" (formula "142") (term "1"))
                (builtin "One Step Simplification" (formula "142"))
               (rule "pullOutSelect" (formula "142") (term "0,1,0") (inst "selectSK=de_polyas_core3_open_cred_CredTool_idCol_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "107"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "147")) (ifInst ""  (formula "70")))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "147")))
               (rule "applyEqReverse" (formula "143") (term "0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "allLeft" (formula "47") (inst "t=i_3"))
               (rule "replace_known_left" (formula "47") (term "0,0,0,0") (ifseqformula "10"))
                (builtin "One Step Simplification" (formula "47"))
               (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "47") (term "0,0") (ifseqformula "11"))
               (rule "qeq_literals" (formula "47") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "47"))
               (rule "inEqSimp_contradInEq0" (formula "47") (term "0") (ifseqformula "13"))
               (rule "qeq_literals" (formula "47") (term "0,0"))
                (builtin "One Step Simplification" (formula "47"))
               (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "47"))
               (rule "andLeft" (formula "12"))
               (rule "inEqSimp_homoInEq1" (formula "12"))
               (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
               (rule "add_literals" (formula "12") (term "1,1,0"))
               (rule "times_zero_1" (formula "12") (term "1,0"))
               (rule "add_literals" (formula "12") (term "0"))
               (rule "leq_literals" (formula "12"))
               (rule "closeFalse" (formula "12"))
            )
            (branch "Exceptional Post (printStatus)"
                (builtin "One Step Simplification" (formula "104"))
                (builtin "One Step Simplification" (formula "131"))
               (rule "andLeft" (formula "104"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "105") (term "1,0") (ifseqformula "104"))
               (rule "andLeft" (formula "105"))
               (rule "andLeft" (formula "106"))
               (rule "andLeft" (formula "105"))
               (rule "notLeft" (formula "107"))
               (rule "notLeft" (formula "105"))
               (rule "close" (formula "107") (ifseqformula "106"))
            )
            (branch "Pre (printStatus)"
                (builtin "One Step Simplification" (formula "129") (ifInst ""  (formula "67")))
               (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "129") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
                (builtin "One Step Simplification" (formula "129") (ifInst ""  (formula "107")) (ifInst ""  (formula "106")) (ifInst ""  (formula "108")) (ifInst ""  (formula "141")) (ifInst ""  (formula "142")) (ifInst ""  (formula "143")) (ifInst ""  (formula "110")) (ifInst ""  (formula "111")) (ifInst ""  (formula "112")) (ifInst ""  (formula "113")) (ifInst ""  (formula "114")) (ifInst ""  (formula "115")) (ifInst ""  (formula "116")) (ifInst ""  (formula "117")) (ifInst ""  (formula "118")) (ifInst ""  (formula "119")) (ifInst ""  (formula "120")) (ifInst ""  (formula "121")) (ifInst ""  (formula "122")) (ifInst ""  (formula "123")) (ifInst ""  (formula "76")) (ifInst ""  (formula "76")))
               (rule "castedGetAny" (formula "129") (term "0,1,0,1"))
               (rule "castedGetAny" (formula "129") (term "0,1,0,1,0,0,0"))
               (rule "castedGetAny" (formula "129") (term "0,0,1,0,1,0,0,0,0"))
               (rule "castedGetAny" (formula "129") (term "0,0,1,0,1,0,0"))
               (rule "castedGetAny" (formula "129") (term "0,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "129") (term "1,0,0,1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "129") (term "1,0,0,1,0,0,1,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "129") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "129") (term "1,0,0,1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "129") (term "1,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "129") (term "1,0,0,1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "129") (term "1,0,0,1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "129") (term "1,0,0,1,0,0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "129") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "129") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "129") (term "0,0,0,1,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "129") (term "0,0,0,1,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "129") (term "0,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "129") (term "0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "129") (term "0,0,0,1,0,0"))
               (rule "applyEq" (formula "129") (term "0,0,0,0,0,0,0") (ifseqformula "76"))
               (rule "replace_known_right" (formula "129") (term "0,0,0,0,0,0") (ifseqformula "109"))
                (builtin "One Step Simplification" (formula "129"))
               (rule "inEqSimp_sepPosMonomial0" (formula "129") (term "1,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "129") (term "1,1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "129") (term "1,1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "129") (term "1,1,1,0,0,1,0,0"))
               (rule "mul_literals" (formula "129") (term "0,1,1,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "129") (term "1,1,1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "129") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "129") (term "1,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "129") (term "1,1,0,0,1"))
               (rule "mul_literals" (formula "129") (term "0,1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "129") (term "1,1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "129") (term "1,1,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "129") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "129") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "129") (term "1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "129") (term "1,1,1,0,0,1,0"))
               (rule "mul_literals" (formula "129") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "129") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "129") (term "1,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "129") (term "1,1,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "129") (term "1,1,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "129") (term "1,1,1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "129") (term "0,1,1,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "129") (term "1,1,1,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "129") (term "1,0,0,1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "129") (term "1,1,0,0,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "129") (term "1,1,0,0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "129") (term "1,1,1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "129") (term "0,1,1,0,0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "129") (term "1,1,1,0,0,1,0,0,0"))
               (rule "nnf_imp2or" (formula "129") (term "0,1,0,0"))
               (rule "nnf_imp2or" (formula "129") (term "0,1,0"))
               (rule "nnf_notAnd" (formula "129") (term "0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "129") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "129") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "129") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "129") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "129") (term "0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "129") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "129") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "129") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "129") (term "1,1,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "129") (term "0,0,0,1,0"))
               (rule "times_zero_1" (formula "129") (term "1,0,0,0,0,0,1,0"))
               (rule "add_zero_right" (formula "129") (term "0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "129") (term "0,0,0,1,0"))
               (rule "mul_literals" (formula "129") (term "1,0,0,0,1,0"))
               (rule "nnf_imp2or" (formula "129") (term "0,0,0,0,0"))
               (rule "nnf_notAnd" (formula "129") (term "0,0,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "129") (term "1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "129") (term "1,0,0,1,0,0,1,0,0"))
               (rule "mul_literals" (formula "129") (term "0,1,0,0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "129") (term "0,0,1,0,0,1,0,0"))
               (rule "add_literals" (formula "129") (term "0,0,0,1,0,0,1,0,0"))
               (rule "add_zero_left" (formula "129") (term "0,0,1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "129") (term "1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "129") (term "1,1,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "129") (term "1,1,0,0,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "129") (term "0,0,0,1,0,0"))
               (rule "times_zero_1" (formula "129") (term "1,0,0,0,0,0,1,0,0"))
               (rule "add_zero_right" (formula "129") (term "0,0,0,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "129") (term "0,0,0,1,0,0"))
               (rule "mul_literals" (formula "129") (term "1,0,0,0,1,0,0"))
               (rule "nnf_notAnd" (formula "129") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "129") (term "0,0,0,0,0,0,0"))
               (rule "times_zero_1" (formula "129") (term "1,0,0,0,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "129") (term "0,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "129") (term "0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "129") (term "1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "129") (term "1,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "129") (term "1,0,0,1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "129") (term "0,1,0,0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "129") (term "0,0,1,0,0,0,0,0,0"))
               (rule "add_literals" (formula "129") (term "0,0,0,1,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "129") (term "0,0,1,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "129") (term "1,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "129") (term "1,1,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "129") (term "1,1,0,0,0,0,0,0"))
               (rule "cnf_rightDist" (formula "92") (term "0,0,1,0"))
               (rule "ex_pull_out3" (formula "66") (term "1,0"))
               (rule "commute_or" (formula "92") (term "1,0,0,1,0"))
               (rule "andRight" (formula "129"))
               (branch
                  (rule "andRight" (formula "129"))
                  (branch
                     (rule "andRight" (formula "129"))
                     (branch
                        (rule "andRight" (formula "129"))
                        (branch
                           (rule "allRight" (formula "129") (inst "sk=i_3_0"))
                           (rule "orRight" (formula "129"))
                           (rule "orRight" (formula "129"))
                           (rule "notRight" (formula "131"))
                           (rule "inEqSimp_leqRight" (formula "130"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "131"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "cnf_rightDist" (formula "69") (term "0,1,0"))
                           (rule "commute_or" (formula "69") (term "1,0,1,0"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "94") (term "1") (ifseqformula "70"))
                           (rule "replace_known_right" (formula "94") (term "0") (ifseqformula "117"))
                            (builtin "One Step Simplification" (formula "94"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "171") (term "1,0,0,1") (ifseqformula "70"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "111"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "allLeft" (formula "81") (inst "t=i_3_0"))
                           (rule "replace_known_left" (formula "81") (term "0,0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "81"))
                           (rule "inEqSimp_commuteGeq" (formula "81") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "81") (term "1") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "81") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "81") (term "0,0,1"))
                           (rule "add_literals" (formula "81") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "81") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "81") (term "0,0,1"))
                           (rule "leq_literals" (formula "81") (term "0,1"))
                            (builtin "One Step Simplification" (formula "81"))
                           (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "81"))
                           (rule "qeq_literals" (formula "3") (term "0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "closeFalse" (formula "3"))
                        )
                        (branch
                           (rule "nnf_ex2all" (formula "129"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "commute_or_2" (formula "1") (term "0"))
                           (rule "commute_or" (formula "1") (term "0,0"))
                           (rule "cnf_rightDist" (formula "67") (term "0,1,0"))
                           (rule "commute_or" (formula "67") (term "1,0,1,0"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "168") (term "1,0,0,1") (ifseqformula "68"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "108"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "93") (term "1") (ifseqformula "69"))
                           (rule "replace_known_right" (formula "93") (term "0") (ifseqformula "116"))
                            (builtin "One Step Simplification" (formula "93"))
                           (rule "cnf_rightDist" (formula "68") (term "0,0,1,0"))
                           (rule "commute_or" (formula "68") (term "1,0,0,1,0"))
                           (rule "allLeft" (formula "48") (inst "t=i_3"))
                           (rule "replace_known_left" (formula "48") (term "0,0,0,0") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "48"))
                           (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "13"))
                           (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                           (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "48") (term "0,0,1"))
                           (rule "leq_literals" (formula "48") (term "0,1"))
                            (builtin "One Step Simplification" (formula "48"))
                           (rule "inEqSimp_contradInEq0" (formula "48") (term "1") (ifseqformula "14"))
                           (rule "qeq_literals" (formula "48") (term "0,1"))
                            (builtin "One Step Simplification" (formula "48"))
                           (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "48"))
                           (rule "leq_literals" (formula "14") (term "0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "47"))
                           (rule "qeq_literals" (formula "12") (term "0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "closeFalse" (formula "12"))
                        )
                     )
                     (branch
                        (rule "allRight" (formula "129") (inst "sk=i_1_0"))
                        (rule "orRight" (formula "129"))
                        (rule "orRight" (formula "129"))
                        (rule "notRight" (formula "131"))
                        (rule "inEqSimp_leqRight" (formula "130"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "131"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "cnf_rightDist" (formula "69") (term "0,1,0"))
                        (rule "commute_or" (formula "69") (term "1,0,1,0"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "170") (term "1,0,0,1") (ifseqformula "70"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "110"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "1") (ifseqformula "71"))
                        (rule "replace_known_right" (formula "95") (term "0") (ifseqformula "118"))
                         (builtin "One Step Simplification" (formula "95"))
                        (rule "allLeft" (formula "86") (inst "t=i_1_0"))
                        (rule "replace_known_left" (formula "86") (term "0,0,0") (ifseqformula "4"))
                         (builtin "One Step Simplification" (formula "86"))
                        (rule "inEqSimp_commuteGeq" (formula "86") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "86") (term "1") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "86") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "86") (term "0,0,1"))
                        (rule "add_literals" (formula "86") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "86") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "86") (term "0,0,1"))
                        (rule "leq_literals" (formula "86") (term "0,1"))
                         (builtin "One Step Simplification" (formula "86"))
                        (rule "inEqSimp_contradInEq1" (formula "86") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "86") (term "0"))
                         (builtin "One Step Simplification" (formula "86"))
                        (rule "closeFalse" (formula "86"))
                     )
                  )
                  (branch
                     (rule "allRight" (formula "129") (inst "sk=i_0_0"))
                     (rule "orRight" (formula "129"))
                     (rule "notRight" (formula "130"))
                     (rule "orRight" (formula "130"))
                     (rule "inEqSimp_leqRight" (formula "130"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "131"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "cnf_rightDist" (formula "69") (term "0,1,0"))
                     (rule "commute_or" (formula "69") (term "1,0,1,0"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "170") (term "1,0,0,1") (ifseqformula "70"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "110"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "95") (term "1") (ifseqformula "71"))
                     (rule "replace_known_right" (formula "95") (term "0") (ifseqformula "118"))
                      (builtin "One Step Simplification" (formula "95"))
                     (rule "allLeft" (formula "87") (inst "t=i_0_0"))
                     (rule "replace_known_left" (formula "87") (term "0,0,0") (ifseqformula "4"))
                      (builtin "One Step Simplification" (formula "87"))
                     (rule "inEqSimp_commuteGeq" (formula "87") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "87") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "87") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "87") (term "0,0,1"))
                     (rule "add_literals" (formula "87") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "87") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "87") (term "0,0,1"))
                     (rule "leq_literals" (formula "87") (term "0,1"))
                      (builtin "One Step Simplification" (formula "87"))
                     (rule "inEqSimp_contradInEq1" (formula "87") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "87") (term "0"))
                      (builtin "One Step Simplification" (formula "87"))
                     (rule "closeFalse" (formula "87"))
                  )
               )
               (branch
                  (rule "nnf_ex2all" (formula "129"))
                  (rule "nnf_notAnd" (formula "1") (term "0"))
                  (rule "nnf_notAnd" (formula "1") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                  (rule "commute_or_2" (formula "1") (term "0"))
                  (rule "commute_or" (formula "1") (term "0,0"))
                  (rule "cnf_rightDist" (formula "67") (term "0,1,0"))
                  (rule "commute_or" (formula "67") (term "1,0,1,0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "168") (term "1,0,0,1") (ifseqformula "68"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "108"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "93") (term "1") (ifseqformula "69"))
                  (rule "replace_known_right" (formula "93") (term "0") (ifseqformula "116"))
                   (builtin "One Step Simplification" (formula "93"))
                  (rule "cnf_rightDist" (formula "68") (term "0,0,1,0"))
                  (rule "commute_or" (formula "68") (term "1,0,0,1,0"))
                  (rule "allLeft" (formula "48") (inst "t=i_3"))
                  (rule "replace_known_left" (formula "48") (term "0,0,0,0") (ifseqformula "11"))
                   (builtin "One Step Simplification" (formula "48"))
                  (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                  (rule "inEqSimp_contradInEq0" (formula "48") (term "1,0") (ifseqformula "14"))
                  (rule "qeq_literals" (formula "48") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "48"))
                  (rule "inEqSimp_contradInEq1" (formula "48") (term "0") (ifseqformula "12"))
                  (rule "qeq_literals" (formula "48") (term "0,0"))
                   (builtin "One Step Simplification" (formula "48"))
                  (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "48"))
                  (rule "andLeft" (formula "13"))
                  (rule "inEqSimp_homoInEq1" (formula "13"))
                  (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                  (rule "add_literals" (formula "13") (term "1,1,0"))
                  (rule "times_zero_1" (formula "13") (term "1,0"))
                  (rule "add_zero_right" (formula "13") (term "0"))
                  (rule "leq_literals" (formula "13"))
                  (rule "closeFalse" (formula "13"))
               )
            )
         )
      )
   )
   (branch "Null reference (var = null)"
       (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "71")))
      (rule "closeTrue" (formula "69"))
   )
)
(branch "Exceptional Post (printStatus)"
    (builtin "One Step Simplification" (formula "58"))
    (builtin "One Step Simplification" (formula "27"))
   (rule "andLeft" (formula "27"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1,0") (ifseqformula "27"))
   (rule "andLeft" (formula "28"))
   (rule "andLeft" (formula "28"))
   (rule "andLeft" (formula "30"))
   (rule "notLeft" (formula "28"))
   (rule "close" (formula "31") (ifseqformula "30"))
)
(branch "Pre (printStatus)"
    (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "1")))
   (rule "Class_invariant_axiom_for_de_polyas_core3_open_cred_CredTool" (formula "56") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3"))
    (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "29")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")) (ifInst ""  (formula "42")) (ifInst ""  (formula "43")) (ifInst ""  (formula "44")) (ifInst ""  (formula "45")) (ifInst ""  (formula "46")) (ifInst ""  (formula "47")) (ifInst ""  (formula "48")) (ifInst ""  (formula "49")) (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
   (rule "castedGetAny" (formula "56") (term "0,1,0,1"))
   (rule "castedGetAny" (formula "56") (term "0,1,0,1,0,0,0"))
   (rule "castedGetAny" (formula "56") (term "0,0,1,0,1,0"))
   (rule "castedGetAny" (formula "56") (term "0,0,1,0,1,0,0"))
   (rule "castedGetAny" (formula "56") (term "0,0,1,0,1,0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,1,0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,1,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,1"))
   (rule "applyEqRigid" (formula "56") (term "0,0,0,0,0,0,0") (ifseqformula "10"))
   (rule "replace_known_right" (formula "56") (term "0,0,0,0,0,0") (ifseqformula "35"))
    (builtin "One Step Simplification" (formula "56"))
   (rule "lenNonNegative" (formula "7") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "7"))
   (rule "lenNonNegative" (formula "19") (term "1"))
   (rule "inEqSimp_commuteLeq" (formula "19"))
   (rule "lenNonNegative" (formula "14") (term "1"))
   (rule "inEqSimp_commuteLeq" (formula "14"))
   (rule "seqGetAlphaCast" (formula "22") (term "0"))
   (rule "castedGetAny" (formula "22") (term "0"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "true_left" (formula "22"))
   (rule "seqGetAlphaCast" (formula "16") (term "0"))
   (rule "castedGetAny" (formula "16") (term "0"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "true_left" (formula "16"))
   (rule "lenNonNegative" (formula "18") (term "1,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "18"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "1") (ifseqformula "1"))
   (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "44"))
    (builtin "One Step Simplification" (formula "27"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "1"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "2"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "3"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "4"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1,0") (ifseqformula "5"))
   (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "65"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "1,0,1") (ifseqformula "5"))
   (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "54"))
    (builtin "One Step Simplification" (formula "27"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "5"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "6"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "7"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "8"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "9"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "10"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "11"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "12"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "13"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "14"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "15"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "16"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "17"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "1") (ifseqformula "18"))
   (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "60"))
    (builtin "One Step Simplification" (formula "29"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "74") (term "0") (ifseqformula "18"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "75"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "73") (term "0") (ifseqformula "19"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "74"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "32") (term "0") (ifseqformula "20"))
   (rule "applyEqRigid" (formula "32") (term "1,0,1") (ifseqformula "33"))
   (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "31"))
    (builtin "One Step Simplification" (formula "32"))
   (rule "true_left" (formula "32"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "1,0") (ifseqformula "20"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "21"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "22"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "andRight" (formula "86") (userinteraction))
   (branch "Case 1"
      (rule "andRight" (formula "86") (userinteraction))
      (branch "Case 1"
         (rule "andRight" (formula "86") (userinteraction))
         (branch "Case 1"
            (rule "andRight" (formula "86") (userinteraction))
            (branch "Case 1"
               (rule "allRight" (formula "86") (inst "sk=i_3_0") (userinteraction))
               (rule "instAll" (formula "86") (term "0,0,0") (ifseqformula "36") (userinteraction))
               (rule "andLeft" (formula "56"))
               (rule "impRight" (formula "88"))
               (rule "andLeft" (formula "57"))
               (rule "notRight" (formula "90"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "59"))
               (rule "andLeft" (formula "61"))
               (rule "andLeft" (formula "59"))
               (rule "andLeft" (formula "61"))
               (rule "andLeft" (formula "64"))
               (rule "andLeft" (formula "59"))
               (rule "andLeft" (formula "66"))
               (rule "andLeft" (formula "59"))
               (rule "andLeft" (formula "68"))
               (rule "notLeft" (formula "60"))
               (rule "andLeft" (formula "68"))
               (rule "andLeft" (formula "69"))
               (rule "andLeft" (formula "70"))
               (rule "andLeft" (formula "71"))
               (rule "notLeft" (formula "71"))
               (rule "notLeft" (formula "71"))
               (rule "exLeft" (formula "69") (inst "sk=i_2"))
               (rule "andLeft" (formula "69"))
               (rule "andLeft" (formula "69"))
               (rule "eqSymm" (formula "110") (term "0,0"))
               (rule "eqSymm" (formula "110") (term "1,0"))
               (rule "eqSymm" (formula "110") (term "1,1"))
               (rule "eqSymm" (formula "110") (term "0,1"))
               (rule "eqSymm" (formula "73") (term "1,0,0,1"))
               (rule "eqSymm" (formula "73") (term "1,0,0,0,1"))
               (rule "eqSymm" (formula "73") (term "0,0,0,0,1"))
               (rule "replace_known_right" (formula "62") (term "0") (ifseqformula "75"))
                (builtin "One Step Simplification" (formula "62"))
               (rule "replace_known_right" (formula "63") (term "0") (ifseqformula "74"))
                (builtin "One Step Simplification" (formula "63"))
               (rule "replace_known_left" (formula "4") (term "1,0") (ifseqformula "2"))
                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "3")) (ifInst ""  (formula "1")))
               (rule "closeFalse" (formula "4"))
            )
            (branch "Case 2"
               (rule "instEx" (formula "40") (term "1,0") (ifseqformula "86") (userinteraction))
               (rule "andLeft" (formula "55"))
               (rule "andLeft" (formula "55"))
               (rule "andLeft" (formula "55"))
               (rule "andLeft" (formula "57"))
               (rule "andLeft" (formula "55"))
               (rule "andLeft" (formula "57"))
               (rule "andLeft" (formula "60"))
               (rule "andLeft" (formula "55"))
               (rule "andLeft" (formula "62"))
               (rule "andLeft" (formula "55"))
               (rule "andLeft" (formula "64"))
               (rule "notLeft" (formula "56"))
               (rule "andLeft" (formula "64"))
               (rule "andLeft" (formula "65"))
               (rule "andLeft" (formula "66"))
               (rule "andLeft" (formula "67"))
               (rule "notLeft" (formula "68"))
               (rule "notLeft" (formula "67"))
               (rule "exLeft" (formula "65") (inst "sk=i_2"))
               (rule "andLeft" (formula "65"))
               (rule "andLeft" (formula "65"))
               (rule "eqSymm" (formula "108") (term "0,1"))
               (rule "eqSymm" (formula "108") (term "0,0"))
               (rule "eqSymm" (formula "108") (term "1,0"))
               (rule "eqSymm" (formula "108") (term "1,1"))
               (rule "eqSymm" (formula "69") (term "1,0,0,1"))
               (rule "eqSymm" (formula "69") (term "0,0,0,0,1"))
               (rule "eqSymm" (formula "69") (term "1,0,0,0,1"))
               (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "70"))
                (builtin "One Step Simplification" (formula "58"))
               (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "71"))
                (builtin "One Step Simplification" (formula "59"))
               (rule "replace_known_left" (formula "73") (term "0,0") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
               (rule "closeTrue" (formula "73"))
            )
         )
         (branch "Case 2"
            (rule "allRight" (formula "86") (inst "sk=i_1_0") (userinteraction))
            (rule "instAll" (formula "86") (term "0,0,0") (ifseqformula "41") (userinteraction))
            (rule "andLeft" (formula "56"))
            (rule "impRight" (formula "88"))
            (rule "andLeft" (formula "57"))
            (rule "notRight" (formula "90"))
            (rule "andLeft" (formula "2"))
            (rule "andLeft" (formula "59"))
            (rule "andLeft" (formula "61"))
            (rule "andLeft" (formula "60"))
            (rule "andLeft" (formula "59"))
            (rule "andLeft" (formula "64"))
            (rule "andLeft" (formula "59"))
            (rule "andLeft" (formula "66"))
            (rule "andLeft" (formula "59"))
            (rule "andLeft" (formula "68"))
            (rule "notLeft" (formula "60"))
            (rule "andLeft" (formula "68"))
            (rule "andLeft" (formula "69"))
            (rule "andLeft" (formula "70"))
            (rule "andLeft" (formula "71"))
            (rule "notLeft" (formula "71"))
            (rule "notLeft" (formula "71"))
            (rule "exLeft" (formula "69") (inst "sk=i_2"))
            (rule "andLeft" (formula "69"))
            (rule "andLeft" (formula "69"))
            (rule "eqSymm" (formula "110") (term "0,1"))
            (rule "eqSymm" (formula "110") (term "1,0"))
            (rule "eqSymm" (formula "110") (term "1,1"))
            (rule "eqSymm" (formula "110") (term "0,0"))
            (rule "eqSymm" (formula "73") (term "0,0,0,0,1"))
            (rule "eqSymm" (formula "73") (term "1,0,0,1"))
            (rule "eqSymm" (formula "73") (term "1,0,0,0,1"))
            (rule "replace_known_right" (formula "63") (term "0") (ifseqformula "74"))
             (builtin "One Step Simplification" (formula "63"))
            (rule "replace_known_right" (formula "62") (term "0") (ifseqformula "75"))
             (builtin "One Step Simplification" (formula "62"))
            (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")) (ifInst ""  (formula "1")))
            (rule "closeFalse" (formula "4"))
         )
      )
      (branch "Case 2"
         (rule "allRight" (formula "86") (inst "sk=i_0_0") (userinteraction))
         (rule "instAll" (formula "86") (term "0,0,0") (ifseqformula "43") (userinteraction))
         (rule "andLeft" (formula "56"))
         (rule "impRight" (formula "88"))
         (rule "andLeft" (formula "57"))
         (rule "notRight" (formula "90"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "59"))
         (rule "andLeft" (formula "61"))
         (rule "andLeft" (formula "60"))
         (rule "andLeft" (formula "59"))
         (rule "andLeft" (formula "64"))
         (rule "andLeft" (formula "59"))
         (rule "andLeft" (formula "66"))
         (rule "andLeft" (formula "59"))
         (rule "andLeft" (formula "68"))
         (rule "notLeft" (formula "60"))
         (rule "andLeft" (formula "68"))
         (rule "andLeft" (formula "69"))
         (rule "andLeft" (formula "70"))
         (rule "andLeft" (formula "71"))
         (rule "notLeft" (formula "71"))
         (rule "notLeft" (formula "71"))
         (rule "exLeft" (formula "69") (inst "sk=i_2"))
         (rule "andLeft" (formula "69"))
         (rule "andLeft" (formula "69"))
         (rule "eqSymm" (formula "110") (term "0,1"))
         (rule "eqSymm" (formula "110") (term "1,0"))
         (rule "eqSymm" (formula "110") (term "1,1"))
         (rule "eqSymm" (formula "110") (term "0,0"))
         (rule "eqSymm" (formula "73") (term "0,0,0,0,1"))
         (rule "eqSymm" (formula "73") (term "1,0,0,1"))
         (rule "eqSymm" (formula "73") (term "1,0,0,0,1"))
         (rule "replace_known_right" (formula "63") (term "0") (ifseqformula "74"))
          (builtin "One Step Simplification" (formula "63"))
         (rule "replace_known_right" (formula "62") (term "0") (ifseqformula "75"))
          (builtin "One Step Simplification" (formula "62"))
         (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")) (ifInst ""  (formula "1")))
         (rule "closeFalse" (formula "4"))
      )
   )
   (branch "Case 2"
      (rule "instEx" (formula "48") (term "1,0") (ifseqformula "86") (userinteraction))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "57"))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "57"))
      (rule "andLeft" (formula "60"))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "62"))
      (rule "andLeft" (formula "55"))
      (rule "andLeft" (formula "64"))
      (rule "notLeft" (formula "56"))
      (rule "andLeft" (formula "64"))
      (rule "andLeft" (formula "65"))
      (rule "andLeft" (formula "66"))
      (rule "andLeft" (formula "67"))
      (rule "notLeft" (formula "68"))
      (rule "notLeft" (formula "67"))
      (rule "exLeft" (formula "65") (inst "sk=i_2"))
      (rule "andLeft" (formula "65"))
      (rule "andLeft" (formula "65"))
      (rule "eqSymm" (formula "108") (term "0,1"))
      (rule "eqSymm" (formula "108") (term "0,0"))
      (rule "eqSymm" (formula "108") (term "1,0"))
      (rule "eqSymm" (formula "108") (term "1,1"))
      (rule "eqSymm" (formula "69") (term "1,0,0,1"))
      (rule "eqSymm" (formula "69") (term "0,0,0,0,1"))
      (rule "eqSymm" (formula "69") (term "1,0,0,0,1"))
      (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "70"))
       (builtin "One Step Simplification" (formula "58"))
      (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "71"))
       (builtin "One Step Simplification" (formula "59"))
      (rule "replace_known_left" (formula "73") (term "0,0") (ifseqformula "44"))
       (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "47")) (ifInst ""  (formula "48")))
      (rule "closeTrue" (formula "73"))
   )
)
)
}
